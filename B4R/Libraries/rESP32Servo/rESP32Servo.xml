<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RESP32Servo</name>
        <shortname>ESP32Servo</shortname>
        <comment>File:		rESP32Servo.h
Brief:		B4R library to control servo motors attached to ESP32 (only).
Dependson:	Arduino library ESP32Servo - must be installed in the Arduino IDE.
Author:		Robert W.B. Linn.
Date:		2025-08-21
License:		MIT
Copyright Â© 2025 Robert W.B. Linn. All rights reserved.

Notes:		Functions not wrapped:
				void setPeriodHertz(int Hertz);</comment>
        <property>
            <name>TimerWidth</name>
            <comment>Set or get the PWM timer width (ESP32 ONLY).</comment>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </property>
        <method>
            <name DesignerName="Attach">Attach</name>
            <comment>Attaches the servo to the specified pin.
Returns 0 in case of a failure.
Recommended GPIO pins:
ESP32: 2,4,12-19,21-23,25-27,32-33
ESP32-S2: 1-21,26,33-42
ESP32-S3: 1-21,35-45,47-48
ESP32-C3: 1-10,18-21</comment>
            <returntype>Byte</returntype>
            <parameter>
                <name>pin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Attach2">Attach2</name>
            <comment>Attaches the servo to the specified pin.
Returns 0 if there was a failure.
MinValue and MaxValue set the minimum and maximum pulse width that will be sent to the servo.</comment>
            <returntype>Byte</returntype>
            <parameter>
                <name>pin</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>minValue</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>maxValue</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Detach">Detach</name>
            <comment>Detaches the servo pin.</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="Write">Write</name>
            <comment>Set servo angle.
If the value is smaller than 200 then it is treated as an angle.
Otherwise it is treated as pulse width in microseconds.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="WriteMicroseconds">WriteMicroseconds</name>
            <comment>Writes pulse width in microseconds.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="WriteTicks">WriteTicks</name>
            <comment>Write ticks, the smallest increment the servo can handle.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Read">Read</name>
            <comment>Returns current pulse width as an angle between 0 to 180 degrees.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name DesignerName="ReadMicroseconds">ReadMicroseconds</name>
            <comment>Returns current pulse width in microseconds.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name DesignerName="ReadTicks">ReadTicks</name>
            <comment>Returns current ticks, the smallest increment the servo can handle.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name DesignerName="Attached">Attached</name>
            <comment>Returns true if the servo is attached.</comment>
            <returntype>bool</returntype>
        </method>
    </class>
    <version>1</version>
</root>
