<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RPCF8574</name>
        <shortname>PCF8574</shortname>
        <comment>
            Example: &lt;code&gt; 
            &lt;/code&gt;</comment>
        <method>
            <name DesignerName="Initialize">Initialize</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>deviceAddress</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Initializeesp32">Initializeesp32</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>deviceAddress</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>I2Cbus</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="beginesp">beginesp</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>sda</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>scl</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>initB</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="begin">begin</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>initB</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="isConnected">isConnected</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
        </method>
        <method>
            <name DesignerName="read8">read8</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="read">read</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
            <parameter>
                <name>pin</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="value">value</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="write8">write8</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>value</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="write">write</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>pin</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="valueOut">valueOut</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="readButton8">readButton8</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="readButton8Mask">readButton8Mask</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
            <parameter>
                <name>mask</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="readButton">readButton</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
            <parameter>
                <name>pin</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setButtonMask">setButtonMask</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>mask</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="toggle">toggle</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>pin</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="toggleMask">toggleMask</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>mask</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="shiftRight">shiftRight</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>n</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="shiftLeft">shiftLeft</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>n</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="rotateRight">rotateRight</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>n</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="rotateLeft">rotateLeft</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>n</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="reverse">reverse</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="lastError">lastError</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <field>
            <name DesignerName="I2C_TwoWire0">I2C_TwoWire0</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="I2C_TwoWire1">I2C_TwoWire1</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="I2C_TwoWire2">I2C_TwoWire2</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="I2C_Wire">I2C_Wire</name>
            <returntype>Byte</returntype>
        </field>
    </class>
    <version>1</version>
</root>
