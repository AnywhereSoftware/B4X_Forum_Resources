<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RADXL345</name>
        <shortname>ADXL345</shortname>
        <comment>Wrapped by Johan  Schoeman
Changelog
20200201: NEW</comment>
        <property>
            <name>RangeSetting</name>
            <comment>Give the range settings
Accepted values are 2g, 4g, 8g or 16g
Higher Values = Wider Measurement Range
Lower Values = Greater Sensitivity</comment>
            <parameter>
                <name>val</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>X_Accel</name>
            <comment>get the X_Accel value</comment>
            <returntype>Int</returntype>
        </property>
        <property>
            <name>Y_Accel</name>
            <comment>get the Y_Accel value</comment>
            <returntype>Int</returntype>
        </property>
        <property>
            <name>Z_Accel</name>
            <comment>get the Z_Accel value</comment>
            <returntype>Int</returntype>
        </property>
        <property>
            <name>SpiBit</name>
            <comment>Configure the device to be in 4 wire SPI mode when set to '0' or 3 wire SPI mode when set to 1
Default: Set to 1
SPI pins on the ATMega328: 11, 12 and 13 as reference in SPI Library</comment>
            <parameter>
                <name>spiBit</name>
                <type>bool</type>
            </parameter>
        </property>
        <property>
            <name>ActivityThreshold</name>
            <comment>62.5mg per increment   // Set activity   // Inactivity thresholds (0-255)</comment>
            <parameter>
                <name>activityThreshold</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>InactivityThreshold</name>
            <comment>62.5mg per increment   // Set inactivity // Inactivity thresholds (0-255)</comment>
            <parameter>
                <name>inactivityThreshold</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>TimeInactivity</name>
            <comment>How many seconds of no activity is inactive?</comment>
            <parameter>
                <name>timeInactivity</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>TapThreshold</name>
            <comment>Set values for what is considered a TAP and what is a DOUBLE TAP (0-255)
62.5 mg per increment</comment>
            <parameter>
                <name>tapThreshold</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>TapDuration</name>
            <comment>Set values for what is considered a TAP and what is a DOUBLE TAP (0-255)
625 Î¼s per increment</comment>
            <parameter>
                <name>tapDuration</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>DoubleTapLatency</name>
            <comment>Set values for what is considered a TAP and what is a DOUBLE TAP (0-255)
1.25 ms per increment</comment>
            <parameter>
                <name>doubleTapLatency</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>DoubleTapWindow</name>
            <comment>Set values for what is considered a TAP and what is a DOUBLE TAP (0-255)
1.25 ms per increment</comment>
            <parameter>
                <name>doubleTapWindow</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>FreeFallThreshold</name>
            <comment>Set values for what is considered FREE FALL (0-255)
(5 - 9) recommended - 62.5mg per increment</comment>
            <parameter>
                <name>freeFallthreshold</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>FreeFallDuration</name>
            <comment>Set values for what is considered FREE FALL (0-255)
(20 - 70) recommended - 5ms per increment</comment>
            <parameter>
                <name>freeFallDuration</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>LowPower</name>
            <parameter>
                <name>state</name>
                <type>bool</type>
            </parameter>
        </property>
        <property>
            <name>InterruptSource</name>
            <comment>Look for Interrupts and Triggered Action
getInterruptSource clears all triggered actions after returning value
Do not call again until you need to recheck for triggered actions</comment>
            <returntype>Byte</returntype>
        </property>
        <method>
            <name DesignerName="InitializeI2C">InitializeI2C</name>
            <comment>Initializes the ADXL345 object for I2C comms
I2C pins on Uno and Nano is for eg A4 (SDA) and A5 (SCL)</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="InitializeSPI">InitializeSPI</name>
            <comment>Initializes the ADXL345 object for SPI comms
CS = Pin used for CS line</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>CS</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="powerOn">powerOn</name>
            <comment>Power on the ADXL345</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="readAccel">readAccel</name>
            <comment>Trigger a Read of the accelerometer values
Use getX_Accel, getY_Accel, and getZ_Accel to get the X, Y, and Z values once a ready has been triggered</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="setActivityXYZ">setActivityXYZ</name>
            <comment>Set to activate movement detection in the axes "adxl.setActivityXYZ(X, Y, Z);" (1 == ON, 0 == OFF)</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>stateX</name>
                <type>bool</type>
            </parameter>
            <parameter>
                <name>stateY</name>
                <type>bool</type>
            </parameter>
            <parameter>
                <name>stateZ</name>
                <type>bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setInactivityXYZ">setInactivityXYZ</name>
            <comment>Set to detect inactivity in all the axes "adxl.setInactivityXYZ(X, Y, Z);" (1 == ON, 0 == OFF)</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>stateX</name>
                <type>bool</type>
            </parameter>
            <parameter>
                <name>stateY</name>
                <type>bool</type>
            </parameter>
            <parameter>
                <name>stateZ</name>
                <type>bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setTapDetectionOnXYZ">setTapDetectionOnXYZ</name>
            <comment>Detect taps in the directions turned ON "adxl.setTapDetectionOnX(X, Y, Z);" (True = ON, False = OFF)</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>stateX</name>
                <type>bool</type>
            </parameter>
            <parameter>
                <name>stateY</name>
                <type>bool</type>
            </parameter>
            <parameter>
                <name>stateZ</name>
                <type>bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="printAllRegister">printAllRegister</name>
            <comment>Print Register Values to Serial Output =
Can be used to Manually Check the Current Configuration of Device</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="isActivityXEnabled">isActivityXEnabled</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isActivityYEnabled">isActivityYEnabled</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isActivityZEnabled">isActivityZEnabled</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isInactivityXEnabled">isInactivityXEnabled</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isInactivityYEnabled">isInactivityYEnabled</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isInactivityZEnabled">isInactivityZEnabled</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isActivitySourceOnX">isActivitySourceOnX</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isActivitySourceOnY">isActivitySourceOnY</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isActivitySourceOnZ">isActivitySourceOnZ</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isTapSourceOnX">isTapSourceOnX</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isTapSourceOnY">isTapSourceOnY</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isTapSourceOnZ">isTapSourceOnZ</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isAsleep">isAsleep</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="isLowPower">isLowPower</name>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="InactivityINT">InactivityINT</name>
            <comment>Turn on/off the Interrupt Inactivity (True = ON, False = OFF)</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>status</name>
                <type>bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="ActivityINT">ActivityINT</name>
            <comment>Turn on/off the Interrupt Activity (True = ON, False = OFF)</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>status</name>
                <type>bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="FreeFallINT">FreeFallINT</name>
            <comment>Turn on/off the Interrupt for Free Fall (True = ON, False = OFF)</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>status</name>
                <type>bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="doubleTapINT">doubleTapINT</name>
            <comment>Turn on/off the Interrupt for Double Tap (True = ON, False = OFF)</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>status</name>
                <type>bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="singleTapINT">singleTapINT</name>
            <comment>Turn on/off the Interrupt for Single Tap (True = ON, False = OFF)</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>status</name>
                <type>bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="triggered">triggered</name>
            <comment>Check if an Action was Triggered in Interrupts</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>interrupts</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <field>
            <name DesignerName="RANGE_2G">RANGE_2G</name>
            <comment>set the range to 2g</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name DesignerName="RANGE_4G">RANGE_4G</name>
            <comment>set the range to 4g</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name DesignerName="RANGE_8G">RANGE_8G</name>
            <comment>set the range to 8g</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name DesignerName="RANGE_16G">RANGE_16G</name>
            <comment>set the range to 16g</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name DesignerName="MASK_ADXL345_SINGLE_TAP">MASK_ADXL345_SINGLE_TAP</name>
            <returntype>Int</returntype>
        </field>
        <field>
            <name DesignerName="MASK_ADXL345_DOUBLE_TAP">MASK_ADXL345_DOUBLE_TAP</name>
            <returntype>Int</returntype>
        </field>
        <field>
            <name DesignerName="MASK_ADXL345_ACTIVITY">MASK_ADXL345_ACTIVITY</name>
            <returntype>Int</returntype>
        </field>
        <field>
            <name DesignerName="MASK_ADXL345_INACTIVITY">MASK_ADXL345_INACTIVITY</name>
            <returntype>Int</returntype>
        </field>
        <field>
            <name DesignerName="MASK_ADXL345_FREE_FALL">MASK_ADXL345_FREE_FALL</name>
            <returntype>Int</returntype>
        </field>
    </class>
    <version>1</version>
</root>
