<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RJSONVar</name>
        <shortname>JSONVar</shortname>
        <method>
            <name DesignerName="checkifJsonVar">checkifJsonVar</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>Jvar</name>
                <type>B4R::B4RJSONVar*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="checkifNull">checkifNull</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setNull">setNull</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
make a JsonVar NULL
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setJsonVar">setJsonVar</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
copy JsonVar(ArrayObject* key) in JVarResult
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>JVarResult</name>
                <type>B4R::B4RJSONVar*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setBool">setBool</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>Bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setNumberL">setNumberL</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>Long</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setNumberUL">setNumberUL</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setNumberD">setNumberD</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>Double</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setString">setString</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getJsonVar">getJsonVar</name>
<comment>
 JVar added at original JsonVar(ArrayObject* key) from JVar
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>JVar</name>
                <type>B4R::B4RJSONVar*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getBool">getBool</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getNumberL">getNumberL</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>Long</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getNumberUL">getNumberUL</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>ULong</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getNumberD">getNumberD</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>Double</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getString">getString</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>B4R::B4RString*</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Length">Length</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
 2 cases:
 for Array, return number of member of this Array
 for String, return = String length
</comment>
                 <returntype>Int</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="keys">keys</name>
<comment>
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
 for Array, return an array of string corresponding at all key of a JSONVar_Array
 nothing done on objects
            ArrayObject*       keys();
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>JVarResult</name>
                <type>B4R::B4RJSONVar*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="parse">parse</name>
<comment>
create  a JSONVar from a String
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>s</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="typeof">typeof</name>
<comment>
return "undefined" "boolean" "null" "number" "string" "array" "object"
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>B4R::B4RString*</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="stringify">stringify</name>
<comment>
ArrayObject* = array of Int or String only. if first = 0 =- JSONVar without index is managed
create a String from JSONVar
</comment>
                 <returntype>B4R::B4RString*</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="hasOwnProperty">hasOwnProperty</name>
<comment>
 for array only
  check if key is pointing to Object
  return true if next JSONVar not NULL
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>key_</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="hasPropertyEqualString">hasPropertyEqualString</name>
<comment>
for Array only
  check if JSONVar pointed by key = value
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>key_</name>
                <type>B4R::B4RString*</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="hasPropertyEqualJsonVar">hasPropertyEqualJsonVar</name>
<comment>
for array only
  check if JSONVar pointed by key = (String)value--string
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>key_</name>
                <type>B4R::B4RString*</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>B4R::B4RJSONVar*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="filterString">filterString</name>
<comment>
for array only
 return in JvarResult an array of all JSONVAR with same (String)value
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>key_</name>
                <type>B4R::B4RString*</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>B4R::B4RString*</type>
            </parameter>
            <parameter>
                <name>JvarResult</name>
                <type>B4R::B4RJSONVar*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="filterJsonVar">filterJsonVar</name>
<comment>
for array only
 return in JvarResult an array of all JSONVAR with same (String)JSONVar--value
ArrayObject* = array of Int or String only.
 first = Nb index keys, 8 index keys possibles. if first = 0 =- JSONVar without index is managed
</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>key</name>
                <type>Object[]</type>
            </parameter>
            <parameter>
                <name>key_</name>
                <type>B4R::B4RString*</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>B4R::B4RJSONVar*</type>
            </parameter>
            <parameter>
                <name>JvarResult</name>
                <type>B4R::B4RJSONVar*</type>
            </parameter>
        </method>
    </class>
    <version>1</version>
</root>
