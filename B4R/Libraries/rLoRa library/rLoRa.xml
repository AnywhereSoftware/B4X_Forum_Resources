<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RLoRa</name>
        <shortname>LoRa</shortname>
        <comment>
            Example: &lt;code&gt; 
            &lt;/code&gt;</comment>
         <event>OnReceive(packetSize as int)</event>
         <event>OnTxDone()</event>
        <method>
            <name DesignerName="Initialize">Initialize</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="begin">begin</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
            <parameter>
                <name>frequency</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setOnReceive">setOnReceive</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>OnReceiveSub</name>
                <type>Subvoid_int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setOnTxDone">setOnTxDone</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>OnTxDoneSub</name>
                <type>Subvoid_void</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="end">end</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="beginPacket">beginPacket</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
            <parameter>
                <name>implicitHeader</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="endPacket">endPacket</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
            <parameter>
                <name>async</name>
                <type>Bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="parsePacket">parsePacket</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
            <parameter>
                <name>size</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="packetRssi">packetRssi</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <method>
            <name DesignerName="packetSnr">packetSnr</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>float</returntype>
        </method>
        <method>
            <name DesignerName="packetFrequencyError">packetFrequencyError</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Long</returntype>
        </method>
        <method>
            <name DesignerName="rssi">rssi</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <method>
            <name DesignerName="write">write</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>byte</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="write1">write1</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>buffer</name>
                <type>Byte[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="print">print</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>txt</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="println">println</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>txt</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="available">available</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <method>
            <name DesignerName="read">read</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <method>
            <name DesignerName="peek">peek</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <method>
            <name DesignerName="flush">flush</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="receive">receive</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>size</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="idle">idle</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="sleep">sleep</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="setTxPower">setTxPower</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>level</name>
                <type>Int</type>
            </parameter>
            <parameter>
                <name>outputPin</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setFrequency">setFrequency</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>frequency</name>
                <type>Long</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setSpreadingFactor">setSpreadingFactor</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>sf</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setSignalBandwidth">setSignalBandwidth</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>sbw</name>
                <type>Long</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setCodingRate4">setCodingRate4</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>denominator</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setPreambleLength">setPreambleLength</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>length</name>
                <type>Long</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setSyncWord">setSyncWord</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>sw</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="enableCrc">enableCrc</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="disableCrc">disableCrc</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="enableInvertIQ">enableInvertIQ</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="disableInvertIQ">disableInvertIQ</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="setOCP">setOCP</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>mA</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setGain">setGain</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>gain</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="random">random</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="setPins">setPins</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>ss</name>
                <type>Int</type>
            </parameter>
            <parameter>
                <name>reset</name>
                <type>Int</type>
            </parameter>
            <parameter>
                <name>dio0</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setSPI">setSPI</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>SPIbus</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setSPI1">setSPI1</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>SPIbus</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>sck</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>miso</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>mosi</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>ss</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setSPIFrequency">setSPIFrequency</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>frequency</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="dumpRegisters">dumpRegisters</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>DumpOut</name>
                <type>Byte[]</type>
            </parameter>
        </method>
        <field>
            <name DefineMethod="true" DesignerName="ESP32_FSPI">B4R_FSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32_HSPI">B4R_HSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32_VSPI">B4R_VSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32C3_FSPI">B4RC3_FSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32C3_HSPI">B4RC3_HSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32S2_FSPI">B4RS2_FSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32S2_HSPI">B4RS2_HSPI</name>
            <returntype>byte</returntype>
        </field>
    </class>
    <version>1</version>
</root>
