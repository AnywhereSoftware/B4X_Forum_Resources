Build1=Default,B4RDev
Group=Default Group
Library1=rcore
Library2=rlora
Library3=rrandomaccessfile
NumberOfFiles=0
NumberOfLibraries=3
NumberOfModules=0
Version=3.9
@EndOfDesignText@

#Region Project Attributes
	#AutoFlushLogs: True
	#CheckArrayBounds: True
	#StackBufferSize: 600
#End Region
'Ctrl+Click to open the C code folder: ide://run?File=%WINDIR%\System32\explorer.exe&Args=%PROJECT%\Objects\Src

Sub Process_Globals
	Public Serial1 As Serial
        Private lora As LoRa
	Private bc As ByteConverter
	Private raf As RandomAccessFile
	Dim millisv1 As Long = 0
	Dim millisv2 As Long = 0
	Private ssPin As Byte =15        '15 esp8266 /  5 esp32
	Private resetPin As Byte = 16    '16 esp8266 / 14 esp32
	Private dio0Pin As Byte = 5      ' 5 esp8266 /  2 esp32
	Private counter As Int = 0
	Private buff(32) As Byte
	Private MessRec As Boolean = False
End Sub

Private Sub AppStart
	Serial1.Initialize(115200)
	Log("AppStart")
	
	lora.Initialize
	lora.setPins(ssPin,resetPin,dio0Pin)
	If lora.begin(433E6) <> 1 Then
		Log("Starting LoRa failed!")
	Else
		Log("LoRa Started and Running ")	

		dumpregisters
		AddLooper("LoRaloop")		
	End If
End Sub

Sub LoRaloop
	Dim parseP As Int = lora.parsePacket(0)
	If parseP <> 0 Then 
		OnReceive(parseP)
	Else
		If MessRec = False Then	
			If Millis= millisv2+4000 Then
				messageSend
				millisv2 = Millis
			end if 	
		End If	
	End If	
End Sub

Sub messageSend
	Log("Sending packet : ", counter)
'    Dim sv As Long = Millis
	' send in async / non-blocking mode
	lora.beginPacket(0)
	lora.print("hello from esp8266 - message Nb:")
'	lora.print("hello from esp32   - message Nb:")
	lora.print(NumberFormat( counter,0,0))
	lora.endPacket(True) ' True = async = OnTxDone / non-blocking mode
	counter = counter + 1 : If counter = 1000 Then counter = 0
'	Log("messageSend duration :",Millis-sv)
End Sub

Sub OnReceive(packetSize As Int)
	MessRec = True
'	Dim sv As Long = Millis
	Log("B4R OnReceive")
	' received a packet
	Dim pack(packetSize) As Byte
	For i = 0 To packetSize-1
		pack(i)=lora.read
	Next
    ' print RSSI of packet
	Log("Received packet :",pack," with RSSI ",lora.packetRssi)
'	Log ("OnReceive duration :",Millis-sv)
    MessRec = False
End Sub

Sub dumpregisters
	Dim DumpOut(128) As Byte:lora.dumpRegisters(DumpOut)
	For j = 0 To 7
		For i = 0 To 15
			addbyte(i,DumpOut((j*16)+i))
			If i = 15 Then 	Log("print ",j*16,"  ",buff)
		Next
	Next
End Sub

Sub addbyte(i As Byte,val As Byte)
	Dim b(1) As Byte
	raf.Initialize(b, False) 'big endian
	raf.WriteByte(val, 0)
	bc.ArrayCopy2(bc.HexFromBytes(b),0,buff,i*2,2)
End Sub
