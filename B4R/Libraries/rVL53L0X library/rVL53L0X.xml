<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RVL53L0X</name>
        <shortname>VL53L0X</shortname>
        <comment>This is a library that helps interface with ST's VL53L0X time-of-flight distance sensor.
It wraps this library :
https://github.com/pololu/vl53l0x-arduino
The library makes it simple to configure the sensor and read range data from it via I²C.
Use the VL53L0X API provided by ST to make advanced configurations :
https://www.st.com/content/st_com/en/products/embedded-software/proximity-sensors-software/stsw-img005.html
You must use Arduino to install the VL53L0X library by Pololu
You must have a Wiremaster initialized.
Example: &lt;code&gt;
Sub Process_Globals
	Private Master As WireMaster
	Private VL53 As VL53L0X
	Private RegAddr As VL53L0X_REGISTER_ADDRESSES
End Sub

Private Sub AppStart
	Master.Initialize
	VL53.Initialize
	Log(RegAddr.SYSRANGE_START)
End Sub
&lt;/code&gt;</comment>
        <method>
            <name DesignerName="Initialize">Initialize</name>
            <comment>Initializes the module. Returns true if it was initialized successfully.</comment>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="Initialize_1v8">Initialize_1v8</name>
            <comment>Initializes the module. Returns true if it was initialized successfully.
If the argument io_1v8 is true, the sensor is configured for 1V8 mode.
If false the sensor is left in 2V8 mode. (Default)</comment>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="Last_Status">Last_Status</name>
            <comment>The status of the last I²C write transmission.
0:success
1:data too long to fit in transmit buffer
2:received NACK on transmit of address
3:received NACK on transmit of data
4:other error</comment>
            <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="SetAddress">SetAddress</name>
            <comment>Changes the I²C slave device address of the VL53L0X to the given value (7-bit).
Use XSHUT pin to disable all VL53L0X but the one to change</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>New_Addr</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="GetAddress">GetAddress</name>
            <comment>Returns the current I²C address.</comment>
            <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="ReadReg">ReadReg</name>
            <comment>Reads an 8-bit sensor register and returns the value read.
Use the constants defined</comment>
            <returntype>Byte</returntype>
            <parameter>
                <name>Reg</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="ReadReg16Bit">ReadReg16Bit</name>
            <comment>Reads an 16-bit sensor register and returns the value read.
Use the constants defined</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Reg</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="ReadReg32Bit">ReadReg32Bit</name>
            <comment>Reads an 32-bit sensor register and returns the value read.
Use the constants defined</comment>
            <returntype>long</returntype>
            <parameter>
                <name>Reg</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="WriteReg">WriteReg</name>
            <comment>Writes an 8-bit sensor register with the given value.
Use the constants defined</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Reg</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="WriteReg16Bit">WriteReg16Bit</name>
            <comment>Writes an 16-bit sensor register with the given value.
Use the constants defined</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Reg</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="WriteReg32Bit">WriteReg32Bit</name>
            <comment>Writes an 32-bit sensor register with the given value.
Use the constants defined</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Reg</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetSignalRateLimit">SetSignalRateLimit</name>
            <comment>Sets the return signal rate limit to the given value in units of MCPS (mega counts per second).
This is the minimum amplitude of the signal reflected from the target and received by the sensor necessary for it to report a valid reading.
Setting a lower limit increases the potential range of the sensor but also increases the likelihood of getting an inaccurate reading because of reflections from objects other than the intended target.
This limit is initialized to 0.25 MCPS by default.
The return value is a boolean indicating whether the requested limit was valid.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>limit_Mcps</name>
                <type>Double</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="GetSignalRateLimit">GetSignalRateLimit</name>
            <comment>Returns the current return signal rate limit in MCPS.</comment>
            <returntype>Double</returntype>
        </method>
        <method>
            <name DesignerName="SetMeasurementTimingBudget">SetMeasurementTimingBudget</name>
            <comment>Sets the measurement timing budget to the given value in microseconds.
This is the time allowed for one range measurement; a longer timing budget allows for more accurate measurements.
The default budget is about 33000 microseconds, or 33 ms; the minimum is 20 ms.
The return value is a boolean indicating whether the requested budget was valid.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>budget_us</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="GetMeasurementTimingBudget">GetMeasurementTimingBudget</name>
            <comment>Returns the current measurement timing budget in microseconds.</comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name DesignerName="SetVcselPulsePeriodPreRange">SetVcselPulsePeriodPreRange</name>
            <comment>Sets the VCSEL (vertical cavity surface emitting laser) pulse period for the PreRange type to the given value (in PCLKs).
Longer periods increase the potential range of the sensor.
Valid values are (even numbers only):
12 to 18 (initialized to 14 by default)
The return value is a boolean indicating whether the requested period was valid.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>period_pclks</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="GetVcselPulsePeriodPreRange">GetVcselPulsePeriodPreRange</name>
            <comment>Returns the current VCSEL pulse period for the PreRange type.</comment>
            <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="SetVcselPulsePeriodFinalRange">SetVcselPulsePeriodFinalRange</name>
            <comment>Sets the VCSEL (vertical cavity surface emitting laser) pulse period for the FinalRange type to the given value (in PCLKs).
Longer periods increase the potential range of the sensor.
Valid values are (even numbers only):
8 to 14 (initialized to 10 by default)
The return value is a boolean indicating whether the requested period was valid.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>period_pclks</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="GetVcselPulsePeriodFinalRange">GetVcselPulsePeriodFinalRange</name>
            <comment>Returns the current VCSEL pulse period for the FinalRange type.</comment>
            <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="StartContinuous">StartContinuous</name>
            <comment>Starts continuous ranging measurements.
If the optional argument period_ms is 0 (the default if not specified),
continuous back-to-back mode is used (the sensor takes measurements as often as possible)
if it is nonzero,
continuous timed mode is used, with the specified inter-measurement period in milliseconds determining how often the sensor takes a measurement.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>period_ms</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="StopContinuous">StopContinuous</name>
            <comment>Stops continuous mode.</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="ReadRangeContinuousMillimeters">ReadRangeContinuousMillimeters</name>
            <comment>Returns a range reading in millimeters when continuous mode is active.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name DesignerName="ReadRangeSingleMillimeters">ReadRangeSingleMillimeters</name>
            <comment>Performs a single-shot ranging measurement and returns the reading in millimeters.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name DesignerName="SetTimeout">SetTimeout</name>
            <comment>Sets a timeout period in milliseconds after which read operations will abort if the sensor is not ready.
A value of 0 disables the timeout.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>timeout</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="GetTimeout">GetTimeout</name>
            <comment>Returns the current timeout period setting.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name DesignerName="TimeoutOccurred">TimeoutOccurred</name>
            <comment>Indicates whether a read timeout has occurred since the last call to timeoutOccurred().</comment>
            <returntype>bool</returntype>
        </method>
    </class>
    <class>
        <name>B4R::B4RVREGADDR</name>
        <shortname>VL53L0X_REGISTER_ADDRESSES</shortname>
        <comment>Addresses to use with RegRead and RegWrite</comment>
        <field>
            <name DefineMethod="true" DesignerName="SYSRANGE_START">B4RVREGADDR_SYSRANGE_START</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SYSTEM_THRESH_HIGH">B4RVREGADDR_SYSTEM_THRESH_HIGH</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SYSTEM_THRESH_LOW">B4RVREGADDR_SYSTEM_THRESH_LOW</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SYSTEM_SEQUENCE_CONFIG">B4RVREGADDR_SYSTEM_SEQUENCE_CONFIG</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SYSTEM_RANGE_CONFIG">B4RVREGADDR_SYSTEM_RANGE_CONFIG</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SYSTEM_INTERMEASUREMENT_PERIOD">B4RVREGADDR_SYSTEM_INTERMEASUREMENT_PERIOD</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SYSTEM_INTERRUPT_CONFIG_GPIO">B4RVREGADDR_SYSTEM_INTERRUPT_CONFIG_GPIO</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="GPIO_HV_MUX_ACTIVE_HIGH">B4RVREGADDR_GPIO_HV_MUX_ACTIVE_HIGH</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SYSTEM_INTERRUPT_CLEAR">B4RVREGADDR_SYSTEM_INTERRUPT_CLEAR</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="RESULT_INTERRUPT_STATUS">B4RVREGADDR_RESULT_INTERRUPT_STATUS</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="RESULT_RANGE_STATUS">B4RVREGADDR_RESULT_RANGE_STATUS</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="RESULT_CORE_AMBIENT_WINDOW_EVENTS_RTN">B4RVREGADDR_RESULT_CORE_AMBIENT_WINDOW_EVENTS_RTN</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="RESULT_CORE_RANGING_TOTAL_EVENTS_RTN">B4RVREGADDR_RESULT_CORE_RANGING_TOTAL_EVENTS_RTN</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="RESULT_CORE_AMBIENT_WINDOW_EVENTS_REF">B4RVREGADDR_RESULT_CORE_AMBIENT_WINDOW_EVENTS_REF</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="RESULT_CORE_RANGING_TOTAL_EVENTS_REF">B4RVREGADDR_RESULT_CORE_RANGING_TOTAL_EVENTS_REF</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="RESULT_PEAK_SIGNAL_RATE_REF">B4RVREGADDR_RESULT_PEAK_SIGNAL_RATE_REF</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ALGO_PART_TO_PART_RANGE_OFFSET_MM">B4RVREGADDR_ALGO_PART_TO_PART_RANGE_OFFSET_MM</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="I2C_SLAVE_DEVICE_ADDRESS">B4RVREGADDR_I2C_SLAVE_DEVICE_ADDRESS</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="MSRC_CONFIG_CONTROL">B4RVREGADDR_MSRC_CONFIG_CONTROL</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="PRE_RANGE_CONFIG_MIN_SNR">B4RVREGADDR_PRE_RANGE_CONFIG_MIN_SNR</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="PRE_RANGE_CONFIG_VALID_PHASE_LOW">B4RVREGADDR_PRE_RANGE_CONFIG_VALID_PHASE_LOW</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="PRE_RANGE_CONFIG_VALID_PHASE_HIGH">B4RVREGADDR_PRE_RANGE_CONFIG_VALID_PHASE_HIGH</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="PRE_RANGE_MIN_COUNT_RATE_RTN_LIMIT">B4RVREGADDR_PRE_RANGE_MIN_COUNT_RATE_RTN_LIMIT</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="FINAL_RANGE_CONFIG_MIN_SNR">B4RVREGADDR_FINAL_RANGE_CONFIG_MIN_SNR</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="FINAL_RANGE_CONFIG_VALID_PHASE_LOW">B4RVREGADDR_FINAL_RANGE_CONFIG_VALID_PHASE_LOW</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="FINAL_RANGE_CONFIG_VALID_PHASE_HIGH">B4RVREGADDR_FINAL_RANGE_CONFIG_VALID_PHASE_HIGH</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="FINAL_RANGE_CONFIG_MIN_COUNT_RATE_RTN_LIMIT">B4RVREGADDR_FINAL_RANGE_CONFIG_MIN_COUNT_RATE_RTN_LIMIT</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="PRE_RANGE_CONFIG_SIGMA_THRESH_HI">B4RVREGADDR_PRE_RANGE_CONFIG_SIGMA_THRESH_HI</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="PRE_RANGE_CONFIG_SIGMA_THRESH_LO">B4RVREGADDR_PRE_RANGE_CONFIG_SIGMA_THRESH_LO</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="PRE_RANGE_CONFIG_VCSEL_PERIOD">B4RVREGADDR_PRE_RANGE_CONFIG_VCSEL_PERIOD</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="PRE_RANGE_CONFIG_TIMEOUT_MACROP_HI">B4RVREGADDR_PRE_RANGE_CONFIG_TIMEOUT_MACROP_HI</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="PRE_RANGE_CONFIG_TIMEOUT_MACROP_LO">B4RVREGADDR_PRE_RANGE_CONFIG_TIMEOUT_MACROP_LO</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SYSTEM_HISTOGRAM_BIN">B4RVREGADDR_SYSTEM_HISTOGRAM_BIN</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="HISTOGRAM_CONFIG_INITIAL_PHASE_SELECT">B4RVREGADDR_HISTOGRAM_CONFIG_INITIAL_PHASE_SELECT</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="HISTOGRAM_CONFIG_READOUT_CTRL">B4RVREGADDR_HISTOGRAM_CONFIG_READOUT_CTRL</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="FINAL_RANGE_CONFIG_VCSEL_PERIOD">B4RVREGADDR_FINAL_RANGE_CONFIG_VCSEL_PERIOD</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="FINAL_RANGE_CONFIG_TIMEOUT_MACROP_HI">B4RVREGADDR_FINAL_RANGE_CONFIG_TIMEOUT_MACROP_HI</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="FINAL_RANGE_CONFIG_TIMEOUT_MACROP_LO">B4RVREGADDR_FINAL_RANGE_CONFIG_TIMEOUT_MACROP_LO</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="CROSSTALK_COMPENSATION_PEAK_RATE_MCPS">B4RVREGADDR_CROSSTALK_COMPENSATION_PEAK_RATE_MCPS</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="MSRC_CONFIG_TIMEOUT_MACROP">B4RVREGADDR_MSRC_CONFIG_TIMEOUT_MACROP</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SOFT_RESET_GO2_SOFT_RESET_N">B4RVREGADDR_SOFT_RESET_GO2_SOFT_RESET_N</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="IDENTIFICATION_MODEL_ID">B4RVREGADDR_IDENTIFICATION_MODEL_ID</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="IDENTIFICATION_REVISION_ID">B4RVREGADDR_IDENTIFICATION_REVISION_ID</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="OSC_CALIBRATE_VAL">B4RVREGADDR_OSC_CALIBRATE_VAL</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="GLOBAL_CONFIG_VCSEL_WIDTH">B4RVREGADDR_GLOBAL_CONFIG_VCSEL_WIDTH</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="GLOBAL_CONFIG_SPAD_ENABLES_REF_0">B4RVREGADDR_GLOBAL_CONFIG_SPAD_ENABLES_REF_0</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="GLOBAL_CONFIG_SPAD_ENABLES_REF_1">B4RVREGADDR_GLOBAL_CONFIG_SPAD_ENABLES_REF_1</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="GLOBAL_CONFIG_SPAD_ENABLES_REF_2">B4RVREGADDR_GLOBAL_CONFIG_SPAD_ENABLES_REF_2</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="GLOBAL_CONFIG_SPAD_ENABLES_REF_3">B4RVREGADDR_GLOBAL_CONFIG_SPAD_ENABLES_REF_3</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="GLOBAL_CONFIG_SPAD_ENABLES_REF_4">B4RVREGADDR_GLOBAL_CONFIG_SPAD_ENABLES_REF_4</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="GLOBAL_CONFIG_SPAD_ENABLES_REF_5">B4RVREGADDR_GLOBAL_CONFIG_SPAD_ENABLES_REF_5</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="GLOBAL_CONFIG_REF_EN_START_SELECT">B4RVREGADDR_GLOBAL_CONFIG_REF_EN_START_SELECT</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="DYNAMIC_SPAD_NUM_REQUESTED_REF_SPAD">B4RVREGADDR_DYNAMIC_SPAD_NUM_REQUESTED_REF_SPAD</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="DYNAMIC_SPAD_REF_EN_START_OFFSET">B4RVREGADDR_DYNAMIC_SPAD_REF_EN_START_OFFSET</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="POWER_MANAGEMENT_GO1_POWER_FORCE">B4RVREGADDR_POWER_MANAGEMENT_GO1_POWER_FORCE</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="VHV_CONFIG_PAD_SCL_SDA__EXTSUP_HV">B4RVREGADDR_VHV_CONFIG_PAD_SCL_SDA__EXTSUP_HV</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ALGO_PHASECAL_LIM">B4RVREGADDR_ALGO_PHASECAL_LIM</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ALGO_PHASECAL_CONFIG_TIMEOUT">B4RVREGADDR_ALGO_PHASECAL_CONFIG_TIMEOUT</name>
            <returntype>UInt</returntype>
        </field>
    </class>
    <version>1</version>
    <author>JanDerKan</author>
</root>
