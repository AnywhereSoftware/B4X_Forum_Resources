<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RAsyncClient</name>
        <shortname>AsyncClient</shortname>
        <comment>
            Example: &lt;code&gt; 
            &lt;/code&gt;</comment>
         <event>OnConnectSub(argID as ulong, clientID as ulong)</event>
         <event>OnDiscnnectSub(argID as ulong, clientID as ulong)</event>
         <event>OnPollSub(argID as ulong, clientID as ulong)</event>
         <event>OnAckSub(argID as ulong, clientID as ulong, length as uint, time as ulong)</event>
         <event>OnErrorSub(argID as ulong, clientID as ulong, error as byte)</event>
         <event>OnDataSub(argID as ulong, clientID as ulong, payload() as Byte)</event>
         <event>OnTimeOutSub(argID as ulong, clientID as ulong, time as ulong)</event>
         <event>OnClientSub(clientID as ulong)</event>
        <method>
            <name DesignerName="Initialize">Initialize</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="newClient">newClient</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>ULong</returntype>
        </method>
        <method>
            <name DesignerName="InitOnConnect">InitOnConnect</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>argID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>OnConnectSub</name>
                <type>Subvoid_UlongUlong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="InitOnDisconnect">InitOnDisconnect</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>argID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>OnDisconnectSub</name>
                <type>Subvoid_UlongUlong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="InitOnPoll">InitOnPoll</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>argID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>OnllctSub</name>
                <type>Subvoid_UlongUlong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="InitOnAck">InitOnAck</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>argID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>OnAckSub</name>
                <type>Subvoid_UlongUlongUintUlong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="InitOnError">InitOnError</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>argID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>OnErrorSub</name>
                <type>Subvoid_UlongUlongByte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="InitOnData">InitOnData</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>argID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>OnDataSub</name>
                <type>Subvoid_UlongUlongBarray</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="InitOnTimeOut">InitOnTimeOut</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>argID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>OnTimeOutSub</name>
                <type>Subvoid_UlongUlongUlong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="loadClient">loadClient</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>ULong</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>otherID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="linktoClient">linktoClient</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>ULong</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>otherID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="ClientEqual">ClientEqual</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>otherID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="ClientDiff">ClientDiff</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>otherID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="close">close</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="stop">stop</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="abort">abort</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="free">free</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="connect">connect</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>ip</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>port</name>
                <type>UInt</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="connect1">connect1</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>host</name>
                <type>B4R::B4RString*</type>
            </parameter>
            <parameter>
                <name>port</name>
                <type>UInt</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="canSend">canSend</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="space">space</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="add">add</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>datas</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>apiflags</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="send">send</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="write">write</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>datas</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="write1">write1</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>datas</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>apiflags</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="state">state</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="connecting">connecting</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="connected">connected</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="disconnecting">disconnecting</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="disconnected">disconnected</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="freeable">freeable</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getMss">getMss</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getRxTimeout">getRxTimeout</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>ULong</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setRxTimeout">setRxTimeout</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>timeout</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getAckTimeout">getAckTimeout</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>ULong</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setAckTimeout">setAckTimeout</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>timeout</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setNoDelay">setNoDelay</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>nodelay</name>
                <type>Bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getNoDelay">getNoDelay</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getRemoteAddress">getRemoteAddress</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>ULong</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getRemotePort">getRemotePort</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getLocalAddress">getLocalAddress</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>ULong</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getLocalPort">getLocalPort</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getremoteIP1">getremoteIP1</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::B4RString*</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getremotePort1">getremotePort1</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getlocalIP1">getlocalIP1</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::B4RString*</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getlocalPort1">getlocalPort1</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="ack">ack</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>len</name>
                <type>UInt</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="ackLater">ackLater</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="errorToString">errorToString</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::B4RString*</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>error</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="stateToString">stateToString</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::B4RString*</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getprev">getprev</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>ULong</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getnext">getnext</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>ULong</returntype>
            <parameter>
                <name>clientID</name>
                <type>ULong</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>B4R::B4RAsyncServer</name>
        <shortname>AsyncServer</shortname>
        <comment>
            Example: &lt;code&gt; 
            &lt;/code&gt;</comment>
        <method>
            <name DesignerName="Initialize">Initialize</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>IP</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>port</name>
                <type>UInt</type>
            </parameter>
            <parameter>
                <name>OnClientSub</name>
                <type>Subvoid_Ulong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Initialize1">Initialize1</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>port</name>
                <type>UInt</type>
            </parameter>
            <parameter>
                <name>OnClientSub</name>
                <type>Subvoid_Ulong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="end">end</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="setNoDelay">setNoDelay</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>nodelay</name>
                <type>Bool</type>
            </parameter>
        </method>
        <property>
            <name>NoDelay</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>Bool</returntype>
        </property>
        <method>
            <name DesignerName="status">status</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
    </class>
    <version>1</version>
</root>
