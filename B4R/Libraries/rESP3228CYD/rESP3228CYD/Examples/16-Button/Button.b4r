Build1=Default,B4RDev
Group=Default Group
Library1=rcore
Library2=rrandomaccessfile
Library3=resp3228cyd
NumberOfFiles=0
NumberOfLibraries=3
NumberOfModules=0
Version=4
@EndOfDesignText@
#Region Project Notes
'Project:		rESP3228CYD
'Description:	Example touch showing red dot and x,y coordinates at touch position.
'				A timer is used to listen to display touched. Interval 100ms sets the sensitivity.
'				Instead timer, addlooper is an option but then multiple touch at same postion if touching longer.
'Date:			See globals version
'Author:		Robert W.B. Linn

'Additional Libraries used (min version)
'rRandomAccessFile 1.91 - ByteConverter

'Microcontroller
'ESP32 Dev Module
'IMPORTANT: Change Tools > Board Selector > Partition scheme to "Hugh app (3MB no OTA/ 1MB SPIFFS)" 

'Compile
'Reset the ESP32 after compile (press reset button).

'Wiring
'No additional wiring
#End Region

#Region Project Attributes
	#AutoFlushLogs: True
	#CheckArrayBounds: True
	#StackBufferSize: 600
#End Region
'Ctrl+Click to open the C code folder: ide://run?File=%WINDIR%\System32\explorer.exe&Args=%PROJECT%\Objects\Src

Sub Process_Globals
	Private VERSION As String = "rESP3228CYD Example Touch v20250309"

	'Communication
	Public Serial1 As Serial
	Private lcd As ESP3228CYD
	
	Private TimerTouch As Timer
	Private TimerTouchDelay As UInt = 100

	'Helper
	Private bc As ByteConverter	'ignore
End Sub

Private Sub AppStart
	Serial1.Initialize(115200)
	Log(CRLF, CRLF, "[AppStart]", VERSION)

	'Init display
	lcd.InitializeWithTouch("LCD_Touched")

	'Init the touch timer
	TimerTouch.Initialize("TimerTouch_Tick", TimerTouchDelay)
	TimerTouch.Enabled = True

	'NOT USED
	'AddLooper("TouchLooper")

	' Callsub to let the display initialize
	CallSubPlus("SetUp", 1000, 5)
End Sub

Private Sub SetUp(tag As Byte)
	lcd.SetRotation(1)

	lcd.FillScreen(lcd.TFT_WHITE)

	' Draw version text at top middle center
	lcd.DrawText(lcd.Width / 2, 10, VERSION, lcd.TEXT_ALIGN_MIDDLE_CENTER, 1.5, lcd.TFT_WHITE, lcd.TFT_BLUE)
End Sub

Private Sub TimerTouch_Tick
	lcd.GetTouch

	'Alternative to the touch_event
	'Log("[TimerTouch_Tick] x=", lcd.TouchX, ",y=", lcd.TouchY)
End Sub

'LCD touched event with x,y coordinates. Show red dot and x,y coordinates.
Private Sub LCD_Touched(x As ULong, y As ULong)
	'[Touch LCD_Touch Event] x=188,y=104
	Log("[Touch LCD_Touch Event] x=", X, ",y=", Y)
	lcd.FillCircle(x, y, 5, lcd.TFT_RED)
	lcd.DrawText(x, y - 10, JoinStrings(Array As String(NumberFormat(x,0,0),",",NumberFormat(y,0,0))), lcd.TEXT_ALIGN_MIDDLE_CENTER, 1, lcd.TFT_BLUE, lcd.BackgroundColor)
End Sub

'NOT USED
'Private Sub TouchLooper
'	lcd.GetTouch
'	'Log("[TouchLooper] x=", lcd.TouchX, ",y=", lcd.TouchY)
'	'Delay 50ms.
'	Delay(50)
'End Sub
