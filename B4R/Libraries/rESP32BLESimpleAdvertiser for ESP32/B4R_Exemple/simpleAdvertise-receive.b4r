Build1=Default,B4RDev
Group=Default Group
Library1=rcore
Library2=rrandomaccessfile
Library3=resp32blesimpleadvertiser
NumberOfFiles=0
NumberOfLibraries=3
NumberOfModules=0
Version=4
@EndOfDesignText@

#Region Project Attributes
	#AutoFlushLogs: True
	#CheckArrayBounds: True
	#StackBufferSize: 1000
#End Region
'Ctrl+Click to open the C code folder: ide://run?File=%WINDIR%\System32\explorer.exe&Args=%PROJECT%\Objects\Src

Sub Process_Globals
	Public Serial1 As Serial
	Private raf As RandomAccessFile
	Private bc As ByteConverter
	Private BLEAdv As BLESimpleAdvertiser
	Private BLEDev As BLEDevice 
	Private Scanner As BLEScan
	Private advDev As BLEAdvertisedDevice
	Private scantime As Byte = 5
	Private delaytime As Long = Millis
	
	Private scanID As ULong = 0
End Sub


Private Sub AppStart
	Serial1.Initialize(115200)
	Log("AppStart")
	Log(" << esp32 ble advertisement receiver >>")
	BLEDev.init("")
	scanID = BLEDev.getScan
	Scanner.setAdvertisedDeviceCallbacks(scanID, "OnAdvertisedDevice")
	Scanner.setActiveScan(scanID, True)
	Scanner.setInterval(scanID, 100)
	Scanner.setWindow(scanID, 99)
	AddLooper("ProjectLoop")
'	advDev.haveManufacturerData
'Log("stack : ",StackBufferUsage)
    Log("")
End Sub

Sub OnAdvertisedDevice(advID As ULong)
	If advDev.getName(advID) ="BLE-SSS" Then 
	  Log(" ")
	  If advDev.haveManufacturerData(advID) Then

		Dim databin() As Byte = advDev.getManufacturerData(advID)
		Log(databin)
			Log("> manufacturer data: name:[", advDev.getName(advID), "] addr:[",advDev.getAddress(advID), "] rssi:",advDev.getRSSI(advID), "  data[", advDev.getManufacturerData(advID), "]")
	    Dim payloadbin() As Byte = advDev.getPayload(advID)
	    Log("  payload  ",payloadbin.length," bytes ")
		Log_Payload(payloadbin)
		
	  Else If advDev.haveServiceData(advID) Then 
	'// service data advertising device found
		Log("> service data:    name:[",advDev.getName(advID),"] addr:[",advDev.getAddress(advID),"] rssi:",advDev.getRSSI(advID)," UUID:[",advDev.getServiceDataUUID(advID),"] data[",advDev.getServiceData(advID),"]")
		Dim payloadbin() As Byte = advDev.getPayload(advID)
		Log("  payload ",payloadbin.Length," bytes ")
		Log_Payload(payloadbin)		
	 End If	
   End If
'	Log("stack : ",StackBufferUsage)
End Sub

Sub ProjectLoop
	If Millis > delaytime + 1000  Then
		Log("# scanning ...")
		Scanner.start(scanID, scantime,False)
		Scanner.clearResults(scanID)
		Log("# ... scan done")
		delaytime = Millis
	End If 	
End Sub



Sub Log_Payload(payload()As Byte)
	For j = 0 To payload.Length-1 Step 16
		logHexa(bc.SubString2(payload,j, Min(j+16, payload.Length)))
	Next
End Sub


Sub logHexa(payloadbin() As Byte)	
	Dim payloadlen As UInt = payloadbin.length
	Dim payloadHexa(100) As Byte
	Dim temp1() As Byte = " ".getbytes
	For i = 0 To payloadlen-1
		bc.ArrayCopy2(bytetoHexa(payloadbin(i)),0, payloadHexa,i*3,2)
		bc.ArrayCopy2(temp1,0, payloadHexa,(i*3)+2,1)
	Next
	Log("  payload          ",bc.SubString2(payloadHexa,0,payloadlen*3),"    ",payloadbin)
End Sub

Sub bytetoHexa(n As Byte) As Byte()
	Dim b(2) As Byte
	raf.Initialize(b, False) 'big endian
	raf.Writeuint16(n, 0)
	Return bc.SubString(bc.HexFromBytes(b),2)
End Sub
