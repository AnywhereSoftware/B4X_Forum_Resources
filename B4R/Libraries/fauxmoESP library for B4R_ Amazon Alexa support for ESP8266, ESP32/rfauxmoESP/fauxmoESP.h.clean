    //#Class 1          
    //#New(backend):    Y                                             //- [Y]  if new (backend) to add
    //#ObjectName:      fmo                                             //- Object name in case of New(backend)= Y
    //#Init_Base:       fauxmoESP();                                             //- parameter to add at launch of library in case of backend
    //#Class 2
    //#New(backend):                                                 //- [Y]  if new (backend) to add
    //#ObjectName:                                                    //- Object name in case of New(backend)= Y
    //#Init_Base:                                                    //- parameter to add at launch of library in case of backend
    //#Class 3
    //#New(backend):                                                 //- [Y]  if new (backend) to add
    //#ObjectName:                                                    //- Object name in case of New(backend)= Y
    //#Init_Base:                                                    //- parameter to add at launch of library in case of backend
    //#Class 4
    //#New(backend):                                                 //- [Y]  if new (backend) to add
    //#ObjectName:                                                    //- Object name in case of New(backend)= Y
    //#Init_Base:                                                    //- parameter to add at launch of library in case of backend
    //#Class 5
    //#New(backend):                                                 //- [Y]  if new (backend) to add
    //#ObjectName:                                                    //- Object name in case of New(backend)= Y
    //#Init_Base:                                                    //- parameter to add at launch of library in case of backend
    //#Class 6
    //#New(backend):                                                 //- [Y]  if new (backend) to add
    //#ObjectName:                                                    //- Object name in case of New(backend)= Y
    //#Init_Base:                                                    //- parameter to add at launch of library in case of backend
    //#
    //#MethOn

fauxmo.onSetState([](unsigned char device_id, const char * device_name, bool state, unsigned char value) {


class fauxmoESP 
{
    public:
//        fauxmoESP();
        ~fauxmoESP();
        unsigned char addDevice(const char * device_name);
        bool renameDevice(unsigned char id, const char * device_name);
        bool renameDevice(const char * old_device_name, const char * new_device_name);
        bool removeDevice(unsigned char id);
        bool removeDevice(const char * device_name);
        char * getDeviceName(unsigned char id, char * buffer, size_t len);
        int getDeviceId(const char * device_name);
        void setDeviceUniqueId(unsigned char id, const char * uniqueid);
        void onSetState(TSetStateCallback fn); 
        void onSetState(TSetStateWithColorCallback fn); 
        bool setState(unsigned char id, bool state, unsigned char value);
        bool setState(const char * device_name, bool state, unsigned char value);
        bool setState(unsigned char id, bool state, unsigned char value, byte * rgb);
        bool setState(const char * device_name, bool state, unsigned char value, byte * rgb);
        bool process(AsyncClient * client, bool isGet, String url, String body);
        void enable(bool enable);
        void createServer(bool internal) 
        void setPort(unsigned long tcp_port) 
        void handle();
}