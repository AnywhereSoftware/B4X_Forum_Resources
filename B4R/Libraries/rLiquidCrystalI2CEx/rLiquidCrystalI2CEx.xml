<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RLiquidCrystal_I2C</name>
        <shortname>LiquidCrystalI2CEX</shortname>
        <comment>rLiquidCrystalI2CEX.h
 Library for the I2C LCD Displays 20x4 (20 columns, 4 rows) or 16x2 (16 columns, 2 rows).
 The LCD display is connected to the I2C pins SDA, SCL of the Arduino.
 The LCD display default addresses (Byte) are LCD20x4: 0x27, LCD16x2: 0x3F
 Additional Libraries required:
 None
 Additional Classes required (included in the wrapped library folder):
 None
 Notes:
 First library wrapping done by Anywhere Software (www.b4x.com). many thanks.
 Changelog
 20210216: v1.00</comment>
        <property>
            <name>Blink</name>
            <comment>Set cursor blink ON (true) or OFF (false).</comment>
            <parameter>
                <name>State</name>
                <type>bool</type>
            </parameter>
        </property>
        <property>
            <name>CursorOn</name>
            <comment>Sets the cursor state ON (true) or OFF ( false)</comment>
            <parameter>
                <name>State</name>
                <type>bool</type>
            </parameter>
        </property>
        <property>
            <name>Backlight</name>
            <comment>Turn the LCD backlight ON (true) or OFF (false)</comment>
            <parameter>
                <name>State</name>
                <type>bool</type>
            </parameter>
        </property>
        <method>
            <name DesignerName="Initialize">Initialize</name>
            <comment>Init the LCD with address (default 0x27) and columns (20), rows (4)</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Address</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>Columns</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>Rows</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetCursor">SetCursor</name>
            <comment>Set the cursor position at column, row
LCD20x4: Columns = 0-19, Rows = 0-3
LCD16x2: Columns = 0-15, Rows = 0-1</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Column</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>Row</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Write">Write</name>
            <comment>Write text at the position prior set via SetCursor(Col,Row).
The text can be a string, number or array of bytes.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Message</name>
                <type>B4R::Object*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="WriteAt">WriteAt</name>
            <comment>Write text at the position col,row.
The text can be a string, number or array of bytes.
Column: 0-19 (LCD20x4), 0-15 (LCD16x2)
Row: 0-3 (LCD20x4), 0-1 (LCD16x2)</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Column</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>Row</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>Message</name>
                <type>B4R::Object*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Clear">Clear</name>
            <comment>Clear the screen and set the cursor at position 0,0.</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="ClearRow">ClearRow</name>
            <comment>Clear a row and set the cursor at position 0, row.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Row</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="CreateChar">CreateChar</name>
            <comment>Create special character location 0-7.
The Charmap as byte array contains the 8 bytes of the character.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Location</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>Charmap</name>
                <type>Byte[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="WriteChar">WriteChar</name>
            <comment>Write special character 0-7</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Location</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="WriteCharAt">WriteCharAt</name>
            <comment>Write special character wih location 0-7 at the position column, row.
Note: The first column or row start with 0.
The special character has to be created first with function CreateChar.
LCD20x4: Columns = 0-19, Rows = 0-3
LCD16x2: Columns = 0-15, Rows = 0-1</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Column</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>Row</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>Location</name>
                <type>Byte</type>
            </parameter>
        </method>
        <field>
            <name DesignerName="lcd">lcd</name>
            <comment>Create lcd object</comment>
            <returntype>B4R::LiquidCrystal_I2C*</returntype>
        </field>
        <field>
            <name DesignerName="ColumnSize">ColumnSize</name>
            <comment>Get the number of columns</comment>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="RowSize">RowSize</name>
            <comment>Get the number of rows</comment>
            <returntype>Byte</returntype>
        </field>
    </class>
    <version>1</version>
</root>
