<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RMPU6050</name>
        <shortname>MPU6050</shortname>
        <comment>
            Example: &lt;code&gt; 
            &lt;/code&gt;</comment>
         <event></event>
        <method>
            <name DesignerName="Initialize">Initialize</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="beginSoftwareI2C">beginSoftwareI2C</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>sclpin</name>
                <type>Int</type>
            </parameter>
            <parameter>
                <name>sdapin</name>
                <type>Int</type>
            </parameter>
            <parameter>
                <name>scale</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>range</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>mpua</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="begin">begin</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
            <parameter>
                <name>scale</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>range</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>mpua</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setClockSource">setClockSource</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>source</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setScale">setScale</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>scale</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setRange">setRange</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>range</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getClockSource">getClockSource</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="getScale">getScale</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="getRange">getRange</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="setDHPFMode">setDHPFMode</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>dhpf</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setDLPFMode">setDLPFMode</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>dlpf</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getAccelPowerOnDelay">getAccelPowerOnDelay</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="setAccelPowerOnDelay">setAccelPowerOnDelay</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>delay</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getIntStatus">getIntStatus</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="getIntZeroMotionEnabled">getIntZeroMotionEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
        </method>
        <method>
            <name DesignerName="setIntZeroMotionEnabled">setIntZeroMotionEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>state</name>
                <type>Bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getIntMotionEnabled">getIntMotionEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
        </method>
        <method>
            <name DesignerName="setIntMotionEnabled">setIntMotionEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>state</name>
                <type>Bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getIntFreeFallEnabled">getIntFreeFallEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
        </method>
        <method>
            <name DesignerName="setIntFreeFallEnabled">setIntFreeFallEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>state</name>
                <type>Bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getMotionDetectionThreshold">getMotionDetectionThreshold</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="setMotionDetectionThreshold">setMotionDetectionThreshold</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>threshold</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getMotionDetectionDuration">getMotionDetectionDuration</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="setMotionDetectionDuration">setMotionDetectionDuration</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>duration</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getZeroMotionDetectionThreshold">getZeroMotionDetectionThreshold</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="setZeroMotionDetectionThreshold">setZeroMotionDetectionThreshold</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>threshold</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getZeroMotionDetectionDuration">getZeroMotionDetectionDuration</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="setZeroMotionDetectionDuration">setZeroMotionDetectionDuration</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>duration</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getFreeFallDetectionThreshold">getFreeFallDetectionThreshold</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="setFreeFallDetectionThreshold">setFreeFallDetectionThreshold</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>threshold</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getFreeFallDetectionDuration">getFreeFallDetectionDuration</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="setFreeFallDetectionDuration">setFreeFallDetectionDuration</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>duration</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getSleepEnabled">getSleepEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
        </method>
        <method>
            <name DesignerName="setSleepEnabled">setSleepEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>state</name>
                <type>Bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getI2CMasterModeEnabled">getI2CMasterModeEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
        </method>
        <method>
            <name DesignerName="setI2CMasterModeEnabled">setI2CMasterModeEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>state</name>
                <type>Bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getI2CBypassEnabled">getI2CBypassEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Bool</returntype>
        </method>
        <method>
            <name DesignerName="setI2CBypassEnabled">setI2CBypassEnabled</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>state</name>
                <type>Bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="readTemperature">readTemperature</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Double</returntype>
        </method>
        <method>
            <name DesignerName="readActivites">readActivites</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
        </method>
        <method>
            <name DesignerName="getGyroOffsetX">getGyroOffsetX</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <method>
            <name DesignerName="setGyroOffsetX">setGyroOffsetX</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>offset</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getGyroOffsetY">getGyroOffsetY</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <method>
            <name DesignerName="setGyroOffsetY">setGyroOffsetY</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>offset</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getGyroOffsetZ">getGyroOffsetZ</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <method>
            <name DesignerName="setGyroOffsetZ">setGyroOffsetZ</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>offset</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getAccelOffsetX">getAccelOffsetX</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <method>
            <name DesignerName="setAccelOffsetX">setAccelOffsetX</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>offset</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getAccelOffsetY">getAccelOffsetY</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <method>
            <name DesignerName="setAccelOffsetY">setAccelOffsetY</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>offset</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getAccelOffsetZ">getAccelOffsetZ</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Int</returntype>
        </method>
        <method>
            <name DesignerName="setAccelOffsetZ">setAccelOffsetZ</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>offset</name>
                <type>Int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="calibrateGyro">calibrateGyro</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>samples</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setThreshold">setThreshold</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>multiple</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="getThreshold">getThreshold</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <method>
            <name DesignerName="readRawGyro">readRawGyro</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>accel</name>
                <type>Double[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="readNormalizeGyro">readNormalizeGyro</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>accel</name>
                <type>Double[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="readRawAccel">readRawAccel</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>accel</name>
                <type>Double[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="readNormalizeAccel">readNormalizeAccel</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>accel</name>
                <type>Double[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="readScaledAccel">readScaledAccel</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>accel</name>
                <type>Double[]</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>B4R::B4RMPU6050_DATA</name>
        <shortname>MPU6050_DATA</shortname>
        <comment>
            Example: &lt;code&gt; 
            &lt;/code&gt;</comment>
        <field>
            <name DesignerName="Activites_isOverflow">Activites_isOverflow</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DesignerName="Activites_isFreeFall">Activites_isFreeFall</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DesignerName="Activites_isInactivity">Activites_isInactivity</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DesignerName="Activites_isActivity">Activites_isActivity</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DesignerName="Activites_isDataReady">Activites_isDataReady</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DesignerName="Activites_isPosActivityOnX">Activites_isPosActivityOnX</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DesignerName="Activites_isPosActivityOnY">Activites_isPosActivityOnY</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DesignerName="Activites_isPosActivityOnZ">Activites_isPosActivityOnZ</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DesignerName="Activites_isNegActivityOnX">Activites_isNegActivityOnX</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DesignerName="Activites_isNegActivityOnY">Activites_isNegActivityOnY</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DesignerName="Activites_isNegActivityOnZ">Activites_isNegActivityOnZ</name>
            <returntype>UInt</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_CLOCK_KEEP_RESET">MPU6050_CLOCK_KEEP_RESET</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_CLOCK_EXTERNAL_19MHZ">MPU6050_CLOCK_EXTERNAL_19MHZ</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_CLOCK_EXTERNAL_32KHZ">MPU6050_CLOCK_EXTERNAL_32KHZ</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_CLOCK_PLL_ZGYRO">MPU6050_CLOCK_PLL_ZGYRO</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_CLOCK_PLL_YGYRO">MPU6050_CLOCK_PLL_YGYRO</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_CLOCK_PLL_XGYRO">MPU6050_CLOCK_PLL_XGYRO</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_CLOCK_INTERNAL_8MHZ">MPU6050_CLOCK_INTERNAL_8MHZ</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DPS_SCALE_2000DPS">MPU6050_DPS_SCALE_2000DPS</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DPS_SCALE_1000DPS">MPU6050_DPS_SCALE_1000DPS</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DPS_SCALE_500DPS">MPU6050_DPS_SCALE_500DPS</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DPS_SCALE_250DPS">MPU6050_DPS_SCALE_250DPS</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_RANGE_16G">MPU6050_RANGE_16G</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_RANGE_8G">MPU6050_RANGE_8G</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_RANGE_4G">MPU6050_RANGE_4G</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_RANGE_2G">MPU6050_RANGE_2G</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DELAY_3MS">MPU6050_DELAY_3MS</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DELAY_2MS">MPU6050_DELAY_2MS</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DELAY_1MS">MPU6050_DELAY_1MS</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_NO_DELAY">MPU6050_NO_DELAY</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DHPF_HOLD">MPU6050_DHPF_HOLD</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DHPF_0_63HZ">MPU6050_DHPF_0_63HZ</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DHPF_1_25HZ">MPU6050_DHPF_1_25HZ</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DHPF_2_5HZ">MPU6050_DHPF_2_5HZ</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DHPF_5HZ">MPU6050_DHPF_5HZ</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DHPF_RESET">MPU6050_DHPF_RESET</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DLPF_6">MPU6050_DLPF_6</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DLPF_5">MPU6050_DLPF_5</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DLPF_4">MPU6050_DLPF_4</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DLPF_3">MPU6050_DLPF_3</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DLPF_2">MPU6050_DLPF_2</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DLPF_1">MPU6050_DLPF_1</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="MPU6050_DLPF_0">MPU6050_DLPF_0</name>
            <returntype>Byte</returntype>
        </field>
    </class>
    <version>1</version>
</root>
