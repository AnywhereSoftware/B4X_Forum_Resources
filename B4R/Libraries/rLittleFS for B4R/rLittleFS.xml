<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RFile</name>
        <shortname>File</shortname>
        <property>
            <name>Size</name>
            <comment>Returns the file size (number of bytes).</comment>
            <returntype>ULong</returntype>
        </property>
        <property>
            <name>Name</name>
            <comment>Returns the file name.</comment>
            <returntype>B4R::B4RString*</returntype>
        </property>
        <property>
            <name>IsDirectory</name>
            <comment>Returns True if directory.</comment>
            <returntype>bool</returntype>
        </property>
        <property>
            <name>IsFile</name>
            <comment>Returns False if directory.</comment>
            <returntype>bool</returntype>
        </property>
    </class>
    <class>
        <name>B4R::B4RLittleFS</name>
        <shortname>LittleFS</shortname>
        <property>
            <name>CurrentFile</name>
            <comment>Returns the current open file.</comment>
            <returntype>B4R::B4RFile*</returntype>
        </property>
        <property>
            <name>Stream</name>
            <comment>Returns the stream of the current open file.</comment>
            <returntype>B4R::B4RStream*</returntype>
        </property>
        <property>
            <name>Position</name>
            <comment>Gets or sets the position in the current open file.</comment>
            <returntype>ULong</returntype>
            <parameter>
                <name>p</name>
                <type>ULong</type>
            </parameter>
        </property>
        <property>
            <name>TotalSize</name>
            <returntype>ULong</returntype>
        </property>
        <property>
            <name>UsedSize</name>
            <returntype>ULong</returntype>
        </property>
        <method>
            <name DesignerName="Initialize">Initialize</name>
            <comment>Initializes the file system. Returns True if successful.</comment>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="Format">Format</name>
            <comment>Formats the file system. Note that this can take more than a minute to complete.
Returns True if successful.</comment>
            <returntype>bool</returntype>
        </method>
        <method>
            <name DesignerName="OpenRead">OpenRead</name>
            <comment>Opens a file in read only mode. Returns true if the file was opened successfully.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>FileName</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="OpenReadWrite">OpenReadWrite</name>
            <comment>Opens a file in read and write mode. Returns true if the file was opened successfully.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>FileName</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="OpenAppend">OpenAppend</name>
            <comment>Opens a file in Append mode. Returns true if the file was opened successfully.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>FileName</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Close">Close</name>
            <comment>Closes the current open file.</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="Exists">Exists</name>
            <comment>Checks whether the given file or directory exist.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>FileName</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Remove">Remove</name>
            <comment>Deletes the given file. Returns true if the file was successfully deleted.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>FileName</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Rename">Rename</name>
            <comment>Rename the given file. Returns true if the file was successfully renamed.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>FileName1</name>
                <type>B4R::B4RString*</type>
            </parameter>
            <parameter>
                <name>FileName2</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>    
        <method>
            <name DesignerName="MKDir">MKDir</name>
            <comment>Create a new Directory. Returns true if the file was successfully renamed.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>DIRName</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>         
        <method>
            <name DesignerName="RMDir">RMDir</name>
            <comment>Remove a Directory. Returns true if the file was successfully renamed.</comment>
            <returntype>bool</returntype>
            <parameter>
                <name>DIRName</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>                                                
        <method>
            <name DesignerName="ListFiles">ListFiles</name>
            <comment>Can be used in a For Each loop to iterate over the files in the folder.
Example:&lt;code&gt;
For Each f As File In fs.ListFiles("/")
	Log("Name: ", f.Name, ", Size: ", f.Size)
Next&lt;/code&gt;</comment>
            <returntype>B4R::FileIterator*</returntype>
            <parameter>
                <name>DirName</name>
                <type>B4R::B4RString*</type>
            </parameter>
        </method>
    </class>
    <version>1.12</version>
</root>
