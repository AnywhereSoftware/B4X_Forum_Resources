Build1=Default,B4RDev
Group=Default Group
Library1=rcore
Library2=resp32ledcontrol
NumberOfFiles=0
NumberOfLibraries=2
NumberOfModules=0
Version=4
@EndOfDesignText@
#Region Project Notes
'Project:		rESP32LEDControl
'Description:	Basic example for the B4R Library rESP32LEDControl.
'Source:		BasicExample.b4r
'Date:			See globals version
'Author:		Robert W.B. Linn

'Additional Libraries
'rESP32RGBLEDC

'Components
'Microcontroller:	ESP32 Wrover Kit
'LED Module:		DFRobot Blue

'Compile
'Reset the ESP32 after compile (press reset button).

'Wiring
'LED	= ESP32 (wirecolor)
'VCC	= 3V3
'Signal	= GPIO2 (D2) (blue)
'GND	= GND (black)

'Various
'Ctrl+Click to open the C code folder: ide://run?File=%WINDIR%\System32\explorer.exe&Args=%PROJECT%\Objects\Src
#End Region

#Region Project Attributes
	#AutoFlushLogs: True
	#CheckArrayBounds: True
	#StackBufferSize: 600
#End Region

Sub Process_Globals
	Private VERSION As String = "rESP32LEDControl BasicExample v20250613"

	' Communication
	Public Serial1 As Serial

	' LED
	Private LED As ESP32LEDControl
	Private LEDCPin As Byte = 2
End Sub

Private Sub AppStart
	Serial1.Initialize(115200)
	Log(CRLF, "[AppStart]", VERSION)

	'Init the led
	Dim result As Boolean = LED.Initialize(LEDCPin, LED.FREQUENCY_DEFAULT, LED.RESOLUTION_DEFAULT)
	If Not(result) Then
		Log("[AppStart][ERROR][Initialize] LED not initialized. Check log.")
		Return
	Else
		Log("[AppStart][Initialize] LED OK.")
	End If

	'Call method Test immediate
	CallSubPlus("Test", 0, 1)
End Sub

Private Sub Test(tag As Byte)
	Dim delayms As ULong = 2000

	Log("[Test] On")
	LED.On
	Delay(delayms)

	Log("[Test] Low duty using Write")
	LED.Write(50)
	Delay(delayms)

	Log("[Test] Full duty using Write")
	LED.Write(LED.DUTY_MAX)
	Delay(delayms)

	Log("[Test] Set duty cycle 100")
	LED.DutyCycle = 100
	Log("[Test] Get duty cycle=",LED.DutyCycle)
	Delay(delayms)

	Log("[Test] Off")
	LED.Off
	Delay(delayms)
	
	Log("[Test] FadeOut via CallSubPlus")
	CallSubPlus("FadeOut", 1000, 5)
End Sub

' Own method to fade in from duty min to max.
Public Sub FadeIn(fadestep As Byte)
	For i = LED.DUTY_MIN To LED.DUTY_MAX Step fadestep
		LED.Write(i)
		Delay(20)
	Next
	Log("[FadeIn] Done")
End Sub

' Own method to fade out from duty min to max.
Public Sub FadeOut(fadestep As Byte)
	For i = LED.DUTY_MAX To LED.DUTY_MIN Step (fadestep * -1)
		LED.Write(i)
		Delay(20)
	Next
	Log("[FadeOut] Done")
End Sub
