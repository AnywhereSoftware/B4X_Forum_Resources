<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RSPIClass</name>
        <shortname>SPI32</shortname>
        <comment>
            Example: &lt;code&gt; 
            &lt;/code&gt;</comment>
         <event></event>
        <method>
            <name DesignerName="Initialize">Initialize</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>SPIbus</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="begin">begin</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="begin1">begin1</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>sck</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>miso</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>mosi</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>ss</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="end">end</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="setHwCs">setHwCs</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>use</name>
                <type>Bool</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setBitOrder">setBitOrder</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>bitOrder</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setDataMode">setDataMode</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>dataMode</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setFrequency">setFrequency</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>freq</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="setClockDivider">setClockDivider</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>clockDiv</name>
                <type>ULong</type>
            </parameter>
        </method>
        <property>
            <name>ClockDivider</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>ULong</returntype>
        </property>
        <method>
            <name DesignerName="beginTransaction">beginTransaction</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>clock</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>bitOrder</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>dataMode</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="endTransaction">endTransaction</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
            <returntype>B4R::void</returntype>
        </method>
        <method>
            <name DesignerName="transfer">transfer</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>data</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="transfer1">transfer1</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
            <parameter>
                <name>data</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="transfer16">transfer16</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>UInt</returntype>
            <parameter>
                <name>data</name>
                <type>UInt</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="transfer32">transfer32</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>ULong</returntype>
            <parameter>
                <name>data</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="transferBytes">transferBytes</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>data</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>out</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="transferBytesR">transferBytesR</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>out</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="transferBytesW">transferBytesW</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>data</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="transferBits">transferBits</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>data</name>
                <type>ULong</type>
            </parameter>
            <parameter>
                <name>out</name>
                <type>ULong[]</type>
            </parameter>
            <parameter>
                <name>bits</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="write">write</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>data</name>
                <type>Byte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="write16">write16</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>data</name>
                <type>UInt</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="write32">write32</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>data</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="writeBytes">writeBytes</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>data</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="writePattern">writePattern</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>B4R::void</returntype>
            <parameter>
                <name>data</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>Byte</type>
            </parameter>
            <parameter>
                <name>repeat</name>
                <type>ULong</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="busStatus">busStatus</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>boolean</returntype>
        </method>
        <method>
            <name DesignerName="pinSS">pinSS</name>
            <comment>
                Example: &lt;code&gt;
                &lt;/code&gt;</comment>
                 <returntype>Byte</returntype>
        </method>
        <field>
            <name DefineMethod="true" DesignerName="ESP32_FSPI">B4R_FSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32_HSPI">B4R_HSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32_VSPI">B4R_VSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32C3_FSPI">B4RC3_FSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32C3_HSPI">B4RC3_HSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32S2_FSPI">B4RS2_FSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="ESP32S2_HSPI">B4RS2_HSPI</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_LSBFIRSTS">B4R_LSBFIRST</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_MSBFIRST">B4R_MSBFIRST</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_CLOCK_DIV2">B4R_SPI_CLOCK_DIV2</name>
            <returntype>Ulong</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_CLOCK_DIV4">B4R_SPI_CLOCK_DIV4</name>
            <returntype>Ulong</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="PI_CLOCK_DIV8">B4R_SPI_CLOCK_DIV8</name>
            <returntype>Ulong</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_CLOCK_DIV16">B4R_SPI_CLOCK_DIV16</name>
            <returntype>Ulong</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_CLOCK_DIV32">B4R_SPI_CLOCK_DIV32</name>
            <returntype>Ulong</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_CLOCK_DIV64">B4R_SPI_CLOCK_DIV64</name>
            <returntype>Ulong</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_CLOCK_DIV128">B4R_SPI_CLOCK_DIV128</name>
            <returntype>Ulong</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_MODE0">B4R_SPI_MODE0</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_MODE1">B4R_SPI_MODE1</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_MODE2">B4R_SPI_MODE2</name>
            <returntype>byte</returntype>
        </field>
        <field>
            <name DefineMethod="true" DesignerName="SPI_MODE3">B4R_SPI_MODE3</name>
            <returntype>byte</returntype>
        </field>
    </class>
    <version>1</version>
</root>
