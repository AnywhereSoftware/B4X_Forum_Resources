<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4R::B4RBLEBeacon</name>
        <shortname>BLEBeacon</shortname>
        <comment>Define the B4R namespace.
 The CPP code must be wrapped inside the B4R namespace to integrate with B4R.</comment>
        <event>Error</event>
        <method>
            <name DesignerName="Initialize">Initialize</name>
            <comment>Initialize the BLE beacon.
Name - Name of the BLE beacon.
ErrorSub - Event sub to show any errors.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>Name</name>
                <type>B4R::B4RString*</type>
            </parameter>
            <parameter>
                <name>ErrorSub</name>
                <type>SubVoidByte</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Advertise">Advertise</name>
            <comment>Advertise data in Eddystone format.
data - Array as Byte with max size 31 bytes.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>data</name>
                <type>Byte[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="AdvertiseDevice">AdvertiseDevice</name>
            <comment>Advertise a device with manufacturerid and data.
Example: The data could be specific device content with Manufacturer ID + device data.
manufacturerid - Array as Byte with manufacturer id (2-bytes).
data - Array as Byte with format depending manufacturer specification.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>manufacturerid</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>Byte[]</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="AdvertiseRaw">AdvertiseRaw</name>
            <comment>Advertise data in raw format using the service UUID.
Example: Could be specific like environment data.
data - Array as Byte with any format.
serviceinfo - Bool to set serviceinfo in the advertisement.</comment>
            <returntype>B4R::void</returntype>
            <parameter>
                <name>data</name>
                <type>Byte[]</type>
            </parameter>
            <parameter>
                <name>serviceinfo</name>
                <type>bool</type>
            </parameter>
        </method>
        <field>
            <name DesignerName="MAX_ADV_DATA_SIZE">MAX_ADV_DATA_SIZE</name>
            <comment>Static const max data size of 31. This is fixed.</comment>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="ERROR_ADV_DATA_SIZE_TOO_LARGE">ERROR_ADV_DATA_SIZE_TOO_LARGE</name>
            <comment>Eddystone = Max data size is 31 bytes. This is fixed.</comment>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="ERROR_ADV_DATA_SIZE_TOO_SMALL">ERROR_ADV_DATA_SIZE_TOO_SMALL</name>
            <returntype>Byte</returntype>
        </field>
        <field>
            <name DesignerName="ERROR_ADV_NO_DATA">ERROR_ADV_NO_DATA</name>
            <returntype>Byte</returntype>
        </field>
    </class>
    <version>0.91</version>
    <author>Robert W.B. Linn</author>
</root>
