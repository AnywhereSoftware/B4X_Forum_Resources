Build1=Default,com.BOBs.LEDStrip
File1=colors.png
File2=LEDStrip_Logo.png
File3=sMain.bal
File4=wheelpicker.bal
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
Group=Default Group
IconFile=
Library1=core
Library2=randomaccessfile
Library3=network
Library4=byteconverter
Library5=dialogs
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~'End of default text.~\n~
Module1=Starter
Module2=B4RSerializator
Module3=cLedStripWiFi
Module4=ColorWheelDialog
NumberOfFiles=4
NumberOfLibraries=5
NumberOfModules=4
Version=9.5
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: LEDStrip
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals

End Sub

Sub Globals
	Private sLED_Main_Panel			 				As Panel
	Private 	sLED_IP_Tag 						As Label
	Private 	sLED_IP			 					As EditText
	Private 	sLED_Connect 						As Button
	Private 	sLED_NetworkState 					As Label
	
	Private 	sLED_SendToggleCmd					As Button		
	Private 	sLED_SendSelectTheme 				As Spinner
	Private		sLED_ColorWheel						As Button

	Private 	sLED_RGB_Panel 						As Panel
	Private 		sLED_RGB_ColorDisplay			As Panel
	
	Private 		sLED_Red_Tag	 				As Label
	Private 		sLED_Green_Tag 					As Label
	Private 		sLED_Blue_Tag 					As Label
	
	Private 		sLED_Red 						As EditText
	Private 		sLED_Green 						As EditText
	Private 		sLED_Blue 						As EditText
	Private 		sLED_SendRGBCmd 				As Button
	
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("sMain")
	
	sLED_IP.Text = "192.168.1.24"
	
	sLED_SendSelectTheme.AddAll(Array As String("Toggle", "Normal", "New Years", "New Years Fast", "Christmas", "Patriot", _
														  "ValentinOs Day", "Saint Pattys Day", "Halloween", "Test"))	
	sLED_SendSelectTheme.Color = Colors.DarkGray
	
	sLED_Red_Tag.Color	= Colors.White
	sLED_Red.Color		= Colors.White
	sLED_Red.Text		= 0
	
	sLED_Green_Tag.Color	= Colors.White	
	sLED_Green.Color	= Colors.White
	sLED_Green.Text		= 0
	
	sLED_Blue_Tag.Color	= Colors.White	
	sLED_Blue.Color		= Colors.White		
	sLED_Blue.Text		= 0

	CallSubDelayed(Me, "RGB_Value_Changed")
		
	CallSub2(Starter, "Connect", sLED_IP.Text)			
End Sub

Public Sub StateChanged
	If Starter.connected Then
		Log("Connected")
		sLED_NetworkState.Text = "Connected"
	Else
		Log("Disconnected")		
		sLED_NetworkState.Text = "Disconnected"
	End If
End Sub

Sub Activity_Resume
	StateChanged
End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Public Sub NewData(data() As Object)
	If data.Length = 0 Then Return
	
	For Each o As Object In data
		Log(o)
	Next
End Sub


Private Sub sLED_SendSelectTheme_ItemClick(Position As Int, Value As Object)
			If  Position = 0 Then
				CallSub2(Starter, "SendCmd", cLedStripWiFi.SendChangeCmd)
			Else
				CallSub2(Starter, "SendCmd", cLedStripWiFi.SendChangeToCmd(Position))
			End If
End Sub

Private Sub sLED_ColorWheel_Click
			Dim cw As ColorWheelDialog
	
			cw.Initialize
			cw.ShowAsync(Me, "Select Color")
	
			Wait For (cw) Color_Result(Success As Boolean)
	
	
			If  Success Then
				Dim ARGB As TARGB = cw.GetColorResult
		
				sLED_Red.Text 	= Bit.And(0xFF, ARGB.Red)
				sLED_Green.Text = Bit.And(0xFF, ARGB.Green)
				sLED_Blue.Text 	= Bit.And(0xFF, ARGB.Blue)
				
				CallSubDelayed(Me, "RGB_Value_Changed")
				
				CallSub2(Starter, "SendCmd", cLedStripWiFi.SendRGBLedCmd(ARGB.Red, ARGB.Green, ARGB.Blue))
			End If	
End Sub

Private Sub sLED_Connect_Click
			CallSub2(Starter, "Connect", sLED_IP.Text)	
End Sub

Private Sub sLED_SendToggleCmd_Click
			CallSub2(Starter, "SendCmd", cLedStripWiFi.SendChangeCmd)
End Sub



Private Sub sLED_RGB_Change_TextChanged(Old As String, New As String)
			RGB_Value_Changed
End Sub

Private Sub sLED_RGB_Change_EnterPressed
			RGB_Value_Changed	
End Sub

Private Sub sLED_RGB_Change_FocusChanged (HasFocus As Boolean)
			RGB_Value_Changed	
End Sub

Private Sub RGB_Value_Changed
			If  IsNumber(sLED_Red.Text) And IsNumber(sLED_Green.Text) And IsNumber(sLED_Blue.Text) Then
				Dim R As Int = sLED_Red.Text
				Dim G As Int = sLED_Green.Text
				Dim B As Int = sLED_Blue.Text
			
				sLED_RGB_ColorDisplay.Color	= Colors.RGB(R, G, B)
			End If
End Sub

Private Sub sLED_SendRGBCmd_Click
			If  IsNumber(sLED_Red.Text) And IsNumber(sLED_Green.Text) And IsNumber(sLED_Blue.Text) Then		
				Dim R As Int = sLED_Red.Text
				Dim G As Int = sLED_Green.Text
				Dim B As Int = sLED_Blue.Text

				CallSub2(Starter, "SendCmd", cLedStripWiFi.SendRGBLedCmd(R, G, B))			
			End If	
End Sub