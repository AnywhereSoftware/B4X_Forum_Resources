Build1=Default,B4RDev,_xUsingWiFi_
Build2=Debug,B4RDev,Debug,Debug_RGBValues,_UsingWiFi_
Build3=Release,B4RDev,_xUsingWiFi_
Group=Default Group
Library1=rcore
Library2=reeprom
Library3=rrandomaccessfile
Library4=resp8266wifi
Library5=resp8266timetools
Module1=|absolute|D:\B4R\SharedCode\cColors
Module2=cThemes
Module3=|absolute|D:\AndroidProjects\LEDStrip\cLedStripWiFi
Module4=cHolidays
NumberOfFiles=0
NumberOfLibraries=5
NumberOfModules=4
Version=3
@EndOfDesignText@

#Region Project Attributes
	#AutoFlushLogs		: True
	#CheckArrayBounds	: True
	
	#StackBufferSize	: 300
#End Region

Sub Process_Globals
#region _Arduino_IDE_PinConversions_	
	'  	Using FlashButton	https://arduino.stackexchange.com/questions/55235/nodemcu-use-flash-button-as-input-in-loop/55236
	'---------------------------------------------------------------------------------------------------------------------------------------------------------	
	'	MakerFocus ESP8266 NodeMCU LUA CP2102 ESP-12E Internet WiFi Development Board 
	'
	'	The pin numbers are a little confusing, when programming using the Arduino IDE insert this code at the beginning of your sketch To convert 
	'		from the Dx pin numbers printed on the board To pin numbers that Arduino recognizes.
	'---------------------------------------------------------------------------------------------------------------------------------------------------------
	'	ESP 8266 PIN OUTS	
	'		#define D0 16									A2
	'		#define D1 	5 	// I2C Bus SCL (clock)
	'		#define D2 	4 	// I2C Bus SDA (data)
	'		#define D3 	0
	'		#define D4 	2 	// Same as "LED_BUILTIN", but inverted logic
	'		#define D5 14 	// SPI Bus SCK (clock)			A0
	'		#define D6 12 	// SPI Bus MISO
	'		#define D7 13 	// SPI Bus MOSI
	'		#define D8 15 	// SPI Bus SS (CS)				A1
	'		#define D9 	3 	// RX0 (Serial console)
	'		#define D10 1 	// TX0 (Serial console)
	'---------------------------------------------------------------------------------------------------------------------------------------------------------
	'		#define PIN_WIRE_SDA (4)
	'		#define PIN_WIRE_SCL (5)
	'
	'		static const uint8_t SDA = PIN_WIRE_SDA;
	'		static const uint8_t SCL = PIN_WIRE_SCL;
	'
	'		static const uint8_t LED_BUILTIN = 16;
	'		static const uint8_t BUILTIN_LED = 16;
	'
#end Region
	
#Region _UsingWiFi_	
#if _UsingWiFi_	
	  	Private mWiFi 												As ESP8266WiFi
  		Private mServer 											As WiFiServerSocket
  		Private mAStream 											As AsyncStreams
'  		Private mServerTimer 										As Timer
  		Private mSerializator										As B4RSerializator	
#end if
#end Region

		Public 	gSerial 											As Serial
	
		Public  gRPin												As Pin
		Public	gGPin												As Pin
		Public  gBPin 												As Pin

		Private mByteConverter						 				As ByteConverter

		Private mEEProm 											As EEPROM
			
		Private mInStartup											As Boolean = True
		
	    Private mLEDPin 											As Pin		
		Private mFlashButton										As Pin
		
    	Private mTimelib 											As ESPTimetools
	    Private mTimestamp 											As ULong		
End Sub

Private Sub AppStart
			gSerial.Initialize(115200)

			#if Debug			
			Log("LED Strip - AppStart")
			#end if			
			
			#if Debug						
			Log("Set Color Pins")
			#end if

			gRPin.Initialize(12, 	gRPin.MODE_OUTPUT)
			gGPin.Initialize(13, 	gGPin.MODE_OUTPUT)
			gBPin.Initialize(15, 	gBPin.MODE_OUTPUT)


			cColors.ShowColor(cColors.Black)
			
			#if Debug			
			Log("Setting up Flash Button as input button")
			#end if

			'-----------------------------------------------------------------
			'  We are using FlashButton as Input button
			'-----------------------------------------------------------------
			mFlashButton.Initialize(0, mFlashButton.MODE_INPUT_PULLUP)
			mFlashButton.AddListener("Theme_StateChanged")

			'-----------------------------------------------------------------
			'  We are using On Board LED as indicator
			'-----------------------------------------------------------------			
    		mLEDPin.Initialize(2, mLEDPin.MODE_OUTPUT)           'On board LED on the WeMos D1 Mini
    		mLEDPin.DigitalWrite(True)

			cThemes.SetTheme(CheckSetThemes(cThemes.CurrentTheme, False))
			
			mInStartup = False
			
#if _UsingWiFi_					
			Setup_WiFi(0)
#end if			
End Sub

Private Sub CheckSetThemes(SetValue As Byte, JustSet As Boolean)  As Int
			'---------------------------------------------------------------------------------
			'  Our special mark BOB
			'---------------------------------------------------------------------------------
			Dim SpecialMark										As Int		= 0xB0B0
	
			#if Debug			
			Log("Check_Themes:", SetValue)
			#end if
				
			Dim Flags	 		As Int
						
			'---------------------------------------------------------------------------------
			'	If just setting write out special mark and data we want later
			'---------------------------------------------------------------------------------
			If  JustSet Then
				#if Debug							
				Log("CheckThemes::Forcing Set - ", SetValue)		
				#end if
						
				Flags = SetValue
				
				mEEProm.WriteBytes(mByteConverter.IntsToBytes(Array As Int(SpecialMark)), 0)
				mEEProm.WriteBytes(mByteConverter.IntsToBytes(Array As Int(Flags)),       2)
			Else
				'---------------------------------------------------------------------------------
				'	Read in 2 Bytes and check for our special mark 0xB0B0
				'---------------------------------------------------------------------------------
				Dim b() 			As Byte = mEEProm.ReadBytes(0, 2)

				#if Debug			
				Log("Bytes Read:", mByteConverter.HexFromBytes(b))
				#end if
				
				'---------------------------------------------------------------------------------
				'	If we have our specail mark then return the next 2 bytes of data
				'---------------------------------------------------------------------------------
				If 	mByteConverter.IntsFromBytes(b)(0) = SpecialMark Then
					b = mEEProm.ReadBytes(2, 2)
				
					Flags = mByteConverter.IntsFromBytes(b)(0)
				Else
					'-----------------------------------------------------------------------------
					'	No Special Mark then must be first time just write a 1 for 1st routine
					'-----------------------------------------------------------------------------
					#if Debug								
					Log("CheckThemes:: FirstTime")
					#end if
					
					Flags = 1
					
					mEEProm.WriteBytes(mByteConverter.IntsToBytes(Array As Int(SpecialMark)), 0)					
					mEEProm.WriteBytes(mByteConverter.IntsToBytes(Array As Int(Flags)),       2)
				End If		
			End If
			
			Return Flags
End Sub

'-----------------------------------------------------------------------------
'	Theme_StateChange is called whenever button is pushed.
'-----------------------------------------------------------------------------
Private Sub Theme_StateChanged(State As Boolean)
			If  mInStartup Then
				Return
			End If
			
			'-----------------------------------------------------------------
			'	If State is False then button is pushed
			'		But we need to check and verify we are running
			'			Because when we done then for some reason this
			'			causes a false button
			'-----------------------------------------------------------------
			If  State = False Then
				#if Debug												
				Log("Theme_StateChanged:", State)
				#End if
				
    	        mLEDPin.DigitalWrite(Not(mLEDPin.DigitalRead)) 	   'Toggle LED On/Off for test purposes
							
				cThemes.BumpTheme		
				
				CheckSetThemes(cThemes.CurrentTheme, True)
			End If			
End Sub


#Region _UsingWiFi_	
 #if _UsingWiFi_		
Private Sub Setup_WiFi(Nothing As Byte)
  			mServer.Initialize(51042, "server_NewConnection")
			mServer.Listen				

			mWiFi.Disconnect	
			
			If  mWiFi.Connect2("---------------", "-------------") Or mWiFi.Connect2("---------------", "-------------")  Then
  				Log("Connected to wireless network.")
    			Log("My ip: ", mWiFi.LocalIp)				

				CallSubPlus("Get_DateTime", 0, 0)								
  			Else
  				Log("Failed to connect.")
				
				CallSubPlus("Setup_WiFi", 2500, 0)
  				Return
  			End If
End Sub

Private Sub Get_DateTime(Nothing As Byte)
   			mTimelib.initialize("north-america.pool.ntp.org", -18000) 'UTC(1) = MEZ
   			mTimestamp	=	mTimelib.timestamp
				
   			If 	mTimestamp <> 0 Then
#if Debug_ShowTimeDetail				
       			Log ("Timestamp is:", mTimestamp)				
				
		        Log("      seconds:", mTimelib.getseconds(mTimestamp))
       			Log("       minute:", mTimelib.getminute(mTimestamp))
       			Log("         hour:", mTimelib.gethour(mTimestamp))
       			Log("      weekday:", mTimelib.getweekday(mTimestamp))
       			Log("          day:", mTimelib.getday(mTimestamp))
       			Log("        month:", mTimelib.getmonth(mTimestamp))
       			Log("Days In Month:", mTimelib.getdaysinmonth(mTimestamp))			 	
       			Log("         year:", mTimelib.getyear(mTimestamp))
       			Log("       hour12:", mTimelib.gethour12(mTimestamp))
       			Log("       hour24:", mTimelib.gethour(mTimestamp))					
       			Log("        Is AM:", mTimelib.isam(mTimestamp))
       			Log("        Is PM:", mTimelib.ispm(mTimestamp))
#end if
    
       			Log("Current Date:", NumberFormat(mTimelib.getmonth(mTimestamp),  2, 0), "/", NumberFormat(mTimelib.getday(mTimestamp),    2, 0), "/", mTimelib.getyear(mTimestamp))
       			Log("Current Time:", NumberFormat(mTimelib.gethour(mTimestamp),   2, 0), ":", NumberFormat(mTimelib.getminute(mTimestamp), 2, 0), ":", NumberFormat(mTimelib.getseconds(mTimestamp), 2, 0))

				
				'-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				'	Check and Set the theme based on Date
				'-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				cThemes.SetThemeBasedOn(mTimelib.getmonth(mTimestamp), mTimelib.gethour(mTimestamp), mTimelib.getminute(mTimestamp), mTimelib.getday(mTimestamp), mTimelib.getweekday(mTimestamp), mTimelib.getdaysinmonth(mTimestamp))
				
				'----------------------------------------------------------------------------------------------------------------------------------
				CallSubPlus("Get_DateTime", ((1000 * 60) * 9), 0)		'	Check the time again in an 9 minutes - Choose 9 because odd number
				'----------------------------------------------------------------------------------------------------------------------------------				
   			Else
       			Log ("error: can't get time data from server")

				'----------------------------------------------------------------------------------------------------------------------------------
				'	If there is NO Time or some type of error try again in a few seconds
				'----------------------------------------------------------------------------------------------------------------------------------
				CallSubPlus("Setup_WiFi", 2500, 0)				
   			End If   	
End Sub

Private	Sub Server_NewConnection (NewSocket As WiFiSocket)
   			Log("NewConnected")
			
    		mAStream.InitializePrefix(NewSocket.Stream, False, "astream_NewData", "astream_Error")
End Sub

Private Sub AStream_NewData(Buffer() As Byte)
  			Dim be(100) 			As Object
  			Dim data() 				As Object 	= mSerializator.ConvertBytesToArray(Buffer, be)
			
			Dim NeededLengths(3)	As Int		= Array As Int(4, 4, 4)
															   
			Dim CheckLengths		As Int 	
			Dim DataValid			As Boolean 
			
			Dim LedStripCmd 		As TLedStripCmd

			#if DebugX
			Log("AStream_NewData - Arrays Size:", data.Length, "  Needed:", NeededLengths.Length)
			#end if
			
			If  data.Length <> NeededLengths.Length Then
				#if Debug					
				Log("AStream_NewData - Arrays Size Error:", data.Length)
				#end if				
			End If

			DataValid 	 = True
			CheckLengths = 0
						
			For Each o As Object In data	
				Dim b() As Byte = o
				#if DebugX
				Log("o:", o, "  Hex:", mByteConverter.HexFromBytes(b), "  Length Needed:", NeededLengths(CheckLengths), "  Got:", b.Length)
				#End If
				If  b.Length <> NeededLengths(CheckLengths) Then
					DataValid = False
					#if Debug												
						Log("b Length:", b.Length, "Not equal to Needed:", NeededLengths(CheckLengths), "  for entry:", CheckLengths)
					#else
						Return
					#end if						
				else if CheckLengths = 0 Or CheckLengths = 3 Then
						If  mByteConverter.ArrayCompare(b, cLedStripWiFi.DEFINE_BobsCheck) <> 0 Then
							DataValid = False
							#if Debug												
							Log("o:", o, "  Hex:", mByteConverter.HexFromBytes(b), "  Data Not BOBs:", mByteConverter.HexFromBytes(cLedStripWiFi.DEFINE_BobsCheck))
							#else
							return
							#end if													
						End If
				else if CheckLengths = 1 Then
						LedStripCmd.CmdData = o
				End If
				
				CheckLengths = CheckLengths + 1
			Next

			If  DataValid Then
				#if DebugX				
				Log("Data is Valid")
				Log("Cmd is:", NumberFormat(LedStripCmd.CmdData(0), 1, 0))				
				#end if				
				Select 	LedStripCmd.CmdData(0)
						Case 	cLedStripWiFi.DEFINE_CMD_ToggleButton
								#if Debug				
								Log("Toggle Cmd")							
								#end if							
								
								cThemes.BumpTheme						

								CheckSetThemes(cThemes.CurrentTheme, True)
					 
						Case 	cLedStripWiFi.DEFINE_CMD_ChangeTo
								#if Debug				
								Log("Change To Cmd")							
								Log("Change To:", NumberFormat(LedStripCmd.CmdData(1), 1, 0))
								#end if							
							
								cThemes.SetTheme(LedStripCmd.CmdData(1))
								
								CheckSetThemes(cThemes.CurrentTheme, True)							
	
						Case 	cLedStripWiFi.DEFINE_CMD_RGBLed
								#if Debug				
								Log("Set RGB Cmd - R:", LedStripCmd.CmdData(1), "  G:", LedStripCmd.CmdData(2), "  B:", LedStripCmd.CmdData(3))							
								#end if							
							
								cThemes.StopThemes
								cColors.ShowRGBColor(LedStripCmd.CmdData(1), _
													 LedStripCmd.CmdData(2), _
													 LedStripCmd.CmdData(3))
				End Select
			End If			
			
			Return
End Sub

Private Sub AStream_Error
			#if DebugX
  			Log("ASream::Error")
			#end if
			
  			mServer.Listen
End Sub

#if  _ScanNetworks_
'----------------------------------------------------------------------------------------------------------------------------------
'	Just an Example of ScanNetworks  not using right now
'----------------------------------------------------------------------------------------------------------------------------------
Private Sub ScanNetworks 'ignore
			Dim numberOfNetworks As Byte = mWiFi.Scan
			
			#if Debug
  			Log("Found: ", numberOfNetworks, " networks.")
			#end if
			
  			For i = 0 To numberOfNetworks - 1
  				Log(mWiFi.ScannedSSID(i))
  			Next
End Sub
#end if
#end if
#end Region

#Region __NativeCode_Example__
'----------------------------------------------------------------------------------------------------------------------------------
'	Just an Example of NativeCode not using right now
'----------------------------------------------------------------------------------------------------------------------------------
#if __NativeCode_Example__
Sub Process_Globals
   Public Serial1 As Serial
   Private Result, N1, N2 As Int 'ignore
End Sub

Private Sub AppStart
   Serial1.Initialize(115200)
   Log("AppStart")
   N1 = 10
   N2 = 20
   RunNative("Add", Null)
   Log("Result: ", Result)
End Sub

#if C
void Add (B4R::Object* o) {
   //lower case variables
   b4r_main::_result = b4r_main::_n1 + b4r_main::_n2;
}
#End if
#End If
#end region
