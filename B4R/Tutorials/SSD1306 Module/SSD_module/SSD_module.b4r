Build1=Default,B4RDev
Group=Default Group
Library1=rcore
Library2=resp8266rtc
Library3=rrandomaccessfile
Module1=|relative|..\HBAR
Module2=|relative|..\MsgBox
Module3=SSD
Module4=|relative|..\VBAR
NumberOfFiles=0
NumberOfLibraries=3
NumberOfModules=4
Version=3.7
@EndOfDesignText@

#Region Project Attributes
	#AutoFlushLogs: True
	#CheckArrayBounds: True
	#StackBufferSize: 1000
#End Region

Sub Process_Globals
	Public Serial1 As Serial
	Private DT(8) As Byte = Array As Byte (21,21,2,23,11,59,00,0) 'century,yr,mon,day,hr,min,sec,day of week, 7 = sunday
	Private rtc As ESP8266rtc
	Private myTimer As Timer
	Private rndTimer As Timer
	Private rndTicks As Byte 
	Private demoScreenStill As Int = 2000 'delay before moving to next demo item
	
	'*********************************************************************************
	'                     Generated by Nokia 5110 LCD Mapper
	'                           2/3/2021 2:45:32 PM
	'*********************************************************************************
	Private Welcome () As Byte = Array As Byte ( _ 'mostez
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xE0,0xE0,0xE0, _
0xE0,0xE0,0x00,0x00,0x00,0xE0,0xE0,0xE0,0xE0,0xE0,0x00,0x00,0x00,0x00,0xC0,0xC0, _
0xE0,0xE0,0xE0,0xE0,0xC0,0xC0,0x00,0x00,0x00,0x80,0xC0,0xE0,0xE0,0xE0,0xE0,0xE0, _
0xE0,0xC0,0x80,0x00,0x00,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x00, _
0x00,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x00,0x00,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0, _
0xE0,0xE0,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF, _
0x07,0xFF,0xFE,0xC0,0xFE,0x07,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xFF,0xFF,0xFF, _
0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x1F,0x3F,0x7F,0x7F,0xF8,0xF0,0xF7, _
0xE7,0xC7,0xC7,0x00,0x00,0x01,0x01,0x01,0xFF,0xFF,0xFF,0xFF,0x01,0x01,0x01,0x00, _
0x00,0xFF,0xFF,0xFF,0xFF,0xF1,0xF1,0xF1,0x00,0x00,0x01,0x01,0x81,0xF1,0xFD,0xFF, _
0x7F,0x1F,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF, _
0x00,0x0F,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x1F,0x7F,0x7F, _
0xFF,0xE0,0xE0,0xFF,0x7F,0x7F,0x1F,0x00,0x00,0x3E,0x7E,0x7E,0xFE,0xE0,0xE0,0xE1, _
0xFF,0x7F,0x7F,0x3F,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00, _
0x00,0xFF,0xFF,0xFF,0xFF,0xF0,0xF0,0xF0,0xF0,0x00,0xF0,0xFE,0xFF,0xFF,0xFF,0xF3, _
0xF0,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0xF0,0xF0,0xF0,0xC0,0x00,0xC0,0xF0,0xF0,0xF0,0x00,0x00,0x00, _
0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x80,0xC0,0xE0,0x80, _
0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0xB0,0xB0, _
0x00,0x00,0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x80,0x80, _
0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xF0,0x90,0x10,0x10,0x30,0x20,0x00,0x00,0xE0, _
0xF0,0x90,0x10,0x10,0x30,0x20,0x00,0x00,0xF0,0xF0,0x10,0x10,0x30,0xE0,0xC0,0x00, _
0x00,0xC0,0x60,0xF0,0xF0,0x00,0x00,0x20,0x30,0x10,0x10,0xF0,0xE0,0x00,0xE0,0xF0, _
0x10,0x10,0xF0,0xE0,0x00,0xC0,0xE0,0x10,0x10,0x30,0x20,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x3F,0x3F,0x00,0x1F,0x38,0x1F,0x00,0x3F,0x3F,0x00,0x00,0x19, _
0x3C,0x26,0x22,0x3F,0x3F,0x00,0x13,0x37,0x26,0x2C,0x3D,0x19,0x00,0x1F,0x3F,0x20, _
0x00,0x1F,0x3F,0x24,0x24,0x37,0x17,0x00,0x00,0x3F,0x3F,0x00,0x00,0x00,0x3F,0x3F, _
0x00,0x00,0x3F,0x3F,0x01,0x00,0x3F,0x3F,0x00,0x00,0x9F,0x3F,0x20,0x11,0xFF,0xFF, _
0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x31,0x23,0x23,0x27,0x3E,0x1C,0x00,0x00,0x10, _
0x31,0x23,0x23,0x27,0x3E,0x1C,0x00,0x00,0x3F,0x3F,0x20,0x20,0x30,0x1F,0x0F,0x00, _
0x00,0x00,0x00,0x3F,0x3F,0x00,0x00,0x10,0x30,0x21,0x21,0x3F,0x1E,0x00,0x1F,0x3F, _
0x20,0x20,0x3F,0x1F,0x00,0x1F,0x3F,0x21,0x21,0x3F,0x1E,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0xFC,0xFC,0x3C,0xF0,0x00,0xF0,0x3C,0xFC,0xFC,0x00,0x00,0x40, _
0x20,0xA0,0xA0,0xE0,0xC0,0x00,0x00,0xC0,0xE0,0x20,0x40,0xFC,0xFC,0x00,0x00,0xC0, _
0xE0,0x20,0x20,0xE0,0xC0,0x00,0x00,0x00,0x00,0x00,0x60,0xE0,0x80,0x00,0xC0,0xE0, _
0xC0,0x00,0x80,0xE0,0x60,0x00,0xEC,0xEC,0x00,0x20,0xF0,0xF8,0x20,0x00,0xFC,0xFC, _
0x40,0x20,0xE0,0xC0,0x00,0x00,0x00,0x00,0x70,0xF8,0xF8,0xF0,0xE0,0xF0,0xF8,0xF8, _
0x70,0x00,0x00,0x00,0x00,0x00,0xEC,0xEC,0x00,0x00,0xE0,0xE0,0x40,0x20,0xE0,0xC0, _
0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0xFC,0x44,0x44,0x44,0xFC,0xB8,0x00,0x00,0xC0, _
0x30,0xFC,0xFC,0x00,0x00,0x00,0x0C,0x1C,0xF0,0xE0,0xF0,0x1C,0x0C,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x07,0x0E,0x07,0x00,0x0F,0x0F,0x00,0x00,0x06, _
0x0F,0x09,0x08,0x0F,0x0F,0x00,0x00,0x07,0x0F,0x08,0x04,0x0F,0x0F,0x00,0x00,0x07, _
0x0F,0x09,0x09,0x0D,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x0F,0x0E,0x07,0x00, _
0x07,0x0E,0x0F,0x03,0x00,0x00,0x0F,0x0F,0x00,0x00,0x07,0x0F,0x08,0x00,0x0F,0x0F, _
0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x0F,0x1F,0x0F,0x03,0x01, _
0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F, _
0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x08,0x08,0x08,0x0F,0x07,0x00,0x03,0x02, _
0x02,0x0F,0x0F,0x02,0x00,0x00,0x0C,0x0E,0x03,0x01,0x03,0x0E,0x0C,0x00,0x00,0x00)

	'*********************************************************************************
	'                     Generated by Nokia 5110 LCD Mapper
	'                           2/23/2021 3:51:07 PM
	'*********************************************************************************
	Private animBitmap () As Byte = Array As Byte ( _ 'animated  bluetooth bitmap, 19x16 per frame x 4 frames
0x08,0x18,0x30,0x60,0xC0,0xFF,0xC6,0x6C,0x38,0x10,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x10,0x18,0x0C,0x06,0x03,0xFF,0x63,0x36,0x1C,0x08,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x18,0x30,0x60,0xC0,0xFF,0xC6,0x6C,0x38,0x10, _
0x00,0x40,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x18,0x0C,0x06,0x03,0xFF,0x63, _
0x36,0x1C,0x08,0x00,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x18,0x30,0x60, _
0xC0,0xFF,0xC6,0x6C,0x38,0x10,0x00,0x40,0x90,0x30,0x60,0xC0,0x00,0x00,0x00,0x10, _
0x18,0x0C,0x06,0x03,0xFF,0x63,0x36,0x1C,0x08,0x00,0x02,0x09,0x0C,0x06,0x03,0x00, _
0x00,0x00,0x08,0x18,0x30,0x60,0xC0,0xFF,0xC6,0x6C,0x38,0x10,0x00,0x40,0x90,0x30, _
0x64,0xCC,0x18,0x70,0xC0,0x10,0x18,0x0C,0x06,0x03,0xFF,0x63,0x36,0x1C,0x08,0x00, _
0x02,0x09,0x0C,0x26,0x33,0x18,0x0E,0x03)
	'*********************************************************************************
	'                     Generated by Nokia 5110 LCD Mapper
	'                           2/8/2021 11:37:05 AM
	'*********************************************************************************
	Private SmileFace () As Byte = Array As Byte ( _ 'smile face
0xFF,0xFF,0xFF,0x7F,0x3F,0x9F,0xCF,0xE7,0xF3,0xF3,0xFB,0xF9,0xF9,0xFD,0xFD,0xFD, _
0xFD,0xFD,0xFD,0xF9,0xF9,0xFB,0xF3,0xF3,0xE7,0xCF,0x9F,0x3F,0x7F,0xFF,0xFF,0xFF, _
0xFF,0x07,0xE0,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x0F,0x0F,0x9F,0xFF,0xFF,0xFF, _
0xFF,0xFF,0xFF,0x9F,0x0F,0x0F,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xE0,0x07,0xFF, _
0xFF,0xE0,0x07,0x3F,0xFF,0xFF,0xFF,0xE7,0xCF,0x9F,0xBF,0x3F,0x7F,0x7F,0x7F,0xFF, _
0xFF,0x7F,0x7F,0x7F,0x3F,0xBF,0x9F,0xCF,0xE7,0xFF,0xFF,0xFF,0x3F,0x07,0xE0,0xFF, _
0xFF,0xFF,0xFF,0xFE,0xFC,0xF9,0xF3,0xE7,0xCF,0xCF,0xDF,0x9F,0x9F,0xBE,0xBE,0xBE, _
0xBE,0xBE,0xBE,0x9F,0x9F,0xDF,0xCF,0xCF,0xE7,0xF3,0xF9,0xFC,0xFE,0xFF,0xFF,0xFF)

	'*********************************************************************************
	'                     Generated by Nokia 5110 LCD Mapper
	'                           2/8/2021 12:14:42 PM
	'*********************************************************************************
	Private Smile2 () As Byte = Array As Byte ( _ 'smile face 2
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF, _
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF, _
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF, _
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF, _
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF, _
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x7F,0x7F,0x1F,0x0F, _
0x07,0x07,0x67,0x7F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF, _
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF, _
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x3F,0x1F,0x1F,0x0F,0x07,0x07, _
0x03,0x03,0x03,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x03,0x03,0x03, _
0x07,0x0F,0x0F,0x1F,0x1F,0x3F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF, _
0xFF,0xFF,0xFF,0x7F,0x1F,0x0F,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xF0, _
0xF0,0xF0,0xF0,0xF0,0xE0,0xC0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0xF0,0xF0,0xF0,0xF0, _
0xF0,0xE0,0x80,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x0F,0x1F,0x7F,0xFF,0xFF,0xFF, _
0xFF,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x38,0x3E,0x1F,0x1F,0x0F, _
0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00, _
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x06,0x07,0x07,0x07,0x07,0x07,0x07,0x07, _
0x0F,0x0F,0x1F,0x3E,0x38,0x70,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF, _
0xFF,0xFF,0xC0,0x00,0x00,0x00,0x40,0xE0,0xF0,0xE0,0xE0,0xE0,0xE0,0xE0,0xC0,0xC0, _
0xC0,0xC0,0xC0,0xC0,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80, _
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xC0,0xC0,0xC0,0xC0,0xC0, _
0xC0,0xC0,0xC0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x00,0x00,0x00,0xE0,0xFF,0xFF, _
0xFF,0xFF,0xFF,0xFF,0xFC,0xF0,0xE0,0xC0,0x81,0x83,0x03,0x07,0x07,0x0F,0x0F,0x0F, _
0x1F,0x1F,0x1F,0x3F,0x3F,0x07,0x03,0x03,0x03,0x03,0x03,0x03,0x7F,0x7F,0x7F,0x7F, _
0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x3F,0x3F,0x3F,0x3F,0x3F,0x1F,0x1F, _
0x1F,0x0F,0x0F,0x0F,0x07,0x07,0x83,0x83,0xC1,0xE0,0xF8,0xFC,0xFF,0xFF,0xFF,0xFF, _
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFE,0xFC,0xFC,0xF8, _
0xF8,0xF8,0xF0,0xF0,0xF0,0xF0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0, _
0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xF0,0xF0,0xF0,0xF0,0xF8,0xF8, _
0xF8,0xFC,0xFC,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)

End Sub

Private Sub AppStart
	Delay(1000)
	Serial1.Initialize(115200)
	Log("AppStart")
	SSD.Begin(0x3C) 'no reset pin needed! just SCL and SDA
	SSD.ScrollOFF 'turn scroll off, if ESP reset while scrolling, OLED will continue scrolling, no reset pin available
	SSD.Contrast(255) 'so bright
	
	SSD.LoadImageMEM(0,0,128,64,Welcome,False)
	SSD.Update 'move display buffer to lcd
	Delay(demoScreenStill * 2)

	SSD.Clear
	For i = 0 To 3
		SSD.LoadImageMEM( i * 32,10,32,32,SmileFace,True) 'smile faces
	Next
	SSD.Update
	Delay(demoScreenStill)
		
	SSD.Clear
	SSD.LoadImageMEM(32,0,64,64,Smile2,True)
	SSD.Update
	Delay(demoScreenStill)
	
	SSD.Clear
	SSD.PutString(0,0,"Hello, Tiny 5x8",SSD.Font5x8,False,True) 'if centered, col will be ignored
	SSD.PutString(0,1,"Mid 8x8",SSD.Font8x8,False,False) 'page increamented by one previous 5x8 occupies 1 page
	SSD.PutString(0,2,"Taller 8x16",SSD.Font8x16,False,False)
	SSD.PutString(0,4,"Big16x16",SSD.Font16x16,False,False)'page increamented by two, previous 8x16 occupies 2 pages
	SSD.Update
	Delay (demoScreenStill)

	SSD.Clear
	SSD.PutString(0,0,"Nice 12x22",SSD.Font12x22,False,False)
	SSD.PutString(0,3,"LCD16x24",SSD.Font16x24,False,True)
	SSD.Update
	Delay (demoScreenStill)
	SSD.Clear
	
	SSD.PutString(0,0,"Center",SSD.Font12x22,False,True)
	SSD.PutString(0,3,"Inversed",SSD.Font12x22,True,True)
	SSD.Update
	Delay (demoScreenStill)
	SSD.Clear

	SSD.PutString(0,0,"Normal",SSD.Font12x22,False,True)
	SSD.PutString(0,3,"Display",SSD.Font12x22,False,True)
	SSD.Update
	Delay (demoScreenStill)
	SSD.Clear
	
	SSD.DisplayInverse(True)
	SSD.PutString(0,0,"Inversed",SSD.Font12x22,False,True)
	SSD.PutString(0,3,"Display",SSD.Font12x22,False,True)
	SSD.Update
	Delay (demoScreenStill)
	SSD.Clear
	SSD.DisplayInverse(False)
	
	SSD.PutString(0,0,"Left",SSD.Font12x22,False,True)
	SSD.PutString(0,3,"Horizontal",SSD.Font12x22,False,True)
	SSD.Update
	Delay (demoScreenStill)
	SSD.ScrollHorizontal(0,5,SSD.SSD1306_LEFT_HORIZONTAL_SCROLL)
	Delay (demoScreenStill)
	SSD.ScrollOFF
	SSD.Clear
	
	SSD.PutString(0,0,"Right",SSD.Font12x22,False,True)
	SSD.PutString(0,3,"Horizontal",SSD.Font12x22,False,True)
	SSD.Update
	Delay (demoScreenStill)
	SSD.ScrollHorizontal(0,5,SSD.SSD1306_RIGHT_HORIZONTAL_SCROLL)
	Delay (demoScreenStill)
	SSD.ScrollOFF
	SSD.Clear
	
	SSD.PutString(0,0,"Left",SSD.Font12x22,False,True)
	SSD.PutString(0,3,"Vertical",SSD.Font12x22,False,True)
	SSD.Update
	Delay (demoScreenStill)
	SSD.ScrollVertical(0,5,SSD.SSD1306_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL)
	Delay (demoScreenStill)
	SSD.ScrollOFF
	SSD.Clear
	
	SSD.PutString(0,0,"Right",SSD.Font12x22,False,True)
	SSD.PutString(0,3,"Vertical",SSD.Font12x22,False,True)
	SSD.Update
	Delay (demoScreenStill)
	SSD.ScrollVertical(0,5,SSD.SSD1306_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL)
	Delay (demoScreenStill)
	SSD.ScrollOFF
	SSD.Clear
	
	DoSomeGraphics
	MsgBoxes
	
	SSD.Clear
	SSD.PutString(0,0,"Horiontal Bars,",SSD.Font8x16,False,True)
	SSD.PutString(0,2,"Vertical Bars,",SSD.Font8x16,False,True)
	SSD.PutString(0,4,"Clock, And",SSD.Font8x16,False,True)
	SSD.PutString(0,6,"Animation",SSD.Font8x16,False,True)
	SSD.Update
	Delay (demoScreenStill*2)
	
	SSD.Clear
	myTimer.Initialize ("timer_tick",1000)
	rtc.Initialize("rtc_Alarm",True) 'will be enabled by rndTimer
	rndTimer.Initialize("rndTimer_tick",1000)
	rndTimer.Enabled = True
	
End Sub


private Sub timer_tick()
	rtc.ReadClock(DT) ' read clock and store in array
	Dim timeStr As String = rtc.Time24(DT) 'get 24r format from DT array
	SSD.PutString(0,0,timeStr,SSD.Font16x24,False,True)
	Dim sd As String = rtc.ShortDate(DT)
	HBAR.Draw(0,56,SSD.SSD1306_LCDWIDTH -1,SSD.SSD1306_LCDHEIGHT -1,59,DT(6)) 'set horizontal bar, at 0,56 127,63 and scale it to 59 seconds
	SSD.PutString(0,4,sd,SSD.Font12x22,False,False)'no need to update the lcd after this line, loadanimated will update it
	SSD.LoadAnimated(109,34,19,16,animBitmap,False,100)
End Sub


Private Sub rndTimer_tick()
	
	Dim rup As Byte 
	Dim rdwn As Byte
	If rndTicks < 11 Then 'first 10 steps
		rup = rndTicks * 10
		rdwn = 100 - rup
		HBAR.Draw(0,0,100,7,100,rup) 'scale to 100
		SSD.PutString(103,0,NumberFormat(rup,3,0),SSD.Font8x8,False,False)
		HBAR.Draw(0,15,100,22,100,rup)
		SSD.PutString(103,2,NumberFormat(rup,3,0),SSD.Font8x8,False,False)
		
		HBAR.Draw(0,31,100,38,100,rdwn)
		SSD.PutString(103,4,NumberFormat(rdwn,3,0),SSD.Font8x8,False,False)
		HBAR.Draw(0,47,100,55,100,rdwn)
		SSD.PutString(103,6,NumberFormat(rdwn,3,0),SSD.Font8x8,False,False)
		SSD.Update
	Else If rndTicks = 11 Then  'clear after 10 steps
		SSD.Clear
	Else if rndTicks > 11 And rndTicks < 23 Then 'another 10 steps
		rup = (rndTicks - 12) * 10
		rdwn = 100 - rup
		VBAR.Draw(0,0,15,53,100,rup)
			SSD.PutString(0,7,NumberFormat(rup,3,0),SSD.Font8x8,False,False)
		VBAR.Draw(31,0,47,53,100,rup)
			SSD.PutString(31,7,NumberFormat(rup,3,0),SSD.Font8x8,False,False)
			
		VBAR.Draw(63,0,79,53,100,rdwn)
			SSD.PutString(63,7,NumberFormat(rdwn,3,0),SSD.Font8x8,False,False)
		VBAR.Draw(95,0,111,53,100,rdwn)
			SSD.PutString(95,7,NumberFormat(rdwn,3,0),SSD.Font8x8,False,False)
		SSD.Update
	Else If rndTicks > 23 Then
		rndTimer.Enabled = False
		SSD.clear
		rtc.SetClock(DT,0,0)
		myTimer.Enabled = True
	End If
	rndTicks = rndTicks + 1 
End Sub

private Sub rtc_Alarm(index As Byte) 'not used

End Sub

Private Sub DoSomeGraphics()
	
RandomPixels
	Delay(demoScreenStill)
DrawHline
	Delay(demoScreenStill)
DrawVline
	Delay(demoScreenStill)
DrawLine
	Delay(demoScreenStill)
DrawTriangle
	Delay(demoScreenStill)
DrawRect
	Delay(demoScreenStill)
DrawRoundRect
	Delay(demoScreenStill)
DrawCircle

End Sub

private Sub RandomPixels()
SSD.Clear
SSD.PutString(0,3,"Set Pixel",SSD.Font12x22,False,True)
SSD.Update
Delay(demoScreenStill)
SSD.Clear

For x = 0 To 100
	RndSeed(128)
	Dim rX As Byte = Rnd(0,127)
	Dim rY As Byte = Rnd(0,63)
	SSD.SetPixel(rX,rY)
	Delay(10) 'slow it down to see it on screen
	SSD.Update
Next

End Sub

private Sub DrawHline()
	SSD.Clear
	SSD.PutString(0,3,"Hor. Line",SSD.Font12x22,False,True)
	SSD.Update
	Delay(demoScreenStill)
	SSD.Clear
	
	Dim X As Byte
	For y = 0 To 40 Step 2
		SSD.DrawHline(x,y,30)
		SSD.Update
		X = X + 1
	Next
	Delay(demoScreenStill)
	X = 0
	For y = 0 To 40 Step 2
		SSD.ClearHline(x,y,30)
		SSD.Update
		X = X + 1
	Next
End Sub

private Sub DrawVline()
	SSD.Clear
	SSD.PutString(0,3,"Ver. Line",SSD.Font12x22,False,True)
	SSD.Update
	Delay(demoScreenStill)
	SSD.Clear
	
	Dim yy As Byte
	For x = 0 To 40 Step 2
		SSD.DrawVline(x,yy,30)
		SSD.Update
		yy = yy + 1
	Next
	Delay(demoScreenStill)
	yy = 0
	For x = 0 To 40 Step 2
		SSD.ClearVline(x,yy,30)
		SSD.Update
		yy = yy + 1
	Next
End Sub

private Sub DrawLine()
	SSD.Clear
	SSD.PutString(0,3,"Line",SSD.Font12x22,False,True)
	SSD.Update
	Delay(demoScreenStill)
	SSD.Clear
	
	For y = 0 To 50 Step 2
		SSD.DrawLine(0,0,64,y)
		SSD.Update
	Next
	
	Delay(demoScreenStill)
	For y = 0 To 50 Step 2
		SSD.ClearLine(0,0,64,y)
		SSD.Update
	Next
End Sub

private Sub DrawTriangle()
	SSD.Clear
	SSD.Clear
	SSD.PutString(0,3,"Triangle",SSD.Font12x22,False,True)
	SSD.Update
	Delay(demoScreenStill)
	SSD.Clear
	For M = 0 To 63 
		SSD.DrawTriangle(63,7,63-m,47,63+m,47)
		SSD.Update
	Next
	Delay(demoScreenStill)
	For M = 0 To 63
		SSD.ClearTriangle(63,7,63-m,47,63+m,47)
		SSD.Update
	Next
End Sub

private Sub DrawRect()
	SSD.Clear
	SSD.PutString(0,3,"Rectangle",SSD.Font12x22,False,True)
	SSD.Update
	Delay(demoScreenStill)
	SSD.Clear
	
	Dim x2 As Byte = 127
	Dim y2 As Byte =63
	
	For xy  = 0 To 31 Step 2
		SSD.DrawRect (xy,xy,x2,y2)
		x2 = x2 - 2
		y2 = y2 -2
		SSD.Update
	Next
	Delay(demoScreenStill)
	
	x2 = 127
	y2 = 63
	For xy  = 0 To 31 Step 2
		SSD.ClearRect (xy,xy,x2,y2)
		x2 = x2 - 2
		y2 = y2 -2
		SSD.Update
	Next
End Sub

private Sub DrawRoundRect()
	SSD.Clear
	SSD.PutString(0,3,"Round Rect.",SSD.Font12x22,False,True)
	SSD.Update
	Delay(demoScreenStill)
	SSD.Clear
	
	Dim x2 As Byte = 127
	Dim y2 As Byte =63
	For xy  = 0 To 31  Step 2
		SSD.DrawroundRect (xy,xy,x2,y2)
		x2 = x2 - 2
		y2 = y2 -2
		SSD.Update
	Next
	Delay(demoScreenStill)
	
	x2 = 127
	y2 = 63
	For xy  = 0 To 31 Step 2
		SSD.ClearRoundRect (xy,xy,x2,y2)
		x2 = x2 - 2
		y2 = y2 -2
		SSD.Update
	Next
End Sub

private Sub DrawCircle()
SSD.Clear
SSD.PutString(0,3,"Circle",SSD.Font12x22,False,True)
SSD.Update
	Delay(demoScreenStill)
SSD.Clear
	For r = 0 To 31 Step 2
		SSD.DrawCircle(63,31,r)
		SSD.Update
	Next
	Delay(demoScreenStill)
	For r = 0 To 31 Step 2
		SSD.ClearCircle(63,31,r)
		SSD.Update
	Next
End Sub

private Sub MsgBoxes()
	SSD.Clear
	SSD.PutString(0,3,"Msg Box",SSD.Font12x22,False,True)
	SSD.Update
	Delay(demoScreenStill)
	SSD.Clear
	Dim t As String = "B4R Msg"
	Dim tout As Int = (demoScreenStill * 2)
	MsgBox.Show(MsgBox.MSGBOX_NON,t,"Just a Message","",True)
	Delay(tout)
	MsgBox.Show(MsgBox.MSGBOX_ERR,t,"System","Error!",True)
	Delay(tout)
	MsgBox.Show(MsgBox.MSGBOX_EXC,t,"Try Again","",True)
	Delay(tout)
	MsgBox.Show(MsgBox.MSGBOX_INF,t,"Done","OK",True)
	Delay(tout)
	MsgBox.Show(MsgBox.MSGBOX_QST,t,"Delete File","Yes - No",True)
	Delay(tout)
End Sub

