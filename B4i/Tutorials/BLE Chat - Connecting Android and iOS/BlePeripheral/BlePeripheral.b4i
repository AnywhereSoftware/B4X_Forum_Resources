Version=2.51
NumberOfModules=0
Build1=Default,b4i.example2
NumberOfFiles=1
File1=1.bil
NumberOfLibraries=3
Library1=icore
Library2=ible
Library3=ihud
@EndOfDesignText@
'Code module
#Region  Project Attributes 
	#ApplicationLabel: B4i Example
	#Version: 1.0.0 
	'Orientation possible values: Portrait, LandscapeLeft, LandscapeRight and PortraitUpsideDown
	#iPhoneOrientations: Portrait, LandscapeLeft, LandscapeRight
	#iPadOrientations: Portrait, LandscapeLeft, LandscapeRight, PortraitUpsideDown
	#Target: iPhone, iPad
	#MinVersion: 7
#End Region

Sub Process_Globals
	Public App As Application
	Public NavControl As NavigationController
	Private Page1 As Page
	Private peripheral As PeripheralManager
	Private hd As HUD
	Private connectedCentrals As Map
	Private txtLogs As TextView
	Private txtMessage As TextField
	Private btnSend As Button
End Sub

Private Sub Application_Start (Nav As NavigationController)
	NavControl = Nav
	Page1.Initialize("Page1")
	NavControl.ShowPage(Page1)
	peripheral.Initialize("peripheral")
	Page1.RootPanel.LoadLayout("1")
	connectedCentrals.Initialize
	SetState(False)
End Sub

Private Sub Page1_KeyboardStateChanged (Height As Float)
	txtLogs.SetLayoutAnimated(0, 1, txtLogs.Left, txtLogs.Top, txtLogs.Width, _
		txtLogs.CalcRelativeKeyboardHeight(Height) - 2dip)
End Sub

Sub SetState(connected As Boolean)
	btnSend.Enabled = connected
	txtMessage.Enabled = connected
	If connected Then
		hd.ProgressDialogHide
	Else
		hd.ProgressDialogShow("Waiting for connection...")
	End If
End Sub

Sub Peripheral_StateChanged (State As Int)
	If State <> peripheral.STATE_POWERED_ON Then
		hd.ProgressDialogHide
		hd.ToastMessageShow("Bluetooth is not enabled", True)
	Else
		peripheral.Start("B4iPeripheral")
		SetState(False)
	End If
End Sub

Sub Peripheral_Subscribe (CentralId As String)
	connectedCentrals.Put(CentralId, "")
	Log("Connected: " & connectedCentrals)
	SetState(True)
End Sub

Sub Peripheral_Unsubscribe(CentralId As String)
	connectedCentrals.Remove(CentralId)
	Dim connected As Boolean = connectedCentrals.Size > 0
	SetState(connected)
End Sub


Sub Peripheral_NewData (Data() As Byte)
	peripheral.Write(Null, Data) 'send the message to all subscribed centrals (this can be removed for one to one connections).
	txtLogs.Text = BytesToString(Data, 0, Data.Length, "utf8") & CRLF & txtLogs.Text
End Sub

Sub txtMessage_EnterPressed
	btnSend_Click
End Sub

Sub btnSend_Click
	If txtMessage.Text.Length = 0 Then Return
	Dim s As String = "Peripheral: " & txtMessage.Text
	Dim msg() As Byte = s.GetBytes("UTF8")
	Peripheral_NewData(msg)
	peripheral.Write(Null, msg)	
	txtMessage.RequestFocus
	txtMessage.SelectAll
End Sub