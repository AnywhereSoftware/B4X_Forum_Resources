Build1=Default,com.stoltex.keyboardtest
File1=frm_main.bil
FileGroup1=Default Group
Group=Default Group
Library1=icore
Library2=b4xpages
Module1=|relative|..\B4XMainPage
NumberOfFiles=1
NumberOfLibraries=2
NumberOfModules=1
Version=8.45
@EndOfDesignText@
'Code module
#Region  Project Attributes 
	#ApplicationLabel: Keyboard Test
	#Version: 1.0.0 
	'Orientation possible values: Portrait, LandscapeLeft, LandscapeRight and PortraitUpsideDown
	#iPhoneOrientations: Portrait, LandscapeLeft, LandscapeRight
	#iPadOrientations: Portrait, LandscapeLeft, LandscapeRight, PortraitUpsideDown
	#Target: iPhone, iPad
	#ATSEnabled: True
	#MinVersion: 11
	#ProvisionFile: StolteX.mobileprovision
#End Region

Sub Process_Globals
	Public App As Application
	Public NavControl As NavigationController

End Sub

Private Sub Application_Start (Nav As NavigationController)
	NavControl = Nav
	Dim PagesManager As B4XPagesManager
	PagesManager.Initialize(NavControl)
End Sub

'Template version: B4i-1.0
#Region Delegates
Private Sub Application_Background
	B4XPages.Delegate.Activity_Pause
End Sub

Private Sub Application_Foreground
	B4XPages.Delegate.Activity_Resume
End Sub
#End Region


#if OBJC
@end
@interface B4IViewController (Keyboard2)
@end
@implementation B4IViewController (Keyboard2)
- (void) addWillHide {
     [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardWillHideNotification object:nil];
}
- (void)keyboardWillShow:(NSNotification *)notification {
    CGSize keyboardSize = [[[notification userInfo] objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size;
    [self storeAnimationInfo:notification];
    [B4IObjectWrapper raiseEvent:self :@"_keyboardstatechanged:" :@[@(keyboardSize.height)]];
}
- (void)storeAnimationInfo:(NSNotification*)notification {
    NSDictionary *userInfo = [notification userInfo];
    double duration = ((NSNumber*)[userInfo objectForKey:UIKeyboardAnimationDurationUserInfoKey]).doubleValue;
    NSInteger curve = ((NSNumber*)[userInfo objectForKey:UIKeyboardAnimationCurveUserInfoKey]).integerValue;
    
    NSMutableDictionary *map = [B4IObjectWrapper getMap:self];
    map[@"animation_duration"] = @(duration);
    map[@"animation_curve"] = @(curve);
}

- (void)keyboardDidHide:(NSNotification *)notification {
    [self storeAnimationInfo:notification];
    [B4IObjectWrapper raiseEvent:self :@"_keyboardstatechanged:" :@[@(0)]];
}
#end if

#if OBJC
@end
@interface B4IViewController (KeyboardAnimator)
@end
@implementation B4IViewController (KeyboardAnimator)

- (void)animateView:(UIView *)view
       toYPosition:(CGFloat)y
          duration:(double)duration
             curve:(NSInteger)curve {
    
    UIViewAnimationCurve animCurve = (UIViewAnimationCurve)curve;

    UIViewPropertyAnimator *animator = [[UIViewPropertyAnimator alloc]
        initWithDuration:duration
        curve:animCurve
        animations:^{
            CGRect frame = view.frame;
            frame.origin.y = y;
            view.frame = frame;
            [self.view layoutIfNeeded];
    }];
    
    [animator startAnimation];
}

#end if