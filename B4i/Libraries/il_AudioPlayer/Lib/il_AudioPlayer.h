#import "iCore.h"
#import "iStringUtils.h"
#import "iUI8.h"
@class _song;
@class _fileatt;
@interface b4i_il_audioplayer : B4IClass
{
@public B4ILabelWrapper* __aptracklbl;
@public B4IPanelWrapper* __apmainpnl;
@public B4IPanelWrapper* __apcontrolpnl;
@public NSString* __senderevent;
@public B4IPanelWrapper* __sendercallpanel;
@public NSObject* __sendercallobject;
@public B4IPanelWrapper* __toadpanel;
@public float __vpw;
@public float __vph;
@public B4ISliderWrapper* __apvolumeslider;
@public B4IPanelWrapper* __apvolumesliderpnl;
@public B4ILabelWrapper* __apcontrolsloop;
@public B4ILabelWrapper* __apcontrolsrandom;
@public B4ILabelWrapper* __apcontrolsback;
@public B4ILabelWrapper* __apcontrolsfor;
@public B4ILabelWrapper* __apcontrolsvideo;
@public B4ILabelWrapper* __aptracknomber;
@public B4ILabelWrapper* __apexit;
@public B4ILabelWrapper* __apsonglist;
@public B4ILabelWrapper* __applaybtn;
@public B4ILabelWrapper* __aplikebtn;
@public B4IPanelWrapper* __apcontrolspnl;
@public B4ILabelWrapper* __aptracklb1;
@public B4ILabelWrapper* __aptracklb2;
@public B4ILabelWrapper* __apnextbtn;
@public B4ILabelWrapper* __apbackbtn;
@public B4IImageViewWrapper* __aptrackimage;
@public B4IPanelWrapper* __aptrackimagepnl;
@public BOOL __firsttime;
@public B4IMediaPlayer* __mpplayer;
@public int __apthememode;
@public B4IList* __songlist;
@public BOOL __aplooing;
@public BOOL __aprandom;
@public B4ITableView* __aptableview;
@public int __currenttrack;
@public B4IApplicationWrapper* __ap_app;
@public B4ISliderWrapper* __apposslider;
@public B4ITimer* __trackslidertimer;
@public BOOL __trackscrollingmanual;
@public B4IPanelWrapper* __tracksliderpanel;
@public int __skipseconds;
@public B4INativeObject* __nativeme;
@public BOOL __showplayercontrols;
@public B4IPanelWrapper* __applaylisttvpnl;
@public B4IPanelWrapper* __applaylisttv;
@public B4ISegmentedControlWrapper* __applaylistseg;
@public B4ITableView* __songstv;
@public B4ITableView* __playlisttv;
@public B4ITableView* __filedialogtv;
@public B4IPanelWrapper* __apfiledialog;
@public B4IPanelWrapper* __apfiledialogtvpnl;
@public NSString* __filedialogpath;
@public NSString* __filedialogstartingpathnew;
@public NSString* __filedialogstartingpath;
@public NSString* __filedialogplaylistpath;
@public NSString* __filedialogstartingpathlongclick;
@public BOOL __iamanimating;
@public B4IMap* __toaddselectedsongs;
@public int __ticks;
@public int __inputdialogsenderid;
@public BOOL __playinbackgroundmusic;

}- (NSString*)  _addnewsongtolistnow:(NSString*) _path;
- (NSString*)  _ap_changethememode:(int) _mode;
- (_song*)  _ap_createsong:(int) _trackid :(NSString*) _dir :(NSString*) _filename :(NSString*) _title :(BOOL) _favorite :(B4IBitmap*) _trackimghd :(B4IBitmap*) _trackimgsd :(NSString*) _videourl;
- (NSString*)  _ap_pause;
- (NSString*)  _ap_playlistpath:(NSString*) _path;
- (NSString*)  _ap_playnexttrack;
- (NSString*)  _ap_playprevioustrack;
- (NSString*)  _ap_playtrack:(int) _pos;
- (NSString*)  _ap_recreateplaylist;
- (NSString*)  _ap_recreatetracklist;
- (B4IPanelWrapper*)  _ap_returnbasepanel;
- (int)  _ap_returncurrenttrackindex;
- (B4IPanelWrapper*)  _ap_returnspecialbuttonspanel;
- (B4ILabelWrapper*)  _ap_returntitlelabel;
- (NSString*)  _ap_setloopplay:(BOOL) _value;
- (NSString*)  _ap_setrandomplay:(BOOL) _value;
- (NSString*)  _ap_setskipseconds:(int) _value;
- (NSString*)  _ap_show;
- (NSString*)  _ap_showspecialbuttons:(BOOL) _value;
- (B4IList*)  _ap_songlist;
- (NSString*)  _ap_songpath:(NSString*) _path;
- (NSString*)  _ap_songpathlongclick:(NSString*) _path;
- (NSString*)  _apbackbtn_click;
- (NSString*)  _apcontrolsback_click;
- (NSString*)  _apcontrolsfor_click;
- (NSString*)  _apcontrolsloop_click;
- (NSString*)  _apcontrolsrandom_click;
- (NSString*)  _apcontrolsvideo_click;
- (NSString*)  _apexit_click;
- (NSString*)  _apfiledialog_click;
- (NSString*)  _apfiledialogcancel_click;
- (NSString*)  _apfiledialokadd_click;
- (NSString*)  _aplikebtn_click;
- (NSString*)  _apmainpnl_click;
- (NSString*)  _apnextbtn_click;
- (NSString*)  _applaybtn_click;
- (NSString*)  _applaylistseg_indexchanged:(int) _index;
- (NSString*)  _applaylisttvpnl_click;
- (void)  _apsonglist_click;
- (NSString*)  _aptrackimagepnl_click;
- (NSString*)  _apvolumeslider_valuechanged:(float) _value;
- (NSString*)  _audiovolume_set:(float) _volumevalue;
- (NSString*)  _class_globals;
@property (nonatomic)B4ILabelWrapper* _aptracklbl;
@property (nonatomic)B4IPanelWrapper* _apmainpnl;
@property (nonatomic)B4IPanelWrapper* _apcontrolpnl;
@property (nonatomic)NSString* _senderevent;
@property (nonatomic)B4IPanelWrapper* _sendercallpanel;
@property (nonatomic)NSObject* _sendercallobject;
@property (nonatomic)B4IPanelWrapper* _toadpanel;
@property (nonatomic)float _vpw;
@property (nonatomic)float _vph;
@property (nonatomic)B4ISliderWrapper* _apvolumeslider;
@property (nonatomic)B4IPanelWrapper* _apvolumesliderpnl;
@property (nonatomic)B4ILabelWrapper* _apcontrolsloop;
@property (nonatomic)B4ILabelWrapper* _apcontrolsrandom;
@property (nonatomic)B4ILabelWrapper* _apcontrolsback;
@property (nonatomic)B4ILabelWrapper* _apcontrolsfor;
@property (nonatomic)B4ILabelWrapper* _apcontrolsvideo;
@property (nonatomic)B4ILabelWrapper* _aptracknomber;
@property (nonatomic)B4ILabelWrapper* _apexit;
@property (nonatomic)B4ILabelWrapper* _apsonglist;
@property (nonatomic)B4ILabelWrapper* _applaybtn;
@property (nonatomic)B4ILabelWrapper* _aplikebtn;
@property (nonatomic)B4IPanelWrapper* _apcontrolspnl;
@property (nonatomic)B4ILabelWrapper* _aptracklb1;
@property (nonatomic)B4ILabelWrapper* _aptracklb2;
@property (nonatomic)B4ILabelWrapper* _apnextbtn;
@property (nonatomic)B4ILabelWrapper* _apbackbtn;
@property (nonatomic)B4IImageViewWrapper* _aptrackimage;
@property (nonatomic)B4IPanelWrapper* _aptrackimagepnl;
@property (nonatomic)BOOL _firsttime;
@property (nonatomic)B4IMediaPlayer* _mpplayer;
@property (nonatomic)int _apthememode;
@property (nonatomic)B4IList* _songlist;
@property (nonatomic)BOOL _aplooing;
@property (nonatomic)BOOL _aprandom;
@property (nonatomic)B4ITableView* _aptableview;
@property (nonatomic)int _currenttrack;
@property (nonatomic)B4IApplicationWrapper* _ap_app;
@property (nonatomic)B4ISliderWrapper* _apposslider;
@property (nonatomic)B4ITimer* _trackslidertimer;
@property (nonatomic)BOOL _trackscrollingmanual;
@property (nonatomic)B4IPanelWrapper* _tracksliderpanel;
@property (nonatomic)int _skipseconds;
@property (nonatomic)B4INativeObject* _nativeme;
@property (nonatomic)BOOL _showplayercontrols;
@property (nonatomic)B4IPanelWrapper* _applaylisttvpnl;
@property (nonatomic)B4IPanelWrapper* _applaylisttv;
@property (nonatomic)B4ISegmentedControlWrapper* _applaylistseg;
@property (nonatomic)B4ITableView* _songstv;
@property (nonatomic)B4ITableView* _playlisttv;
@property (nonatomic)B4ITableView* _filedialogtv;
@property (nonatomic)B4IPanelWrapper* _apfiledialog;
@property (nonatomic)B4IPanelWrapper* _apfiledialogtvpnl;
@property (nonatomic)NSString* _filedialogpath;
@property (nonatomic)NSString* _filedialogstartingpathnew;
@property (nonatomic)NSString* _filedialogstartingpath;
@property (nonatomic)NSString* _filedialogplaylistpath;
@property (nonatomic)NSString* _filedialogstartingpathlongclick;
@property (nonatomic)BOOL _iamanimating;
@property (nonatomic)B4IMap* _toaddselectedsongs;
@property (nonatomic)int _ticks;
@property (nonatomic)int _inputdialogsenderid;
@property (nonatomic)BOOL _playinbackgroundmusic;
- (NSString*)  _controlevent:(NSString*) _command;
- (B4IPanelWrapper*)  _createitem:(B4ITableCell*) _tc :(NSString*) _tveventname :(float) _weidth :(float) _height;
- (NSString*)  _deletesongfromlistandreorderlist:(int) _pos;
- (void)  _filedialogtvclick_click;
- (NSString*)  _filefiledialogtv:(NSString*) _path :(NSString*) _startingpath;
- (NSString*)  _getfiletype:(BOOL) _isdir :(NSString*) _filename;
- (float)  _getoutputvolume;
- (NSString*)  _gettime:(int) _ms;
- (NSString*)  _initialize:(B4I*) _ba :(B4IApplicationWrapper*) _myapp :(NSObject*) _callback :(B4IPanelWrapper*) _callpanel :(NSString*) _event :(int) _thememode :(BOOL) _backgroundplay :(BOOL) _showscreencontrols;
- (NSString*)  _inputdialog_result:(NSString*) _text;
- (NSString*)  _inputdialogx:(int) _senderid :(NSString*) _input :(NSString*) _title :(NSString*) _message :(NSString*) _positive :(NSString*) _cancel :(int) _inputtype;
- (float)  _mapping:(float) _var :(float) _min_real :(float) _max_real :(float) _min_scaled :(float) _max_scaled;
- (NSString*)  _mp_complete;
- (NSString*)  _playnexttrack;
- (NSString*)  _playprevioustrack;
- (NSString*)  _reloadplaylisttableview;
- (NSString*)  _reloadsonglisttableview;
- (NSString*)  _reordersonglist;
- (NSString*)  _setplayinginfo:(B4IMap*) _info;
- (NSString*)  _shufflelist:(B4IList*) _pl;
- (NSString*)  _sufflelistrandom;
- (NSString*)  _toadpanel_click;
- (void)  _tracksliderpanel_touch:(int) _action :(float) _x :(float) _y;
- (NSString*)  _trackslidertimer_tick;
- (void)  _tvplaylistclicked_click;
- (void)  _msg_click:(NSString*) _buttontext;
- (void)  _tvplaylistclicked_longclick;
- (void)  _tvtrackclicked_click;
- (void)  _tvtrackclicked_longclick;
- (NSString*)  _updatelikebutton:(BOOL) _value;
- (NSString*)  _viewtransition:(B4IViewWrapper*) _view :(int) _transtype :(int) _direction;
@end
@interface _song:NSObject
{
@public BOOL _IsInitialized;
@public int _trackId;
@public NSString* _dir;
@public NSString* _filename;
@public NSString* _title;
@public BOOL _favorite;
@public B4IBitmap* _trackimgHD;
@public B4IBitmap* _trackimgSD;
@public NSString* _videoUrl;

}
@property (nonatomic)BOOL IsInitialized;
@property (nonatomic)int trackId;
@property (nonatomic)NSString* dir;
@property (nonatomic)NSString* filename;
@property (nonatomic)NSString* title;
@property (nonatomic)BOOL favorite;
@property (nonatomic)B4IBitmap* trackimgHD;
@property (nonatomic)B4IBitmap* trackimgSD;
@property (nonatomic)NSString* videoUrl;
-(void)Initialize;
@end
@interface _fileatt:NSObject
{
@public BOOL _IsInitialized;
@public NSString* _path;
@public NSString* _filename;
@public BOOL _isdir;
@public BOOL _isselected;

}
@property (nonatomic)BOOL IsInitialized;
@property (nonatomic)NSString* path;
@property (nonatomic)NSString* filename;
@property (nonatomic)BOOL isdir;
@property (nonatomic)BOOL isselected;
-(void)Initialize;
@end

