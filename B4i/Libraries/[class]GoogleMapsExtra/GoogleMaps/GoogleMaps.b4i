Build1=Default,anywheresoftware.b4i.googlemaps
File1=1.bil
File2=style.json
File3=up76.png
File4=up76_2.png
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
Group=Default Group
Library1=icore
Library2=igooglemaps
Library3=ixui
Module1=|absolute|C:\Users\H\Documents\B4J\GoogleMaps\MapScale
Module2=GoogleMapsExtra
NumberOfFiles=4
NumberOfLibraries=3
NumberOfModules=2
Version=5
@EndOfDesignText@
'Code module
#Region  Project Attributes 
	#ApplicationLabel: B4i Example
	#Version: 1.0.0 
	'Orientation possible values: Portrait, LandscapeLeft, LandscapeRight and PortraitUpsideDown
	#iPhoneOrientations: Portrait, LandscapeLeft, LandscapeRight
	#iPadOrientations: Portrait, LandscapeLeft, LandscapeRight, PortraitUpsideDown
	#PlistExtra:<key>NSLocationWhenInUseUsageDescription</key><string>Used to display the current navigation data.</string>
	#PlistExtra:<key>NSLocationUsageDescription</key><string>Used to display the current navigation data.</string>
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'Public variables can be accessed from all modules.
	Public App As Application
	Public NavControl As NavigationController
	Private Page1 As Page
	Private gmap As GoogleMap
	Private ApiKey As String = "xxxx"
	Dim gextra As GoogleMapsExtra
	Dim pl As Polyline
	Private MapScale1 As MapScale
	Private Panel1 As Panel
	Private CameraChangedIndex As Int
End Sub

Private Sub Application_Start (Nav As NavigationController)
	NavControl = Nav
	Page1.Initialize("Page1")
	Page1.RootPanel.LoadLayout("1")
	NavControl.ShowPage(Page1)
	AddMap
	Dim no As NativeObject
	Log("Version: " & no.Initialize("GMSServices").RunMethod("SDKVersion", Null).AsString)
End Sub

Private Sub AddMap
	gmap.Initialize("gmap", ApiKey)
	Panel1.AddView(gmap, 0, 0, 100%X, 100%y)
	'gmap.MapType = gmap.MAP_TYPE_TERRAIN
	gmap.GetUiSettings.CompassEnabled = True
	gmap.GetUiSettings.MyLocationButtonEnabled = True
	gmap.MyLocationEnabled = True
	
	'add three markers
	Dim m As Marker = gmap.AddMarker(40, 30, "test")
	m.Snippet = "Marker 1"
	m.Opacity = 0.5
	m = gmap.AddMarker2(42, 30, "Marker 2", Colors.Green)
'	gmap.AddMarker3(30, 30, "marker3", LoadBitmap(File.DirAssets, "up76.png"))
	gmap.AddMarker3(30, 30, "marker3", CreateBitmap("L1"))
	gextra.Initialize(gmap)
	gextra.SetGroundAnchor(m, 0.5, 0.5)  
	'gextra.MapStyle(File.ReadString(File.DirAssets, "style.json"))
	Dim no As NativeObject = gmap
	no.SetField("selectedMarker", m)
	m.Draggable = True
'	
	
	'gmap.AddMarker3(20, 20, "ddd", LoadBitmap(File.DirAssets, "up76.png"))
'	'change the camera position
	Dim c As CameraPosition
	c.Initialize2(32, 35, 2, 315, 45)
	gmap.AnimateCamera(c)
'	
'	
	gextra.SetMarkerRotation(m, 45)
	Dim ne, sw As LatLng
	ne.Initialize(20, 20)
	sw.Initialize(00, 00)
	Dim bounds As Object = gextra.CreateBounds(ne, sw)
	gextra.AddGroundOverlay(bounds, LoadBitmap(File.DirAssets, "up76_2.png"))
	gextra.SetSelectedMarker(m)
''	'add a polyline
	
	pl = gmap.AddPolyline
	Dim l1, l2, l3, l4 As LatLng
	l1.Initialize(10, 10)
	l2.Initialize(10, 20)
	l3.Initialize(20, 20)
	l4.Initialize(20, 10)
	'pl.Points = Array(l1, l2, l3, l4, l1)
	'gextra.ZoomToPoints(pl.Points)
	pl.Width = 5
	pl.Color = Colors.Red
	gextra.AddPolygon(Array(l1, l2, l3, l4, l1), 0x800000FF, Colors.Gray)
	
End Sub

Sub gmap_LongClick (Point As LatLng)
	Log(Point)
End Sub

Sub CreateBitmap(text As String) As B4XBitmap
	Dim xui As XUI
	Dim p As B4XView = xui.CreatePanel("")
	p.SetLayoutAnimated(0, 0, 0, 32dip, 20dip)
	Dim c As B4XCanvas
	c.Initialize(p)
	c.DrawRect(c.TargetRect, xui.Color_White, True, 0)
	c.DrawText(text, c.TargetRect.CenterX, c.TargetRect.CenterY + 9dip, xui.CreateDefaultBoldFont(16), xui.Color_Black, "CENTER")
	c.Invalidate
	Return c.CreateBitmap
End Sub

Sub gmap_InfoWindowClick (SelectedMarker As Marker)
	Log("InfoWindow clicked: " & SelectedMarker)
	
End Sub

'Return Null for the default marker layout
Sub gmap_MarkerInfoWindow (OMarker As Object) As Object
	Dim SelectedMarker As Marker = OMarker
	Dim p As Panel
	p.Initialize("")
	p.Color = Colors.Red
	p.SetLayoutAnimated(0, 1, 0, 0, 200, 200)
	Dim lbl As Label
	lbl.Initialize("")
	lbl.Text = SelectedMarker.Title
	p.AddView(lbl, 10, 10, 200, 200)
	Return p
End Sub

Sub gmap_Click (Point As LatLng)
	Dim bounds As Object = gextra.GetVisibleBounds
	Dim ne_sw() As LatLng = gextra.GetBoundsNE_SW(bounds)
	Log(ne_sw(0))
	Log(ne_sw(1))
End Sub

Sub gmap_MarkerDragged (SelectedMarker As Marker)
	Log(SelectedMarker.Position)
End Sub


Private Sub Page1_Resize(Width As Int, Height As Int)
	If gmap.IsInitialized Then gmap.SetLayoutAnimated(0, 1, 0, 0, Width, Height)
End Sub

Sub gmap_CameraChange (Position As CameraPosition)
	MapScale1.Update(Position.Zoom, Position.Target.Latitude)
	CameraChangedIndex = CameraChangedIndex + 1
	Dim MyIndex As Int = CameraChangedIndex
	Sleep(200)
	If MyIndex = CameraChangedIndex Then
		Log("Finished moving for now!")
	End If
End Sub



Sub gmap_MarkerClick (SelectedMarker As Marker) As Boolean 'Return True to consume the click
	Dim ngm As NativeObject = gmap
	Dim infoWindowVisible As Boolean = True
	If ngm.GetField("selectedMarker").IsInitialized Then
		Dim current As Marker = ngm.GetField("selectedMarker")
		If current.Title = SelectedMarker.Title Then infoWindowVisible = False
	End If
	If infoWindowVisible Then
		Log("Snippet is shown")
	Else
		Log("Snippet is hidden")
	End If
	Return False
End Sub

