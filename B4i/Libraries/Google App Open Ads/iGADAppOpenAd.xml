<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <b4x_version>6.80</b4x_version>
  <dependsOn>icore</dependsOn>
  <dependsOn>avfoundation.framework</dependsOn>
  <dependsOn>googleappmeasurement.framework.3</dependsOn>
  <dependsOn>googlemobileads.framework.3</dependsOn>
  <dependsOn>googleutilities.framework.3</dependsOn>
  <dependsOn>nanopb.framework.3</dependsOn>
  <dependsOn>promisesobjc.framework.3</dependsOn>
  <dependsOn>usermessagingplatform.framework.3</dependsOn>
  <class>
    <name>b4i_igadappopenad</name>
    <shortname>iGADAppOpenAd</shortname>
    <comment>Google AppOpenAd.
</comment>
    <event>AppOpenAd_Event(event as String)</event>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>BOOL</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize::</name>
      <comment>Initializes the object on Application_Start.
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>ba</name>
        <type>B4I*</type>
      </parameter>
      <parameter>
        <name>callback</name>
        <type>NSObject*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="RequestAppOpenAd">_requestappopenad:</name>
      <comment>Request an ad for later use.
Like you can call this after user dismiss the first ad.
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>adID</name>
        <type>NSString*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetTestDevices">_settestdevices:</name>
      <comment>&lt;b&gt;NOT NEEDED FOR SIMULATORS&lt;/b&gt;
If you are testing the ad integrtion then call this after initializing.
&lt;b&gt;ID that is displayed in the logs&lt;/b&gt;
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>ID</name>
        <type>NSString*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TryToPresentAppOpenAd">_trytopresentappopenad:</name>
      <comment>Call this method on Application_Active event.
If there is no ad loaded then it will first load the ad then present the ad.
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>adID</name>
        <type>NSString*</type>
      </parameter>
    </method>
  </class>
  <version>1</version>
  <author>Biswajit Sarkar</author>
</root>