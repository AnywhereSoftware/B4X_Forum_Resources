Build1=Default,b4i.example.test
Group=Default Group
Library1=icore
Library2=iamir_chartview
NumberOfFiles=0
NumberOfLibraries=2
NumberOfModules=0
Version=6.5
@EndOfDesignText@

'Code module
#Region  Project Attributes 
	#ApplicationLabel: B4i Example
	#Version: 1.0.0 
	'Orientation possible values: Portrait, LandscapeLeft, LandscapeRight and PortraitUpsideDown
	#iPhoneOrientations: Portrait, LandscapeLeft, LandscapeRight
	#iPadOrientations: Portrait, LandscapeLeft, LandscapeRight, PortraitUpsideDown
	#Target: iPhone, iPad
	#ATSEnabled: True
	#MinVersion: 8
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'Public variables can be accessed from all modules.
	Public App As Application
	Public NavControl As NavigationController
	Private Page1 As Page
	
	Dim no As NativeObject = Me
	Dim ChartView As Amir_ChartView
End Sub

Private Sub Application_Start (Nav As NavigationController)
	'SetDebugAutoFlushLogs(True) 'Uncomment if program crashes before all logs are printed.
	NavControl = Nav
	Page1.Initialize("Page1")
	Page1.Title = "iAmir_ChartView"
	Page1.RootPanel.Color = Colors.Black
	NavControl.ShowPage(Page1)
	
	Dim b1, b2 As BarButton
	b1.InitializeText("Rnd1", "Rnd1")
	b2.InitializeText("Rnd2", "Rnd2")
	Page1.TopRightButtons = Array(b1, b2)
	
	Dim b3 As BarButton
	b3.InitializeText("Style", "Style")
	Page1.TopLeftButtons = Array(b3)

	ChartView.Initialize()
	Page1.RootPanel.AddView(ChartView,4dip,4dip,100%x-8dip,80%y-8dip)

	LoadDef
	Dim xEl,yEl As List
	xEl.Initialize
	yEl.Initialize
	For i = 10 To 100 Step 5
		xEl.Add(i)
		yEl.Add(Rnd(100,250))
	Next
	ChartView.setXElements(xEl)
	ChartView.setYElements(yEl)
	
	ChartView.DrawChart
End Sub

Private Sub Page1_BarButtonClick (Tag As String)
	Select Tag
		Case "Style"
			LoadRandom
		Case "Rnd1"
			RandomElements(True)
		Case "Rnd2"
			RandomElements(False)
	End Select
	ChartView.DrawChart
End Sub

Private Sub Page1_Resize(Width As Int, Height As Int)
	
End Sub

Private Sub Application_Background
	
End Sub


Public Sub LoadDef
	ChartView.setChartTitle("iAmir_ChartView")
	ChartView.setChartTitleColor(no.ColorToUIColor(Colors.RGB(192,255,255)))
	ChartView.setChartGradient(False)
	ChartView.setChartTransparentBackground(True)
	ChartView.setChartLineColor(no.ColorToUIColor(Colors.RGB(192,255,255)))
	ChartView.setChartAxisColor(no.ColorToUIColor(Colors.RGB(192,255,255)))
	ChartView.setUnderLineChartGradientTopColor(no.ColorToUIColor(Colors.RGB(26,38,36)))
	ChartView.setUnderLineChartGradientBottomColor(no.ColorToUIColor(Colors.RGB(144,220,218)))
	ChartView.setChartWithRoundedCorners(True)
	ChartView.setChartLineWithCircles(True)
	ChartView.setChartGradientUnderline(True)
End Sub

Public Sub LoadRandom
	Page1.RootPanel.Color = Colors.White
	
	Dim Dark As Boolean = (Rnd(1,3) Mod 2 = 0)
	ChartView.setChartLineColor(RandomColor(Not(Dark)))
	ChartView.setChartLineWidth(1+Random(9))
	ChartView.setChartTitle("Chart Title")
	ChartView.setChartSubTitle("Chart subtitle")
	ChartView.setChartGradient((Rnd(1,3) Mod 2 = 0))
	ChartView.setChartWithRoundedCorners((Rnd(1,3) Mod 2 = 0))
	ChartView.setshowSubtitle((Rnd(1,3) Mod 2 = 0))
	ChartView.setchartGradientUnderline((Rnd(1,3) Mod 2 = 0))
	ChartView.setisValueChartWithRealXAxisDistribution((Rnd(1,3) Mod 2 = 0))
	ChartView.setunderLineChartGradientBottomColorIsTransparent((Rnd(1,3) Mod 2 = 0))
	ChartView.sethorizontalValuesOnXAxis((Rnd(1,3) Mod 2 = 0))
	ChartView.setdrawHorizontalLinesForYTicks((Rnd(1,3) Mod 2 = 0))
	If Dark Then
		ChartView.setchartTransparentBackground(False)
	Else
		ChartView.setchartTransparentBackground(Random(9)=0)
	End If
	ChartView.setchartTitleColor(RandomColor(Not(Dark)))
	ChartView.setchartSubtitleColor(RandomColor(Not(Dark)))
	ChartView.setchartAxisColor(RandomColor(Not(Dark)))
	ChartView.setbackgroundGradientTopColor(RandomColor(Dark))
	ChartView.setbackgroundGradientBottomColor(RandomColor(Dark))
	ChartView.setunderLineChartGradientTopColor(RandomColor(Dark))
	ChartView.setunderLineChartGradientBottomColor(RandomColor(Dark))
	ChartView.setchartLineWithCircles(Random(5)==0)
	ChartView.setFontSizeForTitle(18+(Random(0) Mod 8))
	ChartView.setfontSizeForSubTitle(12+(Random(0) Mod 6))
	ChartView.setfontSizeForAxis(8+(Random(0) Mod 4))
End Sub

Public Sub RandomColor (Dark As Boolean) As Object
	If Dark Then
		Return no.RunMethod("randomDarkColor",Null)
	Else
		Return no.RunMethod("randomLightColor",Null)
	End If
#if Objc
-(UIColor*)randomDarkColor
{
    return [UIColor colorWithRed:(arc4random_uniform(127))/255.0 green:(arc4random_uniform(127))/255.0 blue:(arc4random_uniform(127))/255.0 alpha:1.0];;
}

-(UIColor*)randomLightColor
{
    return [UIColor colorWithRed:(128.0+arc4random_uniform(127))/255.0 green:(128.0+arc4random_uniform(127))/255.0 blue:(128.0+arc4random_uniform(127))/255.0 alpha:1.0];
}
#End If
End Sub

Public Sub Random(v As Int) As Int
	Return no.RunMethod("random:",Array(v)).AsNumber
	#if Objc
	-(int) random : (int) v
{
if (v==0){
return rand();
}
	return arc4random_uniform(v);
}
	#End If
End Sub

Public Sub RandomElements (datesOnXAxis As Boolean)
	no.RunMethod("addRandomDataWithDatesOnXAxis::",Array(datesOnXAxis,ChartView))
	#if objc
	-(void)addRandomDataWithDatesOnXAxis:(BOOL)datesOnXAxis : (HCLineChartView *) hcLineChartView{
    [hcLineChartView.xElements removeAllObjects];
    [hcLineChartView.yElements removeAllObjects];
    double averageXValue = arc4random_uniform(10000000);
    double lastXValue = arc4random_uniform((int)averageXValue * 2) - averageXValue;
    double xValueMaxJump = arc4random_uniform(100000);
    int averageYValue = arc4random_uniform(10000);
    int lastYValue = arc4random_uniform(averageYValue * 2) - averageYValue;
    int numberOfElements = 1+arc4random_uniform(100);
    
    BOOL yValueIsDecimal = rand()%2;
    BOOL xValueIsDecimal = rand()%2;
    
    for (int i = 0 ; i < numberOfElements; i++)
    {
        if (datesOnXAxis)
        {
            [hcLineChartView.xElements addObject:[NSDate dateWithTimeIntervalSince1970:lastXValue + [[NSDate date] timeIntervalSince1970]]];
            lastXValue += 1 + arc4random_uniform(xValueMaxJump);
        }
        else
        {
            [hcLineChartView.xElements addObject:@(lastXValue / (xValueIsDecimal ? 1000000000.0 : 1.0))];
            lastXValue += 1 + arc4random_uniform(10 * (xValueIsDecimal ? 100000 : 1));
        }
        [hcLineChartView.yElements addObject:@(lastYValue / (yValueIsDecimal ? 1000000.0 : 1.0))];
        int rand = arc4random_uniform(1000);
        lastYValue += rand - 500;
    }
}
	#End If
End Sub