<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <b4x_version>10.00</b4x_version>
  <dependsOn>jcore</dependsOn>
  <dependsOn>jfx</dependsOn>
  <dependsOn>jrandomaccessfile</dependsOn>
  <dependsOn>jnetwork</dependsOn>
  <dependsOn>jserial</dependsOn>
  <dependsOn>javaobject</dependsOn>
  <dependsOn>json</dependsOn>
  <dependsOn>jssc</dependsOn>
  <dependsOn>slf4j-jdk14-1.7.25</dependsOn>
  <class>
    <name>b4j.example.starchild_serialcommsclass</name>
    <shortname>Starchild_SerialCommsClass</shortname>
    <event>Connected(Success as Boolean)</event>
    <event>HasClosed(ErrorIfAny as string)</event>
    <event>DoValidationRequest()</event>
    <event>AnalyseValidationResult(ReturnedData as string) as Boolean</event>
    <event>RxData(Data as string)</event>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AvailableSerialComms">_availableserialcomms</name>
      <comment>Returns a list of Serial Comm Ports (as string names)
avaliable on the OS platform.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Close">_close</name>
      <comment>Close this communications port (RS232 or IP)
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DataStopBits">_datastopbits</name>
      <comment>Returns: a string containing number of data bits and stop bits
    eg.  ", 8, 1"  or ", 7, 1"
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="FlowControl">_flowcontrol</name>
      <comment>Set the type of flow control for the serial port.
Often required to limit the data received depending if
the quipment is ready or busy.
Is could also used if data buffers become full.

RTS/CTS are hardware control lines supported by RS232.
XOFF/XON are characters sent as data to control the
transmission of the data.

NB: not applicable for IP Network ports.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>UseRtsCts</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>UseXonXoff</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object. You can add parameters to this method if needed.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>Target</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>EventPrefix</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>RegistrationKey</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsValidHostname">_isvalidhostname</name>
      <comment>Test given string to see if it possibly a Host Name
ie. first 2 chrs = "//"
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Hostname</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsValidIP_v4ORv6">_isvalidip_v4orv6</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>IPAddress</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsValidIPv4Address">_isvalidipv4address</name>
      <comment>Tests given string if it looks like an ipv4 address
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>IPAddress</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsValidIPv6Address">_isvalidipv6address</name>
      <comment>Tests given string if it looks like an ipv6 address
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>IPAddress</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Open">_open</name>
      <comment>Open a Port for Communicating with a device.
Can be a serial Comm Port or an IP port.
Can also specify "AUTO" to search for a possible
serial comm ports.

NB: For a Serial comm port Specify the SPEED (eg. 9600) and
    one of the PARITY constants.
    For an IP port specify the IP address and the IP_PortNumber
    of the network device.
	 If Validate=TRUE .. check for a valid device.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>SerialCommPort_Or_IPaddress</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>IP_PortNumber</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Validate</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>Speed</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>DataBits</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StopBits</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Parity</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ParityAsString">_parityasstring</name>
      <returntype>String</returntype>
      <parameter>
        <name>ParityConstant</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ParityValue">_parityvalue</name>
      <comment>Returns one of the Parity constants For the Given Parity String.
ie "EVEN", "ODD", "MARK", "SPACE", "NONE"
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>ParityString</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="RefreshSerialCommPortList">_refreshserialcommportlist</name>
      <comment>Generates a List of available Comm ports on this computer.
NB: Use NextCommPortName to fetch comm ports sequencially.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="SetTcpNoDelay">_settcpnodelay</name>
      <comment>A Network TCP network connection has a small delay in sending
small amounts of data over the connection to allow for the
transmitted TCP packet to be filled up.
This is called "Nagle's Algorithm".
You can use this function to turn OFF this delay.

NB: Must call this function before openning Socket.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>State</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetupCommPort">_setupcommport</name>
      <comment>Setup the speed of the Comm Port
   Speed = 1200, 2400, 4800, 9600, 19200, 115200
   Parity = one of the PARITY constants
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Speed</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Parity</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SpeedValue">_speedvalue</name>
      <comment>Returns the baudrate as an integer
NB: Handles decimal and K(1000) syntaxes
ie. "1.2K"=1200, "19.2K"=19200, "1200"=1200, etc.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>SpeedAsString</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TxData">_txdata</name>
      <comment>transmit this data out the communications port
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Data</name>
        <type>String</type>
      </parameter>
    </method>
    <field>
      <name DesignerName="RS232port">_rs232port</name>
      <returntype>anywheresoftware.b4j.serial.Serial</returntype>
    </field>
    <field>
      <name DesignerName="IsIP">_isip</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name DesignerName="IsOpen">_isopen</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name DesignerName="LastError">_lasterror</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="CURRENT_IP">_current_ip</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="CURRENT_PORT">_current_port</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="CURRENT_SPEED">_current_speed</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="CURRENT_PARITY">_current_parity</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="CURRENT_DATA_BITS">_current_data_bits</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="CURRENT_STOP_BITS">_current_stop_bits</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="XOFF">_xoff</name>
      <returntype>char</returntype>
    </field>
    <field>
      <name DesignerName="XON">_xon</name>
      <returntype>char</returntype>
    </field>
    <field>
      <name DesignerName="LF">_lf</name>
      <returntype>char</returntype>
    </field>
    <field>
      <name DesignerName="CR">_cr</name>
      <returntype>char</returntype>
    </field>
    <field>
      <name DesignerName="PARITY_NONE">_parity_none</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="PARITY_ODD">_parity_odd</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="PARITY_EVEN">_parity_even</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="PARITY_MARK">_parity_mark</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="PARITY_SPACE">_parity_space</name>
      <returntype>int</returntype>
    </field>
  </class>
  <version>1.05</version>
</root>