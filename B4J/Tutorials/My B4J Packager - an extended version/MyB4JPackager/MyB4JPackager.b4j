AppType=JavaFX
Build1=Default,b4j.packager
File1=icon.png
File2=main.bjl
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
Library1=jcore
Library2=jfx
Library3=jshell
Library4=jcontrolsfx
Library5=archiver
Module1=Routines
NumberOfFiles=2
NumberOfLibraries=5
NumberOfModules=1
Version=6.3
@EndOfDesignText@
#Region  Project Attributes 
	#MainFormWidth: 700
	#MainFormHeight: 630
#End Region

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	
	Private ProgressTimer As Timer
	Private AutoReloadTimer As Timer
	Private filename As String
	Private shl As Shell
	Private fileChooser As FileChooser
	Private iconExtension As String
	Private packageExtension As String
	Private cutils As ControlsUtils
	
	Private btnBuild As Button
	Private btnIconBrowse As Button
	Private btnJarBrowse As Button
	Private txtJar As TextField
	Private txtIcon As TextField
	Private txtName As TextField
	Private txtComments As TextField
	Private txtVersion As TextField
	Private btnPackagerBrowse As Button
	Private txtPackager As TextField
	Private ProgressBar1 As ProgressBar
	Private ProgressLabel As Label
	Private windows As Boolean
	Private workingFolder As String
	Private txtGroup As TextField
	Private lblGroup As Label
	Private txtVendor As TextField
	Private txtOptions As TextField
	Private txtProperties As TextField
	Private txtCopyright As TextField
	Private ClearButton As Button
	Private CreateDesktopShortcut As CheckBox
End Sub

Sub AppStart (Form1 As Form, Args() As String)

	MainForm = Form1
	MainForm.RootPane.LoadLayout("main") 'Load the layout file.
	MainForm.Title = MainForm.Title & " v2.01"

	Dim os As String = GetSystemProperty("os.name", "").ToLowerCase
	If os.Contains("win") Then
	   iconExtension = "ico"
	   packageExtension = "exe"
	   windows = True
	   workingFolder = File.Combine(GetEnvironmentVariable("AppData", ""), "MyB4JPackager")
	   File.MakeDir(workingFolder, "")
	   CreateDesktopShortcut.Checked = False
	Else If os.Contains("mac") Then
		iconExtension = "icns"
		packageExtension = "dmg"  'maybe "pkg"
		windows = False
		workingFolder = File.DirApp
		txtGroup.Text = "not supported for Mac"
		txtGroup.Enabled = False
		Routines.SetTextColor(txtGroup,fx.Colors.Gray)
		lblGroup.TextColor = fx.Colors.Gray
		CreateDesktopShortcut.Checked = False
		CreateDesktopShortcut.Visible = False
	Else
		cutils.ShowNotification2("", "Platform not supported", cutils.ICON_ERROR, MainForm)
	End If

	fileChooser.Initialize

	MainForm.Resizable = False
	MainForm.Show
	
	AutoReloadTimer.Initialize("AutoReloadTimer",1000)
	AutoReloadTimer.Enabled = False
	
	Dim jp As String = File.Combine(GetSystemProperty("java.home", ""), "../bin/javapackager.exe")
	If File.Exists(jp, "") Then txtPackager.Text = jp
	If File.Exists(workingFolder, "settings.pak") Then
		Dim map As Map = File.ReadMap(workingFolder, "settings.pak")
		txtName.Text = map.GetDefault("name","")
		txtPackager.Text = map.GetDefault("packager","")
		AutoReloadTimer.Enabled = True
	End If

	ProgressTimer.Initialize("ProgressTimer", 330)
	ProgressTimer.Enabled = False
	
	txtName.RequestFocus
End Sub

Sub MainForm_CloseRequest(EventData As Event)
	If SaveAllSettings = False Then
		cutils.ShowNotification2("", "Unable to Save Settings", cutils.ICON_ERROR, MainForm)
		EventData.Consume   'save failed, don't close program
	End If
End Sub

Sub LoadProjectSettings
	ClearProjectSettings
	If File.Exists(workingFolder, GetProjectFilename) Then
		Dim map As Map = File.ReadMap(workingFolder, GetProjectFilename)
		txtJar.Text = map.GetDefault("jar","")
		txtIcon.Text = map.GetDefault("icon","")
		txtComments.Text = map.GetDefault("comments","")
		txtVersion.Text = map.GetDefault("version","")
		txtGroup.Text = map.GetDefault("group","")
		txtVendor.Text = map.GetDefault("vendor","")
		txtOptions.Text = map.GetDefault("options","")
		txtProperties.Text = map.GetDefault("properties","")
		txtCopyright.Text = map.GetDefault("copyright","")
		CreateDesktopShortcut.Checked = map.GetDefault("shortcut",False)
	End If
End Sub

Sub SaveAllSettings As Boolean
	Try
		File.WriteMap(workingFolder, "settings.pak", _
			CreateMap("name": txtName.Text, "packager": txtPackager.Text))
		If txtName.Text.Trim <> "" Then
			File.WriteMap(workingFolder, GetProjectFilename, _
				CreateMap("jar": txtJar.Text, "icon": txtIcon.Text, _
				"comments": txtComments.Text, "version": txtVersion.Text, _
				"group": txtGroup.Text, "vendor": txtVendor.Text, _
				"options": txtOptions.Text,"properties": txtProperties.Text, _
				"copyright": txtCopyright.Text, "shortcut": CreateDesktopShortcut.Checked ))
		End If
		Return True
	Catch
		Return False
	End Try
End Sub

Private Sub ClearProjectSettings
	txtJar.Text = ""
	txtIcon.Text = ""
	txtComments.Text = ""
	txtVersion.Text = ""
	txtGroup.Text = ""
	txtVendor.Text = ""
	txtOptions.Text = ""
	txtProperties.Text = ""
	txtCopyright.Text = ""
	CreateDesktopShortcut.Checked = False
End Sub

Sub btnPackagerBrowse_Action
	If txtJar.Text = "" Then fileChooser.InitialDirectory = File.GetFileParent(GetSystemProperty("java.home", ""))
	fileChooser.SetExtensionFilter("javapackager", Array("javapackager.*"))
	HandleBrowse(txtPackager)
End Sub

Sub btnJarBrowse_Action
	fileChooser.SetExtensionFilter("Jar", Array("*.jar"))
	HandleBrowse(txtJar)
End Sub

Sub btnIconBrowse_Action
	fileChooser.SetExtensionFilter("Icon", Array("*." & iconExtension))
	HandleBrowse(txtIcon)
End Sub

Private Sub HandleBrowse(tf As TextField)
	If tf.Text <> "" And File.GetFileParent(tf.Text) <> "" Then
		fileChooser.InitialDirectory = File.GetFileParent(tf.Text)
	End If
	If File.Exists(fileChooser.InitialDirectory,File.GetName(tf.Text)) = False Then
		fileChooser.InitialDirectory = UserDefaultDir
	End If
	Dim res As String = fileChooser.ShowOpen(MainForm)
	If  res <> "" Then
		tf.Text = res
	End If	
End Sub


Public Sub UserDefaultDir As String
	Dim os As String = GetSystemProperty("os.name", "")
	If os.ToUpperCase.Contains("WIN") Then
		Return GetSystemProperty("user.home","") & "/Desktop"
	Else
		Return GetSystemProperty("user.dir","")
	End If
End Sub

Sub btnBuild_Action
	If txtJar.Text = "" Then
		cutils.ShowNotification2("", "Please set the jar file", cutils.ICON_ERROR, MainForm)
		Return
	End If
	If txtPackager.Text = "" Then
		cutils.ShowNotification2("", "Please set the path to javapackager", cutils.ICON_ERROR, MainForm)
		Return
	End If
	Try
		Dim archiver As Archiver
		If archiver.UnZipFiles(txtJar.Text, "",workingFolder, Array As String("META-INF/MANIFEST.MF"), "") <> 1 Then
			cutils.ShowNotification2("", "Manifest file not found. Make sure that the jar file was compiled in release mode.", _
				cutils.ICON_ERROR, MainForm)
			Return
		End If
		
		Dim manifest As String = File.ReadString(workingFolder, "META-INF/MANIFEST.MF")
		Dim m As Matcher = Regex.Matcher2("JavaFX-Application-Class:\s*(.*)$", Regex.MULTILINE, manifest)
		Dim appClass As String
		If m.Find Then
			appClass = m.Group(1)
		Else
			cutils.ShowNotification2("", "Error parsing manifest file.", _
				cutils.ICON_ERROR, MainForm)
			Return
		End If
		Log("App identifier: " & appClass)
		
		Dim shl As Shell
		Dim args As List
		args.Initialize
		args.AddAll(Array ("-deploy", "-verbose", "-srcdir", File.GetFileParent(txtJar.Text), _
			"-srcfiles", File.GetName(txtJar.Text), "-Bmainjar=" & File.GetName(txtJar.Text), "-native", packageExtension, _
			"-BsystemWide=true", "-title", txtComments.Text, "-name", txtName.Text, "-outdir", workingFolder, _
			"-outfile", "buildtemp1", "-BappVersion=" & txtVersion.Text, "-appclass", appClass, _
			"-Bidentifier=" & appClass, "-Bcopyright=" & txtCopyright.Text, _
			"-Bvendor=" & txtVendor.Text))
		args.AddAll(GetAll_JavaVMoptions)
		args.AddAll(GetAll_ProgramProperties)
		If windows Then
			args.Add("-Bruntime=" & GetSystemProperty("java.home", ""))
			args.Add("-Bwin.menuGroup=" & txtGroup.Text.trim)
			args.Add("-Bwin.menuHint=true")
			args.Add("-Bwin.shortcutHint=true")
			args.Add("-Bwin.vendor=" & txtVendor.Text)
			args.Add("-BshortcutHint=" & CreateDesktopShortcut.Checked)
		End If

		If txtIcon.Text <> "" Then args.Add($"-Bicon=${txtIcon.Text}"$)
		filename = File.Combine(workingFolder, "bundles/" & txtName.Text & "-" & txtVersion.Text & "." & packageExtension)
		File.Delete(filename, "")

		shl.InitializeDoNotHandleQuotes("shl", txtPackager.Text, args)
		shl.RunWithOutputEvents(-1)
		
		If windows Then
			ProgressBar1.Progress = 0
			ProgressTimer.Enabled = True
		Else
			ProgressBar1.Progress = -1 'indeterminate
		End If
		
		btnBuild.Enabled = False
		ProgressBar1.Visible = True
		ProgressLabel.Visible = True
		ProgressLabel.RequestFocus
	Catch
		Log(LastException)
		Dim Msg As String = LastException.Message.Replace(":",":" & CRLF).Replace("(",CRLF & "(")
		cutils.ShowNotification2("Error",Msg, _
				cutils.ICON_ERROR, MainForm)
	End Try

	MainForm.RootPane.MouseCursor = fx.Cursors.WAIT
	SaveAllSettings
End Sub

Sub GetAll_JavaVMoptions As List
	Dim Result As List
	Result.Initialize
	Dim Options() As String = Regex.Split(" ",txtOptions.Text.Trim.Replace(","," "))
	For Each S As String In Options
		If S.Trim <> "" Then
			Result.Add("-BjvmOptions=" & S)
		End If
	Next
	Return Result
End Sub


Sub GetAll_ProgramProperties As List
	Dim Result As List
	Result.Initialize
	Dim Options() As String = Regex.Split(" ",txtProperties.Text.Trim.Replace(","," "))
	For Each S As String In Options
		If S.Trim <> "" Then
			Result.Add("-BjvmProperties=" & S)
		End If
	Next
	Return Result
End Sub

Sub Shl_StdOut (Buffer() As Byte, Length As Int)
	Log(BytesToString(Buffer, 0, Length, "utf8"))
End Sub

Sub Shl_StdErr (Buffer() As Byte, Length As Int)
	LogError(BytesToString(Buffer, 0, Length, "utf8"))
End Sub

Sub ProgressTimer_Tick
	If File.Exists(filename, "") Then
		ProgressBar1.Progress = File.Size(filename, "") / 50000000
	End If
End Sub

Sub shl_ProcessCompleted (Success As Boolean, ExitCode As Int, StdOut As String, StdErr As String)
	Log("Success: " & Success)
	Log("ExitCode: " & ExitCode)
	ProgressTimer.Enabled = False
	ProgressBar1.Progress = 1
	If ExitCode <> 0  Or Success = False Then
		cutils.ShowNotification2("", "Error: " & StdErr, _
				cutils.ICON_ERROR, MainForm)
	Else
		fx.ShowExternalDocument(File.GetUri(File.GetFileParent(filename), ""))
		cutils.ShowNotification2("", "Package built successfully." , _
				cutils.ICON_INFORMATION, MainForm)
	End If
	
	MainForm.RootPane.MouseCursor = fx.Cursors.DEFAULT
	Sleep(2000)
	ProgressBar1.Visible = False
	ProgressLabel.Visible = False
	btnBuild.Enabled = True
End Sub

Sub txtName_TextChanged (Old As String, New As String)
	btnBuild.Enabled = False
	btnBuild.TextColor = fx.Colors.Gray
	If New.Contains("/") Or New.Contains("\") Or New.Contains(",") Then
		fx.Msgbox(MainForm,"Can't use ""/"" or ""\"" or "","" in the project name.","Illegal Character")
		txtName.Text = Old
	End If
	AutoReloadTimer.Enabled = False
	AutoReloadTimer.Enabled = True
End Sub

Sub AutoReloadTimer_Tick
	AutoReloadTimer.Enabled = False
	If File.Exists(workingFolder, GetProjectFilename) Then
		LoadProjectSettings
		SaveAllSettings
	End If
	btnBuild.Enabled = True
	btnBuild.TextColor = fx.Colors.Black
End Sub

Private Sub ClearButton_Click
	If fx.Msgbox2(MainForm, "Do you want to Clear ALL settings for this project?", _
			  "Clear Settings", _
			  "Yes", "Cancel", "No", _
			  fx.MSGBOX_CONFIRMATION) = fx.DialogResponse.POSITIVE Then
		If File.Exists(workingFolder, GetProjectFilename) Then
			File.Delete(workingFolder, GetProjectFilename)
		End If
		ClearProjectSettings
	End If
End Sub

Private Sub GetProjectFilename As String
	Dim Result As String = txtName.Text.Trim
	Result = Result.Replace("    "," ").Replace("   "," ").Replace("  "," ")
	Result = Result.Replace("/","").Replace("\","").Replace(",","")
	Return Result.ToLowerCase & ".dat"
End Sub
