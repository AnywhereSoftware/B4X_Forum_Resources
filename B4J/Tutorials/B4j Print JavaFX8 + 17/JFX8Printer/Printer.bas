B4J=true
Group=Default Group
ModulesStructureVersion=1
Type=Class
Version=2.8
@EndOfDesignText@
'Class Module
Sub Class_Globals
	'Private fx As JFX ' Uncomment if required for B4j only
	Private Printr As JavaObject
	
End Sub
'Initializes the object. You can add parameters to this method if needed.
Public Sub Initialize
	'This is an autogenerated constructor, there may not be a matching constructor in the class, you will then have to remove the next line of code
	Printr.InitializeStatic("javafx.print.Printer")
	If Not(Paper_Static.IsInitialized) Then Paper_Static.Initialize
End Sub

'Obtain a new PageLayout for this printer using the specified parameters.
'Paper - The Paper To use
'Orient - The orientation To use
'Margins in Pts
'Margins of less than 0 will cause a runtime error, Margins less than the HARDWARE_MINIMUM, will be set to that See CreatePageLayout2.
Public Sub CreatePageLayout(TPaper As Paper, Orient As String, LMargin As Double, RMargin As Double, TMargin As Double, BMargin As Double) As PageLayout
	Dim PL As PageLayout
	PL.Initialize
	PL.SetObject(Printr.RunMethod("createPageLayout",Array As Object(TPaper.GetObject, Orient, LMargin, RMargin, TMargin, BMargin)))
	Return PL
End Sub
'Obtain a new PageLayout instance for this printer using the specified parameters.
'Paper - The Paper To use
'Orient - The orientation To use
'Margin_Type the Margin_Type to use One of: DEFAULT, EQUAL, EQUAL_OPPOSITES, HARDWARE_MINIMUM
Public Sub CreatePageLayout2(TPaper As Paper, Orient As String, Margin_Type As String) As PageLayout
	Dim PL As PageLayout
	PL.Initialize
	PL.SetObject(Printr.RunMethod("createPageLayout",Array As Object(TPaper.GetObject, Orient, Margin_Type)))
	Return PL
End Sub

'Return the default page layout for this Printr.
Public Sub GetDefaultPageLayout As PageLayout
	Dim PL As PageLayout
	PL.Initialize
	PL.SetObject(Printr.RunMethod("getDefaultPageLayout",Null))
	Return PL
End Sub

'Return the name used by the underlying system to identify the printer to users and/or applications.
Public Sub GetName As String
	Return Printr.RunMethod("getName",Null)
End Sub
'Retrieves the delegate object encapsulating the printer attributes and capabilities.
Public Sub GetPrinterAttributes As PrinterAttributes
	Dim PA As PrinterAttributes
	PA.Initialize
	PA.SetObject(Printr.RunMethod("getPrinterAttributes",Null))
	Return PA
End Sub
'Display String Representation
Public Sub ToString As String
	Return Printr.RunMethod("toString",Null)
End Sub
Public Sub GetObject As Object
	Return Printr
End Sub
Public Sub SetObject (P As Object)
	Printr = P
End Sub