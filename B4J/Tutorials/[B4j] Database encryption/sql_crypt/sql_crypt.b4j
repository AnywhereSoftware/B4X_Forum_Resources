AppType=StandardJava
Build1=Default,b4j.example
Group=Default Group
Library1=decrypter
Library2=jcore
Library3=jserver
Library4=jsql
Library5=javaobject
Module1=DBM
NumberOfFiles=0
NumberOfLibraries=5
NumberOfModules=1
Version=10.2
@EndOfDesignText@
'Non-UI application (console / server application)
#Region Project Attributes 
	#CommandLineArgs:
	#MergeLibraries: True 	
	#AdditionalJar: slf4j-api-1.8.0-beta0.jar
	#AdditionalJar: bcprov-jdk15on-154
	#AdditionalJar: sqlite-jdbc-3.7.2.jar
#End Region

Sub Process_Globals
	Private query As String
End Sub

Sub AppStart (Args() As String)
	Log("Hello world!!!")
	
	If File.Exists(File.DirApp, "baza.db") Then
		DBM.InitializeSQLite(File.DirApp ,"baza.db",False)
	Else
		DBM.InitializeSQLite(File.DirApp ,"baza.db", True)
		DBM.SQLCreate($"CREATE TABLE one (
    idx      INTEGER PRIMARY KEY AUTOINCREMENT,
    email    VARCHAR,
    password VARCHAR,
    money    VARCHAR
);"$)
	End If
	DBM.InicjalizeCrypt(Array As String("email","password"), "myhidenpasswordfor database","Hd73js2Ajd93nfof39")
	DBM.debug= True
'	
'	Dim d1 As Long = DateTime.Now
'	Dim li As List = DBM.SQLSelect("select * from one",Null)
'	Dim d2 As Long = DateTime.Now
'	Dim r As Period = DateUtils.PeriodBetween(d1,d2)
'	Log("Time decrypt")
'	Log(r)
'	Log(d2-d1)
'	Log($"Count row database: ${li.Size}"$)
'	Log("Decrypt all. Write first 100 row")
'	For i=0 To 100
'		Log(li.Get(i))
'	Next
	

	
'	query =  DBM.BInsert("one", CreateMap("email":"secret@email.com","password":"haslo","money":1))
'	Log(query)
'	DBM.SQLInsert(query, Null)
'	DBM.SQLInsert(DBM.BInsert("one", CreateMap("email":"secret@email.com","password":"haslo","money":1)), Null)
'	
'	query = DBM.BSelect("one", Null, CreateMap("email":"secret@ksozzhhlqb"),Null, Null)
'	Log(query)
'	Dim li As List = DBM.SQLSelect(query, Null)
'	Log(li)
'	Dim li2 As List = DBM.SQLSelect(DBM.BSelect("one", Null, CreateMap("email":"secret@ksozzhhlqb"),Null, Null), Null)
'	Log(li2)
	
'	DBM.DecryptTable("one", Array As String("email","password"))

	RandomTableCreate(1000)

	SelectLike("13@")
	
End Sub


Sub RandomTableCreate(row_count As Int) 'ignore
	DBM.SQLDelete("delete from one", Null)
	For i=0 To row_count
		Dim h As String = DBM.GenerateRandomPassword(5,True,False,False,False)
		Dim money As String = DBM.GenerateRandomPassword(3,True,False,False,False)
		DBM.SQLInsert("insert into one (email,password,money) values(?,?,?)", Array As String($"${h}@myemail.com"$, "password"&h, money))
	Next
	DBM.EncryptTable("one", Array As String("email","password"))
End Sub


Sub SelectLike(like As String) 'ignore
	Dim m As List = DBM.BSelectLike("one",CreateMap("email":like))
'	Log(m)
	For Each ma As Map In m
		Log(ma)
	Next
	
End Sub