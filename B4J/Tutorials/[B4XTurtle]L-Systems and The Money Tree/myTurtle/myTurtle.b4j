AppType=JavaFX
Build1=Default,b4j.example
File1=Main.bjl
File2=turtle.png
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
Library1=jcore
Library2=jfx
Library3=b4xturtle
NumberOfFiles=2
NumberOfLibraries=3
NumberOfModules=0
Version=10
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 800
	#MainFormHeight: 900 
#End Region

#Region Form Preparation
'Template version 1.00
Sub Process_Globals
	Type Vee(variables As String, constants As String)
	Type Omega(start As String, action As String, initiator As String)
	Type Rule(predecessor As String, successor As String)
	Type LSystem(alphabet As Vee, initialState As Omega, evolution As List)
	
	Private fx As JFX
	Private MainForm As Form
	Private xui As XUI 'ignore
	Private Turtle As B4XTurtle
	Private MenuBar1 As MenuBar
	
	Private LS1, LS2 As LSystem
	Private instructions As String
	
	Dim mode As String
End Sub


Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("Main")
	MainForm.Show

'Fibonacci sequence
	LS1 = CreateLSystem(CreateVee("AB", ""), CreateOmega("B", "", ""))
	LS1.evolution.add(CreateRule("A", "AB"))
	LS1.evolution.add(CreateRule("B", "A"))
	Log(entelechy(LS1, 10, True))

'Set for tree
	LS2 = CreateLSystem(CreateVee("01", "[]"), CreateOmega("0", "", ""))
	LS2.evolution.add(CreateRule("1", "11"))
	LS2.evolution.add(CreateRule("0", "1[00]0"))
	instructions = entelechy(LS2, 9, False)
End Sub

Private Sub entelechy(LS As LSystem, nsteps As Int, lengths As Boolean) As String
	Dim sbLengths As StringBuilder
	sbLengths.Initialize
	Dim currentState As String = LS.initialState.start
	sbLengths.Append(currentState.Length).Append(", ")
	For i = 1 To nsteps
		Dim sb As StringBuilder
		sb.Initialize
		For j = 0 To currentState.Length - 1
			Dim c As String = currentState.CharAt(j)
			If LS.alphabet.constants.Contains(c) Then
				sb.Append(c)
			Else 
				For Each r As Rule In LS.evolution
					If c = r.predecessor Then
						sb.Append(r.successor)
						Exit
					End If
				Next
			End If
		Next
		currentState = sb.toString
		sbLengths.Append(currentState.Length).Append(", ")
	Next
	If lengths Then
		sbLengths.Remove(sbLengths.length - 2, sbLengths.Length)
		Return sbLengths.toString
	Else
		Return sb.toString
	End If
End Sub

Sub MenuBar1_Action
	Dim Mi As MenuItem = Sender
	Select Mi.Tag
		Case "Restart"
			Turtle.Stop.ClearScreen.Home
			Turtle_Start
		Case "Exit"
			MainForm.Close
	End Select
End Sub

Public Sub CreateLSystem (alphabet As Vee, initialState As Omega) As LSystem
	Dim t1 As LSystem
	t1.Initialize
	t1.alphabet = alphabet
	t1.initialState = initialState
	Dim rules As List
	rules.Initialize
	t1.evolution = rules
	Return t1
End Sub

Public Sub CreateRule (predecessor As String, successor As String) As Rule
	Dim t1 As Rule
	t1.Initialize
	t1.predecessor = predecessor
	t1.successor = successor
	Return t1
End Sub

Public Sub CreateOmega (start As String, action As String, initiator As String) As Omega
	Dim t1 As Omega
	t1.Initialize
	t1.start = start
	t1.action = action
	t1.initiator = initiator
	Return t1
End Sub

Public Sub CreateVee (variables As String, constants As String) As Vee
	Dim t1 As Vee
	t1.Initialize
	t1.variables = variables
	t1.constants = constants
	Return t1
End Sub
#End Region

'B4XTurtle examples: https://www.b4x.com/android/forum/threads/examples-for-teachers-and-parents.116979
Sub Turtle_Start
	Turtle.SetTurtleVisible(False)
	
	'bring to start position
	Turtle.RabbitMode
	Turtle.SetPenColor(xui.Color_Transparent)
	Turtle.TurnRight(90).MoveForward(Turtle.Height / 2.1).TurnLeft(180)
	'Turtle.TurnRight(90).MoveForward(Turtle.Height / 2.1).TurnRight(90).MoveForward(100).TurnRight(90)

	Turtle.TurtleMode.SetSpeedFactor(10)
	Dim stemColor As Int = xui.Color_RGB(165, 42, 42)
	Turtle.SetPenColor(stemColor)
	Dim stemLength As Float = .75

	Dim stemThickness As Float = 3
	Turtle.SetPenSize(stemThickness)

	Dim n As Int = instructions.Length
	Log(n)
	For i = 25 To n - 1
		Dim c As String = instructions.CharAt(i)
		Select c
			Case "0"
				Turtle.MoveForward(stemLength)
				Turtle.SetPenColor(Turtle.RandomColor)
				Turtle.DrawText("$")
				Turtle.SetPenColor(stemColor)
			Case "1"
				Turtle.MoveForward(stemLength)
			Case "["
				Turtle.PushState
				Turtle.turnLeft(Rnd(35, 65))
			Case "]"
				Turtle.popState
				Turtle.turnRight(Rnd(35, 65))
		End Select
	Next
End Sub

