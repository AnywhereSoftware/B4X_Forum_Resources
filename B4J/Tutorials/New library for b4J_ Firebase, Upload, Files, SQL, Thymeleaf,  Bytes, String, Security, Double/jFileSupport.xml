<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.tummosoft.jByteSupport</name>
        <shortname>jByteSupport</shortname>
        <owner>process</owner>
        <method>
            <name>validateByteHex</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>inHex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>lineIndex</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>lineText</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>charset</name>
                <type>java.nio.charset.Charset</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isByteHex</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>inHex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isBytesHex</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>inHex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hexToBytesAnyway</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>inHex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>shortToBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>s</name>
                <type>short</type>
            </parameter>
        </method>
        <method>
            <name>IntToBytes2</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>len</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>bytesToUshort</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>b</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>bytesToHexString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>src</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>bytesToHex</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>intSmallByte</name>
            <comment></comment>
            <returntype>byte</returntype>
            <parameter>
                <name>a</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>checkBytesValue</name>
            <comment></comment>
            <returntype>long</returntype>
            <parameter>
                <name>string</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetByteFromHex</name>
            <comment>Converts a string of hexadecimal characters into a byte array.
hex: the hex string
Return type: @return:the hex string decoded into a byte array</comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>hex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>byteToHex</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>b</name>
                <type>byte</type>
            </parameter>
        </method>
        <method>
            <name>hexToByteAnyway</name>
            <comment></comment>
            <returntype>byte</returntype>
            <parameter>
                <name>inHex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hexFormatToBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>hexFormat</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>unsignedShortToBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>s</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>intBigByte</name>
            <comment></comment>
            <returntype>byte</returntype>
            <parameter>
                <name>a</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>indexOf</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>hexString</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>hexSubString</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>initFrom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>intToBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>a</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>formatHex</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>hexString</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>lineBreak</name>
                <type EnumType="true">com.tummosoft.jByteSupport.Line_Break</type>
            </parameter>
            <parameter>
                <name>lineBreakWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>lineBreakValue</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>stringToHexFormat</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>bytesToHexFormat2</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>newLineWidth</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>hexToBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>inHex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>bytesToInt</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>b</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>BytesToINT2</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>b</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>validateTextHex</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hexToInt</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>inHex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>mergeBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>bytes1</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>bytes2</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>deflate</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>object</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>inflate</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>object</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>BytesToObject</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>ObjectToBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>object</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>hexToByte</name>
            <comment></comment>
            <returntype>byte</returntype>
            <parameter>
                <name>inHex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>subBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>off</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ByteToINT</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>b</name>
                <type>byte</type>
            </parameter>
        </method>
        <method>
            <name>bytesToHexFormat</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>BytestoHex2</name>
            <comment>Converts a byte array into a hexadecimal string.
array: the byte array to convert
Return type: @return:a length*2 character string encoding the byte array</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>array</name>
                <type>byte[]</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.jByteSupport.Line_Break</name>
        <owner>process</owner>
        <method>
            <name>valueOf</name>
            <comment></comment>
            <returntype EnumType="true">com.tummosoft.jByteSupport.Line_Break</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype EnumType="true">com.tummosoft.jByteSupport.Line_Break[]</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>name</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>compareTo</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>E</type>
            </parameter>
        </method>
        <method>
            <name>ordinal</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <property>
            <name>DeclaringClass</name>
            <returntype>java.lang.Class</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.jDoubleSupport</name>
        <shortname>jDoubleSupport</shortname>
        <owner>process</owner>
        <method>
            <name>random</name>
            <comment></comment>
            <returntype>double</returntype>
            <parameter>
                <name>max</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>nonNegative</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>scale6</name>
            <comment></comment>
            <returntype>double</returntype>
            <parameter>
                <name>invalue</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>compare</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>d1</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>d2</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>desc</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>scale2</name>
            <comment></comment>
            <returntype>double</returntype>
            <parameter>
                <name>invalue</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>sortList</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>numbersList</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>scale3</name>
            <comment></comment>
            <returntype>double</returntype>
            <parameter>
                <name>invalue</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>sortArray</name>
            <comment></comment>
            <returntype>double[]</returntype>
            <parameter>
                <name>numbers</name>
                <type>double[]</type>
            </parameter>
        </method>
        <method>
            <name>getPercentage</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>data</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>total</name>
                <type>double</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.jFileSupport</name>
        <shortname>jFileSupport</shortname>
        <owner>process</owner>
        <method>
            <name>Delete</name>
            <comment>Deletes the specified file. If the file name is a directory then it must
 be empty in order to be deleted. Returns true if the file was
 successfully deleted. Files in the assets folder cannot be deleted.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetFileParent</name>
            <comment>Returns the path of the file or folder parent.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsDirectory</name>
            <comment>Tests whether the specified file is a directory.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Size</name>
            <comment>Returns the size in bytes of the specified file. This method does not
 support files in the assets folder.</comment>
            <returntype>long</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>decode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bytes</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DirData</name>
            <comment>Returns the path to a folder that is suitable for writing files. On
 Windows, folders under Program Files are read-only. Therefore File.DirApp
 will be read-only as well. On Windows it returns the path to the user
 data folder. For example: C:\Users\[user name]\AppData\Roaming\[AppName]
 On Mac it returns ~/Library/Application Support/[AppName] On Linux it
 returns the same path as File.DirApp.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>AppName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isBinaryFile</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>code</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReadMap2</name>
            <comment>Similar to ReadMap. ReadMap2 adds the items to the given Map. By using
 ReadMap2 with a populated map you can force the items order as needed. null     Example:&lt;code&gt;
Dim m As Map
m.Initialize
m.Put("Item #1", "")
m.Put("Item #2", "")
m = File.ReadMap2(File.DirApp, "settings.txt", m)&lt;/code&gt;</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Map</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>mergeFiles</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>file1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>file2</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>targetFile</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>LastModified</name>
            <comment>Returns the last modified date of the specified file. This method does
 not support files in the assets folder. null     Example:&lt;code&gt;
Dim d As Long
d = File.LastModified(File.DirApp, "1.txt")
Msgbox(DateTime.Date(d), "Last modified")&lt;/code&gt;</comment>
            <returntype>long</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isPdf</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>code</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearDir</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>folder</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sortFiles</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>files</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
            <parameter>
                <name>sortMode</name>
                <type EnumType="true">com.tummosoft.jFileSupport.FileSortMode</type>
            </parameter>
        </method>
        <method>
            <name>InputStream2String</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>input</name>
                <type>java.io.InputStream</type>
            </parameter>
        </method>
        <method>
            <name>getPrefix</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>filename</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>WriteString</name>
            <comment>Writes the given text to a new file. null     Example:&lt;code&gt;
File.WriteString(File.DirApp, "1.txt", "Some text")&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ListFilesAsync</name>
            <comment>Asynchronous version of ListFiles. Should be used with Wait For. null     Example:&lt;code&gt;
Wait For (File.ListFilesAsync(Dir)) Complete (Success As Boolean, Files As List)&lt;/code&gt;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ObjectClassToJSON</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>listObject</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>ReadBytes</name>
            <comment>Reads the data from the given file.</comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFileChecksum</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>splitFileByBytesNumber</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>fileSplit</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>prefixFileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>bytesNumber</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>ReadMapUnicode</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>rightPad</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>len</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>c</name>
                <type>char</type>
            </parameter>
        </method>
        <method>
            <name>Copy</name>
            <comment>Copies the specified source file to the target path. Note that it is not
 possible to copy files to the Assets folder.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>DirSource</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileSource</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>DirTarget</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileTarget</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFileCreateTime</name>
            <comment></comment>
            <returntype>long</returntype>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFilePath</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>format_str</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>len</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetUri</name>
            <comment>Returns a Uri string ("file://...") that points to the given file.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>WriteBytes</name>
            <comment>Writes the data to the given file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Data</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>appendName</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>inStr</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Combine</name>
            <comment>Returns the full path to the given file. This methods does not support
 files in the assets folder.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>MakeDir</name>
            <comment>Creates the given folder (creates all folders as needed). null     Example:&lt;code&gt;
File.MakeDir(File.DirApp, "music/90")&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFilePrefix</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>file</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>CheckFileSignatures</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>filePath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFileEncode</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>filePath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFileType</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>filePath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ListFiles</name>
            <comment>Returns a read only list with all the files and directories which are
 stored in the specified path. An uninitialized list will be returned if
 the folder is not accessible. This method does not support the assets
 folder.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFileSuffix</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>file</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>setFilePermissions</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>permissions</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>replaceFileSuffix</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>newSuffix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReadAllFolderToJson</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>contextPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>splitFileByFilesNumber</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>fileSplit</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>prefixFileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>filesNumber</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>ReadList</name>
            <comment>Reads the entire file and returns a List with all lines (as strings). null     Example:&lt;code&gt;
Dim List1 As List
List1 = File.ReadList(File.DirApp, "1.txt")
For i = 0 to List1.Size - 1
	Log(List1.Get(i))
Next &lt;/code&gt;</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>WriteMap</name>
            <comment>Creates a new file and writes the given map. Each key value pair is
 written as a single line. All values are converted to strings. See this
 link for more information about the actual format: &lt;link&gt;Properties
 format|http://en.wikipedia.org/wiki/.properties&lt;/link&gt;. You can use
 File.ReadMap to read this file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Map</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>setDirectoryPermissions</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>permissions</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Copy2</name>
            <comment>Copies all the available data from the input stream into the output
 stream. The input stream is automatically closed at the end.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>In</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>Out</name>
                <type>java.io.OutputStream</type>
            </parameter>
        </method>
        <method>
            <name>GetName</name>
            <comment>Returns the file name from the full path (or the directory name in case
 of a directory).</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>FilePath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReadMap</name>
            <comment>Reads the file and parses each line as a key-value pair (of strings). See
 this link for more information about the actual format: &lt;link&gt;Properties
 format|http://en.wikipedia.org/wiki/.properties&lt;/link&gt;. You can use
 File.WriteMap to write a map to a file. Note that the order of items in
 the map may not be the same as the order in the file.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>mergeFiles2</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listFile</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
            <parameter>
                <name>target</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>convertToUTF16Escape</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>input</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>writeFile</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>OpenOutput</name>
            <comment>Opens (or creates) the specified file which is located in the Dir folder
 for writing. If Append is true then the new data will be written at the
 end of the existing file. This method does not support files in the
 assets folder.</comment>
            <returntype>com.tummosoft.jFileSupport.OutputStreamWrapper</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Append</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>OpenInput</name>
            <comment>Opens the specified file name which is located in the Dir folder for
 reading. Note that the file names are case sensitive.</comment>
            <returntype>com.tummosoft.jFileSupport.InputStreamWrapper</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>WriteList</name>
            <comment>Writes each item in the list as a single line. Note that a value
 containing CRLF will be saved as two lines (which will return two item
 when read with ReadList). All values will be converted to strings. null     Example:&lt;code&gt;
File.WriteList (File.DirApp, "mylist.txt", List1)&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>List</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>ReadString</name>
            <comment>Reads the file and returns its content as a string. null     Example:&lt;code&gt;
Dim text As String
text = File.ReadString(File.DirApp, "1.txt")&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Copy2Async</name>
            <comment>Asynchronously copies all the available data from the input stream into
 the output stream. The input stream is automatically closed at the end.
 Returns an object that should be used as the sender filter. null     Example:&lt;code&gt;
Wait For (File.Copy2Async(in, out)) Complete (Success As Boolean)
Log("Success: " &amp; Success)&lt;/code&gt;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>In</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>Out</name>
                <type>java.io.OutputStream</type>
            </parameter>
        </method>
        <method>
            <name>ReadAllInFolderToXML</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>SaveAs</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CopyAsync</name>
            <comment>Asynchronously copies the source file to the target path. Note that it is
 not possible to copy files to the Assets folder. Returns an object that
 should be used as the sender filter. Example: &lt;code&gt;
Wait For (File.CopyAsync(File.DirAssets, "1.txt", File.DirTemp, "1.txt")) Complete (Success As Boolean)
Log("Success: " &amp; Success)&lt;/code&gt;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>DirSource</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileSource</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>DirTarget</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileTarget</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RennameFile</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pathname</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pathname2</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Exists</name>
            <comment>Returns true if the specified FileName exists (file or folder) in the
 specified Dir. Note that the file system is case sensitive. This method
 does not support File.DirAssets.

 Example:&lt;code&gt;
If File.Exists(File.DirApp, "MyFile.txt") Then ...&lt;/code&gt;</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>MAPtoJSON</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>map</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>FileMetadataToJson</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFontFile</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>fontName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>TempDirectory</name>
            <parameter>
                <name>folder</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DirApp</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the application folder.</comment>
        </property>
        <property>
            <name>DirTemp</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the temporary folder.</comment>
        </property>
        <property>
            <name>DirAssets</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TempFile</name>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>FILE_TYPE_MAP</name>
            <comment></comment>
            <returntype>java.util.Map</returntype>
        </field>
        <field>
            <name>sortType</name>
            <comment></comment>
            <returntype EnumType="true">com.tummosoft.jFileSupport.FileSortMode</returntype>
        </field>
        <field>
            <name>recognizedSignatures</name>
            <comment></comment>
            <returntype>java.lang.String[]</returntype>
        </field>
    </class>
    <class>
        <name>com.tummosoft.jFileSupport.InputStreamWrapper</name>
        <shortname>InputStream</shortname>
        <comment>A stream that you can read from. Usually you will pass the stream to a
 "higher level" object like TextReader that will handle the reading. You
 can use File.OpenInput to get a file input stream.</comment>
        <objectwrapper>java.io.InputStream</objectwrapper>
        <owner>process</owner>
        <method>
            <name>BytesAvailable</name>
            <comment>Returns an estimation of the number of bytes available without
 blocking.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment>Closes the stream.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ReadBytes</name>
            <comment>Reads up to MaxCount bytes from the stream and writes it to the given
 Buffer. The first byte will be written at StartOffset. Returns the
 number of bytes actually read. Returns -1 if there are no more bytes
 to read. Otherwise returns at least one byte. null         Example:&lt;code&gt;
Dim buffer(1024) As byte
count = InputStream1.ReadBytes(buffer, 0, buffer.length)&lt;/code&gt;</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Buffer</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>StartOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>MaxCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>InitializeFromBytesArray</name>
            <comment>Use File.OpenInput to get a file input stream. This method should be
 used to read data from a bytes array. Initializes the input stream
 and sets it to read from the specified bytes array. StartOffset - The
 first byte that will be read. MaxCount - Maximum number of bytes to
 read.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Buffer</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>StartOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>MaxCount</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.jFileSupport.OutputStreamWrapper</name>
        <shortname>OutputStream</shortname>
        <comment>A stream that you can write to. Usually you will pass the stream to a
 "higher level" object like TextWriter which will handle the writing. Use
 File.OpenOutput to get a file output stream.</comment>
        <objectwrapper>java.io.OutputStream</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Flush</name>
            <comment>Flushes any buffered data.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>InitializeToBytesArray</name>
            <comment>Use File.OpenOutput to get a file output stream. This method should
 be used to write data to a bytes array. StartSize - The starting size
 of the internal bytes array. The size will increase if needed.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>StartSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ToBytesArray</name>
            <comment>Returns a copy of the internal bytes array. Can only be used when the
 output stream was initialized with InitializeToBytesArray.</comment>
            <returntype>byte[]</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment>Closes the stream.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>WriteBytes</name>
            <comment>Writes the buffer to the stream. The first byte to be written is
 Buffer(StartOffset), and the last is Buffer(StartOffset + Length -
 1).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Buffer</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>StartOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.jFileSupport.TextWriterWrapper</name>
        <shortname>TextWriter</shortname>
        <comment>Writes text to the underlying stream.&lt;br/&gt;

 Example:&lt;code&gt;
Dim Writer As TextWriter
Writer.Initialize(File.OpenOutput(File.DirDefaultExternal, "1.txt", False))
Writer.WriteLine("This is the first line.")
Writer.WriteLine("This is the second line.")
Writer.Close&lt;/code&gt;</comment>
        <objectwrapper>java.io.BufferedWriter</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Write</name>
            <comment>Writes the given Text to the stream.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>WriteList</name>
            <comment>Writes each item in the list as a single line. Note that a value
 containing CRLF will be saved as two lines (which will return two
 item when read with ReadList). All values will be converted to
 strings.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>List</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>WriteLine</name>
            <comment>Writes the given Text to the stream followed by a new line character. null         Example:&lt;code&gt;
 	Dim Writer As TextWriter
	Writer.Initialize(File.OpenOutput(File.DirDefaultExternal, "1.txt", False))
	Writer.WriteLine("This is the first line.")
	Writer.WriteLine("This is the second line.")
	Writer.Close &lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Flush</name>
            <comment>Flushes any buffered data.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes this object by wrapping the given OutputStream using the
 UTF8 encoding.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>OutputStream</name>
                <type>java.io.OutputStream</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Initializes this object by wrapping the given OutputStream using the
 specified encoding.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>OutputStream</name>
                <type>java.io.OutputStream</type>
            </parameter>
            <parameter>
                <name>Encoding</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Close</name>
            <comment>Closes the stream.</comment>
            <returntype>void</returntype>
        </method>
    </class>
    <class>
        <name>com.tummosoft.jFileSupport.TextReaderWrapper</name>
        <shortname>TextReader</shortname>
        <comment>Reads text from the underlying stream.</comment>
        <objectwrapper>java.io.BufferedReader</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ReadLine</name>
            <comment>Reads the next line from the stream. The new line characters are not
 returned. Returns Null if there are no more characters to read.

 Example:&lt;code&gt;
	Dim Reader As TextReader
	Reader.Initialize(File.OpenInput(File.InternalDir, "1.txt"))
	Dim line As String
 	line = Reader.ReadLine
 	Do While line &lt;&gt; Null Log(line) line = Reader.ReadLine Loop
 Reader.Close&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes this object by wrapping the given InputStream using the
 UTF8 encoding.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>InputStream</name>
                <type>java.io.InputStream</type>
            </parameter>
        </method>
        <method>
            <name>Read</name>
            <comment>Reads characters from the stream and into the Buffer. Reads up to
 Length characters and puts them in the Buffer starting as
 StartOffset. Returns the actual number of characters read from the
 stream. Returns -1 if there are no more characters available.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Buffer</name>
                <type>char[]</type>
            </parameter>
            <parameter>
                <name>StartOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Ready</name>
            <comment>Tests whether there is at least one character ready for reading
 without blocking.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Initializes this object by wrapping the given InputStream using the
 specified encoding.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>InputStream</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>Encoding</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReadList</name>
            <comment>Reads the remaining text and returns a List object filled with the
 lines. Closes the stream when done.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>ReadAll</name>
            <comment>Reads all of the remaining text and closes the stream.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Skip</name>
            <comment>Skips the specified number of characters. Returns the actual number
 of characters that were skipped (which may be less than the specified
 value).</comment>
            <returntype>int</returntype>
            <parameter>
                <name>NumberOfCharaceters</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
    </class>
    <class>
        <name>com.tummosoft.jFileSupport.FileSortMode</name>
        <owner>process</owner>
        <method>
            <name>valueOf</name>
            <comment></comment>
            <returntype EnumType="true">com.tummosoft.jFileSupport.FileSortMode</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype EnumType="true">com.tummosoft.jFileSupport.FileSortMode[]</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>name</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>compareTo</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>E</type>
            </parameter>
        </method>
        <method>
            <name>ordinal</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <property>
            <name>DeclaringClass</name>
            <returntype>java.lang.Class</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.jFileSupport.FileInformation.FileSelectorType</name>
        <owner>process</owner>
        <method>
            <name>valueOf</name>
            <comment></comment>
            <returntype EnumType="true">com.tummosoft.jFileSupport.FileInformation.FileSelectorType</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype EnumType="true">com.tummosoft.jFileSupport.FileInformation.FileSelectorType[]</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>name</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>compareTo</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>E</type>
            </parameter>
        </method>
        <method>
            <name>ordinal</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <property>
            <name>DeclaringClass</name>
            <returntype>java.lang.Class</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.jSecuritySupport</name>
        <shortname>jSecuritySupport</shortname>
        <owner>process</owner>
        <method>
            <name>SHA256_File</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>file</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>isLinux</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SHA1_File</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>file</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>SHA256_Bytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>messageDigest2</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>file</name>
                <type>java.io.File</type>
            </parameter>
            <parameter>
                <name>algorithm</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>MD5_Bytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>SHA1_Bytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>MD5_File</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>file</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>messageDigest</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>algorithm</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SignatureAlgorithms</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isMac</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isWindows</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>jreVersion</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <property>
            <name>AvaliableMemoryMB</name>
            <returntype>long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AvaliableMemory</name>
            <returntype>long</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.jStringSupport</name>
        <shortname>jStringSupport</shortname>
        <owner>process</owner>
        <method>
            <name>format2</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>data</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>fillRightBlank2</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>digit</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>fillLeftBlank2</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>value</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>digit</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>format</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>data</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>match</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>regex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>fillLeftZero</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>digit</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>replaceAll</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>oldString</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>newString</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>separatedBySpace</name>
            <comment></comment>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>string</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>splitByComma</name>
            <comment></comment>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>string</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>decodeUnicode</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>unicode</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>fillRightBlank</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>digit</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>leftAlgin</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>nameLength</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>lastRegex</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>regex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>countNumberRegex</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>regex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>fillRightZero</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>digit</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>fillLeftBlank</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>digit</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>splitBySpace</name>
            <comment></comment>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>string</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>encodeUnicode</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>firstRegex</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>regex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <version>1.53</version>
</root>
