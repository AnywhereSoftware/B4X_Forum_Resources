AppType=JavaFX
Build1=Default,b4j.example
File1=Layout1.bjl
FileGroup1=Default Group
Group=Default Group
Library1=jcore
Library2=jfx
Library3=jshell
NumberOfFiles=1
NumberOfLibraries=3
NumberOfModules=0
Version=7.8
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 600
	#MainFormHeight: 600 
#End Region

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Dim pid As List
	Dim names As List
	Private btnUpdate As Button
	Private TableView1 As TableView
	Private btnDelete As Button
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("Layout1")
	MainForm.Title="JAR MANAGER"
	MainForm.Show
	
	pid.initialize
	names.initialize
	
	GetList
	
End Sub

Sub js_ProcessCompleted (Success As Boolean, ExitCode As Int, StdOut As String, StdErr As String)
	If Success Then
		PList(StdOut)
	Else
		Log(LastException)
	End If
End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub


Sub PList(inp As String)
	'Log(inp)

	pid.Clear
	names.clear
	Dim space, ret, slash As Int
	Dim start As Int=0
	Do While start<inp.length
		space = inp.IndexOf2(" ",start)
		If space > start Then
			ret=inp.IndexOf2(CRLF, space)
			If inp.SubString2(space+1,ret).Contains("jar") Then
				pid.Add(inp.SubString2(start,space))					
				slash=inp.LastIndexOf2("\",ret)
				names.add(inp.substring2(slash+1,ret-5).ToUpperCase) 'avoid the .jar
			End If		
		End If
		start=ret+1
	Loop
	'	Dim i As Int
	'For i=0 To pid.Size-1
	'	Log(pid.Get(i) & " " & names.Get(i))
	'Next
	TableView1.Items.CLEAR
	Dim i As Int
	TableView1.SetColumnHeader(0,"#")
	TableView1.SetColumnHeader(1,"ID")
	TableView1.SetColumnHeader(2,"PROCESS")
	For i=0 To pid.size-1
		Dim Row() As Object = Array (i, pid.Get(i), names.Get(i))
		TableView1.Items.Add(Row)
	Next
End Sub



Sub btnUpdate_Click
	GetList
End Sub

Sub GetList
	Dim js As Shell
	js.Initialize("js", "jps.exe",  Array As String("-l"))
	js.Run(1000)
End Sub


Sub btnDelete_Click
	If TableView1.SelectedRow >-1 Then
		Dim ROW() As Object =TableView1.Items.GET(TableView1.SelectedRow)
		Dim res As Int = fx.Msgbox2(MainForm, "Do you want to Stop program " & ROW(2) & "?" , "Yes",   "Yes", "Cancel", "No", fx.MSGBOX_WARNING)
		If res = fx.DialogResponse.POSITIVE Then
			StopProgram(ROW(1))
		End If
	Else
		fx.Msgbox(MainForm, "SELECT A PROGRAM TO STOP", "NO DATA")
	End If
End Sub

Sub StopProgram(id As String)
	Dim tk As Shell
	tk.Initialize("tk", "taskkill",  Array As String("/pid", id, "/f"))	
	tk.Run(1000)	
End Sub

Sub tk_ProcessCompleted (Success As Boolean, ExitCode As Int, StdOut As String, StdErr As String)
	If Success Then
		GetList
	Else
		Log(LastException)
	End If
End Sub

Sub btnQuit_Click
	ExitApplication
End Sub