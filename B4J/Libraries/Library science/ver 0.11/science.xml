<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <b4x_version>9.10</b4x_version>
  <dependsOn>jcore</dependsOn>
  <class b4a_type="StaticCode">
    <name>b4j.example.constans</name>
    <shortname>Constans</shortname>
    <objectwrapper>java.lang.Class</objectwrapper>
    <method>
      <name DesignerName="AtomicMass">_atomicmass</name>
      <comment>unit of atomic mass
unit kg
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="BohrRadius">_bohrradius</name>
      <comment>Bohr radius
unit m
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="BoltzmannConstant">_boltzmannconstant</name>
      <comment>Boltzmann constant
unit J/K
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="ChargeElectron">_chargeelectron</name>
      <comment>electron charge
unit C
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="CirculationQuantun">_circulationquantun</name>
      <comment>Circulation quantum
unit J/Hz*kg
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="ClassicalElectronBeam">_classicalelectronbeam</name>
      <comment>Kclassical electron radius
unit metr
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="ComptonWavelengthElectron">_comptonwavelengthelectron</name>
      <comment>Compton wavelength of a electron
unit m
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="ComptonWavelengthNeutron">_comptonwavelengthneutron</name>
      <comment>Compton wavelength of a neutron
unit m
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="ComptonWavelengthProton">_comptonwavelengthproton</name>
      <comment>Compton wavelength of a proton
unit m
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="DeuteronMass">_deuteronmass</name>
      <comment>Mass Deuter
unit MeV/c2
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="EarthAcceleration">_earthacceleration</name>
      <comment>Standard Earth acceleration
unit m/s^2
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="Electrical_permeability_vacuum">_electrical_permeability_vacuum</name>
      <comment>Electrical permeability of vacuum
unit F/m
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="ElectronMass">_electronmass</name>
      <comment>Mass electron
unit kg
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="ElectrostaticConstant">_electrostaticconstant</name>
      <comment>electrostatic constant
unit Nm^2/C^2
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="FaradayConst">_faradayconst</name>
      <comment>Faraday constant
unit C/mol
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="FirstConstRadiation">_firstconstradiation</name>
      <comment>The first constant of radiation
unit W*m^2
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="GasConstant">_gasconstant</name>
      <comment>Gas constant R
unit J/mol*K
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="GravitationalConstant">_gravitationalconstant</name>
      <comment>Gravitational constant
unit kg/s^2
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="Magnetic_permeability_vacuum">_magnetic_permeability_vacuum</name>
      <comment>Magnetic permeability of vacuum
unit N/A-2
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="MagneticFluxQuantum">_magneticfluxquantum</name>
      <comment>Magnetic flux quantum
unit Wb
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="MagnetonBohra">_magnetonbohra</name>
      <comment>Magneton Bohra
unit Hz/T
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="NuclearMagneton">_nuclearmagneton</name>
      <comment>Nuclear magneton
unit Mhz/T
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="NumberAvogarda">_numberavogarda</name>
      <comment>Number Avogarda
unit mol^-1
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="NumberLoschmidta">_numberloschmidta</name>
      <comment>Number Loschmidta
unit m^-3
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="PI">_pi</name>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="PI50">_pi50</name>
      <comment>accuracy up to 50 decimal places
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="Planca">_planca</name>
      <comment>unit J/Hz
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="Process_Globals">_process_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ProtonMass">_protonmass</name>
      <comment>Mass proton
unit kg
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="RydbergConst">_rydbergconst</name>
      <comment>Rydberg's constant (Rydberg wave number)
unit m^-1
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="SecondConstRadiation">_secondconstradiation</name>
      <comment>The second constant of radiation
unit W*m^2
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="SpecifiChargeElectron">_specifichargeelectron</name>
      <comment>lelectron specific charge
unit C/kg
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="SpeedLight">_speedlight</name>
      <comment>unit m/s
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="StefanBoltzmanConst">_stefanboltzmanconst</name>
      <comment>Stefan-Boltzmann constant
unit W/(m2 · K4)
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="SubtleStructureConst">_subtlestructureconst</name>
      <comment>Subtle structure constant
unit -
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="UniversalGasConst">_universalgasconst</name>
      <comment>Universal gas constant
unit J/(mol · K)
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="VPGmoleNormalConditions">_vpgmolenormalconditions</name>
      <comment>Volume of perfect gas mole under normal conditions
unit m3/mol
</comment>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="WienaConstant">_wienaconstant</name>
      <comment>Wiena's constant
unit mK
</comment>
      <returntype>double</returntype>
    </method>
  </class>
  <class b4a_type="StaticCode">
    <name>b4j.example.energyconvert</name>
    <shortname>EnergyConvert</shortname>
    <objectwrapper>java.lang.Class</objectwrapper>
    <method>
      <name DesignerName="eVtoHz">_evtohz</name>
      <returntype>double</returntype>
      <parameter>
        <name>eV</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="eVtoJ">_evtoj</name>
      <returntype>double</returntype>
      <parameter>
        <name>eV</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="eVtoK">_evtok</name>
      <returntype>double</returntype>
      <parameter>
        <name>eV</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="eVtokg">_evtokg</name>
      <returntype>double</returntype>
      <parameter>
        <name>eV</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="eVtou">_evtou</name>
      <returntype>double</returntype>
      <parameter>
        <name>eV</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="HztoeV">_hztoev</name>
      <returntype>double</returntype>
      <parameter>
        <name>Hz</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="HztoJ">_hztoj</name>
      <returntype>double</returntype>
      <parameter>
        <name>Hz</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="HztoK">_hztok</name>
      <returntype>double</returntype>
      <parameter>
        <name>Hz</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Hztokg">_hztokg</name>
      <returntype>double</returntype>
      <parameter>
        <name>Hz</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Hztou">_hztou</name>
      <returntype>double</returntype>
      <parameter>
        <name>Hz</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object. You can add parameters to this method if needed.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="JtoeV">_jtoev</name>
      <returntype>double</returntype>
      <parameter>
        <name>J</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="JtoHz">_jtohz</name>
      <returntype>double</returntype>
      <parameter>
        <name>J</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="JtoK">_jtok</name>
      <returntype>double</returntype>
      <parameter>
        <name>J</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Jtokg">_jtokg</name>
      <returntype>double</returntype>
      <parameter>
        <name>J</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Jtou">_jtou</name>
      <returntype>double</returntype>
      <parameter>
        <name>J</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="kgtoeV">_kgtoev</name>
      <returntype>double</returntype>
      <parameter>
        <name>kg</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="kgtoHz">_kgtohz</name>
      <returntype>double</returntype>
      <parameter>
        <name>kg</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="kgtoJ">_kgtoj</name>
      <comment>_________________________________________
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>kg</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="kgtoK">_kgtok</name>
      <returntype>double</returntype>
      <parameter>
        <name>kg</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="kgtou">_kgtou</name>
      <returntype>double</returntype>
      <parameter>
        <name>kg</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KtoeV">_ktoev</name>
      <returntype>double</returntype>
      <parameter>
        <name>K</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KtoHz">_ktohz</name>
      <returntype>double</returntype>
      <parameter>
        <name>K</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KtoJ">_ktoj</name>
      <returntype>double</returntype>
      <parameter>
        <name>K</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Ktokg">_ktokg</name>
      <returntype>double</returntype>
      <parameter>
        <name>K</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Ktou">_ktou</name>
      <returntype>double</returntype>
      <parameter>
        <name>K</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Process_Globals">_process_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="utoeV">_utoev</name>
      <returntype>double</returntype>
      <parameter>
        <name>u</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="utoHz">_utohz</name>
      <returntype>double</returntype>
      <parameter>
        <name>u</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="utoJ">_utoj</name>
      <comment>_________________________________________
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>u</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="utoK">_utok</name>
      <returntype>double</returntype>
      <parameter>
        <name>u</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="utokg">_utokg</name>
      <returntype>double</returntype>
      <parameter>
        <name>u</name>
        <type>double</type>
      </parameter>
    </method>
  </class>
  <class b4a_type="StaticCode">
    <name>b4j.example.math</name>
    <shortname>Math</shortname>
    <objectwrapper>java.lang.Class</objectwrapper>
    <method>
      <name DesignerName="ArcLengthWheel">_arclengthwheel</name>
      <comment>arc length on the wheel
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>sinus</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ArcLengthWheel2">_arclengthwheel2</name>
      <comment>arc length on the wheel, PI accuracy up to 50 decimal places
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>sinus</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CircleSliceField">_circleslicefield</name>
      <comment>circle slice field
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>sinus</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CircleSliceField2">_circleslicefield2</name>
      <comment>circle slice field, PI accuracy up to 50 decimal places
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>sinus</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CuboidField">_cuboidfield</name>
      <comment>cuboid field
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>a</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>b</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>c</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CylinderField">_cylinderfield</name>
      <comment>cylinder field
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CylinderField2">_cylinderfield2</name>
      <comment>cylinder field, PI accuracy up to 50 decimal places
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CylinderVolume">_cylindervolume</name>
      <comment>cylinder volume
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CylinderVolume2">_cylindervolume2</name>
      <comment>cylinder volume, PI accuracy up to 50 decimal places
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DiamondField">_diamondfield</name>
      <comment>diamond field
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>diagonal1</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>diagonal2</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FieldSimplePrism">_fieldsimpleprism</name>
      <comment>field of simple prism
the circumference of the base is equal to the sum of all lengths of the sides
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>BaseCircumference</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ParallelogramField1">_parallelogramfield1</name>
      <comment>parallelogram field, side and height
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>sideA</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ParallelogramField2">_parallelogramfield2</name>
      <comment>parallelogram field, side1, side2 and angle between them
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>sideA</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>sideB</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>sinus</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ParallelogramField3">_parallelogramfield3</name>
      <comment>parallelogram field, diagonal1, diagonal2, angle
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>diagonal1</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>diagonal2</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>sinus</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Process_Globals">_process_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="PyramidSurface">_pyramidsurface</name>
      <comment>pyramid surface
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>BaseField</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="RadiusOnTrangle">_radiusontrangle</name>
      <comment>the radius described on the triangle
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>base</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>sinus</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SphereField">_spherefield</name>
      <comment>sphere field
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SphereField2">_spherefield2</name>
      <comment>sphere field, PI accuracy up to 50 decimal places
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SphereSurface">_spheresurface</name>
      <comment>sphere surface
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SphereSurface2">_spheresurface2</name>
      <comment>sphere surface, PI accuracy up to 50 decimal places
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TrapezoidField">_trapezoidfield</name>
      <comment>trapezoid field
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>sideA</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>sideB</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TrianglCircumference">_trianglcircumference</name>
      <comment>triangle circumference
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>a</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>b</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>c</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TriangleFieldEquilateral">_trianglefieldequilateral</name>
      <comment>equilateral triangle field
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>base</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TriangleHeightEquilateral">_triangleheightequilateral</name>
      <comment>height equilateral triangle field
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>base</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TripleField">_triplefield</name>
      <comment>triple field
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>base</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="VCos">_vcos</name>
      <comment>Cos value for a given angle
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>angle</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="VCtg">_vctg</name>
      <comment>Ctg value for a given angle
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>angle</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="VolumeCuboid">_volumecuboid</name>
      <comment>volume of cuboid
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>a</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>b</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>c</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="VolumeSimplePrism">_volumesimpleprism</name>
      <comment>surface of the straight prism
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>BaseField</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="VSin">_vsin</name>
      <comment>Sin value for a given angle
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>angle</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="VTg">_vtg</name>
      <comment>Tg value for a given angle
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>angle</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WheelArea">_wheelarea</name>
      <comment>wheel area
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WheelArea2">_wheelarea2</name>
      <comment>wheel area, PI accuracy up to 50 decimal places
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WheelCircumference">_wheelcircumference</name>
      <comment>wheel circumference
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WheelCircumference2">_wheelcircumference2</name>
      <comment>wheel circumference, PI accuracy up to 50 decimal places
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
  </class>
  <class b4a_type="StaticCode">
    <name>b4j.example.physics</name>
    <shortname>Physics</shortname>
    <objectwrapper>java.lang.Class</objectwrapper>
    <method>
      <name DesignerName="DYN_BuoyancyForce">_dyn_buoyancyforce</name>
      <comment>Buoyancy force
ro fluid density, V - the volume of the immersed part of the body
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>ro</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>V</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_CentrifugalCentripetalForce">_dyn_centrifugalcentripetalforce</name>
      <comment>centrifugal / centripetal force
m-mass, v-speed, r-radius
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>m</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>v</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_CentrifugalCentripetalForce2">_dyn_centrifugalcentripetalforce2</name>
      <comment>centrifugal / centripetal force
m-mass, w-angular velocity, r-radius
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>m</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>w</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_CoefficientFriction">_dyn_coefficientfriction</name>
      <comment>Coefficient of friction
T - friction force in newtons, N - force pressing down rubbing surfaces, in newtons
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>T</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>N</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_DefinitionDensity">_dyn_definitiondensity</name>
      <comment>Definition of density
m - mass, V - volume im m^3
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>m</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>V</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_DefinitionMomentum">_dyn_definitionmomentum</name>
      <comment>The definition of momentum
unit m/s
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>v</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>m</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_ForceFriction">_dyn_forcefriction</name>
      <comment>The force of friction
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>CoefficientFrictio</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Clampingforce</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_ForcePressureFluid">_dyn_forcepressurefluid</name>
      <comment>the force of pressure from the fluid
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>pressure</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>surfaceArea</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_KineticEnergy">_dyn_kineticenergy</name>
      <comment>Kinetic energy
m-mass, v-speed
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>m</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>v</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_PotentialEnergyGravity">_dyn_potentialenergygravity</name>
      <comment>The potential energy of gravity.
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>mass</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_SecondLawDynamics">_dyn_secondlawdynamics</name>
      <comment>The second law of dynamics
F - force in newtons, m - mass in kg
unit m/s^2
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>F</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>m</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_SpringForce">_dyn_springforce</name>
      <comment>spring force
k - elasticity coefficient, x - deformation (stretching Or compression)
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>k</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>x</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_Strength">_dyn_strength</name>
      <comment>Strength
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>deltaMomentum</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>deltaTime</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_Strength2">_dyn_strength2</name>
      <comment>Strength
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>mass</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Acceleratio</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DYN_Works">_dyn_works</name>
      <comment>Work
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Force</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Way</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>angle</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_CapacitanceFlatCapacitor">_ele_capacitanceflatcapacitor</name>
      <comment>capacitance of a flat capacitor
e0 - electric permeability of vacuum And medium [Fm].
S - surface area of the covers [m2].
d - distance between the covers [m].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>e0</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>S</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>d</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_CapacitorCapacity">_ele_capacitorcapacity</name>
      <comment>Capacitor capacity
C - capacity in farads [F]
Q - charge accumulated on the conductor Or the capacitor's cover (on the second cover there will be a charge of the same value, but with the opposite sign) [C]
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Q</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>U</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_CapacityHomogeneousSphere">_ele_capacityhomogeneoussphere</name>
      <comment>capacity of a homogeneous sphere [Fm⋅m=F].
e0 - electric permeability of vacuum And medium [Fm].
R - radius of the sphere [m].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>e0</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>R</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_CapacityHomogeneousSphere50">_ele_capacityhomogeneoussphere50</name>
      <comment>capacity of a homogeneous sphere, PI50
e0 - electric permeability of vacuum And medium [Fm].
R - radius of the sphere [m].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>e0</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>R</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_CoulombStrength">_ele_coulombstrength</name>
      <comment>Coulomb's strength
Q1, Q2 - load (in the SI system, coulombs)
R - distance between loads (in the SI system in meters)
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Q1</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Q2</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>R</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_ElectricalResistance">_ele_electricalresistance</name>
      <comment>Electrical resistance
U - voltage at the ends of the conductor
I - the intensity of the current flowing through the conductor
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>U</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>I</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_ElectricCurrentIntensity">_ele_electriccurrentintensity</name>
      <comment>Electric current intensity
q - charge flowing through the conductor (calculated across the cross section) in Coulombs
t - current flow time in seconds
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>q</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>time</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_ElectricCurrentWork">_ele_electriccurrentwork</name>
      <comment>Electric current work
U - voltage at the ends of the conductor
I - the intensity of the current flowing through the conductor
time - current flow time
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>U</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>I</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>time</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_EnergyElectrostaticField">_ele_energyelectrostaticfield</name>
      <comment>The energy of the electrostatic field
Q - load (in the SI system, coulombs)
C - capacity in farads
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Q</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>C</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_GuideCapacity">_ele_guidecapacity</name>
      <comment>Guide capacity
U - voltage between capacitor plates in volts [V]
V - potential of the conductor after introducing a charge on it Q [V]
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Q</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>V</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_PotentialAroundPointCharge">_ele_potentialaroundpointcharge</name>
      <comment>Potential around a point charge
Q - charge [C].
e0 - electric permeability [Fm=CVm].
r - distance of the tested point from the charge generating the field [m].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Q</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>e0</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ELE_TransistorWzmocnienie">_ele_transistorwzmocnienie</name>
      <comment>wzmocnienie tranzystora
ΔIk - przyrost natężenia prądu kolektora [A]
ΔIb - przyrost natężenie prądu bazy [A].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Ik</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Ib</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_Acceleration">_kin_acceleration</name>
      <comment>acceleration
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>deltaWay</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>deltaTime</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_Acceleration2">_kin_acceleration2</name>
      <comment>acceleration
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>WayEnd</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>WayStart</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>deltaTime</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_AngularSpeed">_kin_angularspeed</name>
      <comment>Angular speed
deltaAngle is in radian
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>deltaAngle</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>deltaTime</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_CentripetalAcceleration">_kin_centripetalacceleration</name>
      <comment>Centripetal acceleration
v - acceleration, r - radius of the circle
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>v</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_CircularMotion">_kin_circularmotion</name>
      <comment>Circular motion
v - speed, r - radius of the circle
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>v</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_CircularMotionAngle">_kin_circularmotionangle</name>
      <comment>Circular motion
angle expressed in radians
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>deltaWay</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_DiagonalProjection">_kin_diagonalprojection</name>
      <comment>Diagonal projection for earth
vo - initial velocity
alpha - angle that the initial velocity makes with the levely
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>v0</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>alfa</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_DiagonalProjection2">_kin_diagonalprojection2</name>
      <comment>Diagonal projection for other
vo - initial velocity
alpha - angle that the initial velocity makes with the levely
g - gravitational acceleration
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>v0</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>alfa</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>g</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_DiagonalProjectionDifferentAcceleration">_kin_diagonalprojectiondifferentacceleration</name>
      <comment>Diagonal projection for different acceleration
alpha - angle
t - time
v0 - initial velocity
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>alfa</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>t</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>v0</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>g</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_DiagonalProjectionInTime">_kin_diagonalprojectionintime</name>
      <comment>Diagonal projection in time
alpha - angle
t - time
v0 - initial velocity
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>alfa</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>t</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>v0</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_FloorPlan">_kin_floorplan</name>
      <comment>Floor plan
h - initial position of the body
v0 - initial velocity of the body
t - falling time of the body
result as map(x,h)
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>h</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>v0</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>t</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_HorizontalProjectionDifferentAcceleration">_kin_horizontalprojectiondifferentacceleration</name>
      <comment>Horizontal projection for different acceleration
t - falling time of the body
h0 - initial position of the body
v0 - initial velocity
g - gravitational acceleration
result as map(x,h)
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>h</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>v0</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>t</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>g</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_PeriodCircularMotion">_kin_periodcircularmotion</name>
      <comment>Period of circular motion (full revolution)
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Time</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>NumberRevolution</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_RoadRunSteadilyCirlce">_kin_roadrunsteadilycirlce</name>
      <comment>The road runs steadily in a circle
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>vAngular</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Time</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_RoadSteadyTraffic">_kin_roadsteadytraffic</name>
      <comment>The road is in steady traffic
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>vSpeed</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>time</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_Speed">_kin_speed</name>
      <comment>Speed
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>way</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>time</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_UniformlyVariableMotion">_kin_uniformlyvariablemotion</name>
      <comment>Uniformly variable motion
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>SpeedStart</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>SpeedEnd</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Time</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_UniformlyVariableMotion2">_kin_uniformlyvariablemotion2</name>
      <comment>Uniformly variable motion
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>SpeedStart</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Accelation</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Time</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_UniformlyVariableMotion3">_kin_uniformlyvariablemotion3</name>
      <comment>Uniformly variable motion
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>SpeedStart</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>SpeedEnd</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Accelation</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_VerticalProjection">_kin_verticalprojection</name>
      <comment>Vertical projection
t - falling time of the body
h0 - initial position of the body
v0 - initial velocity
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>ho</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>v0</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>t</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="KIN_VerticalProjectionDifferentAcceleration">_kin_verticalprojectiondifferentacceleration</name>
      <comment>Vertical projection for different acceleration
t - falling time of the body
h0 - initial position of the body
v0 - initial velocity
g - gravitational acceleration
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>ho</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>v0</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>t</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>g</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="MAG_EnergyMagnetostaticFieldInductor">_mag_energymagnetostaticfieldinductor</name>
      <comment>Energy of the magnetostatic field of an inductor
L coil inductance in henry
I - current in amperes [A]
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>L</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>I</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="MAG_FARCPMFCFC">_mag_farcpmfcfc</name>
      <comment>The force acting on a rectilinear conductor placed in a magnetic field if a current flows in the conductor
B - magnetic induction
I - current intensity
L - length of the part of the conductor located in the magnetic field
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>B</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>I</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>L</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>sinalfa</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="MAG_InfiniteConductorMagneticField">_mag_infiniteconductormagneticfield</name>
      <comment>Infinite conductor magnetic field
μ - magnetic permeability of the medium
I - current intensity
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>I</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>u</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>r</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="MAG_LorentzForce">_mag_lorentzforce</name>
      <comment>Lorentz force
v - particle velocity
q - particle charge
B - magnetic induction
alfa - angle between vectors of velocity v And magnetic induction B.
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>q</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>v</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>B</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>alfa</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="MAG_MagneticFieldInfinitelyLongSolenoid">_mag_magneticfieldinfinitelylongsolenoid</name>
      <comment>The magnetic field of an infinitely long solenoid
n - number of turns per unit length of the solenoid
μ - magnetic permeability of the medium
I - current intensity
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>u</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>n</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>I</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="MAG_MagneticFieldSolenoid">_mag_magneticfieldsolenoid</name>
      <comment>Magnetic field of a solenoid
alfa1, alfa2 - angles at which the ends of the solenoid are seen from the point where the field is determined
n - number of turns per unit length of the solenoid
μ - magnetic permeability of the medium
I - current intensity
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>u</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>n</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>I</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>alfa1</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>alfa2</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Process_Globals">_process_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="TER_EnergyHeating">_ter_energyheating</name>
      <comment>Energy of heating (cooling) a body - without phase transitions (i.e., without melting, solidification, evaporation, crystallization, etc.).
m - mass
t - temperature in °C
c - molar heat SI in J/molK
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>m</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>c</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>t</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TER_EnergyRequiredChange">_ter_energyrequiredchange</name>
      <comment> Energy required for phase change
L - heat of melting
Rp - heat of vaporization
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Rp</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>m</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TER_EnergyRequiredChange2">_ter_energyrequiredchange2</name>
      <comment> Energy required for phase change
L - heat of melting
Rp - heat of vaporization
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>L</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>m</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TER_FirstLawthermodynamics">_ter_firstlawthermodynamics</name>
      <comment> First law of thermodynamics
∆U - increase of internal energy of the system
Q - heat supplied To the system
W - work done over the system
result: ∆U
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Q</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>W</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TER_FirstLawthermodynamics2">_ter_firstlawthermodynamics2</name>
      <comment> First law of thermodynamics
∆U - increase of internal energy of the system
Q - heat supplied To the system
W - work done over the system
result: Q
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>deltaU</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>W</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TER_FirstLawthermodynamics3">_ter_firstlawthermodynamics3</name>
      <comment> First law of thermodynamics
∆U - increase of internal energy of the system
Q - heat supplied To the system
W - work done over the system
result: W
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>deltaU</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Q</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TER_InternalEnergyGas">_ter_internalenergygas</name>
      <comment>Internal energy of a perfect gas
Energy of non-interacting gas molecules
R - gas constant
n - number of moles of gas
T - absolute temperature (in kelvins)
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>R</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>n</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>T</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="TER_WorkIsobaricTransition">_ter_workisobarictransition</name>
      <comment>Work in the isobaric transition
V - volume
p - pressure
minus results from the fact that an increase in volume means that the system (gas) gives up energy
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>deltaV</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>p</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WAV_EquationHarmonicMotion">_wav_equationharmonicmotion</name>
      <comment>Equation of harmonic motion
x - swing
ω - circular frequency
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>w</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>x</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WAV_HarmonicSwing">_wav_harmonicswing</name>
      <comment>Harmonic swing
A - amplitude
w - circular frequency
T - period of vibration (wave)
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>A</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>w</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>T</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WAV_HarmonicSwing2">_wav_harmonicswing2</name>
      <comment>Harmonic swing
A,B - amplitude
w - circular frequency
T - period of vibration (wave)
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>A</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>B</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>w</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>T</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WAV_HarmonicSwing3">_wav_harmonicswing3</name>
      <comment>Harmonic swing
A - amplitude
w - circular frequency
T - period of vibration (wave)
alpha - the initial phase
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>A</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>alfa</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>w</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>T</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WAV_PeriodOscillationMathematicalPendulum">_wav_periodoscillationmathematicalpendulum</name>
      <comment>period of oscillation of a mathematical pendulum
l - the length of the pendulum in meters
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>l</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WAV_PeriodOscillationMathematicalPendulum2">_wav_periodoscillationmathematicalpendulum2</name>
      <comment>period of oscillation of a mathematical pendulum
l - the length of the pendulum in meters
PI with an accuracy of 50 places
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>l</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WAV_PotentialEnergyHarmonicMotion">_wav_potentialenergyharmonicmotion</name>
      <comment>Potential energy in harmonic motion
k - spring constant or other system responsible for returning to the equilibrium position.
x - swing
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>k</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>x</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WAV_SpeedHarmonicMotion">_wav_speedharmonicmotion</name>
      <comment>Speed in harmonic motion
T - period of vibration (wave)
A - amplitude
alfa - initial phase
ω - circular frequency,
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>A</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>w</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>T</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>alfa</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WAV_SpeedHarmonicMotion2">_wav_speedharmonicmotion2</name>
      <comment>Speed in harmonic motion
T - period of vibration (wave)
A - amplitude
alfa - initial phase
ω - circular frequency,
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>A</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>w</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>T</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>alfa</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WAV_WaveSpeed">_wav_wavespeed</name>
      <comment>wave speed (phase speed)
alfa - wavelength
T - period of vibration (wave)
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>alfa</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>T</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="WAV_WaveSpeed2">_wav_wavespeed2</name>
      <comment>wave speed (phase speed)
alfa - wavelength
f - frequency
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>alfa</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>f</name>
        <type>int</type>
      </parameter>
    </method>
  </class>
  <class b4a_type="StaticCode">
    <name>b4j.example.engineering</name>
    <shortname>Engineering</shortname>
    <objectwrapper>java.lang.Class</objectwrapper>
    <method>
      <name DesignerName="DURABULITY_7DaysSurfaceTemperature">_durabulity_7dayssurfacetemperature</name>
      <comment>the highest seven-day surface temperature
d - depth [mm],
T~amax - highest value of seven-day average maximum air temperature [oC],
ϕ - latitude of the meteorological station [o],
σa - standard deviation of T~amax [oC],
z - the table parameter of the standard normal distribution equal to 2.055 if the confidence level is 98% [-].
out: lowest pavement temperature at depth d [Celcius].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>d</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Tmax</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>fi</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>odch</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>z</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_AbsoluteDeformation">_durabulity_absolutedeformation</name>
      <comment>absolute deformation
lx - length of the measuring section at time x [m],
lo - initial length of the measuring section [m].
out in [m].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>lx</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>lo</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_AsphaltDecomposition">_durabulity_asphaltdecomposition</name>
      <comment>Index of asphalt decomposition
m - mass of sand added [g],
E - mass of emulsion [g].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>E</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>m</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_BendingMoment">_durabulity_bendingmoment</name>
      <comment>Bending moment
M - bending moment [N⋅m],
F - bending force [N],
Lr - support spacing [m].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>F</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>L</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_BendingSectionStrengthIndex">_durabulity_bendingsectionstrengthindex</name>
      <comment>bending section strength index
Ix - geometrical moment of inertia about the x-axis, coinciding with the section neutral axis [mm^4],
emax - maximum distance of the outermost fibers from the neutral axis [mm].
out: [mm3].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Ix</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>emax</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_BendingStrength">_durabulity_bendingstrength</name>
      <comment>Bending strength
M - bending moment [kGmm],
W - strength index [mm^3].
out: [kG/mm^2],
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>M</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>W</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_CreepStiffnessAsphalt">_durabulity_creepstiffnessasphalt</name>
      <comment>creep stiffness of asphalt
P - constant concentrated force [mN],
L - measurement length of the beam [mm],
B - width of specimen [mm],
H - specimen height [mm],
d60s - deflection after 60 s [mm].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>P</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>L</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>B</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>H</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>d60s</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_ElasticRecoil">_durabulity_elasticrecoil</name>
      <comment>elastic recoil
l - distance between ends of cut specimen [mm].
out in %'.
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>l</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_ElongationBar">_durabulity_elongationbar</name>
      <comment>elongation of the bar
P - force acting on the bar [N],
L - initial length [m],
F - cross-section of the bar [mm2],
E - Young's modulus of elasticity [N/mm^2].
out: [m]
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>P</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>L</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>F</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>E</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_ElongationBar2">_durabulity_elongationbar2</name>
      <comment>elongation of the bar
L - initial length [m],
E - Young's modulus of elasticity [N/mm^2],
x - stress [N/mm^2].
out: [m]
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>L</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>E</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>x</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_HardnessSchopper">_durabulity_hardnessschopper</name>
      <comment>hardness by Schopper method
h - ball imprint depth [cm].
out: Schopper hardness [kG/cm2],
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>h</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_ImpactStrength">_durabulity_impactstrength</name>
      <comment>impact strength
L - work required To break a normalized notched specimen [J],
A - cross-sectional area of the specimen at the notch [cm2].
out:  [J/cm2],
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>L</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>A</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_MinSurfaceTemperature">_durabulity_minsurfacetemperature</name>
      <comment>lowest surface temperature
Tamin - lowest air temperature [Celcius],
d - depth [mm],
fi - latitude of meteorological station [degrees],
odch - standard deviation of Tamin [Celsius],
z - table parameter of standard normal distribution equal to 2.055 if the confidence level is 98% [-].
out: lowest pavement temperature at depth d [Celcius].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>d</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>TdMin</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>TaMin</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>fi</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>odch</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>z</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_PeelStrength">_durabulity_peelstrength</name>
      <comment>peel strength
P - peel strength [N],
Ao - bonding width [m].
out: [Nm],
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>P</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Ao</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_RelativeElongation">_durabulity_relativeelongation</name>
      <comment>relative elongation
deltaLx - absolute deformation [m],
lo - initial length of the measurement section [m].
out: [%],
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>deltaLx</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>lo</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_ShearStrength">_durabulity_shearstrength</name>
      <comment>shear strength
P - force [N],
Ass - bonding area [m2].
out: [N/m^2],
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>P</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Ass</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_StiffnessRatioAsphalt">_durabulity_stiffnessratioasphalt</name>
      <comment>stiffness ratio of the asphalt
STX - stiffness modulus value at test temperature (measurement should be carried out every 10oC at the temperature from -30 To 50oC) [Pa],
ST50 - stiffness modulus value at 50oC [Pa].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>STX</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ST50</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DURABULITY_StrengthIndicator">_durabulity_strengthindicator</name>
      <comment>strength indicator
b - specimen width [mm],
h - thickness of specimen [mm].
out:  [mm3].
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>b</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>h</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Process_Globals">_process_globals</name>
      <returntype>String</returntype>
    </method>
  </class>
  <version>0.11</version>
  <author>Michal Knychalski</author>
</root>