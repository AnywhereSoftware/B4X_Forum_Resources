<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.05</doclet-version-NOT-library-version>
    <class>
        <name>flm.b4j.mqttbroker.MQTTBrokerExtended</name>
        <shortname>MQTTBrokerExtended</shortname>
        <owner>process</owner>
        <event>Authenticator(ClientID As String, Username As String, Password() As Byte) As Boolean</event>
        <event>Authorizator(ClientID As String, Username As String, Topic As String, Permission As String) As Boolean</event>
        <event>Connect(ClientID As String, Username As String, ProtocolName As String, ProtocolVersion As Byte, QOS As String, KeepAlive As Int, IsCleanSession As Boolean, IsDupFlag As Boolean, IsRetainFlag As Boolean, IsWillFlag As Boolean)</event>
        <event>Disconnect(ClientID As String, Username As String)</event>
        <event>ConnectionLost(ClientID As String, Username As String)</event>
        <event>LastWill(ClientID As String, Username As String, QOS As Byte, TopicName As String, Message() As Byte, IsRetainFlag As Boolean)</event>
        <event>Publish(ClientID As String, Username As String, QOS As String, TopicName As String, Message() As Byte, IsDupFlag As Boolean, IsRetainFlag As Boolean)</event>
        <event>Subscribe(ClientID As String, Username As String, RequestedQOS As String, TopicFilter As String)</event>
        <event>Unsubscribe(ClientID As String, Username As String, TopicFilter As String)</event>
        <method>
            <name>Start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Stop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>InternalPublish</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>TopicName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Payload</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>QOS</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>RetainFlag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetAuthorizator</name>
            <comment>Defines an event used to check the user's read or write permissions.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetAuthenticator</name>
            <comment>Defines an event used to validate the user's login.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AddToLog</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Msg</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Severity</name>
                <type>org.apache.log4j.Level</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>InitBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Port</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Authentication</name>
                <type>byte</type>
            </parameter>
            <parameter>
                <name>LogToFile</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>EventPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ConnectedClients</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <property>
            <name>LogLevel</name>
            <returntype>org.apache.log4j.Level</returntype>
            <parameter>
                <name>L</name>
                <type>org.apache.log4j.Level</type>
            </parameter>
            <comment>Gets or sets the minimum severity level of the information recorded in the log (default = LOG_LEVEL_INFO).</comment>
        </property>
        <field>
            <name>QOS_AT_MOST_ONCE</name>
            <comment>QOS 0 : It guarantees a best effort delivery. A message won't be acknowledged by the receiver or stored and redelivered by the sender.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>AUTHENTICATION_NO</name>
            <comment>No authentication is required. Anybody can subscribe and publish.</comment>
            <returntype>byte</returntype>
        </field>
        <field>
            <name>LOG_LEVEL_WARN</name>
            <comment></comment>
            <returntype>org.apache.log4j.Level</returntype>
        </field>
        <field>
            <name>LOG_LEVEL_ERROR</name>
            <comment></comment>
            <returntype>org.apache.log4j.Level</returntype>
        </field>
        <field>
            <name>LOG_LEVEL_INFO</name>
            <comment></comment>
            <returntype>org.apache.log4j.Level</returntype>
        </field>
        <field>
            <name>QOS_AT_LEAST_ONCE</name>
            <comment>QOS 1 : It is guaranteed that a message will be delivered at least once to the receiver. But the message can also be delivered more than once.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>QOS_EXACTLY_ONCE</name>
            <comment>QOS 2 : It guarantees that each message is received only once by the counterpart. It is the safest and also the slowest quality of service level.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>PERMISSION_WRITE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>PERMISSION_READ</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>LOG_LEVEL_DEBUG</name>
            <comment></comment>
            <returntype>org.apache.log4j.Level</returntype>
        </field>
        <field>
            <name>AUTHENTICATION_GUEST_ALLOWED</name>
            <comment>A client can authenticate with a username and password or remain anonymous. An event must be set with SetAuthenticator to validate the user login.</comment>
            <returntype>byte</returntype>
        </field>
        <field>
            <name>AUTHENTICATION_REQUIRED</name>
            <comment>Each client must authenticate with a username and password. An event must be set with SetAuthenticator to validate the user login.</comment>
            <returntype>byte</returntype>
        </field>
        <field>
            <name>LOG_LEVEL_TRACE</name>
            <comment></comment>
            <returntype>org.apache.log4j.Level</returntype>
        </field>
    </class>
    <version>2.1</version>
    <dependsOn>moquette-0.14</dependsOn>
</root>
