AppType=JavaFX
Build1=Default,b4j.example
File1=Addresses.zip
File2=AddressItem.bjl
File3=EditAddress.bjl
File4=Layout1.bjl
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
Group=Default Group
Library1=archiver
Library2=jcore
Library3=jfx
Library4=jxui
Library5=xui views
Library6=nitritenosqldb-b4xlib
Module1=AccessDB
Module2=EditAddress_Template
Module3=NE_Utils
Module4=QueryDB
NumberOfFiles=4
NumberOfLibraries=6
NumberOfModules=4
Version=8.8
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 950
	#MainFormHeight: 700 
#End Region

'Data imported from https://www.briandunning.com/sample-data/

#AdditionalJar: nitrite\nitrite-3.4.3
#AdditionalJar: nitrite\slf4j-api-1.7.30
#AdditionalJar: nitrite\slf4j-jdk14-1.7.30
#AdditionalJar: nitrite\h2-mvstore-1.4.200
#AdditionalJar: nitrite\jackson-core-2.12.1
#AdditionalJar: nitrite\jackson-databind-2.12.1
#AdditionalJar: nitrite\jackson-annotations-2.12.1
#AdditionalJar: nitrite\objenesis-3.1
#AdditionalJar: nitrite\podam-7.2.6.RELEASE

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private xui As XUI 
	Private AppName As String = "Nitrite Example 2"
	Private CLV As CustomListView
	Private btnFind As Button
	
	Public tfFirstName As B4XView
	Public tfLastName As B4XView
	Public tfCompanyName As B4XView
	Public tfAddress As B4XView
	Public tfCity As B4XView
	Public tfCounty As B4XView
	Public tfPostcode As B4XView
	Private lblSearchInfo As B4XView
	Private SortField As String
	Private SortAscending As Boolean = True
	Private btnNew As B4XView
	
	Private Dialog As B4XDialog
	Private MenuBar1 As MenuBar
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("Layout1")
	MainForm.Show
	MainForm.Title = AppName & " Address Information"
	xui.SetDataFolder(AppName)
	
	SortField = AccessDB.DOC_FIRST_NAME
	
	If File.Exists(xui.DefaultFolder,"Addresses.db") = False Then
		UpdateDataBase
	End If
	
	CreateMenu
	Dialog.Initialize(MainForm.RootPane)
	
	AccessDB.Initialize
	btnFind_Click
	
End Sub

Private Sub CreateMenu
	MenuBar1.Menus.Clear
	
	Dim FileMenu As Menu
	FileMenu.Initialize("File","MM")
	
	Dim F As MenuItem
	F.Initialize("Reload initial data","MM")
	
	FileMenu.MenuItems.Add(F)
	
	MenuBar1.Menus.Add(FileMenu)
End Sub

Private Sub MM_Action
	Dim MI As MenuItem = Sender
	
	Select MI.Text
		Case "Reload initial data"
			btnClear_Click
			AccessDB.DB.Close
			UpdateDataBase
			AccessDB.Initialize
			btnClear_Click
	End Select
End Sub

Private Sub UpdateDataBase
	Log("Updating database")
	Dim FileName As String  = "Addresses.zip"
	File.Copy(File.DirAssets,FileName,xui.DefaultFolder,FileName)
	Dim Arc As Archiver
	Arc.UnZip(xui.DefaultFolder,FileName,xui.DefaultFolder,"")
	File.Delete(xui.DefaultFolder,FileName)
End Sub

Private Sub btnFind_Click
	UpdateTable(QueryDB.GetAddresses(SortField,SortAscending))
End Sub

'Add new record
Private Sub btnNew_Click
	'Create an empty document to pass
	Dim Doc As NitriteDocument = NitriteDocument_Static.CreateDocument3
	
	Dim ED As EditAddress_Template
	ED.Initialize(MainForm)
	ED.InitialData = Doc
	Dialog.Title = "Add Address"
	
	Wait For (Dialog.ShowTemplate(ED,"Add","","Cancel")) Complete (Resp As Int)

	If Resp = xui.DialogResponse_Cancel Then Return

	Dim Coll As NitriteCollection = AccessDB.DB.GetCollection(AccessDB.COLLECTION_NAME)
	Coll.Insert(ED.UpdatedData)
	UpdateTable(QueryDB.GetAddresses(SortField,SortAscending))
End Sub

Private Sub MainForm_CloseRequest (EventData As Event)
	AccessDB.DB.Close
End Sub

Private Sub lblSort_MouseClicked (EventData As MouseEvent)
	Dim lbl As B4XView = Sender
	If SortField = lbl.Tag Then
		SortAscending = Not(SortAscending)
	Else
		SortAscending = True
		SortField = lbl.Tag
	End If
	btnFind_Click
End Sub

Private Sub btnClear_Click
	For i = 0 To MainForm.RootPane.NumberOfNodes -1
		Dim V As B4XView = MainForm.RootPane.GetNode(i)
		If V Is TextField Then
			V.Text = ""
		End If
	Next
	SortField = AccessDB.DOC_FIRST_NAME
	btnFind.Enabled = True
	btnFind_Click
End Sub

Private Sub UpdateTable(Addresses As List)
	CLV.Clear
	lblSearchInfo.Text = $"Showing ${Addresses.Size} of ${AccessDB.DB.GetCollection(AccessDB.COLLECTION_NAME).Size}"$
	For Each Doc As NitriteDocument In Addresses
		Dim P As B4XView = xui.CreatePanel("")
		P.SetLayoutAnimated(0,0,0,CLV.GetBase.Width,25)
		P.LoadLayout("AddressItem")
		P.GetView(0).Text = NE_Utils.NotNull(Doc.Get(AccessDB.DOC_FIRST_NAME))
		P.GetView(1).Text = NE_Utils.NotNull(Doc.Get(AccessDB.DOC_LAST_NAME))
		P.GetView(2).Text = NE_Utils.NotNull(Doc.Get(AccessDB.DOC_COMPANY_NAME))
		P.GetView(3).Text = NE_Utils.NotNull(Doc.Get(AccessDB.DOC_ADDRESS))
		P.GetView(4).Text = NE_Utils.NotNull(Doc.Get(AccessDB.DOC_CITY))
		P.GetView(5).Text = NE_Utils.NotNull(Doc.Get(AccessDB.DOC_COUNTY))
		P.GetView(6).Text = NE_Utils.NotNull(Doc.Get(AccessDB.DOC_POSTCODE))
		CLV.Add(P,Doc)
	Next
End Sub

Private Sub tfText_Action
	btnFind_Click
End Sub

Private Sub CLV_ItemClick (Index As Int, Value As Object)
	Dim Doc As NitriteDocument = Value
	
	Dim ED As EditAddress_Template
	ED.Initialize(MainForm)
	ED.InitialData = Doc
	
	Dialog.Title = "Edit Address"
	
	Wait For (Dialog.ShowTemplate(ED,"Update","Delete","Cancel")) Complete (Resp As Int)

	If Resp = xui.DialogResponse_Cancel Then Return

	Dim Coll As NitriteCollection = AccessDB.DB.GetCollection(AccessDB.COLLECTION_NAME)
	If Resp = xui.DialogResponse_Negative Then
		'Delete the current document
		Coll.Remove(Doc)
	Else If Resp = xui.DialogResponse_Positive Then
		'Update the current document
		Coll.Update(ED.UpdatedData)
	End If
	UpdateTable(QueryDB.GetAddresses(SortField,SortAscending))
	
End Sub
