B4J=true
Group=Default Group
ModulesStructureVersion=1
Type=Class
Version=8.8
@EndOfDesignText@
#IgnoreWarnings:12
'Class Module
Sub Class_Globals
	'Private fx As JFX ' Uncomment if required. For B4j only
	Private Tjo As JavaObject
End Sub
'Initializes the object. You can add parameters to this method if needed.
Public Sub Initialize
	'This is an autogenerated constructor, there may not be a matching constructor in the class, you will then have to remove the next line of code and use SetObject to wrap the object
	Tjo.InitializeStatic("org.dizitart.no2.Nitrite")
End Sub

'Returns the wrapped object as JavaObject
Public Sub AsJavaObject As JavaObject
	Return Tjo
End Sub

'Closes the database.
Public Sub Close
	Tjo.RunMethod("close",Null)
End Sub
'Commits the changes.
Public Sub Commit
	Tjo.RunMethod("commit",Null)
End Sub
'Compacts store by moving all chunks next to each other.
Public Sub Compact
	Tjo.RunMethod("compact",Null)
End Sub
'Opens a named collection from the store.
Public Sub GetCollection(Name As String) As NitriteCollection
	Dim Wrapper As NitriteCollection
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("getCollection",Array As Object(Name)))
	Return Wrapper
End Sub
'Provides contextual information for the nitrite database instance.
Public Sub GetContext As NitriteContext
	Dim Wrapper As NitriteContext
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("getContext",Null))
	Return Wrapper
End Sub
'Returns the wrapped object as Object
Public Sub GetObject As Object
	Return Tjo
End Sub
'Public Sub GetRepository(ClassObject As Object) As ObjectRepository
'	Dim JO As JavaObject = ClassObject
'	Dim Wrapper As ObjectRepository
'	Wrapper.Initialize
'	Wrapper.SetObject(Tjo.RunMethod("getRepository",Array(JO.RunMethod("getClass",Null))))
'	Return Wrapper
'End Sub

'Checks whether a particular NitriteCollection exists in the store.
Public Sub HasCollection(Name As String) As Boolean
	Return Tjo.RunMethod("hasCollection",Array As Object(Name))
End Sub
'Checks whether the store has any unsaved changes.
Public Sub HasUnsavedChanges As Boolean
	Return Tjo.RunMethod("hasUnsavedChanges",Null)
End Sub
'Checks whether the store is closed.
Public Sub IsClosed As Boolean
	Return Tjo.RunMethod("isClosed",Null)
End Sub
'Gets the set of all NitriteCollections' names saved in the store.
Public Sub ListCollectionNames As List
	Dim Jo As JavaObject = Tjo.RunMethod("listCollectionNames",Null)
	
	Dim L As List
	L.Initialize
	Dim It As JavaObject = Jo.RunMethod("iterator",Null)
	Do While It.RunMethod("hasNext",Null)
		L.Add(It.RunMethod("next",Null))
	Loop
	Return L
End Sub

'Checks if a specific username and password combination is valid to access the database.
Public Sub ValidateUser(UserId As String, Password As String) As Boolean
	Return Tjo.RunMethod("validateUser",Array As Object(UserId, Password))
End Sub

'Comment if not needed
'Set the underlying Object, must be of correct type
Public Sub SetObject(Obj As Object)
	Tjo = Obj
End Sub

