B4J=true
Group=Default Group
ModulesStructureVersion=1
Type=Class
Version=8.8
@EndOfDesignText@
#IgnoreWarnings:12
'Class Module
Sub Class_Globals
	'Private fx As JFX ' Uncomment if required. For B4j only
	Private Tjo As JavaObject
End Sub
'Initializes the object. You can add parameters to this method if needed.
Public Sub Initialize
	'This is an autogenerated constructor, there may not be a matching constructor in the class, you will then have to remove the next line of code and use SetObject to wrap the object
	Tjo.InitializeStatic("org.dizitart.no2.NitriteBuilder")
End Sub

'Returns the wrapped object as JavaObject
Public Sub AsJavaObject As JavaObject
	Return Tjo
End Sub
'Sets the size of the write buffer, in KB disk space (for file-based stores).
Public Sub AutoCommitBufferSize(Size As Int) As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("autoCommitBufferSize",Array As Object(Size)))
	Return Wrapper
End Sub
'Compresses data before writing using the LZF algorithm.
Public Sub Compressed As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("compressed",Null))
	Return Wrapper
End Sub
'Disables auto commit.
Public Sub DisableAutoCommit As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("disableAutoCommit",Null))
	Return Wrapper
End Sub
'Disables auto compact before close.
Public Sub DisableAutoCompact As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("disableAutoCompact",Null))
	Return Wrapper
End Sub
'Disables JVM shutdown hook for closing the database gracefully.
Public Sub DisableShutdownHook As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("disableShutdownHook",Null))
	Return Wrapper
End Sub
'Enables off-heap storage for in-memory database.
Public Sub EnableOffHeapStorage As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("enableOffHeapStorage",Null))
	Return Wrapper
End Sub
'Sets file name for the file based store.
Public Sub FilePath(DirName As String, FileName As String) As NitriteBuilder
	'Code for File Object Creation
	Dim TFile As JavaObject
	TFile.InitializeNewInstance("java.io.File",Array(DirName,FileName))

	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("filePath",Array As Object(TFile)))
	Return Wrapper
End Sub
'Sets file name for the file based store.
Public Sub FilePath2(Path As String) As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("filePath",Array As Object(Path)))
	Return Wrapper
End Sub
'Returns the wrapped object as Object
Public Sub GetObject As Object
	Return Tjo
End Sub
'Sets a custom NitriteMapper implementation.
Public Sub NitriteMapper(TNitriteMapper As JavaObject) As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("nitriteMapper",Array As Object(TNitriteMapper)))
	Return Wrapper
End Sub
'Opens or creates a new database.
Public Sub OpenOrCreate As Nitrite
	Dim Wrapper As Nitrite
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("openOrCreate",Null))
	Return Wrapper
End Sub
'Opens or creates a new database.
Public Sub OpenOrCreate2(UserId As String, Password As String) As JavaObject
	Return Tjo.RunMethod("openOrCreate",Array As Object(UserId, Password))
End Sub
'Opens the file in read-only mode.
Public Sub ReadOnly As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("readOnly",Null))
	Return Wrapper
End Sub
'Registers a jackson Module to the JacksonFacade.
Public Sub RegisterModule(Module As JavaObject) As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("registerModule",Array As Object(Module)))
	Return Wrapper
End Sub
'Sets a custom TextIndexingService implementation to be used during full text indexing and full text search.
Public Sub TextIndexingService(TTextIndexingService As JavaObject) As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("textIndexingService",Array As Object(TTextIndexingService)))
	Return Wrapper
End Sub
'Sets a custom TextTokenizer for the in-built TextIndexingService.
Public Sub TextTokenizer(TTextTokenizer As JavaObject) As NitriteBuilder
	Dim Wrapper As NitriteBuilder
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("textTokenizer",Array As Object(TTextTokenizer)))
	Return Wrapper
End Sub

'Comment if not needed
'Set the underlying Object, must be of correct type
Public Sub SetObject(Obj As Object)
	Tjo = Obj
End Sub

