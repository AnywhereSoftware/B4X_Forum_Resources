B4J=true
Group=Default Group
ModulesStructureVersion=1
Type=StaticCode
Version=4.19
@EndOfDesignText@
'Static code module
Sub Process_Globals
 
	'------------------------------------
	Public x_size As Int = 128
	Private x_max As Int = x_size
	Private x_min As Int = 0
	Public y_size As Int = 32
	Private y_max As Int = 8
	Private y_min As Int = 0
	Private buffer(x_size * y_size ) As Int
	Public bus As JavaObject 
	Public device As JavaObject


	Private Set_Lower_Column_Start_Address_CMD As Byte = 0x00 
	Private Set_Reset As Byte = 0x03
	Private Set_Higher_Column_Start_Address_CMD As Byte = 0x10

	Private Set_Memory_Addressing_Mode_CMD As Byte = 0x20
'	Private Horizontal_Addressing_Mode As Byte = 0x00
'	Private Vertical_Addressing_Mode As Byte = 0x01
	Private Page_Addressing_Mode As Byte = 0x02


'	Private Set_Column_Address_CMD As Byte = 0x21

	Private Set_Page_Address_CMD As Byte = 0x22
	Private Page_Address_Start As Byte = 0x20
	Private Page_Address_End As Byte = 0x7D


	Private Set_Display_Start_Line_CMD As Byte = 0x40

	Private Set_Contrast_Control_CMD As Byte = 0x81
	Private Contrast_Level As Byte = 0xff '00-ff

	Private Set_Charge_Pump_CMD As Byte = 0x8D
 'Private Disable_Charge_Pump As Byte = 0x10
	Private Enable_Charge_Pump As Byte = 0x14
		
	Private Set_Segment_Remap_CMD As Byte = 0xA0 'A1:top/down A0:down/top
	'Private Column_Address_0_Mapped_to_SEG0 As Byte = 0x00
	Private Column_Address_0_Mapped_to_SEG127 As Byte = 0x01

	Private Set_Entire_Display_ON_CMD As Int = 0xA4
	Private Normal_Display As Byte = 0x00

	Private Set_Normal_or_Inverse_Display_CMD As Int = 0xA6
	Private Non_Inverted_Display As Byte = 0x00
'	Private Inverted_Display As Byte = 0x01

	Private Set_Multiplex_Ratio_CMD As Int = 0xA8
 Private Multiplex_Ratio As Int = 0x10
		
	Private Set_Display_ON_or_OFF_CMD As Int = 0xAE
	Private Display_OFF As Byte = 0x00
	Private Display_ON As Byte = 0x01

	Private Set_Page_Start_Address_CMD As Int = 0xB0

	Private Set_COM_Output_Scan_Direction_CMD As Int = 0xC8 'use 0xC0 to flip horizontal
'	Private Scan_from_COM0_to_63 As Byte = 0x00
	Private Scan_from_COM63_to_0 As Byte = 0x08

	Private Set_Display_Offset_CMD As Int = 0xD3
	Private Display_Offset As Int = 0x00	
	
	Private Set_Display_Clock_CMD As Int = 0xD5
	Private Display_Clock_Divide_Ratio As Byte = 0x00
	Private Display_Clock_Oscillator_Frequency As Byte = 0x0F
	
	
	Private Set_Pre_charge_Period_CMD As Int = 0xD9
	Private Precharge_Period As Byte = 0xF1
	
	
	Private Set_Common_HW_Config_CMD As Int = 0xDA
	Private Common_HW_Config As Byte = 0x02
	
	Private Set_VCOMH_Level_CMD As Int = 0xDB
	Private VCOMH_Deselect_Level As Byte = 0x40
	
	Private Set_NOP_CMD As Int = 0xE3

	Private Ascii() As Int
	Ascii = Array As Int( _ ' Public domain font
	0x00, 0x00, 0x00, 0x00, 0x00, _ ' ( 0) - 0x0020 Space
	0x00, 0x00, 0x4F, 0x00, 0x00, _ ' ( 1) ! - 0x0021 Exclamation Mark
	0x00, 0x07, 0x00, 0x07, 0x00, _ ' ( 2) " - 0x0022 Quotation Mark
	0x14, 0x7F, 0x14, 0x7F, 0x14, _ ' ( 3) # - 0x0023 Number Sign
	0x24, 0x2A, 0x7F, 0x2A, 0x12, _ ' ( 4) 0x - 0x0024 Dollar Sign
	0x23, 0x13, 0x08, 0x64, 0x62, _ ' ( 5) % - 0x0025 Percent Sign
	0x36, 0x49, 0x55, 0x22, 0x50, _ ' ( 6) & - 0x0026 Ampersand
	0x00, 0x05, 0x03, 0x00, 0x00, _ ' ( 7) ' - 0x0027 Apostrophe
	0x00, 0x1C, 0x22, 0x41, 0x00, _ ' ( 8) ( - 0x0028 Left Parenthesis
	0x00, 0x41, 0x22, 0x1C, 0x00, _ ' ( 9) ) - 0x0029 Right Parenthesis
	0x14, 0x08, 0x3E, 0x08, 0x14, _ ' ( 10) * - 0x002A Asterisk
	0x08, 0x08, 0x3E, 0x08, 0x08, _ ' ( 11) + - 0x002B Plus Sign
	0x00, 0x50, 0x30, 0x00, 0x00, _ ' ( 12) , - 0x002C Comma
	0x08, 0x08, 0x08, 0x08, 0x08, _ ' ( 13) - - 0x002D Hyphen - Minus
	0x00, 0x60, 0x60, 0x00, 0x00, _ ' ( 14) . - 0x002E Full Stop
	0x20, 0x10, 0x08, 0x04, 0x02, _ ' ( 15) / - 0x002F Solidus
	0x3E, 0x51, 0x49, 0x45, 0x3E, _ ' ( 16) 0 - 0x0030 Digit Zero
	0x00, 0x42, 0x7F, 0x40, 0x00, _ ' ( 17) 1 - 0x0031 Digit One
	0x42, 0x61, 0x51, 0x49, 0x46, _ ' ( 18) 2 - 0x0032 Digit Two
	0x21, 0x41, 0x45, 0x4B, 0x31, _ ' ( 19) 3 - 0x0033 Digit Three
	0x18, 0x14, 0x12, 0x7F, 0x10, _ ' ( 20) 4 - 0x0034 Digit Four
	0x27, 0x45, 0x45, 0x45, 0x39, _ ' ( 21) 5 - 0x0035 Digit Five
	0x3C, 0x4A, 0x49, 0x49, 0x30, _ ' ( 22) 6 - 0x0036 Digit Six
	0x01, 0x71, 0x09, 0x05, 0x03, _ ' ( 23) 7 - 0x0037 Digit Seven
	0x36, 0x49, 0x49, 0x49, 0x36, _ ' ( 24) 8 - 0x0038 Digit Eight
	0x06, 0x49, 0x49, 0x29, 0x1E, _ ' ( 25) 9 - 0x0039 Dight Nine
	0x00, 0x36, 0x36, 0x00, 0x00, _ ' ( 26) as - 0x003A Colon
	0x00, 0x56, 0x36, 0x00, 0x00, _ ' ( 27) - 0x003B Semicolon
	0x08, 0x14, 0x22, 0x41, 0x00, _ ' ( 28) < - 0x003C Less - Than Sign
	0x14, 0x14, 0x14, 0x14, 0x14, _ ' ( 29) = - 0x003D Equals Sign
	0x00, 0x41, 0x22, 0x14, 0x08, _ ' ( 30) > - 0x003E Greater - Than Sign
	0x02, 0x01, 0x51, 0x09, 0x06, _ ' ( 31) ? - 0x003F Question Mark
	0x32, 0x49, 0x79, 0x41, 0x3E, _ ' ( 32) @ - 0x0040 Commercial At
	0x7E, 0x11, 0x11, 0x11, 0x7E, _ ' ( 33) A - 0x0041 Latin Capital Letter A
	0x7F, 0x49, 0x49, 0x49, 0x36, _ ' ( 34) B - 0x0042 Latin Capital Letter B
	0x3E, 0x41, 0x41, 0x41, 0x22, _ ' ( 35) C - 0x0043 Latin Capital Letter C
	0x7F, 0x41, 0x41, 0x22, 0x1C, _ ' ( 36) D - 0x0044 Latin Capital Letter D
	0x7F, 0x49, 0x49, 0x49, 0x41, _ ' ( 37) E - 0x0045 Latin Capital Letter E
	0x7F, 0x09, 0x09, 0x09, 0x01, _ ' ( 38) F - 0x0046 Latin Capital Letter F
	0x3E, 0x41, 0x49, 0x49, 0x7A, _ ' ( 39) G - 0x0047 Latin Capital Letter G
	0x7F, 0x08, 0x08, 0x08, 0x7F, _ ' ( 40) H - 0x0048 Latin Capital Letter H
	0x00, 0x41, 0x7F, 0x41, 0x00, _ ' ( 41) I - 0x0049 Latin Capital Letter I
	0x20, 0x40, 0x41, 0x3F, 0x01, _ ' ( 42) J - 0x004A Latin Capital Letter J
	0x7F, 0x08, 0x14, 0x22, 0x41, _ ' ( 43) K - 0x004B Latin Capital Letter K
	0x7F, 0x40, 0x40, 0x40, 0x40, _ ' ( 44) L - 0x004C Latin Capital Letter L
	0x7F, 0x02, 0x0C, 0x02, 0x7F, _ ' ( 45) M - 0x004D Latin Capital Letter M
	0x7F, 0x04, 0x08, 0x10, 0x7F, _ ' ( 46) N - 0x004E Latin Capital Letter N
	0x3E, 0x41, 0x41, 0x41, 0x3E, _ ' ( 47) O - 0x004F Latin Capital Letter O
	0x7F, 0x09, 0x09, 0x09, 0x06, _ ' ( 48) P - 0x0050 Latin Capital Letter P
	0x3E, 0x41, 0x51, 0x21, 0x5E, _ ' ( 49) Q - 0x0051 Latin Capital Letter Q
	0x7F, 0x09, 0x19, 0x29, 0x46, _ ' ( 50) R - 0x0052 Latin Capital Letter R
	0x46, 0x49, 0x49, 0x49, 0x31, _ ' ( 51) S - 0x0053 Latin Capital Letter S
	0x01, 0x01, 0x7F, 0x01, 0x01, _ ' ( 52) T - 0x0054 Latin Capital Letter T
	0x3F, 0x40, 0x40, 0x40, 0x3F, _ ' ( 53) U - 0x0055 Latin Capital Letter U
	0x1F, 0x20, 0x40, 0x20, 0x1F, _ ' ( 54) V - 0x0056 Latin Capital Letter V
	0x3F, 0x40, 0x38, 0x40, 0x3F, _ ' ( 55) W - 0x0057 Latin Capital Letter W
	0x63, 0x14, 0x08, 0x14, 0x63, _ ' ( 56) X - 0x0058 Latin Capital Letter X
	0x07, 0x08, 0x70, 0x08, 0x07, _ ' ( 57) Y - 0x0059 Latin Capital Letter Y
	0x61, 0x51, 0x49, 0x45, 0x43, _ ' ( 58) Z - 0x005A Latin Capital Letter Z
	0x00, 0x7F, 0x41, 0x41, 0x00, _ ' ( 59) [ - 0x005B Left Square Bracket
	0x02, 0x04, 0x08, 0x10, 0x20, _ ' ( 60) \ - 0x005C Reverse Solidus
	0x00, 0x41, 0x41, 0x7F, 0x00, _ ' ( 61) ] - 0x005D Right Square Bracket
	0x04, 0x02, 0x01, 0x02, 0x04, _ ' ( 62) ^ - 0x005E Circumflex Accent
	0x40, 0x40, 0x40, 0x40, 0x40, _ ' ( 63) _ - 0x005F Low Line
	0x01, 0x02, 0x04, 0x00, 0x00, _ ' ( 64) ` - 0x0060 Grave Accent
	0x20, 0x54, 0x54, 0x54, 0x78, _ ' ( 65) a - 0x0061 Latin Small Letter A
	0x7F, 0x48, 0x44, 0x44, 0x38, _ ' ( 66) b - 0x0062 Latin Small Letter B
	0x38, 0x44, 0x44, 0x44, 0x20, _ ' ( 67) c - 0x0063 Latin Small Letter C
	0x38, 0x44, 0x44, 0x48, 0x7F, _ ' ( 68) d - 0x0064 Latin Small Letter D
	0x38, 0x54, 0x54, 0x54, 0x18, _ ' ( 69) e - 0x0065 Latin Small Letter E
	0x08, 0x7E, 0x09, 0x01, 0x02, _ ' ( 70) f - 0x0066 Latin Small Letter F
	0x06, 0x49, 0x49, 0x49, 0x3F, _ ' ( 71) g - 0x0067 Latin Small Letter G
	0x7F, 0x08, 0x04, 0x04, 0x78, _ ' ( 72) h - 0x0068 Latin Small Letter H
	0x00, 0x44, 0x7D, 0x40, 0x00, _ ' ( 73) i - 0x0069 Latin Small Letter I
	0x20, 0x40, 0x44, 0x3D, 0x00, _ ' ( 74) j - 0x006A Latin Small Letter J
	0x7F, 0x10, 0x28, 0x44, 0x00, _ ' ( 75) k - 0x006B Latin Small Letter K
	0x00, 0x41, 0x7F, 0x40, 0x00, _ ' ( 76) l - 0x006C Latin Small Letter L
	0x7C, 0x04, 0x18, 0x04, 0x7C, _ ' ( 77) m - 0x006D Latin Small Letter M
	0x7C, 0x08, 0x04, 0x04, 0x78, _ ' ( 78) n - 0x006E Latin Small Letter N
	0x38, 0x44, 0x44, 0x44, 0x38, _ ' ( 79) o - 0x006F Latin Small Letter O
	0x7C, 0x14, 0x14, 0x14, 0x08, _ ' ( 80) p - 0x0070 Latin Small Letter P
	0x08, 0x14, 0x14, 0x18, 0x7C, _ ' ( 81) q - 0x0071 Latin Small Letter Q
	0x7C, 0x08, 0x04, 0x04, 0x08, _ ' ( 82) r - 0x0072 Latin Small Letter R
	0x48, 0x54, 0x54, 0x54, 0x20, _ ' ( 83) s - 0x0073 Latin Small Letter S
	0x04, 0x3F, 0x44, 0x40, 0x20, _ ' ( 84) t - 0x0074 Latin Small Letter T
	0x3C, 0x40, 0x40, 0x20, 0x7C, _ ' ( 85) u - 0x0075 Latin Small Letter U
	0x1C, 0x20, 0x40, 0x20, 0x1C, _ ' ( 86) v - 0x0076 Latin Small Letter V
	0x3C, 0x40, 0x30, 0x40, 0x3C, _ ' ( 87) w - 0x0077 Latin Small Letter W
	0x44, 0x28, 0x10, 0x28, 0x44, _ ' ( 88) x - 0x0078 Latin Small Letter X
	0x0C, 0x50, 0x50, 0x50, 0x3C, _ ' ( 89) y - 0x0079 Latin Small Letter Y
	0x44, 0x64, 0x54, 0x4C, 0x44, _ ' ( 90) z - 0x007A Latin Small Letter Z
	0x00, 0x08, 0x36, 0x41, 0x00, _ ' ( 91) - 0x007B Left Curly Bracket
	0x00, 0x00, 0x7F, 0x00, 0x00, _ ' ( 92) | - 0x007C Vertical Line
	0x00, 0x41, 0x36, 0x08, 0x00, _ ' ( 93) - 0x007D Right Curly Bracket
	0x02, 0x01, 0x02, 0x04, 0x02, _ ' ( 94) ~ - 0x007E Tilde
	0x3E, 0x55, 0x55, 0x41, 0x22, _ ' ( 95) C - 0x0080 < Control > 
	0x00, 0x00, 0x00, 0x00, 0x00, _ ' ( 96) - 0x00A0 No - Break Space
	0x00, 0x00, 0x79, 0x00, 0x00, _ ' ( 97) ! - 0x00A1 Inverted Exclamation Mark
	0x18, 0x24, 0x74, 0x2E, 0x24, _ ' ( 98) c - 0x00A2 Cent Sign
	0x48, 0x7E, 0x49, 0x42, 0x40, _ ' ( 99) L - 0x00A3 Pound Sign
	0x5D, 0x22, 0x22, 0x22, 0x5D, _ ' (100) o - 0x00A4 Currency Sign
	0x15, 0x16, 0x7C, 0x16, 0x15, _ ' (101) Y - 0x00A5 Yen Sign
	0x00, 0x00, 0x77, 0x00, 0x00, _ ' (102) | - 0x00A6 Broken Bar
	0x0A, 0x55, 0x55, 0x55, 0x28, _ ' (103) - 0x00A7 Section Sign
	0x00, 0x01, 0x00, 0x01, 0x00, _ ' (104) " - 0x00A8 Diaeresis
	0x00, 0x0A, 0x0D, 0x0A, 0x04, _ ' (105) - 0x00AA Feminine Ordinal Indicator
	0x08, 0x14, 0x2A, 0x14, 0x22, _ ' (106) < < - 0x00AB Left - Pobyteing Double Angle Quotation Mark
	0x04, 0x04, 0x04, 0x04, 0x1C, _ ' (107) - 0x00AC Not Sign
	0x00, 0x08, 0x08, 0x08, 0x00, _ ' (108) - - 0x00AD Soft Hyphen
	0x01, 0x01, 0x01, 0x01, 0x01, _ ' (109) - 0x00AF Macron
	0x00, 0x02, 0x05, 0x02, 0x00, _ ' (110) - 0x00B0 Degree Sign
	0x44, 0x44, 0x5F, 0x44, 0x44, _ ' (111) + - - 0x00B1 Plus - Minus Sign
	0x00, 0x00, 0x04, 0x02, 0x01, _ ' (112) ` - 0x00B4 Acute Accent
	0x7E, 0x20, 0x20, 0x10, 0x3E, _ ' (113) u - 0x00B5 Micro Sign
	0x06, 0x0F, 0x7F, 0x00, 0x7F, _ ' (114) - 0x00B6 Pilcrow Sign
	0x00, 0x18, 0x18, 0x00, 0x00, _ ' (115) . - 0x00B7 Middle Dot
	0x00, 0x40, 0x50, 0x20, 0x00, _ ' (116) - 0x00B8 Cedilla
	0x00, 0x0A, 0x0D, 0x0A, 0x00, _ ' (117) - 0x00BA Masculine Ordinal Indicator
	0x22, 0x14, 0x2A, 0x14, 0x08, _ ' (118) > > - 0x00BB Right - Pobyteing Double Angle Quotation Mark
	0x17, 0x08, 0x34, 0x2A, 0x7D, _ ' (119) /4 - 0x00BC Vulgar Fraction One Quarter
	0x17, 0x08, 0x04, 0x6A, 0x59, _ ' (120) /2 - 0x00BD Vulgar Fraction One Half
	0x30, 0x48, 0x45, 0x40, 0x20, _ ' (121) ? - 0x00BF Inverted Question Mark
	0x70, 0x29, 0x26, 0x28, 0x70, _ ' (122) `A - 0x00C0 Latin Capital Letter A with Grave
	0x70, 0x28, 0x26, 0x29, 0x70, _ ' (123) 'A - 0x00C1 Latin Capital Letter A with Acute
	0x70, 0x2A, 0x25, 0x2A, 0x70, _ ' (124) ^A - 0x00C2 Latin Capital Letter A with Circumflex
	0x72, 0x29, 0x26, 0x29, 0x70, _ ' (125) ~A - 0x00C3 Latin Capital Letter A with Tilde
	0x70, 0x29, 0x24, 0x29, 0x70, _ ' (126) "A - 0x00C4 Latin Capital Letter A with Diaeresis
	0x70, 0x2A, 0x2D, 0x2A, 0x70, _ ' (127) A - 0x00C5 Latin Capital Letter A with Ring Above
	0x7E, 0x11, 0x7F, 0x49, 0x49, _ ' (128) AE - 0x00C6 Latin Capital Letter Ae
	0x0E, 0x51, 0x51, 0x71, 0x11, _ ' (129) C - 0x00C7 Latin Capital Letter C with Cedilla
	0x7C, 0x55, 0x56, 0x54, 0x44, _ ' (130) `E - 0x00C8 Latin Capital Letter E with Grave
	0x7C, 0x55, 0x56, 0x54, 0x44, _ ' (131) 'E - 0x00C9 Latin Capital Letter E with Acute
	0x7C, 0x56, 0x55, 0x56, 0x44, _ ' (132) ^E - 0x00CA Latin Capital Letter E with Circumflex
	0x7C, 0x55, 0x54, 0x55, 0x44, _ ' (133) "E - 0x00CB Latin Capital Letter E with Diaeresis
	0x00, 0x45, 0x7E, 0x44, 0x00, _ ' (134) `I - 0x00CC Latin Capital Letter I with Grave
	0x00, 0x44, 0x7E, 0x45, 0x00, _ ' (135) 'I - 0x00CD Latin Capital Letter I with Acute
	0x00, 0x46, 0x7D, 0x46, 0x00, _ ' (136) ^I - 0x00CE Latin Capital Letter I with Circumflex
	0x00, 0x45, 0x7C, 0x45, 0x00, _ ' (137) "I - 0x00CF Latin Capital Letter I with Diaeresis
	0x7F, 0x49, 0x49, 0x41, 0x3E, _ ' (138) D - 0x00D0 Latin Capital Letter Eth
	0x7C, 0x0A, 0x11, 0x22, 0x7D, _ ' (139) ~N - 0x00D1 Latin Capital Letter N with Tilde
	0x38, 0x45, 0x46, 0x44, 0x38, _ ' (140) `O - 0x00D2 Latin Capital Letter O with Grave
	0x38, 0x44, 0x46, 0x45, 0x38, _ ' (141) 'O - 0x00D3 Latin Capital Letter O with Acute
	0x38, 0x46, 0x45, 0x46, 0x38, _ ' (142) ^O - 0x00D4 Latin Capital Letter O with Circumflex
	0x38, 0x46, 0x45, 0x46, 0x39, _ ' (143) ~O - 0x00D5 Latin Capital Letter O with Tilde
	0x38, 0x45, 0x44, 0x45, 0x38, _ ' (144) "O - 0x00D6 Latin Capital Letter O with Diaeresis
	0x22, 0x14, 0x08, 0x14, 0x22, _ ' (145) x - 0x00D7 Multiplcation Sign
	0x2E, 0x51, 0x49, 0x45, 0x3A, _ ' (146) O - 0x00D8 Latin Capital Letter O with Stroke
	0x3C, 0x41, 0x42, 0x40, 0x3C, _ ' (147) `U - 0x00D9 Latin Capital Letter U with Grave
	0x3C, 0x40, 0x42, 0x41, 0x3C, _ ' (148) 'U - 0x00DA Latin Capital Letter U with Acute
	0x3C, 0x42, 0x41, 0x42, 0x3C, _ ' (149) ^U - 0x00DB Latin Capital Letter U with Circumflex
	0x3C, 0x41, 0x40, 0x41, 0x3C, _ ' (150) "U - 0x00DC Latin Capital Letter U with Diaeresis
	0x0C, 0x10, 0x62, 0x11, 0x0C, _ ' (151) `Y - 0x00DD Latin Capital Letter Y with Acute
	0x7F, 0x12, 0x12, 0x12, 0x0C, _ ' (152) P - 0x00DE Latin Capital Letter Thom
	0x40, 0x3E, 0x01, 0x49, 0x36, _ ' (153) B - 0x00DF Latin Capital Letter Sharp S
	0x20, 0x55, 0x56, 0x54, 0x78, _ ' (154) `a - 0x00E0 Latin Small Letter A with Grave
	0x20, 0x54, 0x56, 0x55, 0x78, _ ' (155) 'a - 0x00E1 Latin Small Letter A with Acute
	0x20, 0x56, 0x55, 0x56, 0x78, _ ' (156) ^a - 0x00E2 Latin Small Letter A with Circumflex
	0x20, 0x55, 0x56, 0x55, 0x78, _ ' (157) ~a - 0x00E3 Latin Small Letter A with Tilde
	0x20, 0x55, 0x54, 0x55, 0x78, _ ' (158) "a - 0x00E4 Latin Small Letter A with Diaeresis
	0x20, 0x56, 0x57, 0x56, 0x78, _ ' (159) a - 0x00E5 Latin Small Letter A with Ring Above
	0x24, 0x54, 0x78, 0x54, 0x58, _ ' (160) ae - 0x00E6 Latin Small Letter Ae
	0x0C, 0x52, 0x52, 0x72, 0x13, _ ' (161) c - 0x00E7 Latin Small Letter c with Cedilla
	0x38, 0x55, 0x56, 0x54, 0x18, _ ' (162) `e - 0x00E8 Latin Small Letter E with Grave
	0x38, 0x54, 0x56, 0x55, 0x18, _ ' (163) 'e - 0x00E9 Latin Small Letter E with Acute
	0x38, 0x56, 0x55, 0x56, 0x18, _ ' (164) ^e - 0x00EA Latin Small Letter E with Circumflex
	0x38, 0x55, 0x54, 0x55, 0x18, _ ' (165) "e - 0x00EB Latin Small Letter E with Diaeresis
	0x00, 0x49, 0x7A, 0x40, 0x00, _ ' (166) `i - 0x00EC Latin Small Letter I with Grave
	0x00, 0x48, 0x7A, 0x41, 0x00, _ ' (167) 'i - 0x00ED Latin Small Letter I with Acute
	0x00, 0x4A, 0x79, 0x42, 0x00, _ ' (168) ^i - 0x00EE Latin Small Letter I with Circumflex
	0x00, 0x4A, 0x78, 0x42, 0x00, _ ' (169) "i - 0x00EF Latin Small Letter I with Diaeresis
	0x31, 0x4A, 0x4E, 0x4A, 0x30, _ ' (170) - 0x00F0 Latin Small Letter Eth
	0x7A, 0x11, 0x0A, 0x09, 0x70, _ ' (171) ~n - 0x00F1 Latin Small Letter N with Tilde
	0x30, 0x49, 0x4A, 0x48, 0x30, _ ' (172) `o - 0x00F2 Latin Small Letter O with Grave
	0x30, 0x48, 0x4A, 0x49, 0x30, _ ' (173) 'o - 0x00F3 Latin Small Letter O with Acute
	0x30, 0x4A, 0x49, 0x4A, 0x30, _ ' (174) ^o - 0x00F4 Latin Small Letter O with Circumflex
	0x30, 0x4A, 0x49, 0x4A, 0x31, _ ' (175) ~o - 0x00F5 Latin Small Letter O with Tilde
	0x30, 0x4A, 0x48, 0x4A, 0x30, _ ' (176) "o - 0x00F6 Latin Small Letter O with Diaeresis
	0x08, 0x08, 0x2A, 0x08, 0x08, _ ' (177) + - 0x00F7 Division Sign
	0x38, 0x64, 0x54, 0x4C, 0x38, _ ' (178) o - 0x00F8 Latin Small Letter O with Stroke
	0x38, 0x41, 0x42, 0x20, 0x78, _ ' (179) `u - 0x00F9 Latin Small Letter U with Grave
	0x38, 0x40, 0x42, 0x21, 0x78, _ ' (180) 'u - 0x00FA Latin Small Letter U with Acute
	0x38, 0x42, 0x41, 0x22, 0x78, _ ' (181) ^u - 0x00FB Latin Small Letter U with Circumflex
	0x38, 0x42, 0x40, 0x22, 0x78, _ ' (182) "u - 0x00FC Latin Small Letter U with Diaeresis
	0x0C, 0x50, 0x52, 0x51, 0x3C, _ ' (183) 'y - 0x00FD Latin Small Letter Y with Acute
	0x7E, 0x14, 0x14, 0x14, 0x08, _ ' (184) p - 0x00FE Latin Small Letter Thom
	0x0C, 0x51, 0x50, 0x51, 0x3C, _ ' (185) "y - 0x00FF Latin Small Letter Y with Diaeresis
	0x1E, 0x09, 0x09, 0x29, 0x5E, _ ' (186) A - 0x0104 Latin Capital Letter A with Ogonek
	0x08, 0x15, 0x15, 0x35, 0x4E, _ ' (187) a - 0x0105 Latin Small Letter A with Ogonek
	0x38, 0x44, 0x46, 0x45, 0x20, _ ' (188) 'C - 0x0106 Latin Capital Letter C with Acute
	0x30, 0x48, 0x4A, 0x49, 0x20, _ ' (189) 'c - 0x0107 Latin Small Letter C with Acute
	0x38, 0x45, 0x46, 0x45, 0x20, _ ' (190) C - 0x010C Latin Capital Letter C with Caron
	0x30, 0x49, 0x4A, 0x49, 0x20, _ ' (191) c - 0x010D Latin Small Letter C with Caron
	0x7C, 0x45, 0x46, 0x45, 0x38, _ ' (192) D - 0x010E Latin Capital Letter D with Caron
	0x20, 0x50, 0x50, 0x7C, 0x03, _ ' (193) d' - 0x010F Latin Small Letter D with Caron
	0x1F, 0x15, 0x15, 0x35, 0x51, _ ' (194) E - 0x0118 Latin Capital Letter E with Ogonek
	0x0E, 0x15, 0x15, 0x35, 0x46, _ ' (195) e - 0x0119 Latin Small Letter E with Ogonek
	0x7C, 0x55, 0x56, 0x55, 0x44, _ ' (196) E - 0x011A Latin Capital Letter E with Caron
	0x38, 0x55, 0x56, 0x55, 0x18, _ ' (197) e - 0x011B Latin Small Letter E with Caron
	0x00, 0x44, 0x7C, 0x40, 0x00, _ ' (198) i - 0x0131 Latin Small Letter Dotless I
	0x7F, 0x48, 0x44, 0x40, 0x40, _ ' (199) L - 0x0141 Latin Capital Letter L with Stroke
	0x00, 0x49, 0x7F, 0x44, 0x00, _ ' (200) l - 0x0142 Latin Small Letter L with Stroke
	0x7C, 0x08, 0x12, 0x21, 0x7C, _ ' (201) 'N - 0x0143 Latin Capital Letter N with Acute
	0x78, 0x10, 0x0A, 0x09, 0x70, _ ' (202) 'n - 0x0144 Latin Small Letter N with Acute
	0x7C, 0x09, 0x12, 0x21, 0x7C, _ ' (203) N - 0x0147 Latin Capital Letter N with Caron
	0x78, 0x11, 0x0A, 0x09, 0x70, _ ' (204) n - 0x0148 Latin Small Letter N with Caron
	0x38, 0x47, 0x44, 0x47, 0x38, _ ' (205) "O - 0x0150 Latin Capital Letter O with Double Acute
	0x30, 0x4B, 0x48, 0x4B, 0x30, _ ' (206) "o - 0x0151 Latin Small Letter O with Double Acute
	0x3E, 0x41, 0x7F, 0x49, 0x49, _ ' (207) OE - 0x0152 Latin Capital Ligature Oe
	0x38, 0x44, 0x38, 0x54, 0x58, _ ' (208) oe - 0x0153 Latin Small Ligature Oe
	0x7C, 0x15, 0x16, 0x35, 0x48, _ ' (209) R - 0x0158 Latin Capital Letter R with Caron
	0x78, 0x11, 0x0A, 0x09, 0x10, _ ' (210) r - 0x0159 Latin Small Letter R with Caron
	0x48, 0x54, 0x56, 0x55, 0x20, _ ' (211) 'S - 0x015A Latin Capital Letter S with Acute
	0x20, 0x48, 0x56, 0x55, 0x20, _ ' (212) 's - 0x015B Latin Small Letter S with Acute
	0x48, 0x55, 0x56, 0x55, 0x20, _ ' (213) S - 0x0160 Latin Capital Letter S with Caron
	0x20, 0x49, 0x56, 0x55, 0x20, _ ' (214) s - 0x0161 Latin Small Letter S with Caron
	0x04, 0x05, 0x7E, 0x05, 0x04, _ ' (215) T - 0x0164 Latin Capital Letter T with Caron
	0x08, 0x3C, 0x48, 0x22, 0x01, _ ' (216) t' - 0x0165 Latin Small Letter T with Caron
	0x3C, 0x42, 0x45, 0x42, 0x3C, _ ' (217) U - 0x016E Latin Capital Letter U with Ring Above
	0x38, 0x42, 0x45, 0x22, 0x78, _ ' (218) u - 0x016F Latin Small Letter U with Ring Above
	0x3C, 0x43, 0x40, 0x43, 0x3C, _ ' (219) "U - 0x0170 Latin Capital Letter U with Double Acute
	0x38, 0x43, 0x40, 0x23, 0x78, _ ' (220) "u - 0x0171 Latin Small Letter U with Double Acute
	0x0C, 0x11, 0x60, 0x11, 0x0C, _ ' (221) "Y - 0x0178 Latin Capital Letter Y with Diaeresis
	0x44, 0x66, 0x55, 0x4C, 0x44, _ ' (222) 'Z - 0x0179 Latin Capital Letter Z with Acute
	0x48, 0x6A, 0x59, 0x48, 0x00, _ ' (223) 'z - 0x017A Latin Small Letter Z with Acute
	0x44, 0x64, 0x55, 0x4C, 0x44, _ ' (224) Z - 0x017B Latin Capital Letter Z with Dot Above
	0x48, 0x68, 0x5A, 0x48, 0x00, _ ' (225) z - 0x017C Latin Small Letter Z with Dot Above
	0x44, 0x65, 0x56, 0x4D, 0x44, _ ' (226) Z - 0x017D Latin Capital Letter Z with Caron
	0x48, 0x69, 0x5A, 0x49, 0x00, _ ' (227) z - 0x017E Latin Small Letter Z with Caron
	0x00, 0x02, 0x01, 0x02, 0x00, _ ' (228) ^ - 0x02C6 Modifier Letter Circumflex Accent
	0x00, 0x01, 0x02, 0x01, 0x00, _ ' (229) - 0x02C7 Caron
	0x00, 0x01, 0x01, 0x01, 0x00, _ ' (230) - 0x02C9 Modifier Letter Macron
	0x01, 0x02, 0x02, 0x01, 0x00, _ ' (231) - 0x02D8 Breve
	0x00, 0x00, 0x01, 0x00, 0x00, _ ' (232) - 0x02D9 Dot Above
	0x00, 0x02, 0x05, 0x02, 0x00, _ ' (233) - 0x02DA Ring Above
	0x02, 0x01, 0x02, 0x01, 0x00, _ ' (234) ~ - 0x02DC Small Tilde
	0x7F, 0x05, 0x15, 0x3A, 0x50, _ ' (235) Pt - 0x20A7 Peseta Sign
	0x3E, 0x55, 0x55, 0x41, 0x22, _ ' (236) C - 0x20AC Euro Sign
	0x18, 0x14, 0x08, 0x14, 0x0C, _ ' (237) - 0x221E Infinity
	0x44, 0x4A, 0x4A, 0x51, 0x51, _ ' (238) < - 0x2264 Less - Than or Equal to
	0x51, 0x51, 0x4A, 0x4A, 0x44, _ ' (239) > - 0x2265 Greater - Than or Equal to }
	0x74, 0x42, 0x41, 0x42, 0x74) ' (240) - 0x2302 House 
	Private Symbols() As Byte
	Symbols = Array As Byte ( _ ' Custom 6 Byte wide symbol Database... 
	0x08, 0x04, 0x08, 0x10, 0x08, 0x08, _ ' (153) - AC Symbol Left 
	0x3E, 0x22, 0x22, 0x22, 0x22, 0x22, _ ' (154) - Battery Symbol Left 0
	0x3E, 0x3E, 0x22, 0x22, 0x22, 0x22, _ ' (155) - Battery Symbol Left 10
	0x3E, 0x3E, 0x3E, 0x22, 0x22, 0x22, _ ' (156) - Battery Symbol Left 20
	0x3E, 0x3E, 0x3E, 0x3E, 0x22, 0x22, _ ' (157) - Battery Symbol Left 30
	0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x22, _ ' (158) - Battery Symbol Left 40
	0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, _ ' (159) - Battery Symbol Left 50
	0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, _ ' (160) - Battery Symbol Left 60
	0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, _ ' (161) - Battery Symbol Left 70
	0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, _ ' (162) - Battery Symbol Left 80
	0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, _ ' (163) - Battery Symbol Left 90
	0x1C, 0x3E, 0x3E, 0x14, 0x14, 0x00, _ ' (164) - AC Symbol Right 0
	0x22, 0x22, 0x22, 0x36, 0x1C, 0x00, _ ' (165) - Battery Symbol Right 0
	0x22, 0x22, 0x22, 0x36, 0x1C, 0x00, _ ' (166) - Battery Symbol Right 10
	0x22, 0x22, 0x22, 0x36, 0x1C, 0x00, _ ' (167) - Battery Symbol Right 20
	0x22, 0x22, 0x22, 0x36, 0x1C, 0x00, _ ' (168) - Battery Symbol Right 30
	0x22, 0x22, 0x22, 0x36, 0x1C, 0x00, _ ' (169) - Battery Symbol Right 40
	0x22, 0x22, 0x22, 0x36, 0x1C, 0x00, _ ' (170) - Battery Symbol Right 50
	0x3E, 0x22, 0x22, 0x36, 0x1C, 0x00, _ ' (171) - Battery Symbol Right 60
	0x3E, 0x3E, 0x22, 0x36, 0x1C, 0x00, _ ' (172) - Battery Symbol Right 70
	0x3E, 0x3E, 0x3E, 0x36, 0x1C, 0x00, _ ' (173) - Battery Symbol Right 80
	0x3E, 0x3E, 0x3E, 0x3E, 0x1C, 0x00) ' (174) - Battery Symbol Right 90
	Dim BIGNumberDef() As Int
	BIGNumberDef = Array As Int ( _ ' Public domain font
	0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, _
	0xF0, 0xF0, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x0F, 0x0F, _
	0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, _
	0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, _
	0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, _
	0xF0, 0xF0, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0xC1, 0xC0, 0xC0, 0xC0, _
	0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x87, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, _
	0x03, 0x03, 0x83, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, _
	0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, _
	0xF0, 0xF0, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0xC1, 0xC0, 0xC0, 0xC0, _
	0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE1, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x81, 0x83, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x87, _
	0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, _
	0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF0, 0xF0, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, _
	0xF0, 0xF0, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, _
	0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, _
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0F, 0x0F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, _
	0xF0, 0xF0, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, _
	0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC1, 0x81, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x81, 0x83, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x87, _
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, _
	0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, _
	0xF0, 0xF0, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, _
	0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC1, 0x81, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x87, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x87, _
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, _
	0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, _
	0xF0, 0xF0, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0F, 0x0F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, _
	0xF0, 0xF0, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xE1, _
	0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE1, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0x87, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x87, _
	0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, _
	0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, _
	0xF0, 0xF0, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, _
	0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, _
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0F, 0x0F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x3C, 0x7E, 0x7E, 0x7E, 0x7E, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xF0, 0x00, _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _
	0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
	Dim pic3(1023) As Int
	pic3 = Array As Int ( _
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, _ 
	0xC0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xFC, 0x7C, 0x7C, 0x7C, 0x3E, 0x3E, 0x3E, 0x3E, _ 
	0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x7C, 0x7C, 0x7C, 0xFC, 0xF8, 0xF8, 0xF8, 0xF0, 0xF0, 0xE0, _ 
	0xE0, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0xF0, 0xF8, 0xFC, 0xFC, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xF0, 0xF8, 0xFC, 0xFE, 0x7F, 0x3F, 0x1F, _ 
	0x0F, 0x07, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x07, _ 
	0x07, 0x0F, 0x1F, 0x3F, 0x7F, 0xFE, 0xFC, 0xF8, 0xF0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, _ 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0xFE, 0xFF, 0xFF, 0x7F, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xFC, 0xFC, _ 
	0xFC, 0xFC, 0xFC, 0xFC, 0xF8, 0xF8, 0xF0, 0xF0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x0F, 0x7F, 0xFF, 0xFF, 0xFE, 0xF8, 0xC0, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xC0, 0xF8, 0xFF, 0xFF, _ 
	0xFF, 0x7F, 0x0F, 0x00, 0x00, 0x07, 0x7F, 0xFF, 0xFF, 0xFF, 0xF8, 0xC0, 0x80, 0x80, 0x80, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, _ 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF0, 0xF0, 0xF8, _ 
	0xF8, 0xFC, 0xFC, 0xFC, 0xFE, 0xBE, 0xBE, 0x3F, 0x1F, 0x1F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07, _ 
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, _ 
	0x3F, 0xBE, 0xBE, 0xFE, 0xFC, 0xFC, 0xFC, 0xF8, 0xF8, 0xF0, 0xF0, 0xF0, 0xE0, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x07, 0x7F, 0xFF, 0xFF, 0xFF, 0xF8, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, _ 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F, 0x0F, 0x03, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0xFF, 0xFF, 0xFF, 0x7F, 0x0F, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x03, _ 
	0x03, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x3F, 0x3E, 0x3E, 0x7E, 0xFC, 0xFC, 0xFC, _ 
	0xF8, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0xFC, 0xFC, 0xFC, 0x7E, 0x3E, 0x3E, 0x3F, 0x1F, _ 
	0x1F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x03, 0x03, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x3F, 0x7F, 0xFF, 0xFE, 0xF8, 0xE0, 0xC0, 0x80, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x07, 0x07, _ 
	0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF8, 0xFE, 0xFF, 0xFF, 0x3F, 0x0F, 0x03, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x3F, 0xFF, _ 
	0xFF, 0xFF, 0xFE, 0xE0, 0xE0, 0xFC, 0xFF, 0xFF, 0xFF, 0x3F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x3F, _ 
	0x7E, 0xFC, 0xFC, 0xF8, 0xF0, 0xF0, 0xE0, 0xE0, 0xE0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0x80, _ 
	0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF8, 0xFC, _ 
	0xFC, 0x7E, 0x3F, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, _ 
	0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, _ 
	0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x03, 0x01, 0x01, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x01, 0x07, 0x07, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, _ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
 
End Sub
 
Sub reset
 
	' mmh not really working :(
	i2c.Write(device, Set_Reset)
 
End Sub
 
Sub data(pData As Int)
 
	'Log("Data "& pData)
	i2c.Write2(device, Array As Byte (0x40, pData), 0, 2)
 
End Sub
 
Sub command(pData As Int)
 
	' Log("command "& pData)
	i2c.Write2(device, Array As Byte (0x80, pData), 0, 2)
 
End Sub
 
Sub Init(i2cbus As Byte, LCD_I2c_device As Byte) 
 
	bus = i2c.GetBus(i2cbus)
	device = i2c.GetDevice(bus, LCD_I2c_device)

 command(Set_Display_ON_or_OFF_CMD + Display_OFF) 								
 command(Set_Display_Start_Line_CMD)
 command(Set_Page_Start_Address_CMD)
 command(Set_Memory_Addressing_Mode_CMD)
 command(Page_Addressing_Mode) 
	command(Set_Page_Address_CMD)
	command(Page_Address_Start)
	command(Page_Address_End)
 command(Set_Contrast_Control_CMD)
 command(Contrast_Level)
 command(Bit.Or(Set_Segment_Remap_CMD , Column_Address_0_Mapped_to_SEG127))
	command(Bit.Or(Set_COM_Output_Scan_Direction_CMD , Scan_from_COM63_to_0)) 	
 command(Bit.Or(Set_Normal_or_Inverse_Display_CMD , Non_Inverted_Display)) 								
 command(Set_Higher_Column_Start_Address_CMD + 0xf)
 command(Set_Display_Offset_CMD)
 command(Display_Offset)
 command(Set_Display_Clock_CMD)
 command(Bit.ShiftLeft(Display_Clock_Oscillator_Frequency,4)+Display_Clock_Divide_Ratio)
 command(Set_Pre_charge_Period_CMD)
 command(Precharge_Period)
 command(Set_Common_HW_Config_CMD)
 command(Common_HW_Config)
 command(Set_VCOMH_Level_CMD)
 command(VCOMH_Deselect_Level)
 command(Set_Charge_Pump_CMD)
 command(Enable_Charge_Pump)
	command(Bit.Or(Set_Entire_Display_ON_CMD , Normal_Display))
	command(Bit.Or(Set_Normal_or_Inverse_Display_CMD , Non_Inverted_Display)) 
 command(Set_Display_ON_or_OFF_CMD + Display_ON)
 
End Sub
 
'-----------------------------------------------------------------------------------------------------------------
Sub Rectangle( x1 As Int, y1 As Int, x2 As Int, y2 As Int, filled As Boolean, colour As Boolean, Rcorner As Boolean)
 
	Dim i, o As Int = 0x00
	Dim xmin As Int = 0x00
	Dim xmax As Int = 0x00
	Dim ymin As Int = 0x00
	Dim ymax As Int = 0x00
	If filled = True Then
		If(x1 < x2) Then
		xmin = x1
		xmax = x2
	Else
		xmin = x2
		xmax = x1
	End If
 
	If(y1 < y2) Then
	ymin = y1
	ymax = y2
Else
	ymin = y2
	ymax = y1
End If
 
For o = xmin To xmax
	For i = ymin To ymax
		Pixel(o, i, colour)
	Next
 
Next
 
Else
line(x1, y1, x2, y1, colour)
line(x1, y2, x2, y2, colour)
line(x1, y1, x1, y2, colour)
line(x2, y1, x2, y2, colour)	
End If
 
If Rcorner = True Then
Pixel(x1, y1, False)
Pixel(x1, y2, False)
Pixel(x2, y1, False)
Pixel(x2, y2, False)
End If
 
End Sub
 
Sub Ellipse( x As Int, y As Int, rx As Int, ry As Int)
 
	Dim dx, dy As Int
	Dim faktor As Double
	Dim GrafColor As Boolean = True
	If rx > ry Then 
		faktor = ry / rx
		For i = 0 To rx - Bit.ShiftRight(rx , 2) 
			dx = Round(Sqrt((rx * rx) - (i * i)))
			dy = Round(faktor * i)
			Pixel(x + dx, y + dy, GrafColor)
			Pixel(x - dx, y + dy, GrafColor)
			Pixel(x + dx, y - dy, GrafColor)
			Pixel(x - dx, y - dy, GrafColor)
		Next
 
		For i = 0 To rx - Bit.ShiftRight(rx , 2) 
			dy = Round(faktor * Sqrt((rx * rx) - (i * i)))
			Pixel(x + i, y + dy, GrafColor)
			Pixel(x - i, y + dy, GrafColor)
			Pixel(x + i, y - dy, GrafColor)
			Pixel(x - i, y - dy, GrafColor)
		Next
 
	Else
		faktor = rx / ry
		For i = 0 To ry - Bit.ShiftRight(ry , 2) 
			dy = Round(Sqrt((ry * ry) - (i * i)))
			dx = Round(faktor * i)
			Pixel(x + dx, y + dy, GrafColor)
			Pixel(x - dx, y + dy, GrafColor)
			Pixel(x + dx, y - dy, GrafColor)
			Pixel(x - dx, y - dy, GrafColor)
		Next
 
		For i = 0 To ry - Bit.ShiftRight(ry , 2) 
			dx = Round(faktor * Sqrt((ry * ry) - (i * i)))
			Pixel(x + dx, y + i, GrafColor)
			Pixel(x - dx, y + i, GrafColor)
			Pixel(x + dx, y - i, GrafColor)
			Pixel(x - dx, y - i, GrafColor)
		Next
 
	End If
 
End Sub
 
Sub Circle(xc As Int, yc As Int, radius As Int, filled As Boolean, colour As Boolean)
 
	Dim a As Int = 0
	Dim b As Int = 0
	Dim P As Int = 0
	b = radius
	P = (1 - b)
	Do While a <= b
		If filled = True Then
			line((xc - a), (yc + b), (xc + a), (yc + b), colour)
			line((xc - a), (yc - b), (xc + a), (yc - b), colour)
			line((xc - b), (yc + a), (xc + b), (yc + a), colour)
			line((xc - b), (yc - a), (xc + b), (yc - a), colour)
		Else
			Pixel((xc + a), (yc + b), colour)
			Pixel((xc + b), (yc + a), colour)
			Pixel((xc - a), (yc + b), colour)
			Pixel((xc - b), (yc + a), colour)
			Pixel((xc + b), (yc - a), colour)
			Pixel((xc + a), (yc - b), colour)
			Pixel((xc - a), (yc - b), colour)
			Pixel((xc - b), (yc - a), colour)
		End If
 
		If(P < 0) Then
		P = P + (3 + (2 * a))
		a = a + 1
	Else
		P = P + (5 + (2 * (a - b)))
		a = a + 1
		b = b - 1
	End If
 
Loop
 
End Sub
 
' Sub LCD_Draw(x1 As Int, y1 As Int, x2 As Int, y2 As Int, color As Boolean)
'Dim Hx, Hy As Int
'Dim Xinc, Yinc As Int
'Dim Lcd_d As Int
'Dim Lcd_c As Int
'Dim Lcd_m As Int
' Lcd_d = 0
' Hx = x2 - x1
' Hy = y2 - y1
' Xinc = 1
' Yinc = 1
' If Hx < 0 Then
' Xinc = - 1
' Hx = Hx * ( - 1)
' End If
' If Hy < 0 Then
' Yinc = - 1
' Hy= Hy * ( - 1)
' End If
' If Hy <= Hx Then
' Lcd_c = 2 * Hx
' Lcd_m = 2 * Hy
' Do While x1 <> x2 
'			Log(x1&" "&y1)
'	 Pixel(x1,y1,color)
'	 x1=x1+Xinc
'	 Lcd_d=Lcd_d+Lcd_m
' If Lcd_d > Hx Then
'		y1=y1+Yinc
'		Lcd_d=Lcd_d-Lcd_c
' End If
' Loop
' Else
' Lcd_c = 2 * Hy
' Lcd_m = 2 * Hx
' Do While y1 <> y2 
'	 Pixel(x1,y1,color)
'	 y1=y1+Yinc
' If Lcd_d > Hy Then
'		 x1=x1+Xinc
'			Lcd_d=Lcd_d-Lcd_c
' End If
' Loop
' End If
' Pixel(x1,y1,color)'set last pixel
'End Sub
Sub line( x1 As Int, y1 As Int, x2 As Int, y2 As Int, colour As Boolean) 
 
	Dim x, y, z, dx, dy, dz, i1, i2 As Int
	dx = Abs(x1 - x2)
	dy = Abs(y1 - y2)
	If x1 < x2 Then
		x = x1 
		y = y1
		If y1 > y2 Then 
			z = - 1 
		Else 
			z = 1
		End If
 
	Else 
		x = x2
		y = y2 
		If y2 > y1 Then 
			z = - 1
		Else 
			z = 1
		End If
 
	End If
 
	If dx > dy Then 
		i2 = dx 
	Else 
		i2 = dy 
	End If
 
	dz = i2 / 2
	Pixel(x, y, colour)
	For i1 = 1 To i2 
		If dz < dx Then 
			dz = dz + dy
			x = x + 1
		End If
 
		If dz >= dx Then 
			dz = dz - dx
			y = y + z 
		End If 
 
		Pixel(x, y, colour) 
	Next
 
End Sub
 
Sub fill(pData As Int) 
 
	Dim x, y As Int
	For y = 0xb0 To 0xb7
		command(y)
		command(0x00)
		command(0x10)
		For x = 0 To 127
			data(pData)
		Next
 
	Next 
 
End Sub
 
Sub cls()
 
	fill(0x00)
 
End Sub
 
Sub gotoxy( x_pos As Int, y_pos As Int)
 
	Dim Set_Page_Start_Address_CMD As Int = 0xb0 
	command(Set_Page_Start_Address_CMD + y_pos)
	command(Bit.Or(Bit.And(x_pos , 0x0F) , Set_Lower_Column_Start_Address_CMD))
	command(Bit.Or(Bit.ShiftRight(Bit.And(x_pos , 0xF0), 0x04) , Set_Higher_Column_Start_Address_CMD))
 
End Sub
 
Sub Pixel(x_pos As Int, y_pos As Int, colour As Boolean)
 
	Dim value As Int = 0x00
	Dim page As Int = 0x00
	Dim bit_pos As Int = 0x00
	y_pos = Abs(y_pos)
	x_pos = Abs(x_pos)
	page = (y_pos / y_max)
	bit_pos = (y_pos - (page * y_max))
	value = (buffer((page * x_max) + x_pos))
	If colour = True Then
		value = Bit.Or(value, Bit.ShiftLeft(1 , bit_pos))
	Else
		value = Bit.And(value , Bit.Not(Bit.ShiftLeft(1 , bit_pos)))
	End If
 
	buffer((page * x_max) + x_pos) = value
	gotoxy(x_pos, page)
	data(value)
 
End Sub
 
Sub clear_buffer()
 
	'	Dim s As int = 0
	'	For s = 0 To buffer.Length - 1
	'		buffer(s) = 0
	'	Next
	Public buffer(x_size * y_size ) As Int
 
End Sub
 
Sub bitmap(xb As Int, yb As Int, xe As Int, ye As Int, bmp_img() As Int)'
 
	'positioning does not work correctly
	Dim s As Int = 0
	Dim x_pos As Int = 0
	Dim y_pos As Int = 0
	For y_pos = yb To 7
		gotoxy(xb, y_pos)
		For x_pos = xb To xe - 1
			data(bmp_img(s))
			s = s + 1
		Next
 
	Next
 
End Sub
 
'----------------------------------------------------------------------------------------------------------------- 
Sub delay_ms (DurationMs As Int)
 
	Dim target As Long = DateTime.Now + DurationMs
	Do While DateTime.Now < target
	Loop
 
End Sub
 
Sub Inverse_Display(d As Byte)
 
	command(Bit.Or(Set_Normal_or_Inverse_Display_CMD , d)) ' Set INVERSE Display On/Off
 
End Sub
 
Sub Set_Scroll(d As Byte)
 
	command(Bit.Or(0x2E , d)) ' Deactivate Scrolling		
 
End Sub
 
Sub Horizontal_Scroll(Dir As Byte, StartPage As Byte, EndPage As Byte, Interval As Byte)
 
	command(Bit.Or(0x26, Dir)) ' Horizontal Scroll Setup
	command(0x00) ' = > (Dummy Write For First Parameter)
	command(StartPage)
	command(Interval)
	command(EndPage)
	command(0x00)
	command(0xFF)
	command(0x2F) ' Activate Scrolling
 
End Sub
 
Sub Continuous_Scroll(Dir As Byte, StartRow As Byte, EndPage As Byte, FixArea As Byte, VertArea As Byte, ScrollStep As Byte, Interval As Byte)
 
	command(0xA3) ' Set Vertical Scroll Area
	command(FixArea) ' Default = > 0x00 (Top Fixed Area)
	command(VertArea) ' Default = > 0x40 (Vertical Scroll Area)
	command(0x29 + Dir) ' Continuous Vertical & Horizontal Scroll Setup
	command(0x00) ' = > (Dummy Write For First Parameter)
	command(StartRow)
	command(Interval)
	command(EndPage)
	command(ScrollStep)
	command(0x2F) ' Activate Scrolling
 
End Sub
 
Sub Set_Contrast(d As Byte)
 
	command(Set_Contrast_Control_CMD) ' Set Contrast Control
	command(d) ' Default = > 0x7F
 
End Sub
 
Sub set_power(d As Byte)
 
	command(Bit.Or(Set_Display_ON_or_OFF_CMD , d)) 
 
End Sub
 
Sub BIGNumber(letter As Char, page As Byte, column As Byte, invert As Boolean)
 
	Dim i, TABLEPTR , y , x , startpage As Int 
	Dim b As Byte
	x = 1
	y = Asc(letter)
	If y > 48 Or y < 58 Then
		TABLEPTR = (y - 48) * 96
	End If
 
	startpage = page + 0xB0
	command(startpage)
	command(Set_Lower_Column_Start_Address_CMD + (Bit.And(column , 0x0F)))
	command(Set_Higher_Column_Start_Address_CMD + (Bit.And(Bit.ShiftRight(column, 4), 0x0F)))
	For i = TABLEPTR To TABLEPTR + 95
		If y < 48 Or y > 58 Then
			b = 0
		Else
			b = BIGNumberDef(i)
		End If
 
		If i Mod 24 = 0 Then
			page = startpage + x
			command(page)
			command(Set_Lower_Column_Start_Address_CMD + (Bit.And(column , 0x0F)))
			command(Set_Higher_Column_Start_Address_CMD + (Bit.And(Bit.ShiftRight(column, 4), 0x0F)))
			x = x + 1
		End If
 
		data(b)
	Next
 
End Sub
 
Sub WriteChar(letter As Byte, invert As Boolean)
 
	Dim i, TABLEPTR As Int 
	Dim b As Byte
	letter = letter - 0x20
	TABLEPTR = letter * 5
	For i = TABLEPTR To TABLEPTR + 4
		b = Ascii(i)
		If invert = True Then b = Bit.Not(b)
		data(b)
	Next 
 
End Sub 
 
Sub WriteSymbol(symbol As Byte, page As Byte, column As Byte, invert As Boolean)
 
	'symbol = 0 ...
	Dim i, TABLEPTR As Int 
	Dim b As Byte
	TABLEPTR = symbol * 6 
	gotoxy(page, column)
	For i = TABLEPTR To TABLEPTR + 5
		b = Symbols(i)
		If invert = True Then
			b = Bit.Not(b)
		End If
 
		data(b)
	Next 
 
End Sub 
 
Sub WriteText( text As String, x_pos As Int, y_pos As Int, invert As Boolean)
 
	Dim x As Byte 
	Dim m() As Byte
	If x_pos > (x_max - 6) Then
		x_pos = 0
		y_pos = y_pos + 1
	End If
 
	gotoxy(x_pos, y_pos)
	m = text.GetBytes("UTF8")
	For x = 0 To text.Length - 1
		WriteChar(m(x), invert)
	Next
 
End Sub
 