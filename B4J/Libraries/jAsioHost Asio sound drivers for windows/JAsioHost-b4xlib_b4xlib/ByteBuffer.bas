B4J=true
Group=Default Group
ModulesStructureVersion=1
Type=Class
Version=9.8
@EndOfDesignText@
#IgnoreWarnings:12
'Class Module
Sub Class_Globals
	'Private fx As JFX ' Uncomment if required. For B4j only
	Private Tjo As JavaObject
End Sub
'Initializes the object. You can add parameters to this method if needed.
Public Sub Initialize
	'This is an autogenerated constructor, there may not be a matching constructor in the class, you will then have to remove the next line of code and use SetObject to wrap the object
	Tjo.InitializeStatic("java.nio.ByteBuffer")
End Sub

'Returns the byte array that backs this buffer  (optional operation).
Public Sub Array_ As Byte()
	Return Tjo.RunMethod("array",Null)
End Sub
'Returns the offset within this buffer's backing array of the first element of the buffer  (optional operation).
Public Sub ArrayOffset As Int
	Return Tjo.RunMethod("arrayOffset",Null)
End Sub
'Creates a view of this byte buffer as a char buffer.
Public Sub AsCharBuffer As JavaObject
	Return Tjo.RunMethod("asCharBuffer",Null)
End Sub
'Creates a view of this byte buffer as a double buffer.
Public Sub AsDoubleBuffer As JavaObject
	Return Tjo.RunMethod("asDoubleBuffer",Null)
End Sub
'Creates a view of this byte buffer as a float buffer.
Public Sub AsFloatBuffer As JavaObject
	Return Tjo.RunMethod("asFloatBuffer",Null)
End Sub
'Creates a view of this byte buffer as an int buffer.
Public Sub AsIntBuffer As JavaObject
	Return Tjo.RunMethod("asIntBuffer",Null)
End Sub
'Returns the wrapped object as JavaObject
Public Sub AsJavaObject As JavaObject
	Return Tjo
End Sub
'Creates a view of this byte buffer as a long buffer.
Public Sub AsLongBuffer As JavaObject
	Return Tjo.RunMethod("asLongBuffer",Null)
End Sub
'Creates a new, read-only byte buffer that shares this buffer's content.
Public Sub AsReadOnlyBuffer As ByteBuffer
	Dim Wrapper As ByteBuffer
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("asReadOnlyBuffer",Null))
	Return Wrapper
End Sub
'Creates a view of this byte buffer as a short buffer.
Public Sub AsShortBuffer As JavaObject
	Return Tjo.RunMethod("asShortBuffer",Null)
End Sub
'Compacts this buffer  (optional operation).
Public Sub Compact As ByteBuffer
	Tjo.RunMethod("compact",Null)
	Return Me
End Sub
'Compares this buffer to another.
Public Sub CompareTo(That As ByteBuffer) As Int
	Return Tjo.RunMethod("compareTo",Array As Object(That.GetObject))
End Sub
'Creates a new byte buffer that shares this buffer's content.
Public Sub Duplicate As ByteBuffer
	Dim Wrapper As ByteBuffer
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("duplicate",Null))
	Return Wrapper
End Sub
'Tells whether or not this buffer is equal to another object.
Public Sub Equals(Ob As Object) As Boolean
	Return Tjo.RunMethod("equals",Array As Object(Ob))
End Sub
'Relative get method.
Public Sub Get As Byte
	Return Tjo.RunMethod("get",Null)
End Sub
'Relative bulk get method.
Public Sub Get2(Dst() As Byte) As ByteBuffer
	Return Tjo.RunMethod("get",Array As Object(Dst))
End Sub
'Relative bulk get method.
Public Sub Get3(Dst() As Byte, Offset As Int, Length As Int) As ByteBuffer
	Return Tjo.RunMethod("get",Array As Object(Dst, Offset, Length))
End Sub
'Absolute get method.
Public Sub Get4(Index As Int) As Byte
	Return Tjo.RunMethod("get",Array As Object(Index))
End Sub
'Relative get method for reading a char value.
Public Sub GetChar As Char
	Return Tjo.RunMethod("getChar",Null)
End Sub
'Absolute get method for reading a char value.
Public Sub GetChar2(Index As Int) As Char
	Return Tjo.RunMethod("getChar",Array As Object(Index))
End Sub
'Relative get method for reading a double value.
Public Sub GetDouble As Double
	Return Tjo.RunMethod("getDouble",Null)
End Sub
'Absolute get method for reading a double value.
Public Sub GetDouble2(Index As Int) As Double
	Return Tjo.RunMethod("getDouble",Array As Object(Index))
End Sub
'Relative get method for reading a float value.
Public Sub GetFloat As Float
	Return Tjo.RunMethod("getFloat",Null)
End Sub
'Absolute get method for reading a float value.
Public Sub GetFloat2(Index As Int) As Float
	Return Tjo.RunMethod("getFloat",Array As Object(Index))
End Sub
'Relative get method for reading an int value.
Public Sub GetInt As Int
	Return Tjo.RunMethod("getInt",Null)
End Sub
'Absolute get method for reading an int value.
Public Sub GetInt2(Index As Int) As Int
	Return Tjo.RunMethod("getInt",Array As Object(Index))
End Sub
'Relative get method for reading a long value.
Public Sub GetLong As Long
	Return Tjo.RunMethod("getLong",Null)
End Sub
'Absolute get method for reading a long value.
Public Sub GetLong2(Index As Int) As Long
	Return Tjo.RunMethod("getLong",Array As Object(Index))
End Sub
'Returns the wrapped object as Object
Public Sub GetObject As Object
	Return Tjo
End Sub
'Relative get method for reading a short value.
Public Sub GetShort As Short
	Return Tjo.RunMethod("getShort",Null)
End Sub
'Absolute get method for reading a short value.
Public Sub GetShort2(Index As Int) As Short
	Return Tjo.RunMethod("getShort",Array As Object(Index))
End Sub
'Tells whether or not this buffer is backed by an accessible byte array.
Public Sub HasArray As Boolean
	Return Tjo.RunMethod("hasArray",Null)
End Sub
'Returns the current hash code of this buffer.
Public Sub HashCode As Int
	Return Tjo.RunMethod("hashCode",Null)
End Sub
'Tells whether or not this byte buffer is direct.
Public Sub IsDirect As Boolean
	Return Tjo.RunMethod("isDirect",Null)
End Sub
'Retrieves this buffer's byte order.
Public Sub Order As ByteOrder
	Return Tjo.RunMethod("order",Null)
End Sub
'Modifies this buffer's byte order.
Public Sub Order2(Bo As ByteOrder) As ByteBuffer
	Tjo.RunMethod("order",Array As Object(Bo.GetObject))
	Return Me
End Sub
'Relative put method  (optional operation).
Public Sub Put(B As Byte) As ByteBuffer
	Tjo.RunMethod("put",Array As Object(B))
	Return Me
End Sub
'Relative bulk put method  (optional operation).
Public Sub Put2(Src() As Byte) As ByteBuffer
	Tjo.RunMethod("put",Array As Object(Src))
	Return Me
End Sub
'Relative bulk put method  (optional operation).
Public Sub Put3(Src() As Byte, Offset As Int, Length As Int) As ByteBuffer
	Tjo.RunMethod("put",Array As Object(Src, Offset, Length))
	Return Me
End Sub
'Relative bulk put method  (optional operation).
Public Sub Put4(Src As ByteBuffer) As ByteBuffer
	Tjo.RunMethod("put",Array As Object(Src.GetObject))
	Return Me
End Sub
'Absolute put method  (optional operation).
Public Sub Put5(Index As Int, B As Byte) As ByteBuffer
	Tjo.RunMethod("put",Array As Object(Index, B))
	Return Me
End Sub
'Relative put method for writing a char value  (optional operation).
Public Sub PutChar(Value As Char) As ByteBuffer
	Tjo.RunMethod("putChar",Array As Object(Value))
	Return Me
End Sub
'Absolute put method for writing a char value  (optional operation).
Public Sub PutChar2(Index As Int, Value As Char) As ByteBuffer
	Tjo.RunMethod("putChar",Array As Object(Index, Value))
	Return Me
End Sub
'Relative put method for writing a double value  (optional operation).
Public Sub PutDouble(Value As Double) As ByteBuffer
	Tjo.RunMethod("putDouble",Array As Object(Value))
	Return Me
End Sub
'Absolute put method for writing a double value  (optional operation).
Public Sub PutDouble2(Index As Int, Value As Double) As ByteBuffer
	Tjo.RunMethod("putDouble",Array As Object(Index, Value))
	Return Me
End Sub
'Relative put method for writing a float value  (optional operation).
Public Sub PutFloat(Value As Float) As ByteBuffer
	Tjo.RunMethod("putFloat",Array As Object(Value))
	Return Me
End Sub
'Absolute put method for writing a float value  (optional operation).
Public Sub PutFloat2(Index As Int, Value As Float) As ByteBuffer
	Tjo.RunMethod("putFloat",Array As Object(Index, Value))
	Return Me
End Sub
'Absolute put method for writing an int value  (optional operation).
Public Sub PutInt(Index As Int, Value As Int) As ByteBuffer
	Tjo.RunMethod("putInt",Array As Object(Index, Value))
	Return Me
End Sub
'Relative put method for writing an int value  (optional operation).
Public Sub PutInt2(Value As Int) As ByteBuffer
	Tjo.RunMethod("putInt",Array As Object(Value))
	Return Me
End Sub
'Absolute put method for writing a long value  (optional operation).
Public Sub PutLong(Index As Int, Value As Long) As ByteBuffer
	Tjo.RunMethod("putLong",Array As Object(Index, Value))
	Return Me
End Sub
'Relative put method for writing a long value  (optional operation).
Public Sub PutLong2(Value As Long) As ByteBuffer
	Tjo.RunMethod("putLong",Array As Object(Value))
	Return Me
End Sub
'Absolute put method for writing a short value  (optional operation).
Public Sub PutShort(Index As Int, Value As Short) As ByteBuffer
	Tjo.RunMethod("putShort",Array As Object(Index, Value))
	Return Me
End Sub
'Relative put method for writing a short value  (optional operation).
Public Sub PutShort2(Value As Short) As ByteBuffer
	Tjo.RunMethod("putShort",Array As Object(Value))
	Return Me
End Sub
'Creates a new byte buffer whose content is a shared subsequence of this buffer's content.
Public Sub Slice As ByteBuffer
	Dim Wrapper As ByteBuffer
	Wrapper.Initialize
	Wrapper.SetObject(Tjo.RunMethod("slice",Null))
	Return Wrapper
End Sub
'Returns a string summarizing the state of this buffer.
Public Sub ToString As String
	Return Tjo.RunMethod("toString",Null)
End Sub


'Comment if not needed
'Set the underlying Object, must be of correct type
Public Sub SetObject(Obj As Object)
	Tjo = Obj
End Sub



'Returns this buffer's capacity.
Public Sub Capacity As Int
  Return Tjo.RunMethod("capacity",Null)
End Sub
'Clears this buffer.
Public Sub Clear As JavaObject
  Return Tjo.RunMethod("clear",Null)
 End Sub
'Flips this buffer.
Public Sub Flip As JavaObject
  Return Tjo.RunMethod("flip",Null)
End Sub
'Tells whether there are any elements between the current position and the limit.
Public Sub HasRemaining As Boolean
  Return Tjo.RunMethod("hasRemaining",Null)
End Sub
'Tells whether or not this buffer is read-only.
Public Sub IsReadOnly As Boolean
  Return Tjo.RunMethod("isReadOnly",Null)
End Sub
'Returns this buffer's limit.
Public Sub Limit As Int
  Return Tjo.RunMethod("limit",Null)
End Sub
'Sets this buffer's limit.
Public Sub Limit2(NewLimit As Int) As JavaObject
  Return Tjo.RunMethod("limit",Array As Object(NewLimit))
End Sub
'Sets this buffer's mark at its position.
Public Sub Mark As JavaObject
	Return Tjo.RunMethod("mark",Null)
End Sub
'Returns this buffer's position.
Public Sub Position As Int
  Return Tjo.RunMethod("position",Null)
End Sub
'Sets this buffer's position.
Public Sub Position2(NewPosition As Int) As JavaObject
  Return Tjo.RunMethod("position",Array As Object(NewPosition))
End Sub
'Returns the number of elements between the current position and the limit.
Public Sub Remaining As Int
  Return Tjo.RunMethod("remaining",Null)
End Sub
'Resets this buffer's position to the previously-marked position.
Public Sub Reset As JavaObject
  Return Tjo.RunMethod("reset",Null)
End Sub
'Rewinds this buffer.
Public Sub Rewind As JavaObject
 Return Tjo.RunMethod("rewind",Null)
End Sub
