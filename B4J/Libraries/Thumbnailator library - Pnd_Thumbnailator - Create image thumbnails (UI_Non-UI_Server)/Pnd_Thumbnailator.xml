<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.pendrush.thumbnailator.Wrapper</name>
        <shortname>Pnd_Thumbnailator</shortname>
        <objectwrapper>net.coobird.thumbnailator.Thumbnails</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ToOutputStream</name>
            <comment>Create a thumbnail and writes it to a OutputStream.</comment>
            <returntype>java.io.OutputStream</returntype>
        </method>
        <method>
            <name>Rotate</name>
            <comment>Sets the amount of rotation to apply to the thumbnail.
 The thumbnail will be rotated clockwise by the angle specified.
 This method can be called multiple times to apply multiple rotations.
 If multiple rotations are to be applied, the rotations will be applied in the order that this method is called.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Angle</name>
                <type>java.lang.Double</type>
            </parameter>
        </method>
        <method>
            <name>Size</name>
            <comment>Sets the size of the thumbnail.
 The thumbnail will preserve the aspect ratio of the original image.
 If the thumbnail should be forced to the specified size, the ForceSize(int, int) method can be used instead of this method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>UseOriginalFormat</name>
            <comment>Sets the compression format to use the same format as the original image.
 Calling this method multiple times will result in an IllegalStateException to be thrown.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AlphaInterpolationDefault</name>
            <comment>Sets the alpha interpolation mode when performing the resizing operation to generate the thumbnail.
 A hint which indicates to use the default alpha interpolation settings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>ImagePath - File names of image for which thumbnails are to be produced for.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>ImagePath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DitheringDefault</name>
            <comment>Sets the dithering mode when performing the resizing operation to generate the thumbnail.
 A hint to use the default dithering settings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AlphaInterpolationQuality</name>
            <comment>Sets the alpha interpolation mode when performing the resizing operation to generate the thumbnail.
 A hint used to emphasize quality when performing alpha interpolation.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RenderingSpeed</name>
            <comment>Sets the rendering mode when performing the resizing operation to generate the thumbnail.
 A hint used to emphasize speed when rendering.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DitheringEnable</name>
            <comment>Sets the dithering mode when performing the resizing operation to generate the thumbnail.
 A hint used to enable dithering.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ToFile</name>
            <comment>Create a thumbnail and writes it to a File.
 When the destination file exists, and overwriting files has been disabled by calling the AllowOverwrite(boolean) method with false, then an IllegalArgumentException   will be thrown.
 To call this method, the thumbnail must have been created from a single source.
 OutFilePath - The file to which the thumbnail is to be written to.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>OutFilePath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>OutputQuality</name>
            <comment>Sets the output quality of the compression algorithm used to compress the thumbnail when it is written to an external destination such as a file or output stream.
 The value is a double between 0.0 and 1.0 where 0.0 indicates the minimum quality and 1.0 indicates the maximum quality settings should be used for by the compression codec.
 Quality - Between 0.0 and 1.0</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Quality</name>
                <type>java.lang.Double</type>
            </parameter>
        </method>
        <method>
            <name>AntialiasingDefault</name>
            <comment>Sets the antialiasing mode when performing the resizing operation to generate the thumbnail.
 A hint to use the default antialiasing settings.
 Calling this method multiple times will result in an IllegalStateException.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AntialiasingOff</name>
            <comment>Sets the antialiasing mode when performing the resizing operation to generate the thumbnail.
 A hint to disable antialiasing.
 Calling this method multiple times will result in an IllegalStateException.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>OutputFormat</name>
            <comment>Sets the compression format to use when writing the thumbnail.
 For example, to set the output format to JPEG, the following code can be used:
 Format - jpg, png, etc...</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Format</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ForceSize</name>
            <comment>Sets the size of the thumbnail.
 The thumbnails will be forced to the specified size, therefore, the aspect ratio of the original image will not be preserved in the thumbnails.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Scale</name>
            <comment>Sets the scaling factor for the width and height of the thumbnail.
 If the scaling factor for the width and height are not equal, then the thumbnail will not preserve the aspect ratio of the original image.
 ScaleWidth - The scaling factor to use for the width when creating a thumbnail. The value must be a double which is greater than 0.0
 ScaleHeight - The scaling factor to use for the height when creating a thumbnail.The value must be a double which is greater than 0.0</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ScaleWidth</name>
                <type>java.lang.Double</type>
            </parameter>
            <parameter>
                <name>ScaleHeight</name>
                <type>java.lang.Double</type>
            </parameter>
        </method>
        <method>
            <name>ScalingModeBilinear</name>
            <comment>Sets the resizing scaling mode to use when creating the thumbnail.
 A hint to use bilinear interpolation when resizing images.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RenderingDefault</name>
            <comment>Sets the rendering mode when performing the resizing operation to generate the thumbnail.
 A hint to use the default rendering settings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SourceRegion</name>
            <comment>Specifies the region of the source image where the thumbnail will be created from.
 Calling this method multiple times will result in an IllegalStateException to be thrown.
 X – The horizontal-component of the top left-hand corner of the source region.
 Y – The vertical-component of the top left-hand corner of the source region.
 Width – Width of the source region.
 Height – Height of the source region.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ScalingModeBicubic</name>
            <comment>Sets the resizing scaling mode to use when creating the thumbnail.
 A hint to use bicubic interpolation when resizing images.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ScalingModeProgressiveBilinear</name>
            <comment>Sets the resizing scaling mode to use when creating the thumbnail.
 A hint to use progressing bilinear interpolation when resizing images.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RenderingQuality</name>
            <comment>Sets the rendering mode when performing the resizing operation to generate the thumbnail.
 A hint used to emphasize quality when rendering.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DitheringDisable</name>
            <comment>Sets the dithering mode when performing the resizing operation to generate the thumbnail.
 A hint used to disable dithering.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AlphaInterpolationSpeed</name>
            <comment>Sets the alpha interpolation mode when performing the resizing operation to generate the thumbnail.
 A hint used to emphasize speed when performing alpha interpolation.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Watermark</name>
            <comment>Sets the image and opacity and position of the watermark to apply on the thumbnail.
 This method can be called multiple times to apply multiple watermarks.
 If multiple watermarks are to be applied, the watermarks will be applied in the order that this method is called.
 X, Y - The position of the watermark.
 WatermarkImagePath - The image of the watermark.
 Opacity - The opacity of the watermark. The value should be between 0.0 and 1.0, where 0.0 is completely transparent, and 1.0 is completely opaque.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>WatermarkImagePath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Opacity</name>
                <type>java.lang.Float</type>
            </parameter>
        </method>
        <method>
            <name>AntialiasingOn</name>
            <comment>Sets the antialiasing mode when performing the resizing operation to generate the thumbnail.
 A hint to enable antialiasing.
 Calling this method multiple times will result in an IllegalStateException.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>KeepAspectRatio</name>
            <parameter>
                <name>KeepAspect</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <comment>Sets whether or not to keep the aspect ratio of the original image for the thumbnail.
 Setting this method without first calling the Size(int, int) method will result in an IllegalStateException to be thrown.</comment>
        </property>
        <property>
            <name>AllowOverwrite</name>
            <parameter>
                <name>Allow</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <comment>Specifies whether or not to overwrite files which already exist if they have been specified as destination files.</comment>
        </property>
        <property>
            <name>UseExifOrientation</name>
            <parameter>
                <name>Orientation</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <comment>Sets whether or not to use the Exif metadata when orienting the thumbnail.
 Calling this method multiple times will result in an IllegalStateException to be thrown.
 True if the Exif metadata should be used to determine the orientation of the thumbnail, false otherwise.</comment>
        </property>
    </class>
    <version>0.9</version>
    <author>Author: Coobird - B4j Wrapper: Pendrush</author>
    <dependsOn>thumbnailator-0.4.20</dependsOn>
</root>
