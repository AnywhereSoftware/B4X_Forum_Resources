B4J=true
Group=Default Group
ModulesStructureVersion=1
Type=Class
Version=5.9
@EndOfDesignText@
#IgnoreWarnings:12
'Class Module
Sub Class_Globals
	'Private fx As JFX ' Uncomment if required. For B4j only
	Private TJO As JavaObject
End Sub
'Initializes the object. You can add parameters to this method if needed.
Public Sub Initialize
	'This is an autogenerated constructor, there may not be a matching constructor in the class, you will then have to remove the next line of code
	TJO.InitializeStatic("javafx.concurrent.Worker")
End Sub

'Terminates execution of this Worker.
Public Sub Cancel As Boolean
	Return TJO.RunMethod("cancel",Null)
End Sub
'Indicates the exception which occurred while the Worker was running, if any.
Public Sub GetException As JavaObject
	Return TJO.RunMethod("getException",Null)
End Sub
'Gets a message associated with the current state of this Worker.
Public Sub GetMessage As String
	Return TJO.RunMethod("getMessage",Null)
End Sub
'Indicates the current progress of this Worker in terms of percent complete.
Public Sub GetProgress As Double
	Return TJO.RunMethod("getProgress",Null)
End Sub
'Specifies the current state of this Worker.
Public Sub GetState As String
	Return TJO.RunMethodJO("getState",Null).RunMethod("toString",Null)
End Sub
'An optional title that should be associated with this Worker.
Public Sub GetTitle As String
	Return TJO.RunMethod("getTitle",Null)
End Sub
'Indicates a maximum value for the workDoneProperty() property.
Public Sub GetTotalWork As Double
	Return TJO.RunMethod("getTotalWork",Null)
End Sub
'Specifies the value, or result, of this Worker.
Public Sub GetValue As JavaObject
	Return TJO.RunMethod("getValue",Null)
End Sub
'Indicates the current amount of work that has been completed.
Public Sub GetWorkDone As Double
	Return TJO.RunMethod("getWorkDone",Null)
End Sub
'True if the state is either SCHEDULED or RUNNING.
Public Sub IsRunning As Boolean
	Return TJO.RunMethod("isRunning",Null)
End Sub
'Gets the ReadOnlyObjectProperty representing any exception which occurred.
Public Sub ExceptionProperty As JavaObject
	Return TJO.RunMethod("exceptionProperty",Null)
End Sub
'Gets the ReadOnlyObjectProperty representing the current state.
Public Sub StateProperty As JavaObject
	Return TJO.RunMethod("stateProperty",Null)
End Sub

'Get the unwrapped object
Public Sub GetObject As Object
	Return TJO
End Sub

'Get the unwrapped object As a JavaObject
Public Sub GetObjectJO As JavaObject
	Return TJO
End Sub
'Comment if not needed
'Set the underlying Object, must be of correct type
Public Sub SetObject(Obj As Object)
	TJO = Obj
End Sub
