<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>de.donmanfred.Animationwrapper</name>
        <shortname>Animation</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.Animation</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Performer</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Filename</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MimeType</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileSize</name>
            <returntype>java.lang.Integer</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.ApiBuilderwrapper</name>
        <shortname>ApiBuilder</shortname>
        <objectwrapper>io.fouad.jtb.core.builders.ApiBuilder.ApiTopLevel</objectwrapper>
        <owner>process</owner>
        <method>
            <name>sendVideo</name>
            <comment>Sends a video as an input stream. Telegram clients support mp4 videos (other formats may be sent as
 Document). Bots can currently send video files of up to 50 MB in size, this limit may be changed in
 the future.
videoInputStream: &lt;code&gt;InputStream&lt;/code&gt; of the video to be sent
videoName: to name the video file</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.VideoSendingNoTarget</returntype>
            <parameter>
                <name>videoInputStream</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>videoName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>resendDocument</name>
            <comment>Re-sends an existing document. Bots can currently send files of any type of up to 50 MB in size, this
 limit may be changed in the future.
documentId: id of the document to be re-sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.DocumentSendingNoTarget</returntype>
            <parameter>
                <name>documentId</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getUserProfilePhotos</name>
            <comment>Gets a list of profile pictures for a user by his id.
userId: the user id</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.UserProfilePhotosRetrieving</returntype>
            <parameter>
                <name>userId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>sendDocument</name>
            <comment>Sends a document as an input stream. Bots can currently send files of any type of up to 50 MB in size,
 this limit may be changed in the future.
documentInputStream: &lt;code&gt;InputStream&lt;/code&gt; of the document to be sent
documentName: to name the document file</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.DocumentSendingNoTarget</returntype>
            <parameter>
                <name>documentInputStream</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>documentName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>de.donmanfred.ApiBuilderwrapper</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>telegramBotApi</name>
                <type>io.fouad.jtb.core.TelegramBotApi</type>
            </parameter>
        </method>
        <method>
            <name>resendSticker</name>
            <comment>Re-sends an existing sticker (.webp file).
stickerId: id of the sticker to be re-sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.StickerSendingNoTarget</returntype>
            <parameter>
                <name>stickerId</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>resendVoice</name>
            <comment>Re-sends an existing voice. Telegram clients will display it as playable voice message. For this to work,
 your audio must be in an .ogg file encoded with OPUS (other formats may be sent as Audio or Document).
 Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.
voiceId: id of the voice to be re-sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.VoiceSendingNoTarget</returntype>
            <parameter>
                <name>voiceId</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>leaveChat</name>
            <comment>Use this method for your bot to leave a group, supergroup or channel.</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.LeavingChatNoTarget</returntype>
        </method>
        <method>
            <name>sendVoice2</name>
            <comment>Sends a voice as a file. Telegram clients will display it as playable voice message. For this to work,
 your audio must be in an .ogg file encoded with OPUS (other formats may be sent as Audio or Document).
 Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.
voiceFile: voice file to be sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.VoiceSendingNoTarget</returntype>
            <parameter>
                <name>voiceFile</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>resendAudio</name>
            <comment>Re-sends an existing audio. Telegram clients will display the audio file in the music player. Your audio
 must be in the .mp3 format. Bots can currently send audio files of up to 50 MB in size, this limit may
 be changed in the future.
audioId: id of the audio to be re-sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.AudioSendingNoTarget</returntype>
            <parameter>
                <name>audioId</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendDocument2</name>
            <comment>Sends a document as a file. Bots can currently send files of any type of up to 50 MB in size, this
 limit may be changed in the future.
documentFile: document file to be sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.DocumentSendingNoTarget</returntype>
            <parameter>
                <name>documentFile</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>sendVideo2</name>
            <comment>Sends a video as a file. Telegram clients support mp4 videos (other formats may be sent as Document).
 Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.
videoFile: video file to be sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.VideoSendingNoTarget</returntype>
            <parameter>
                <name>videoFile</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>sendVoice</name>
            <comment>Sends a voice as an input stream. Telegram clients will display it as playable voice message. For this
 to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent as Audio or
 Document). Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in
 the future.
voiceInputStream: &lt;code&gt;InputStream&lt;/code&gt; of the voice to be sent
voiceName: to name the voice file</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.VoiceSendingNoTarget</returntype>
            <parameter>
                <name>voiceInputStream</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>voiceName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>asUser</name>
            <comment>Gets basic info about the current bot as &lt;code&gt;User&lt;/code&gt; object.</comment>
            <returntype>io.fouad.jtb.core.beans.User</returntype>
        </method>
        <method>
            <name>sendAudio</name>
            <comment>Sends an audio as an input stream. Telegram clients will display the audio file in the music player.
 Your audio must be in the .mp3 format. Bots can currently send audio files of up to 50 MB in size,
 this limit may be changed in the future.
audioInputStream: &lt;code&gt;InputStream&lt;/code&gt; of the audio to be sent
audioName: to name the audio file</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.AudioSendingNoTarget</returntype>
            <parameter>
                <name>audioInputStream</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>audioName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>resendVideo</name>
            <comment>Re-sends an existing video. Telegram clients support mp4 videos (other formats may be sent as Document).
 Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.
videoId: id of the video to be re-sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.VideoSendingNoTarget</returntype>
            <parameter>
                <name>videoId</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>answerInlineQuery</name>
            <comment>Sends answers to an inline query.</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.AnsweringInlineQueryNoIdNoResults</returntype>
        </method>
        <method>
            <name>sendLocation</name>
            <comment>Sends point on the map.
latitude: latitude of location
longitude: longitude of location</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.LocationSendingNoTarget</returntype>
            <parameter>
                <name>latitude</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>longitude</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>resendPhoto</name>
            <comment>Re-sends an existing photo.
photoId: id of the photo to be re-sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.PhotoSendingNoTarget</returntype>
            <parameter>
                <name>photoId</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendMessage</name>
            <comment>Sends text message.
text: the text message to be sent
chatId: 
replytomessageId: 
replyMarkup: 
parseMode: </comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>chatId</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>replytomessageId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>silent</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>disableLinkPreviews</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
            <parameter>
                <name>parseMode</name>
                <type EnumType="true">io.fouad.jtb.core.enums.ParseMode</type>
            </parameter>
        </method>
        <method>
            <name>sendChatAction</name>
            <comment>Use this method when you need to tell the user that something is happening on the bot's side.
 The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients
 clear its typing status).
chatAction: the type of chat action to be sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.ChatActionSendingNoTarget</returntype>
            <parameter>
                <name>chatAction</name>
                <type EnumType="true">io.fouad.jtb.core.enums.ChatAction</type>
            </parameter>
        </method>
        <method>
            <name>unbanChatMember</name>
            <comment>Unbans a previously kicked user in a supergroup. The user will not return to the group
 automatically, but will be able to join via link, etc. The bot must be an administrator
 in the group for this to work.
userId: id of user that would be unbanned</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.UnbanningChatMemberNoTarget</returntype>
            <parameter>
                <name>userId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>editInlineMessage</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.EditingInlineMessageNoId</returntype>
        </method>
        <method>
            <name>downloadFile</name>
            <comment>Downloads a Telegram file. For the moment, bots can download files of up to 20MB in size.
telegramFile: the Telegram file to be downloaded</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.FileDownloadingNoOutputStream</returntype>
            <parameter>
                <name>telegramFile</name>
                <type>io.fouad.jtb.core.beans.TelegramFile</type>
            </parameter>
        </method>
        <method>
            <name>sendPhoto</name>
            <comment>Sends a photo as an input stream.
photoInputStream: &lt;code&gt;InputStream&lt;/code&gt; of the photo to be sent
photoName: to name the photo file</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.PhotoSendingNoTarget</returntype>
            <parameter>
                <name>photoInputStream</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>photoName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>kickChatMember</name>
            <comment>Kicks a user from a group or a supergroup. In the case of supergroups, the user will not be
 able to return to the group on their own using invite links, etc., unless unbanned first.
 The bot must be an administrator in the group for this to work.
userId: id of user that would be kicked</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.KickingChatMemberNoTarget</returntype>
            <parameter>
                <name>userId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>answerCallbackQuery</name>
            <comment>Sends answer to callback query sent from inline keyboard. The answer will be displayed
 to the user as a notification at the top of the chat screen or as an alert.</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.AnsweringCallbackQueryNoId</returntype>
        </method>
        <method>
            <name>sendSticker</name>
            <comment>Sends a sticker as a .webp file.
stickerFile: sticker file to be sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.StickerSendingNoTarget</returntype>
            <parameter>
                <name>stickerFile</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>editMessage</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.EditingNormalMessageNoIdNoTarget</returntype>
        </method>
        <method>
            <name>sendPhoto2</name>
            <comment>Sends a photo as a file.
photoFile: photo file to be sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.PhotoSendingNoTarget</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendAudio2</name>
            <comment>Sends an audio as a file. Telegram clients will display the audio file in the music player. Your audio
 must be in the .mp3 format. Bots can currently send audio files of up to 50 MB in size, this limit may
 be changed in the future.
audioFile: audio file to be sent</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.AudioSendingNoTarget</returntype>
            <parameter>
                <name>audioFile</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>forwardMessage</name>
            <comment>Forward a message of any kind.
messageId: id of the message to be forwarded</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.MessageForwardingNoSourceNoTarget</returntype>
            <parameter>
                <name>messageId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getFileInfo</name>
            <comment>Gets basic info about a file and prepare it for downloading. For the moment, bots can download files
 of up to 20MB in size
fileId: file identifier to get info about</comment>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.FileInfoRetrieving</returntype>
            <parameter>
                <name>fileId</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>Chat</name>
            <returntype>io.fouad.jtb.core.builders.ApiBuilder.GettingChatNoTarget</returntype>
            <comment>Use this method to get up to date information about the chat (current name of the user for one-on-one
 conversations, current username of a user, group or channel, etc.).</comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.Audiowrapper</name>
        <shortname>Audio</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.Audio</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Performer</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MimeType</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileSize</name>
            <returntype>java.lang.Integer</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.ButtonSetwrapper</name>
        <shortname>ButtonSet</shortname>
        <objectwrapper>io.fouad.jtb.core.builders.KeyboardButtonBuilder.ButtonSet</objectwrapper>
        <owner>process</owner>
        <method>
            <name>newRow</name>
            <comment>Starts a new row of the keyboard.</comment>
            <returntype>io.fouad.jtb.core.builders.KeyboardButtonBuilder.Row</returntype>
        </method>
        <method>
            <name>requestLocation</name>
            <comment>the user's current location will be sent when the button is pressed.
 Available in private chats only.
 
 If requestLocation() is invoked, requestContact() will be discarded.</comment>
            <returntype>io.fouad.jtb.core.builders.KeyboardButtonBuilder.ButtonSet</returntype>
        </method>
        <method>
            <name>requestContact</name>
            <comment>the user's phone number will be sent as a contact when the button
 is pressed. Available in private chats only.
 
 If requestContact() is invoked, requestLocation() will be discarded.</comment>
            <returntype>io.fouad.jtb.core.builders.KeyboardButtonBuilder.ButtonSet</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>build</name>
            <comment>Builds the keyboard.
Return type: @return:the keyboard</comment>
            <returntype>io.fouad.jtb.core.beans.KeyboardButton[][]</returntype>
        </method>
        <method>
            <name>newButton</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.builders.KeyboardButtonBuilder.ButtonSet</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>de.donmanfred.CallbackQuerywrapper</name>
        <shortname>CallbackQuery</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.CallbackQuery</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>ChatInstance</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Message</name>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Inline_message_id</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Data</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>From</name>
            <returntype>io.fouad.jtb.core.beans.User</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.ChatMemberwrapper</name>
        <shortname>User</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.ChatMember</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>Status</name>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ChatMemberStatus</returntype>
            <comment></comment>
        </property>
        <property>
            <name>User</name>
            <returntype>io.fouad.jtb.core.beans.User</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.Chatwrapper</name>
        <shortname>Chat</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.Chat</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>allMembersareAdministrators</name>
            <returntype>java.lang.Boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ChatType</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Username</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FirstName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LastName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.Contactwrapper</name>
        <shortname>Contact</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.Contact</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>FirstName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UserId</name>
            <returntype>java.lang.Integer</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PhoneNumber</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LastName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.Documentwrapper</name>
        <shortname>Document</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.Document</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>FileUniqueID</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Thumb</name>
            <returntype>io.fouad.jtb.core.beans.PhotoSize</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MimeType</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileSize</name>
            <returntype>java.lang.Integer</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.InlineButtonSetwrapper</name>
        <shortname>InlineButtonSet</shortname>
        <objectwrapper>io.fouad.jtb.core.builders.InlineKeyboardButtonBuilder.ButtonSet</objectwrapper>
        <owner>process</owner>
        <method>
            <name>newRow</name>
            <comment>Starts a new row of the keyboard.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineKeyboardButtonBuilder.Row</returntype>
        </method>
        <method>
            <name>requestContact</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.builders.InlineKeyboardButtonBuilder.ButtonSetWithNoOptional</returntype>
            <parameter>
                <name>callbackData</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>withUrl</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.builders.InlineKeyboardButtonBuilder.ButtonSetWithNoOptional</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>build</name>
            <comment>Builds the keyboard.
Return type: @return:the keyboard</comment>
            <returntype>io.fouad.jtb.core.beans.InlineKeyboardButton[][]</returntype>
        </method>
        <method>
            <name>newButton</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.builders.InlineKeyboardButtonBuilder.ButtonSet</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>de.donmanfred.InlineKeyboardButtonBuilderwrapper</name>
        <shortname>InlineKeyboardButtonBuilder</shortname>
        <objectwrapper>io.fouad.jtb.core.builders.InlineKeyboardButtonBuilder</objectwrapper>
        <owner>process</owner>
        <method>
            <name>newRow</name>
            <comment></comment>
            <returntype>de.donmanfred.InlineKeyboardButtonBuilderwrapper.inlRowwrapper</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>de.donmanfred.InlineKeyboardButtonBuilderwrapper</returntype>
        </method>
    </class>
    <class>
        <name>de.donmanfred.InlineKeyboardButtonBuilderwrapper.inlRowwrapper</name>
        <objectwrapper>io.fouad.jtb.core.builders.InlineKeyboardButtonBuilder.Row</objectwrapper>
        <owner>process</owner>
        <method>
            <name>build</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.InlineKeyboardButton[][]</returntype>
        </method>
        <method>
            <name>newButton</name>
            <comment></comment>
            <returntype>de.donmanfred.InlineKeyboardButtonBuilderwrapper.inlButtonSetwrapper</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>de.donmanfred.InlineKeyboardButtonBuilderwrapper.inlButtonSetwrapper</name>
        <objectwrapper>io.fouad.jtb.core.builders.InlineKeyboardButtonBuilder.ButtonSet</objectwrapper>
        <owner>process</owner>
        <method>
            <name>newRow</name>
            <comment></comment>
            <returntype>de.donmanfred.InlineKeyboardButtonBuilderwrapper.inlRowwrapper</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>withUrl</name>
            <comment></comment>
            <returntype>de.donmanfred.InlineKeyboardButtonBuilderwrapper.ButtonSetWithNoOptionalwrapper</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>withSwitchInlineQuery</name>
            <comment></comment>
            <returntype>de.donmanfred.InlineKeyboardButtonBuilderwrapper.ButtonSetWithNoOptionalwrapper</returntype>
            <parameter>
                <name>switchInlineQuery</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>build</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.InlineKeyboardButton[][]</returntype>
        </method>
        <method>
            <name>newButton</name>
            <comment></comment>
            <returntype>de.donmanfred.InlineKeyboardButtonBuilderwrapper.inlButtonSetwrapper</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>withCallbackData</name>
            <comment></comment>
            <returntype>de.donmanfred.InlineKeyboardButtonBuilderwrapper.ButtonSetWithNoOptionalwrapper</returntype>
            <parameter>
                <name>callbackData</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>de.donmanfred.InlineKeyboardButtonBuilderwrapper.ButtonSetWithNoOptionalwrapper</name>
        <objectwrapper>io.fouad.jtb.core.builders.InlineKeyboardButtonBuilder.ButtonSetWithNoOptional</objectwrapper>
        <owner>process</owner>
        <method>
            <name>newRow</name>
            <comment></comment>
            <returntype>de.donmanfred.InlineKeyboardButtonBuilderwrapper.inlRowwrapper</returntype>
        </method>
        <method>
            <name>build</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.InlineKeyboardButton[][]</returntype>
        </method>
        <method>
            <name>newButton</name>
            <comment></comment>
            <returntype>de.donmanfred.InlineKeyboardButtonBuilderwrapper.inlButtonSetwrapper</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>de.donmanfred.InlineKeyboardButtonwrapper</name>
        <shortname>InlineKeyboardButton</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.InlineKeyboardButton</objectwrapper>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.InlineKeyboardButton</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>callbackData</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>switchInlineQuery</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>de.donmanfred.InlineKeyboardMarkupwrapper</name>
        <shortname>InlineKeyboardMarkup</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.InlineKeyboardMarkup</objectwrapper>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>inlineKeyboard</name>
                <type>io.fouad.jtb.core.beans.InlineKeyboardButton[][]</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Keyboard</name>
            <parameter>
                <name>keyboard</name>
                <type>io.fouad.jtb.core.beans.InlineKeyboardButton[][]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>InlineKeyboard</name>
            <returntype>io.fouad.jtb.core.beans.InlineKeyboardButton[][]</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.InlineQueryResultBuilderwrapper</name>
        <shortname>InlineQueryResultBuilder</shortname>
        <objectwrapper>io.fouad.jtb.core.builders.InlineQueryResultBuilder</objectwrapper>
        <owner>process</owner>
        <method>
            <name>asAudio</name>
            <comment>Represents a link to an mp3 audio file. By default, this audio file will be sent by the user. Alternatively,
 you can use messageContent to send a message with the specified content instead of the audio.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultAudioNoIdNoAudioUrlNoTitle</returntype>
        </method>
        <method>
            <name>asCachedSticker</name>
            <comment>Represents a link to a sticker stored on the Telegram servers. By default, this sticker will
 be sent by the user. Alternatively, you can use messageContent to send a message with the
 specified content instead of the sticker.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultCachedStickerNoIdNoStickerFileId</returntype>
        </method>
        <method>
            <name>asArticle</name>
            <comment>Represents a link to an article or web page.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultArticleNoIdNoTitleNoMessageContent</returntype>
        </method>
        <method>
            <name>asVoice</name>
            <comment>Represents a link to a voice recording in an .ogg container encoded with OPUS. By default, this voice
 recording will be sent by the user. Alternatively, you can use messageContent to send a message
 with the specified content instead of the the voice message.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultVoiceNoIdNoVoiceUrlNoTitle</returntype>
        </method>
        <method>
            <name>asContact</name>
            <comment>Represents a contact with a phone number. By default, this contact will be sent by the user.
 Alternatively, you can use messageContent to send a message with the specified content
 instead of the contact.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultContactNoIdNoPhoneNumberNoFirstName</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>asVideo</name>
            <comment>Represents a link to a page containing an embedded video player or a video file. By default, this video
 file will be sent by the user with an optional caption. Alternatively, you can use messageContent to send
 a message with the specified content instead of the video.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultVideoNoIdNoVideoUrlNoMimeTypeNoThumbUrlNoTitle</returntype>
        </method>
        <method>
            <name>asCachedVideo</name>
            <comment>Represents a link to a video file stored on the Telegram servers. By default, this video file
 will be sent by the user with an optional caption. Alternatively, you can use messageContent
 to send a message with the specified content instead of the video.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultCachedVideoNoIdNoVideoFileIdNoTitle</returntype>
        </method>
        <method>
            <name>asCachedMpeg4Gif</name>
            <comment>Represents a link to a video animation (H.264/MPEG-4 AVC video without sound) stored on the
 Telegram servers. By default, this animated MPEG-4 file will be sent by the user with an
 optional caption. Alternatively, you can use messageContent to send a message with the
 specified content instead of the animation.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultCachedMpeg4GifNoIdNoMpeg4FileId</returntype>
        </method>
        <method>
            <name>asCachedDocument</name>
            <comment>Represents a link to a file stored on the Telegram servers. By default, this file will be sent
 by the user with an optional caption. Alternatively, you can use messageContent to send
 a message with the specified content instead of the file. Currently, only pdf-files and zip
 archives can be sent using this method.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultCachedDocumentNoIdNoTitleNoDocumentFileId</returntype>
        </method>
        <method>
            <name>asCachedVoice</name>
            <comment>Represents a link to a voice message stored on the Telegram servers. By default, this voice
 message will be sent by the user. Alternatively, you can use messageContent to send a message
 with the specified content instead of the voice message.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultCachedVoiceNoIdNoVoiceFileIdNoTitle</returntype>
        </method>
        <method>
            <name>asMpeg4Gif</name>
            <comment>Represents a link to a video animation (H.264/MPEG-4 AVC video without sound). By default, this animated
 MPEG-4 file will be sent by the user with optional caption. Alternatively, you can provide messageContent
 to send it instead of the animation.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultMpeg4NoIdNoMpeg4UrlNoThumbUrl</returntype>
        </method>
        <method>
            <name>asDocument</name>
            <comment>Represents a link to a file. By default, this file will be sent by the user with an optional caption.
 Alternatively, you can use messageContent to send a message with the specified content instead
 of the file. Currently, only .PDF and .ZIP files can be sent using this method.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultDocumentNoIdNoTitleNoDocumentUrlNoMimeType</returntype>
        </method>
        <method>
            <name>asCachedGif</name>
            <comment>Represents a link to an animated GIF file stored on the Telegram servers. By default, this
 animated GIF file will be sent by the user with an optional caption. Alternatively, you can
 use messageContent to send a message with specified content instead of the animation.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultCachedGifNoIdNoGifFileId</returntype>
        </method>
        <method>
            <name>asPhoto</name>
            <comment>Represents a link to a photo. By default, this photo will be sent by the user with optional caption.
 Alternatively, you can provide messageContent to send it instead of photo.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultPhotoNoIdNoPhotoUrlNoThumbUrl</returntype>
        </method>
        <method>
            <name>asVenue</name>
            <comment>Represents a venue. By default, the venue will be sent by the user. Alternatively, you can use
 messageContent to send a message with the specified content instead of the venue.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultVenueNoIdNoLatitudeNoLongitudeNoTitleNoAddress</returntype>
        </method>
        <method>
            <name>asCachedPhoto</name>
            <comment>Represents a link to a photo stored on the Telegram servers. By default, this photo will be
 sent by the user with an optional caption. Alternatively, you can use messageContent to
 send a message with the specified content instead of the photo.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultCachedPhotoNoIdNoPhotoFileId</returntype>
        </method>
        <method>
            <name>asLocation</name>
            <comment>Represents a location on a map. By default, the location will be sent by the user. Alternatively,
 you can use messageContent to send a message with the specified content instead of the location.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultLocationNoIdNoLatitudeNoLongitudeNoTitle</returntype>
        </method>
        <method>
            <name>asGif</name>
            <comment>Represents a link to an animated GIF file. By default, this animated GIF file will be sent by the user
 with optional caption. Alternatively, you can provide messageContent to send it instead of the animation.</comment>
            <returntype>io.fouad.jtb.core.builders.InlineQueryResultBuilder.ResultGifNoIdNoGifUrlNoThumbUrl</returntype>
        </method>
    </class>
    <class>
        <name>de.donmanfred.InlineRowwrapper</name>
        <shortname>InlineRow</shortname>
        <objectwrapper>io.fouad.jtb.core.builders.InlineKeyboardButtonBuilder.Row</objectwrapper>
        <owner>process</owner>
        <method>
            <name>build</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.InlineKeyboardButton[][]</returntype>
        </method>
        <method>
            <name>newButton</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.builders.InlineKeyboardButtonBuilder.ButtonSet</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>de.donmanfred.JTBwrapper</name>
        <shortname>JTB</shortname>
        <owner>process</owner>
        <event>onGetUpdatesFailure(error As String)</event>
        <event>onCallbackQueryReceived(api As Object, id As Int, query As Object)</event>
        <event>onChosenInlineResultReceived(api As Object, id As Int,	result As Object)</event>
        <event>onInlineQueryReceived(api As Object, id As Int, query As Object)</event>
        <event>onMessageReceived(api As Object, id As Int, msg As Object)</event>
        <event>onEditedMessageReceived(api As Object, id As Int, msg As Object)</event>
        <permission>android.permission.INTERNET</permission>
        <permission>android.permission.ACCESS_NETWORK_STATE</permission>
        <method>
            <name>parsemodeHTML</name>
            <comment></comment>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ParseMode</returntype>
        </method>
        <method>
            <name>getChatMembersCount</name>
            <comment>Use this method to get the number of members in a chat.
targetChatIdentifier: unique identifier for the target group/supergroup or username of the target supergroup
Return type: @return:On success, number of chat members.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
        </method>
        <method>
            <name>parsemodePLAIN</name>
            <comment></comment>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ParseMode</returntype>
        </method>
        <method>
            <name>editMessageReplyMarkup</name>
            <comment>Edits only the reply markup of messages sent by the bot or via the bot (for inline bots).
targetChatIdentifier: unique identifier for the target chat or username of the target channel
messageId: unique identifier of the sent message
inlineMessageId: identifier of the inline message
inlineKeyboardMarkup: inlineKeyboardMarkup object
Return type: @return:the edited &lt;code&gt;Message&lt;/code&gt; if it is sent by the bot, otherwise true on success</comment>
            <returntype>io.fouad.jtb.core.beans.BooleanOrMessageResult</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>messageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>inlineMessageId</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>inlineKeyboardMarkup</name>
                <type>io.fouad.jtb.core.beans.InlineKeyboardMarkup</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>botName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>apiToken</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFile</name>
            <comment>Gets basic info about a file and prepare it for downloading. For the moment, bots can download files
 of up to 20MB in size.
 
 Note: This function may not preserve original file name. Mime type of the file and its name (if available)
 should be saved when the File object is received.
fileId: file identifier to get info about
Return type: @return:&lt;code&gt;TelegramFile&lt;/code&gt; object</comment>
            <returntype>io.fouad.jtb.core.beans.TelegramFile</returntype>
            <parameter>
                <name>fileId</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendVoice</name>
            <comment>Sends audio files that Telegram clients will display them as playable voice messages. For this to work,
 your audio must be in an .ogg file encoded with OPUS (other formats may be sent as Audio or Document).
 Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.
targetChatIdentifier: unique identifier for the target chat or username of the target channel
mediaIdentifier: audio file to be sent
duration: duration of sent audio in seconds
silentMessage: sends the message silently. iOS users will not receive a notification, Android
                      users will receive a notification with no sound
replyToMessageId: if the message is a reply, id of the original message
replyMarkup: additional instructions to create inline keyboard, create/hide custom keyboard,
                    or to force a reply from the user
Return type: @return:the sent &lt;code&gt;Message&lt;/code&gt;</comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>mediaIdentifier</name>
                <type>io.fouad.jtb.core.beans.MediaIdentifier</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyToMessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
        </method>
        <method>
            <name>ChatActionRECORD_VIDEO</name>
            <comment></comment>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ChatAction</returntype>
        </method>
        <method>
            <name>editMessageText</name>
            <comment>Edits text messages sent by the bot or via the bot (for inline bots).
targetChatIdentifier: unique identifier for the target chat or username of the target channel
messageId: unique identifier of the sent message
inlineMessageId: identifier of the inline message
text: new text of the message
parseMode: send Markdown or HTML, if you want Telegram apps to show bold, italic, fixed-width
                  text or inline URLs in your bot's message
disableLinkPreviews: disables link previews for links in this message
inlineKeyboardMarkup: inlineKeyboardMarkup object
Return type: @return:the edited &lt;code&gt;Message&lt;/code&gt; if it is sent by the bot, otherwise true on success</comment>
            <returntype>io.fouad.jtb.core.beans.BooleanOrMessageResult</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>messageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>inlineMessageId</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>parseMode</name>
                <type EnumType="true">io.fouad.jtb.core.enums.ParseMode</type>
            </parameter>
            <parameter>
                <name>disableLinkPreviews</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>inlineKeyboardMarkup</name>
                <type>io.fouad.jtb.core.beans.InlineKeyboardMarkup</type>
            </parameter>
        </method>
        <method>
            <name>sendLocation</name>
            <comment>Sends point on the map.
targetChatIdentifier: unique identifier for the target chat or username of the target channel
latitude: latitude of location
longitude: longitude of location
silentMessage: sends the message silently. iOS users will not receive a notification, Android
                      users will receive a notification with no sound
replyToMessageId: if the message is a reply, id of the original message
replyMarkup: additional instructions to create inline keyboard, create/hide custom keyboard,
                    or to force a reply from the user
Return type: @return:the sent &lt;code&gt;Message&lt;/code&gt;</comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>latitude</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>longitude</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyToMessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
        </method>
        <method>
            <name>unbanChatMember</name>
            <comment>Unbans a previously kicked user in a supergroup. The user will not return to the group automatically,
 but will be able to join via link, etc. The bot must be an administrator in the group for this to work.
targetChatIdentifier: unique identifier for the target group/supergroup or username of the target supergroup
userId: unique identifier of the target user
Return type: @return:&lt;code&gt;true&lt;/code&gt; on success</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>userId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getChatAdministrators</name>
            <comment>Use this method to get a list of administrators in a chat.
targetChatIdentifier: unique identifier for the target group/supergroup or username of the target supergroup
Return type: @return:On success, returns an Array of &lt;code&gt;ChatMember&lt;/code&gt; objects that contains information about all chat
 administrators except other bots. If the chat is a group or a supergroup and no administrators were appointed,
 only the creator will be returned.</comment>
            <returntype>io.fouad.jtb.core.beans.ChatMember[]</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
        </method>
        <method>
            <name>startAsync</name>
            <comment>Starts the bot in POLLING mode. This method returns immediately.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getChat</name>
            <comment>Use this method to get up to date information about the chat (current name of the user for one-on-one
 conversations, current username of a user, group or channel, etc.).
targetChatIdentifier: unique identifier for the target group/supergroup or username of the target supergroup
Return type: @return:a &lt;code&gt;Chat&lt;/code&gt; object on success</comment>
            <returntype>io.fouad.jtb.core.beans.Chat</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
        </method>
        <method>
            <name>byUsername</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.ChatIdentifier</returntype>
            <parameter>
                <name>username</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>stop</name>
            <comment>Stops the bot at next timeout.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>sendPhoto</name>
            <comment>Sends photos.
targetChatIdentifier: unique identifier for the target chat or username of the target channel
mediaIdentifier: photo to be sent
photoCaption: photo caption, 0-200 characters
silentMessage: sends the message silently. iOS users will not receive a notification, Android
                      users will receive a notification with no sound
replyToMessageId: if the message is a reply, id of the original message
replyMarkup: additional instructions to create inline keyboard, create/hide custom keyboard,
                    or to force a reply from the user
Return type: @return:the sent &lt;code&gt;Message&lt;/code&gt;</comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>mediaIdentifier</name>
                <type>io.fouad.jtb.core.beans.MediaIdentifier</type>
            </parameter>
            <parameter>
                <name>photoCaption</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyToMessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
        </method>
        <method>
            <name>sendSticker</name>
            <comment>Sends .webp stickers.
targetChatIdentifier: unique identifier for the target chat or username of the target channel
mediaIdentifier: sticker to be sent
silentMessage: sends the message silently. iOS users will not receive a notification, Android
                      users will receive a notification with no sound
replyToMessageId: if the message is a reply, id of the original message
replyMarkup: additional instructions to create inline keyboard, create/hide custom keyboard,
                    or to force a reply from the user
Return type: @return:the sent &lt;code&gt;Message&lt;/code&gt;</comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>mediaIdentifier</name>
                <type>io.fouad.jtb.core.beans.MediaIdentifier</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyToMessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
        </method>
        <method>
            <name>ChatActionUPLOAD_AUDIO</name>
            <comment></comment>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ChatAction</returntype>
        </method>
        <method>
            <name>parsemodeMARKDOWN</name>
            <comment></comment>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ParseMode</returntype>
        </method>
        <method>
            <name>sendVideo</name>
            <comment>Sends video files. Telegram clients support mp4 videos (other formats may be sent as Document). Bots can
 currently send video files of up to 50 MB in size, this limit may be changed in the future.
targetChatIdentifier: unique identifier for the target chat or username of the target channel
mediaIdentifier: video to be sent
duration: duration of sent video in seconds
width: video width
height: video height
videoCaption: video caption, 0-200 characters
silentMessage: sends the message silently. iOS users will not receive a notification, Android
                      users will receive a notification with no sound
replyToMessageId: if the message is a reply, id of the original message
replyMarkup: additional instructions to create inline keyboard, create/hide custom keyboard,
                    or to force a reply from the user
Return type: @return:the sent &lt;code&gt;Message&lt;/code&gt;</comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>mediaIdentifier</name>
                <type>io.fouad.jtb.core.beans.MediaIdentifier</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>videoCaption</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyToMessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
        </method>
        <method>
            <name>unpinChatMessage</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
        </method>
        <method>
            <name>MediaById</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.MediaIdentifier</returntype>
            <parameter>
                <name>id</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getChatMember</name>
            <comment>Use this method to get information about a member of a chat.
targetChatIdentifier: unique identifier for the target group/supergroup or username of the target supergroup
userId: unique identifier of the target user
Return type: @return:&lt;code&gt;ChatMember&lt;/code&gt; object on success</comment>
            <returntype>io.fouad.jtb.core.beans.ChatMember</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>userId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ChatActionUPLOAD_VIDEO</name>
            <comment></comment>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ChatAction</returntype>
        </method>
        <method>
            <name>getUserProfilePhotos</name>
            <comment>Gets a list of profile pictures for a user.
userId: unique identifier of the target user
offset: sequential number of the first photo to be returned. By default, all photos are returned
limit: limits the number of photos to be retrieved. Values between 1—100 are accepted. Defaults
              to 100
Return type: @return:&lt;code&gt;UserProfilePhotos&lt;/code&gt; object</comment>
            <returntype>io.fouad.jtb.core.beans.UserProfilePhotos</returntype>
            <parameter>
                <name>userId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>limit</name>
                <type>java.lang.Integer</type>
            </parameter>
        </method>
        <method>
            <name>sendDocument</name>
            <comment>Sends general files. Bots can currently send files of any type of up to 50 MB in size, this limit may be
 changed in the future.
targetChatIdentifier: unique identifier for the target chat or username of the target channel
mediaIdentifier: file to be sent
documentCaption: document caption, 0-200 characters
silentMessage: sends the message silently. iOS users will not receive a notification, Android
                      users will receive a notification with no sound
replyToMessageId: if the message is a reply, id of the original message
replyMarkup: additional instructions to create inline keyboard, create/hide custom keyboard,
                    or to force a reply from the user
Return type: @return:the sent &lt;code&gt;Message&lt;/code&gt;</comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>mediaIdentifier</name>
                <type>io.fouad.jtb.core.beans.MediaIdentifier</type>
            </parameter>
            <parameter>
                <name>documentCaption</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyToMessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
        </method>
        <method>
            <name>CreateDummyKeyboard</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.InlineKeyboardButton[][]</returntype>
        </method>
        <method>
            <name>leaveChat</name>
            <comment>Use this method for your bot to leave a group, supergroup or channel.
targetChatIdentifier: unique identifier for the target group/supergroup or username of the target supergroup
Return type: @return:&lt;code&gt;true&lt;/code&gt; on success</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
        </method>
        <method>
            <name>ChatActionTYPING</name>
            <comment></comment>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ChatAction</returntype>
        </method>
        <method>
            <name>sendVenue</name>
            <comment>Sends information about a venue.
targetChatIdentifier: unique identifier for the target chat or username of the target channel
latitude: latitude of the venue
longitude: longitude of the venue
title: name of the venue
address: address of the venue
foursquareId: Foursquare identifier of the venue
silentMessage: sends the message silently. iOS users will not receive a notification, Android
                      users will receive a notification with no sound
replyToMessageId: if the message is a reply, id of the original message
replyMarkup: additional instructions to create inline keyboard, create/hide custom keyboard,
                    or to force a reply from the user
Return type: @return:the sent &lt;code&gt;Message&lt;/code&gt;</comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>latitude</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>longitude</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>title</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>address</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>foursquareId</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyToMessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
        </method>
        <method>
            <name>MediaByFile</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.MediaIdentifier</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendAnimation</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>mediaIdentifier</name>
                <type>io.fouad.jtb.core.beans.MediaIdentifier</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>Thumb</name>
                <type>io.fouad.jtb.core.beans.MediaIdentifier</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyToMessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
            <parameter>
                <name>caption</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>parseMode</name>
                <type EnumType="true">io.fouad.jtb.core.enums.ParseMode</type>
            </parameter>
        </method>
        <method>
            <name>ChatActionUPLOAD_DOCUMENT</name>
            <comment></comment>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ChatAction</returntype>
        </method>
        <method>
            <name>sendAudio</name>
            <comment>Sends audio files that Telegram clients will display them in the music player. Your audio must be in the
 .mp3 format. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in
 the future.
targetChatIdentifier: unique identifier for the target chat or username of the target channel
mediaIdentifier: audio file to be sent
duration: duration of the audio in seconds
performer: the performer
trackTitle: the track name
silentMessage: sends the message silently. iOS users will not receive a notification, Android
                      users will receive a notification with no sound
replyToMessageId: if the message is a reply, id of the original message
replyMarkup: additional instructions to create inline keyboard, create/hide custom keyboard,
                    or to force a reply from the user
Return type: @return:the sent &lt;code&gt;Message&lt;/code&gt;</comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>mediaIdentifier</name>
                <type>io.fouad.jtb.core.beans.MediaIdentifier</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>performer</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>trackTitle</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyToMessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
        </method>
        <method>
            <name>pinChatMessage</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>messageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>disable_notification</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>ChatActionRECORD_AUDIO</name>
            <comment></comment>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ChatAction</returntype>
        </method>
        <method>
            <name>ChatActionFIND_LOCATION</name>
            <comment></comment>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ChatAction</returntype>
        </method>
        <method>
            <name>answerInlineQuery</name>
            <comment>Sends answers to an inline query. No more than 50 results per query are allowed.
inlineQueryId: unique identifier for the answered query
results: array of results for the inline query
cacheTime: the maximum amount of time in seconds that the result of the inline query
                  may be cached on the server. Defaults to 300
isPersonal: pass &lt;code&gt;true&lt;/code&gt;, if results may be cached on the server side only
                   for the user that sent the query. By default, results may be returned to
                   any user who sends the same query
nextOffset: the offset that a client should send in the next query with the same text
                   to receive more results. Pass an empty string if there are no more results
                   or if you don‘t support pagination. Offset length can’t exceed 64 bytes
switchPmText: if passed, clients will display a button with specified text that
                     switches the user to a private chat with the bot and sends the bot
                     a start message with the parameter switchPmParameter
switchPmParameter: parameter for the start message sent to the bot when user presses
                          the switch button.
                          Example: An inline bot that sends YouTube videos can ask the user
                          to connect the bot to their YouTube account to adapt search results
                          accordingly. To do this, it displays a ‘Connect your YouTube
                          account’ button above the results, or even before showing any.
                          The user presses the button, switches to a private chat with the bot
                          and, in doing so, passes a start parameter that instructs the bot to
                          return an oauth link. Once done, the bot can offer a switch_inline
                          button so that the user can easily return to the chat where they
                          wanted to use the bot's inline capabilities.
Return type: @return:&lt;code&gt;true&lt;/code&gt; on success</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>inlineQueryId</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>results</name>
                <type>io.fouad.jtb.core.beans.InlineQueryResult[]</type>
            </parameter>
            <parameter>
                <name>cacheTime</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>isPersonal</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>nextOffset</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>switchPmText</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>switchPmParameter</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DeleteMessage</name>
            <comment>Delete message.
 
 param targetChatIdentifier unique identifier for the target chat or username of the target channel
 param replyToMessageId if the message is a reply, id of the original message
 param replyMarkup additional instructions to create inline keyboard, create/hide custom keyboard,
                    or to force a reply from the user
 
 return the sent &lt;code&gt;Message&lt;/code&gt;
 
 throws IOException if an I/O exception occurs
 NegativeResponseException if 4xx-5xx HTTP response is received from Telegram server</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>MessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
        </method>
        <method>
            <name>sendMessage</name>
            <comment>Sends text messages.
 
 param targetChatIdentifier unique identifier for the target chat or username of the target channel
 param text text of the message to be sent
 param parseMode send Markdown or HTML, if you want Telegram apps to show bold, italic, fixed-width
                  text or inline URLs in your bot's message
 param disableLinkPreviews disables link previews for links in this message
 param silentMessage sends the message silently. iOS users will not receive a notification, Android
                      users will receive a notification with no sound
 param replyToMessageId if the message is a reply, id of the original message
 param replyMarkup additional instructions to create inline keyboard, create/hide custom keyboard,
                    or to force a reply from the user
 
 return the sent &lt;code&gt;Message&lt;/code&gt;
 
 throws IOException if an I/O exception occurs
 NegativeResponseException if 4xx-5xx HTTP response is received from Telegram server</comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>parseMode</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>disableLinkPreviews</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyToMessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
        </method>
        <method>
            <name>sendChatAction</name>
            <comment>Use this method when you need to tell the user that something is happening on the bot's side.
 The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients
 clear its typing status).
targetChatIdentifier: unique identifier for the target chat or username of the target channel
action: type of action to broadcast. Choose one, depending on what the user is about to receive</comment>
            <returntype>void</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>action</name>
                <type EnumType="true">io.fouad.jtb.core.enums.ChatAction</type>
            </parameter>
        </method>
        <method>
            <name>ChatActionUPLOAD_PHOTO</name>
            <comment></comment>
            <returntype EnumType="true">io.fouad.jtb.core.enums.ChatAction</returntype>
        </method>
        <method>
            <name>kickChatMember</name>
            <comment>Kicks a user from a group or a supergroup. In the case of supergroups, the user will not be
 able to return to the group on their own using invite links, etc., unless unbanned first.
 The bot must be an administrator in the group for this to work.
 Note: This will method only work if the ‘All Members Are Admins’ setting is off in the target
 group. Otherwise members may only be removed by the group's creator or by the member that
 added them.
targetChatIdentifier: unique identifier for the target group/supergroup or username of the target supergroup
userId: unique identifier of the target user
Return type: @return:&lt;code&gt;true&lt;/code&gt; on success</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>userId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>answerCallbackQuery</name>
            <comment>Sends answers to callback queries sent from inline keyboards. The answer will be displayed to
 the user as a notification at the top of the chat screen or as an alert.
callbackQueryId: unique identifier for the query to be answered
text: text of the notification. If not specified, nothing will be shown to the user
showAlert: if true, an alert will be shown by the client instead of a notification at
                  the top of the chat screen. Defaults to false
Return type: @return:&lt;code&gt;true&lt;/code&gt; on success</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>callbackQueryId</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>showAlert</name>
                <type>java.lang.Boolean</type>
            </parameter>
        </method>
        <method>
            <name>sendContact</name>
            <comment>Sends phone contact.
targetChatIdentifier: unique identifier for the target chat or username of the target channel
phoneNumber: contact's phone number
firstName: contact's first name
lastName: contact's last name
silentMessage: sends the message silently. iOS users will not receive a notification, Android
                      users will receive a notification with no sound
replyToMessageId: if the message is a reply, id of the original message
replyMarkup: additional instructions to create inline keyboard, create/hide custom keyboard,
                    or to force a reply from the user
Return type: @return:the sent &lt;code&gt;Message&lt;/code&gt;</comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>phoneNumber</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>firstName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>lastName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>replyToMessageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>replyMarkup</name>
                <type>io.fouad.jtb.core.beans.ReplyMarkup</type>
            </parameter>
        </method>
        <method>
            <name>byId</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.ChatIdentifier</returntype>
            <parameter>
                <name>id</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>editMessageCaption</name>
            <comment>Edits captions of messages sent by the bot or via the bot (for inline bots).
targetChatIdentifier: unique identifier for the target chat or username of the target channel
messageId: unique identifier of the sent message
inlineMessageId: identifier of the inline message
caption: new caption of the message
inlineKeyboardMarkup: inlineKeyboardMarkup object
Return type: @return:the edited &lt;code&gt;Message&lt;/code&gt; if it is sent by the bot, otherwise true on success</comment>
            <returntype>io.fouad.jtb.core.beans.BooleanOrMessageResult</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>messageId</name>
                <type>java.lang.Integer</type>
            </parameter>
            <parameter>
                <name>inlineMessageId</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>caption</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>inlineKeyboardMarkup</name>
                <type>io.fouad.jtb.core.beans.InlineKeyboardMarkup</type>
            </parameter>
        </method>
        <method>
            <name>forwardMessage</name>
            <comment>Forwards messages of any kind.
targetChatIdentifier: unique identifier for the target chat or username of the target channel
sourceChatIdentifier: unique identifier for the chat or username of the channel where the original
                             message was sent
silentMessage: sends the message silently. iOS users will not receive a notification, Android
                      users will receive a notification with no sound
messageId: unique identifier for the message to be forwarded
Return type: @return:the forwarded &lt;code&gt;Message&lt;/code&gt;</comment>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <parameter>
                <name>targetChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>sourceChatIdentifier</name>
                <type>io.fouad.jtb.core.beans.ChatIdentifier</type>
            </parameter>
            <parameter>
                <name>silentMessage</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>messageId</name>
                <type>java.lang.Integer</type>
            </parameter>
        </method>
        <property>
            <name>Me</name>
            <returntype>io.fouad.jtb.core.beans.User</returntype>
            <comment>A simple method for testing the bot's authentication token.</comment>
        </property>
        <property>
            <name>ApiToken</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.KeyboardButtonBuilderwrapper</name>
        <shortname>KeyboardButtonBuilder</shortname>
        <objectwrapper>io.fouad.jtb.core.builders.KeyboardButtonBuilder</objectwrapper>
        <owner>process</owner>
        <method>
            <name>newRow</name>
            <comment></comment>
            <returntype>de.donmanfred.KeyboardButtonBuilderwrapper.Rowwrapper</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>de.donmanfred.KeyboardButtonBuilderwrapper</returntype>
        </method>
    </class>
    <class>
        <name>de.donmanfred.KeyboardButtonBuilderwrapper.Rowwrapper</name>
        <objectwrapper>io.fouad.jtb.core.builders.KeyboardButtonBuilder.Row</objectwrapper>
        <owner>process</owner>
        <method>
            <name>build</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.KeyboardButton[][]</returntype>
        </method>
        <method>
            <name>newButton</name>
            <comment></comment>
            <returntype>de.donmanfred.KeyboardButtonBuilderwrapper.ButtonSetwrapper</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>de.donmanfred.KeyboardButtonBuilderwrapper.ButtonSetwrapper</name>
        <objectwrapper>io.fouad.jtb.core.builders.KeyboardButtonBuilder.ButtonSet</objectwrapper>
        <owner>process</owner>
        <method>
            <name>newRow</name>
            <comment></comment>
            <returntype>de.donmanfred.KeyboardButtonBuilderwrapper.Rowwrapper</returntype>
        </method>
        <method>
            <name>newContactButton</name>
            <comment></comment>
            <returntype>de.donmanfred.KeyboardButtonBuilderwrapper.ButtonSetwrapper</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>requestLocation</name>
            <comment></comment>
            <returntype>de.donmanfred.KeyboardButtonBuilderwrapper.ButtonSetwrapper</returntype>
        </method>
        <method>
            <name>requestContact</name>
            <comment></comment>
            <returntype>de.donmanfred.KeyboardButtonBuilderwrapper.ButtonSetwrapper</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>build</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.KeyboardButton[][]</returntype>
        </method>
        <method>
            <name>newButton</name>
            <comment></comment>
            <returntype>de.donmanfred.KeyboardButtonBuilderwrapper.ButtonSetwrapper</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>newLocationButton</name>
            <comment></comment>
            <returntype>de.donmanfred.KeyboardButtonBuilderwrapper.ButtonSetwrapper</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>de.donmanfred.KeyboardButtonBuilderwrapper.KeyboardButtonwrapper</name>
        <objectwrapper>io.fouad.jtb.core.beans.KeyboardButton</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>RequestLocation</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>requestLocation</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RequestContact</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>requestContact</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.MessageEntitywrapper</name>
        <shortname>MessageEntity</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.MessageEntity</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Type</name>
            <returntype EnumType="true">io.fouad.jtb.core.enums.MessageEntityType</returntype>
            <comment></comment>
        </property>
        <property>
            <name>User</name>
            <returntype>io.fouad.jtb.core.beans.User</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Length</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Url</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Phonenumber</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Offset</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.Messagewrapper</name>
        <shortname>Message</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.Message</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>ForwardFrom</name>
            <returntype>io.fouad.jtb.core.beans.User</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ReplyToMessage</name>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MigrateFromChatId</name>
            <returntype>java.lang.Long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NewChatParticipant</name>
            <returntype>io.fouad.jtb.core.beans.User</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DeleteChatPhoto</name>
            <returntype>java.lang.Boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SuperGroupChatCreated</name>
            <returntype>java.lang.Boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NewChatMembers</name>
            <returntype>io.fouad.jtb.core.beans.User[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Photo</name>
            <returntype>io.fouad.jtb.core.beans.PhotoSize[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Document</name>
            <returntype>io.fouad.jtb.core.beans.Document</returntype>
            <comment></comment>
        </property>
        <property>
            <name>GroupChatCreated</name>
            <returntype>java.lang.Boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Sticker</name>
            <returntype>io.fouad.jtb.core.beans.Sticker</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NewChatMember</name>
            <returntype>io.fouad.jtb.core.beans.User</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PinnedMessage</name>
            <returntype>io.fouad.jtb.core.beans.Message</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ForwardFromMessageID</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ChannelChatCreated</name>
            <returntype>java.lang.Boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Chat</name>
            <returntype>io.fouad.jtb.core.beans.Chat</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LeftChatMember</name>
            <returntype>io.fouad.jtb.core.beans.User</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ForwardDate</name>
            <returntype>java.lang.Integer</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NewChatTitle</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Venue</name>
            <returntype>io.fouad.jtb.core.beans.Venue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>From</name>
            <returntype>io.fouad.jtb.core.beans.User</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Date</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Caption</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Entities</name>
            <returntype>java.util.List</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Contact</name>
            <returntype>io.fouad.jtb.core.beans.Contact</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NewChatPhoto</name>
            <returntype>io.fouad.jtb.core.beans.PhotoSize[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MigrateToChatId</name>
            <returntype>java.lang.Long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Game</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Video</name>
            <returntype>io.fouad.jtb.core.beans.Video</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ForwardFromChat</name>
            <returntype>io.fouad.jtb.core.beans.Chat</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Audio</name>
            <returntype>io.fouad.jtb.core.beans.Audio</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Voice</name>
            <returntype>io.fouad.jtb.core.beans.Voice</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MessageId</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Location</name>
            <returntype>io.fouad.jtb.core.beans.Location</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.PhotoSizewrapper</name>
        <shortname>PhotoSize</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.PhotoSize</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>FilePath</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileUniqueID</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileSize</name>
            <returntype>java.lang.Integer</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.ReplyKeyboardHidewrapper</name>
        <shortname>ReplyKeyboardHide</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.ReplyKeyboardHide</objectwrapper>
        <owner>process</owner>
        <method>
            <name>hideKeyboard</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.ReplyKeyboardHide</returntype>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>de.donmanfred.ReplyKeyboardMarkupwrapper</name>
        <shortname>ReplyKeyboardMarkup</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.ReplyKeyboardMarkup</objectwrapper>
        <owner>process</owner>
        <method>
            <name>SetButton</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>row</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>column</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ButtonText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetKeyboard</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.KeyboardButton[][]</returntype>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>keyboard</name>
                <type>io.fouad.jtb.core.beans.KeyboardButton[][]</type>
            </parameter>
            <parameter>
                <name>resizeKeyboard</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>oneTimeKeyboard</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <parameter>
                <name>selective</name>
                <type>java.lang.Boolean</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>initkeyboard</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>rows</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>columns</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>Selective</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>selective</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Keyboard</name>
            <returntype>io.fouad.jtb.core.beans.KeyboardButton[][]</returntype>
            <parameter>
                <name>keyboard</name>
                <type>io.fouad.jtb.core.beans.KeyboardButton[][]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OneTimeKeyboard</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>oneTimeKeyboard</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ResizeKeyboard</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>resizeKeyboard</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.ReplyMarkupBuilderwrapper</name>
        <shortname>ReplyMarkupBuilder</shortname>
        <owner>process</owner>
        <method>
            <name>forceReply</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.ReplyMarkup</returntype>
        </method>
        <method>
            <name>attachInlineKeyboard</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.ReplyMarkup</returntype>
            <parameter>
                <name>inlineKeyboard</name>
                <type>io.fouad.jtb.core.beans.InlineKeyboardButton[][]</type>
            </parameter>
        </method>
        <method>
            <name>sendCustomKeyboard</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.builders.ReplyMarkupBuilder.MessageWithCustomKeyboard</returntype>
            <parameter>
                <name>keyboard</name>
                <type>io.fouad.jtb.core.beans.KeyboardButton[][]</type>
            </parameter>
        </method>
        <method>
            <name>hideCustomKeyboard</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.ReplyMarkup</returntype>
        </method>
        <method>
            <name>sendCustomKeyboard3</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.ReplyMarkup</returntype>
            <parameter>
                <name>inlineKeyboard</name>
                <type>io.fouad.jtb.core.beans.InlineKeyboardButton[][]</type>
            </parameter>
        </method>
        <method>
            <name>sendCustomKeyboard2</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.ReplyMarkup</returntype>
            <parameter>
                <name>keyboard</name>
                <type>io.fouad.jtb.core.beans.KeyboardButton[][]</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>de.donmanfred.Rowwrapper</name>
        <shortname>Row</shortname>
        <objectwrapper>io.fouad.jtb.core.builders.KeyboardButtonBuilder.Row</objectwrapper>
        <owner>process</owner>
        <method>
            <name>build</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.beans.KeyboardButton[][]</returntype>
        </method>
        <method>
            <name>newButton</name>
            <comment></comment>
            <returntype>io.fouad.jtb.core.builders.KeyboardButtonBuilder.ButtonSet</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>de.donmanfred.TelegramFilewrapper</name>
        <shortname>TelegramFile</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.TelegramFile</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>FilePath</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileSize</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.Thumbwrapper</name>
        <shortname>Thumb</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.Thumb</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>FilePath</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileSize</name>
            <returntype>java.lang.Integer</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.Userwrapper</name>
        <shortname>User</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.User</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>Username</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FirstName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LastName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.Videowrapper</name>
        <shortname>Video</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.Video</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MimeType</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileSize</name>
            <returntype>java.lang.Integer</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.Voicewrapper</name>
        <shortname>Voice</shortname>
        <objectwrapper>io.fouad.jtb.core.beans.Voice</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>FileId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MimeType</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileSize</name>
            <returntype>java.lang.Integer</returntype>
            <comment></comment>
        </property>
    </class>
    <version>0.31</version>
    <comment>&lt;link&gt;...|http://www.b4x.com&lt;/link&gt;</comment>
    <author>DonManfred (Wrapper)</author>
    <dependsOn>commons-logging-1.2</dependsOn>
    <dependsOn>jackson-core-2.9.8</dependsOn>
    <dependsOn>jackson-databind-2.9.8</dependsOn>
    <dependsOn>jackson-annotations-2.9.8</dependsOn>
</root>
