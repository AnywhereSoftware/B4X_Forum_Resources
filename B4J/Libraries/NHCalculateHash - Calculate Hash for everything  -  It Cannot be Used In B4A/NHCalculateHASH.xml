<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <b4x_version>9.80</b4x_version>
  <dependsOn>javaobject</dependsOn>
  <dependsOn>jcore</dependsOn>
  <dependsOn>jfx</dependsOn>
  <dependsOn>jxui</dependsOn>
  <dependsOn>byteconverter</dependsOn>
  <dependsOn>json</dependsOn>
  <class>
    <name>b4j.example.calculatehash</name>
    <shortname>CalculateHash</shortname>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="CalculateHasFromByteArray">_v6</name>
      <returntype>String</returntype>
      <parameter>
        <name>bByteArray</name>
        <type>byte[]</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CalculateTheHash">_v7</name>
      <returntype>String</returntype>
      <parameter>
        <name>AnythingWillBeConvertedToStringToCalculateHASHCanBeBASE64String</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CalculateTheHashWithAlgorithm">_v0</name>
      <comment>&lt;code&gt;
Dim clCH as CalculateHash
clCH.Initialize
Log(clCH.CalculateTheHashWithAlgorythm("Let's try this to see.", clCH.MD5))
Log(clCH.CalculateTheHashWithAlgorythm("Let's try this to see.", clCH.SHA256))
Log(clCH.CalculateTheHashWithAlgorythm("Let's try this to see.", clCH.SHA1))
&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>AnythingWillBeConvertedToStringToCalculateHASHCanBeBASE64String</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Algorithm</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CalculateTheHashWithAlgorithmFromByteArray">_vv1</name>
      <comment>&lt;code&gt;
Dim clCH as CalculateHash
clCH.Initialize
Log(clCH.CalculateTheHashWithAlgorythm("Let's try this to see.".GetBytes("UTF-8"), clCH.MD5))
Log(clCH.CalculateTheHashWithAlgorythm("Let's try this to see.".GetBytes("UTF-8"), clCH.SHA256))
Log(clCH.CalculateTheHashWithAlgorythm("Let's try this to see.".GetBytes("UTF-8"), clCH.SHA1))
&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>bytearray</name>
        <type>byte[]</type>
      </parameter>
      <parameter>
        <name>Algorithm</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getMD5" HideFromIDE="true">_getvv5</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getSHA1" HideFromIDE="true">_getvv6</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getSHA256" HideFromIDE="true">_getvv7</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object. You can add parameters to this method if needed.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="MD5">_vv5</name>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="SHA1">_vv6</name>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="SHA256">_vv7</name>
      <returntype>String</returntype>
    </property>
  </class>
  <version>1</version>
</root>