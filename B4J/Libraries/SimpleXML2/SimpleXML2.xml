<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>nz.ope.simplexmlwrapper.SimpleXMLWrapper</name>
        <shortname>SimpleXMLWrapper</shortname>
        <owner>process</owner>
        <method>
            <name>IsInitialised</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Load XML document from a String</comment>
            <returntype>void</returntype>
            <parameter>
                <name>xmlString</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Load XML document from a file path</comment>
            <returntype>void</returntype>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SaveDocument</name>
            <comment>Save XML document to a File</comment>
            <returntype>void</returntype>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment>Convert XML document to a String</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Create new XML document with a root node</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>RootNode</name>
            <returntype>com.toast.xml.XmlNode</returntype>
            <comment>Get the Root Node</comment>
        </property>
    </class>
    <class>
        <name>nz.ope.simplexmlwrapper.XmlNodeWrapper</name>
        <shortname>XmlNode</shortname>
        <objectwrapper>com.toast.xml.XmlNode</objectwrapper>
        <owner>process</owner>
        <method>
            <name>appendChild</name>
            <comment></comment>
            <returntype>com.toast.xml.XmlNode</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetNodes</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetAttribute</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getChild</name>
            <comment></comment>
            <returntype>com.toast.xml.XmlNode</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hasAttribute</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetAttribute</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>hasChild</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>ValueAsDouble</name>
            <returntype>double</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ValueAsFloat</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ValueAsBoolean</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ValueAsString</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Value</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ValueAsInt</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <version>2.0</version>
</root>
