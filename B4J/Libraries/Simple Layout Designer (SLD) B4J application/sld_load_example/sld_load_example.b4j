AppType=JavaFX
Build1=Default,b4j.example
File1=example.sld
File2=example2.sld
File3=koh-samui-thailand.jpg
File4=Layout1.bjl
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
Group=Default Group
Library1=cssutils
Library2=jcore
Library3=jfx
Library4=json
Library5=jxui
Library6=xui views
NumberOfFiles=4
NumberOfLibraries=6
NumberOfModules=0
Version=9.8
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 1300
	#MainFormHeight: 650 
#End Region

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private xui As XUI 
	Private Button1 As B4XView
	Type tagdata (PressedX As Int, PressedY As Int, count As Int, id As String, imgurl As String, _
		 backcolor As Int, brdthick As Int, brdcolor As Int, brdradius As Int, noborder As Boolean, _
		 fontfamily As String, fontsize As Int, isbold As Boolean, isitalic As Boolean, _
		 alignment As String, textcolor As Int)
	Private nodecnt As Int
	Private Pane1 As Pane
	Private Label1 As Label
	Private Button2 As Button
	Private Button3 As Button
	Private CustomListView1 As CustomListView
End Sub
Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("Layout1")
	MainForm.Show
	load_layout("example.sld")
End Sub
Sub Button1_Click
	Dim vw As B4XView = Pane1.GetNode(0)
	Dim td As tagdata = vw.Tag
	If td.id.Contains("Pane") Then
		CSSUtils.SetBorder(vw,0,fx.Colors.Black,0)
		CSSUtils.SetBackgroundImage(vw,File.DirAssets,"koh-samui-thailand.jpg")
	End If
End Sub
Private Sub Button2_Click
	Dim vw As B4XView = Pane1.GetNode(1)
	Dim td As tagdata = vw.Tag
	If td.id.Contains("Label") Then
		vw.As(Label).Alignment = "BOTTOM_CENTER"
	End If
End Sub
Private Sub Button3_Click
	Pane1.RemoveAllNodes
	Label1.Text = ""
	load_layout("example2.sld")		' to show the clv item layout
	Label1.Text = "This layout (example2.sld) is used in the CustomListView on the right" & CRLF _
					& "Check the sld-file for the details."
	For x = 0 To 9
		set_clv_item(x)
	Next
End Sub
Private Sub set_node_arguments(vmap As Map) As Node
	Dim id As String = vmap.Get("id")
	If id.Contains("Pane") Then
		Dim pn As Pane
		pn.Initialize("")
		pn.prefWidth = vmap.Get("width")
		pn.prefHeight = vmap.Get("height")
		pn.Left = vmap.Get("left")
		pn.Top = vmap.Get("top")
		Return pn
	Else
		Dim lbl As Label
		lbl.Initialize("")
		lbl.prefWidth = vmap.Get("width")
		lbl.prefHeight = vmap.Get("height")
		lbl.Left = vmap.Get("left")
		lbl.Top = vmap.Get("top")
		Return lbl
	End If
End Sub
Private Sub set_clv_item(index As Int)
	Dim llst As List
	llst.Initialize
	llst = File.ReadList(File.DirAssets,"example2.sld")		' use info from file
	For i = 0 To llst.Size - 1
		Dim valstr As String = llst.Get(i)
		Dim valuesmap As Map = valstr.As(JSON).ToMap
		Select i
			Case 0
				Dim pnitem As Pane = set_node_arguments(valuesmap)
			Case 1
				Dim lbl1 As Label = set_node_arguments(valuesmap)
				lbl1.Text = "item number " & index
				Dim clr As Paint = fx.Colors.From32Bit(valuesmap.Get("brdcolor"))
				CSSUtils.SetBorder(lbl1,valuesmap.Get("brdthick"),clr,valuesmap.Get("brdradius"))
				CSSUtils.SetBackgroundColor(lbl1, fx.Colors.From32Bit(valuesmap.Get("backcolor")))
			Case 2
				Dim pn2 As Pane = set_node_arguments(valuesmap)
				CSSUtils.SetBackgroundImage(pn2,File.DirAssets,"koh-samui-thailand.jpg")
				Dim clr As Paint = fx.Colors.From32Bit(valuesmap.Get("brdcolor"))
				CSSUtils.SetBorder(pn2,valuesmap.Get("brdthick"),clr,valuesmap.Get("brdradius"))
			Case 3
				Dim lbl2 As Label = set_node_arguments(valuesmap)
				lbl2.Text = "image description"
				Dim clr As Paint = fx.Colors.From32Bit(valuesmap.Get("brdcolor"))
				CSSUtils.SetBorder(lbl2,valuesmap.Get("brdthick"),clr,valuesmap.Get("brdradius"))
				CSSUtils.SetBackgroundColor(lbl2, fx.Colors.From32Bit(valuesmap.Get("backcolor")))
		End Select
	Next
	pnitem.AddNode(pn2,pn2.Left,pn2.Top,pn2.PrefWidth,pn2.PrefHeight)
	pnitem.AddNode(lbl1,lbl1.Left,lbl1.Top,lbl1.prefWidth,lbl1.prefHeight)
	pnitem.AddNode(lbl2,lbl2.Left,lbl2.Top,lbl2.prefWidth,lbl2.prefHeight)
	CustomListView1.Add(pnitem,lbl1.text)
End Sub
Private Sub CustomListView1_ItemClick (Index As Int, Value As Object)
	xui.MsgboxAsync("Index: " & Index & " Value: " & Value,"Item_Click")
End Sub

Private Sub load_layout(fname As String)
	Dim llst As List
	llst.Initialize
	llst = File.ReadList(File.DirAssets,fname)
	For i = 0 To llst.Size - 1
		Dim valstr As String = llst.Get(i)
		Dim valuesmap As Map = valstr.As(JSON).ToMap
		Dim td As tagdata
		td.PressedX = valuesmap.Get("pressedx")
		td.PressedY = valuesmap.Get("pressedy")
		td.count = valuesmap.Get("count")
		td.id = valuesmap.Get("id")
		td.imgurl = valuesmap.Get("imgurl")
		'Log("load layout id: " & td.id)
		td.backcolor = valuesmap.Get("backcolor")
		td.brdthick = valuesmap.Get("brdthick")
		td.brdcolor = valuesmap.Get("brdcolor")
		td.brdradius = valuesmap.Get("brdradius")
		td.noborder = valuesmap.Get("noborder")
		td.fontfamily = valuesmap.Get("fontfamily")
		td.fontsize = valuesmap.Get("fontsize")
		td.isbold = valuesmap.Get("isbold")
		td.isitalic = valuesmap.Get("isitalic")
		td.alignment = valuesmap.Get("alignment")
		td.textcolor = valuesmap.Get("textcolor")
		If td.id.Contains("Label") Then
			load_label(td,valuesmap)
		Else
			load_pane(td,valuesmap)
		End If
		'Log(td)
		nodecnt = i
	Next
	nodecnt = nodecnt + 1
	For Each nod As Node In Pane1.GetAllViewsRecursive
		If nod.Tag <> "" Then
			Dim td As tagdata = nod.Tag
			Label1.Text = Label1.Text & "ID: " & td.id & CRLF
			Label1.Text = Label1.Text & "node index: " & td.count & CRLF
		End If
	Next
End Sub
Private Sub load_label(td As tagdata,valuesmap As Map)
	Dim newlbl As Label
	newlbl.Initialize("lbl")
	newlbl.Top = valuesmap.Get("top")
	newlbl.Left = valuesmap.Get("left")
	newlbl.prefwidth = valuesmap.Get("width")
	newlbl.prefheight = valuesmap.Get("height")
	Dim strtxt As String = valuesmap.Get("text")
	strtxt = strtxt.Replace("&lf;",Chr(10))
	strtxt = strtxt.Replace("&quote;","""")
	strtxt = strtxt.Replace("&comma;",",")
	newlbl.Text = strtxt
	newlbl.Tag = td
	newlbl.Id = td.id
	newlbl.WrapText = True
	newlbl.TextColor = fx.Colors.From32Bit(td.textcolor)
	CSSUtils.SetStyleProperty(newlbl,"-fx-font-family",td.fontfamily)
	CSSUtils.SetStyleProperty(newlbl,"-fx-font-size",td.fontsize)
	If td.isitalic = "true" Then
		CSSUtils.SetStyleProperty(newlbl,"-fx-font-style","italic")
	Else
		CSSUtils.SetStyleProperty(newlbl,"-fx-font-style","normal")
	End If
	If td.isbold = "true" Then
		CSSUtils.SetStyleProperty(newlbl,"-fx-font-weight","bold")
	Else
		CSSUtils.SetStyleProperty(newlbl,"-fx-font-weight","normal")
	End If
	newlbl.Alignment = td.alignment
	CSSUtils.SetBorder(newlbl,td.brdthick,fx.Colors.From32Bit(td.brdcolor),td.brdradius)
	CSSUtils.SetBackgroundColor(newlbl, fx.Colors.From32Bit(td.backcolor))
	If td.imgurl <> "" Then
		Dim folder As String = td.imgurl.SubString2(0,td.imgurl.LastIndexOf("/"))
		Dim fname As String = td.imgurl.SubString(td.imgurl.LastIndexOf("/")+1)
		CSSUtils.SetBackgroundImage(newlbl,folder,fname)
	End If
	Pane1.AddNode(newlbl,newlbl.Left,newlbl.Top,newlbl.prefWidth,newlbl.prefHeight)
	'newlbl = set_contextmenu(newlbl)
End Sub
Private Sub load_pane(td As tagdata,valuesmap As Map)
	Dim newpnl As Pane
	newpnl.Initialize("pnl")
	newpnl.Top = valuesmap.Get("top")
	newpnl.Left = valuesmap.Get("left")
	newpnl.prefwidth = valuesmap.Get("width")
	newpnl.prefheight = valuesmap.Get("height")
	' color and border settings from td!
	td.noborder = valuesmap.Get("noborder")
	newpnl.Tag = td
	newpnl.Id = td.id
	CSSUtils.SetBorder(newpnl,td.brdthick,fx.Colors.From32Bit(td.brdcolor),td.brdradius)
	CSSUtils.SetBackgroundColor(newpnl, fx.Colors.From32Bit(td.backcolor))
	If td.imgurl <> "" Then
		Dim folder As String = td.imgurl.SubString2(0,td.imgurl.LastIndexOf("/"))
		Dim fname As String = td.imgurl.SubString(td.imgurl.LastIndexOf("/")+1)
		CSSUtils.SetBackgroundImage(newpnl,folder,fname)
	End If
	Pane1.AddNode(newpnl,newpnl.Left,newpnl.Top,newpnl.prefWidth,newpnl.prefHeight)
	'newpnl = set_pane_contextmenu(newpnl)
End Sub
