AppType=JavaFX
Build1=A_Circle_Is_drawn_using_squares,b4j.example,A_Circle_Is_drawn_using_squares
Build10=Concentric_circles,b4j.example,Concentric_circles
Build11=Decreasing_hexagon,b4j.example,Decreasing_hexagon
Build12=Decreasing_squares_1_Maze,b4j.example,Decreasing_squares_1_Maze
Build13=Decreasing_squares_2_Maze,b4j.example,Decreasing_squares_2_Maze
Build14=Default,b4j.example
Build15=Dual_coloured_spiral,b4j.example,Dual_coloured_spiral
Build16=Ellipse,b4j.example,Ellipse
Build17=Erel_funky_sss,b4j.example,Erel_funky_sss
Build18=Hexagon,b4j.example,Hexagon
Build19=Hexagon_1,b4j.example,Hexagon_1
Build2=Arch_circles,b4j.example,Arch_circles
Build20=Hexagon_2_1_coloured,b4j.example,Hexagon_2_1_coloured
Build21=Honeycomb,b4j.example,Honeycomb
Build22=Increasing_squares,b4j.example,Increasing_squares
Build23=Rainhbow,b4j.example,Rainhbow
Build24=Shell,b4j.example,Shell
Build25=Snowflake_1_Lines,b4j.example,Snowflake_1_Lines
Build26=Snowflake_2_1_coloured_4_sections,b4j.example,Snowflake_2_1_coloured_4_sections
Build27=Snowflake_2_4_sections,b4j.example,Snowflake_2_4_sections
Build28=Snowflake_3_1_coloured_4_sections,b4j.example,Snowflake_3_1_coloured_4_sections
Build29=Snowflake_3_4_sections,b4j.example,Snowflake_3_4_sections
Build3=Blue_circle_1,b4j.example,Blue_circle_1
Build30=Spiral_circle,b4j.example,Spiral_circle
Build31=Spiral_star,b4j.example,Spiral_star
Build32=Spiral_triangle,b4j.example,Spiral_triangle
Build33=Square,b4j.example,Square
Build34=Squares_in_Squares,b4j.example,Squares_in_Squares
Build35=Star,b4j.example,Star
Build36=Tangent_circle_1,b4j.example,Tangent_circle_1
Build37=Tangent_circle_2,b4j.example,Tangent_circle_2
Build38=Vibrant_circle,b4j.example,Vibrant_circle
Build4=Blue_circle_2,b4j.example,Blue_circle_2
Build5=Blue_circle_filled_in_yellow,b4j.example,Blue_circle_filled_in_yellow
Build6=Chessboard,b4j.example,Chessboard
Build7=Circles_using_ARC_with_random_colours,b4j.example,Circles_using_ARC_with_random_colours
Build8=Circular_via_triangles_Changing_shapes,b4j.example,Circular_via_triangles_Changing_shapes
Build9=Colourful_Stars,b4j.example,Colourful_Stars
File1=Main.bjl
File2=turtle.png
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
Library1=b4xturtle
Library2=jcore
Library3=jfx
Library4=jbitmapcreator
NumberOfFiles=2
NumberOfLibraries=4
NumberOfModules=0
Version=10.3
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 600
	#MainFormHeight: 600 
#End Region

#Region Form Preperation
'Template version 1.00
Sub Process_Globals
	Private FX As JFX
	Private MainForm As Form
	Private XUI As XUI 'ignore
	Private Turtle As B4XTurtle
	Private MenuBar1 As MenuBar
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("Main")
	MainForm.Show

	'Maximise main form size
	Dim MF As JavaObject = MainForm
		MF.GetFieldJO("stage").RunMethod("setMaximized", Array(True))
End Sub

Sub MenuBar1_Action
	Dim Mi As MenuItem = Sender
	Select Mi.Tag
		Case "Restart"
			Turtle.Stop.ClearScreen.Home
			Turtle_Start
		Case "Exit"
			MainForm.Close
	End Select
End Sub
#End Region

'B4XTurtle examples: https://www.b4x.com/android/forum/threads/examples-for-teachers-and-parents.116979

Sub Turtle_Start
	Turtle.mBase.Color = XUI.Color_Black	
	Turtle.Home
	Turtle.SetPenSize(1.00)
	Turtle.SetSpeedFactor(2)
	Turtle.SetPenColor(0xFFFFFFFF)
	Sleep(250)

#If Shell
	For i = 0 To 30
		Turtle.MoveForward(((500*i)*cPI)/360)
		Turtle.MoveForward(((-500*i)*cPI)/360)
		Turtle.TurnLeft(i)
	Next
#End If

#If Hexagon_1
	For i = 1 To 6
		Turtle.MoveForward(90)
		Turtle.TurnLeft(60)
	Next
#End If

#If Hexagon_2_1_coloured
	Dim Colors() As Int = Array As Int (0xFFFF0000, 0xFF800080, 0xFF0000FF, 0xFF008000, 0xFFFFFF00, 0xFFFFFFFF) '('red', 'purple', 'blue', 'green', 'yellow', 'white')

	For i = 1 To 200
		Turtle.SetPenColor(Colors(i Mod 6))
		Turtle.SetPenSize(2)
		Turtle.MoveForward(i * 1.2)
		Turtle.TurnLeft(59)
	Next
#End If

#If Blue_circle_1
	Turtle.SetPenColor(XUI.Color_Blue).SetPenSize(5)
	For i = 0 To 360 - 1
		Turtle.MoveForward(Circle(100)).TurnLeft(1)
	Next
#End If

#If Blue_circle_2
	Turtle.SetPenColor(XUI.Color_Blue).SetPenSize(5)
	For i = 0 To 360 - 1
		Turtle.MoveForward(1).TurnLeft(1)
	Next
#End If

#If Blue_circle_filled_in_yellow
	Turtle.SetPenColor(XUI.Color_Blue).SetPenSize(5)
	Turtle.StartPolygon 'starts tracking the turtle points
	For i = 0 To 360 - 1
		Turtle.MoveForward(1).TurnLeft(1)
	Next
	Turtle.SetPenColor(XUI.Color_Yellow)
	Turtle.FillPolygon 'fills the polygon made from the turtle points
#End If
	
#If Spiral_circle
	Dim r As Int = 10
	For c = 0 To 360 * 10 - 1
		Turtle.MoveForward(Circle(r + c)).TurnLeft(6)
	Next
#End If

#If Tangent_circle_1
	Dim Raduis As Int = 10
	For i = 0 To 25
		For c = 0 To 360 - 1
			Turtle.MoveForward(Circle(Raduis * i)).TurnLeft(1)
		Next
	Next
#End If

#If Tangent_circle_2
	Dim SpeedFactor As Float = 0.50
	Dim Raduis As Int = 10
	For i = 0 To 25 - 1
		Turtle.SetSpeedFactor(SpeedFactor)
		Turtle.SetPenColor(Turtle.RandomColor)

		For c = 0 To 360 - 1
			Turtle.MoveForward(((Raduis * 1) * cPI) / 360).TurnLeft(1)
		Next

		Raduis = Raduis + 10
		SpeedFactor = SpeedFactor + 0.1
	Next
#End If

#If Vibrant_circle
	Dim a As Int = 0, b As Int = 0

	Turtle.SetY(Turtle.Home.GetY / 2)
	Turtle.SetSpeedFactor(10)
	Turtle.SetPenColor(0xFFFF0000)

	Do While b <> 210
		Turtle.MoveForward(a)
		Turtle.TurnRight(b)
		a = a + 3
		b = b + 1
	Loop
#End If

#If Arch_circles
	Dim r As Int = 10
	For i = 1 To 50
		Turtle.Arc(360, r * i)
	Next
#End If

#If Concentric_circles
	Dim r As Int = 10
	For i = 1 To 50
		For c = 0 To 360 - 1
			Turtle.MoveForward(Circle(r * i)).TurnLeft(1)
		Next
		Wait For Turtle_Done
		Turtle.PenUp
		Turtle.SetY(Turtle.GetY - (- r / 2))
		Turtle.PenDown
	Next
#End If

#If Circles_using_ARC_with_random_colours
	Turtle.SetPenColor(XUI.Color_Blue).SetPenSize(2).SetSpeedFactor(10)
	Dim Size As Float = 150

	For i = 1 To 8
		Turtle.SetPenColor(Turtle.RandomColor).Arc(360, Size).Fill
		Size = Size - 20
	Next
#End If

#If Decreasing_squares_1_Maze
	Turtle.SetSpeedFactor(5)
	Dim Sizes() As Int = Array As Int(146, 126, 106, 86, 66, 46, 26)
	For Each i As Int In Sizes
		For m = 1 To 4
			Turtle.MoveForward(i)
			Turtle.TurnLeft(90)
			i = i - 5
		Next
	Next
#End If

#If Decreasing_squares_2_Maze
	Dim Size As Int = 500
	Dim Spacing As Int = 10
	'Turtle.Home
	Sleep(25)
	Turtle.SetX(Turtle.GetX - Size / 2)
	Turtle.SetY(Turtle.GetY + Size / 2)
	Turtle.SetSpeedFactor(5)
	Sleep(25)
	
	For i = 0 To Size / Spacing - 1
		Turtle.SetPenColor(Turtle.RandomColor) '.SetPenSize(5)
	'Turtle.MoveBackward(2.5)
		Turtle.MoveForward(Size)
		Turtle.TurnLeft(90)
		Size = Size - Spacing
	Next
#End If

#If Increasing_squares
	Turtle.SetSpeedFactor(5)
	Turtle.SetPenColor(XUI.Color_Blue).SetPenSize(2).SetSpeedFactor(10)
	Dim Size As Int = 14
	For i = 0 To 50 - 1
		Turtle.MoveForward(Size).TurnRight(90)
		Size = Size + 14
		Turtle.SetPenColor(Turtle.RandomColor)
	Next
#End If

#If Hexagon
	For i = 1 To 6
		Turtle.MoveForward(90)
		Turtle.TurnRight(60)
	Next
#End If

#If Decreasing_hexagon
	Dim Size As Int = 350
	Dim Spacing As Int = 5
	'Turtle.Home
	Sleep(25)
	Turtle.SetX(Turtle.GetX - Size / 2)
	Turtle.SetY(Turtle.GetY - Size / 1.25)
	Turtle.SetSpeedFactor(5)
	Sleep(25)
	
	For i = 0 To Size / Spacing - 1
		Turtle.SetPenColor(Turtle.RandomColor) '.SetPenSize(5)
	'Turtle.MoveBackward(1.5)
		Turtle.MoveForward(Size)
		Turtle.TurnRight(60)
		Size = Size - Spacing
	Next
#End If

#If Spiral_triangle
	Turtle.SetPenColor(XUI.Color_Blue).SetPenSize(2).SetSpeedFactor(10)
	Dim Size As Float = 14
	For i = 1 To 40
		Turtle.MoveForward(Size).TurnRight(120)
		Size = Size + 14
		Turtle.SetPenColor(Turtle.RandomColor)
	Next
#End If

#If Erel_funky_sss
	Turtle.SetPenColor(XUI.Color_Blue).SetPenSize(2).SetSpeedFactor(10)
	Dim turn As Float = 0
	Do While turn < 360
		Turtle.SetPenColor(Turtle.RandomColor)
		Dim angle As Float = 0
		Do While angle < 180
			Turtle.MoveForward(30).TurnRight(angle)
			angle = angle + 5
		Loop
		Turtle.Home
		turn = turn + 60
		Turtle.TurnRight(turn)
	Loop
#End If

#If Star
	For i = 0 To 4
		Turtle.MoveForward(100)
		Turtle.TurnRight(144)
	Next
#End If

#If Spiral_star
	Turtle.SetSpeedFactor(5)
	Turtle.SetPenColor(XUI.Color_Blue).SetPenSize(2).SetSpeedFactor(10)
	Dim size As Float = 10
	For i = 1 To 50
		Turtle.MoveForward(size)
		size = size + 14
		Turtle.TurnRight(144)
	Next
#End If

#If Circular_via_triangles_Changing_shapes
	Dim Size As Int = 450
	Turtle.Home
	Sleep(25)
	Turtle.SetX(Turtle.GetX - Size / 2)
	Turtle.SetY(Turtle.GetY + Size / 3)
	Turtle.SetSpeedFactor(50)
	Sleep(25)

	For i = 0 To 123
		Turtle.MoveForward(Size)
		Turtle.TurnLeft(123)
	Next
#End If

#If A_Circle_Is_drawn_using_squares
	Dim n = 3, h = 0, c = 0 As Int

	Dim BC As BitmapCreator
		BC.Initialize(1, 1)

	Turtle.SetSpeedFactor(25)
	Dim Skip As Int = 5
	For i = 0 To 360 / Skip - 1
		For i0 = 0 To 4 - 1
			BC.SetHSV(0, 0, 255, h, 1, 0.9) 'this is a single pixel BitmapCreator,  x, y, alpha, hsv(0), hsv(1), hsv(2)
			c = BC.GetColor(0, 0)

			Turtle.SetPenColor(c)
			Turtle.MoveForward(250)
			Turtle.TurnRight(90)
			h = h + i / n 'i was 1 on the internet, but 1 didnt work
		Next
		Turtle.TurnRight(Skip)
	Next
#End If

#If Dual_coloured_spiral
	Turtle.SetSpeedFactor(50.0)
	For i = 1 To 240 'Original is 200
		For x = 0 To 360 - 1
			Turtle.SetPenColor(XUI.Color_Red)
			Turtle.MoveForward(((i * 1) * cPI) / 360).TurnLeft(1) 'Original i * 2
		Next

		For x = 1 To 360
			Turtle.SetPenColor(0xFFFFA500)
			Turtle.MoveForward((((i * 0.8) * 2) * cPI) / 360).TurnLeft(1)
		Next

		Turtle.TurnRight(3)
		Turtle.MoveForward(3)
	
		Sleep(0)
	Next
#End If

#If Spiral_2_stars_hue_colours
	Dim n = 36, h = 0, c = 0 As Int

	Dim BC As BitmapCreator
		BC.Initialize(1, 1)

	Turtle.mBase.Color = XUI.Color_Black
	Turtle.SetSpeedFactor(250)

	For i = 1 To 460
		BC.SetHSV(0, 0, 255, h, 1, 0.9) 'this is a single pixel BitmapCreator,  x, y, alpha, hsv(0), hsv(1), hsv(2)
		c = BC.GetColor(0, 0)

		Turtle.SetPenColor(c)
		Turtle.TurnLeft(145)

		For j = 1 To 5
			Turtle.MoveBackward(350)
			Turtle.TurnLeft(150)
		Next

		h = h + i / n 'i was 1 on the internet, but 1 didnt work
	Next
#End If

#If Squares_in_Squares
	Dim Sizes() As Int = Array As Int(350, 300, 250, 200, 150, 100, 50) 'Int(146, 126, 106, 86, 66, 46, 26)
	Turtle.SetX(Turtle.GetX - Sizes(0) / 2)
	Turtle.SetY(Turtle.GetY + Sizes(0) / 2)
	Turtle.SetSpeedFactor(5)

	For Each i As Int In Sizes
		For s = 1 To 4
			Turtle.MoveForward(i)
			Turtle.TurnLeft(90)
		Next
	Next
#End If

#If Square_Spirograph
	Turtle.SetPenSize(3)
	For i = 1 To 5
		For Each Color As Int In Array(0xFFFF0000, 0xFFFFC0CB, 0xFF0000FF, 0xFF00FFFF, 0xFF008000, 0xFFFFFF00, 0xFFFFFFFF) '("red","pink","blue","cyan","green","yellow","white")
			Turtle.SetPenColor(Color)
			Turtle.TurnLeft(12)
			For i2 = 1 To 4
				Turtle.MoveForward(200)
				Turtle.TurnLeft(90)
			Next
		Next
	Next
#End If

#If Honeycomb
	Turtle.SetSpeedFactor(3)
	For i = 1 To 6
		For c = 1 To 6
			Turtle.MoveForward(60)
			Turtle.TurnRight(60)
		Next
		Turtle.MoveForward(60)
		Turtle.TurnLeft(60)
	Next
#End If

#If Ellipse
	Dim a As Double = 150 '# ellipse width
	Dim b As Double = 90 '# ellipse height
	
	For i = 0 To 360
		Dim t As Double = i * (cPI / 180)
		Dim x As Double = a * Sin(t)
		Dim y As Double = b * Cos(t) - b
		
		'#turtle.goto(x,y)
		Dim tilt As Double = 25 * (cPI / 180)
		Dim x1 As Double = x * Cos(tilt) + y * Sin(tilt) + 500
		Dim y1 As Double = x * Sin(tilt) - y * Cos(tilt) + 500

		Turtle.MoveTo(x1, y1)
		
		'Turtle.SetX(x1).SetY(y1)
		'Turtle.MoveForward(2)
		'Wait For Turtle_Done
	Next
#End If

#If Square
	For i = 1 To 4
		Turtle.MoveForward(30)
		Turtle.TurnLeft(90)
		Turtle.MoveForward(30)
	Next
#End If

#If Chessboard
	Turtle.mBase.Color = XUI.Color_White
	Turtle.SetSpeedFactor(7)

	For y = 1 To 8
		Turtle.SetX(Turtle.Home.GetX - (8 * 30))
		Turtle.SetY(((Turtle.GetY) / 2) + (60 * y))

		For x = 1 To 8
			Turtle.StartPolygon
			For s = 1 To 4
				Turtle.MoveForward(30).TurnLeft(90).MoveForward(30)
			Next
			If x < 8 Then Turtle.MoveForward(60)
			If (y + x) Mod 2 = 0 Then Turtle.SetPenColor(XUI.Color_Black).FillPolygon Else Turtle.SetPenColor(XUI.Color_White).FillPolygon

			Turtle.SetPenColor(XUI.Color_Black)
		Next
	Next
#End If

#If Snowflake_1_Lines
	For s = 1 To 8
		For i = 1 To 3
			For x = 1 To 3
				Turtle.MoveForward(30)
				Turtle.MoveBackward(30)
				Turtle.TurnRight(45)
			Next
			Turtle.TurnLeft(90)
			Turtle.MoveBackward(30)
			Turtle.TurnLeft(45)
		Next
		Turtle.TurnRight(90)
		Turtle.MoveForward(90)
		Turtle.TurnLeft(45)
	Next
#End If

#If Snowflake_2_4_sections
	For i = 1 To 4
		For x = 1 To 2
			Turtle.MoveForward(100)
			Turtle.TurnRight(60)
			Turtle.MoveForward(100)
			Turtle.TurnRight(120)
		Next
		Turtle.TurnRight(90)
	Next
#End If

#If Snowflake_2_1_coloured_4_sections
	For i = 1 To 4
		Turtle.StartPolygon
		For x = 1 To 2
			Turtle.MoveForward(100)
			Turtle.TurnRight(60)
			Turtle.MoveForward(100)
			Turtle.TurnRight(120)
		Next
		Turtle.SetPenColor(Turtle.RandomColor).FillPolygon
		Turtle.SetPenColor(XUI.Color_Black)
		Turtle.TurnRight(90)
	Next
#End If

#If Snowflake_3_4_sections
	For i = 1 To 6
		For x = 1 To 2
			Turtle.MoveForward(100)
			Turtle.TurnRight(60)
			Turtle.MoveForward(100)
			Turtle.TurnRight(120)
		Next
		Turtle.TurnRight(60)
	Next
#End If

#If Snowflake_3_1_coloured_4_sections
	For i = 1 To 6
		Turtle.StartPolygon
		For x = 1 To 2
			Turtle.MoveForward(100)
			Turtle.TurnRight(60)
			Turtle.MoveForward(100)
			Turtle.TurnRight(120)
		Next
		Turtle.SetPenColor(Turtle.RandomColor).FillPolygon
		Turtle.SetPenColor(XUI.Color_Black)
		Turtle.TurnRight(60)
	Next
#End If

'(Change exterior and to 72 to create Pentagons)
#If Colourful_Stars 
	Turtle.SetSpeedFactor(20)
	Dim n As Int = 30		'Number of stars
	Dim x As Int = 144		'Exterior angle of each star. Can be 144 or 72
	Dim angle As Int = 18	'Angle of rotation for the spiral. Can be 18 or 72
	DrawStars(n, x, angle)
#End If

#If Rainhbow 
	Dim PenSize As Float = 30
	Turtle.SetPenSize(PenSize)
	Turtle.SetSpeedFactor(7)

	Dim col() As Int = Array As Int(0xFFEE82EE, 0xFF4B0082, 0xFF0000FF, 0xFF008000, 0xFFFFFF00, 0xFFFFA500, 0xFFFF0000, 0xFF00FFFF, 0xFFFA8072, 0xFF4B0082) 'violet, indigo, blue, green, yellow, orange, red
	For i = 1 To col.Length
		DrawRainbow(col(i-1), PenSize * (i-1 + 8), - PenSize * (i-1 + 1))
	Next
#End If

	Turtle.SetTurtleVisible(False)
End Sub


'EXTRA HELPER CODE
Sub Circle (Radius As Int) As Float 'ignore
	Return Radius  * cPI / 360
End Sub

 Sub Degrees2Radians(Degrees As Double) As Double 'ignore
     Return Degrees * (cPI / 180)
 End Sub

'Colourful Stars (Change exterior and to 72 to create Pentagons)
Sub DrawStars (n As Int, x As Int, angle As Int) 'ignore
	For i = 1 To n
		Turtle.StartPolygon
		For j = 1 To 5
			Turtle.MoveForward(5 * n-5 * i)
			Turtle.TurnRight(x)
			Turtle.MoveForward(5 * n-5 * i)
			Turtle.TurnRight(72 - x)
		Next
		Turtle.SetPenColor(Turtle.RandomColor).FillPolygon
		Turtle.SetPenColor(XUI.Color_Black)
		Turtle.TurnRight(angle)
	Next
End Sub

'Rainhbow
Sub DrawRainbow(Col As Int, Rad As Int, Val As Float) 'ignore
	Turtle.SetX(Val)
	Turtle.SetY(0)' Turtle.Home.GetY-100)
	Turtle.SetAngle(-90)
	Turtle.SetPenColor(Col)
	Turtle.Arc(180, Rad)
	'Wait For Turtle_Done
	
'	For i = 0 To 180 - 1
'		Turtle.MoveForward(Circle(Rad)).TurnLeft(1)
'	Next
End Sub
