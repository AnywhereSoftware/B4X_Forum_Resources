<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>xsocket.client.xClientEvent</name>
        <owner>process</owner>
        <method>
            <name>onClose</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>onError</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>error</name>
                <type>java.lang.Throwable</type>
            </parameter>
        </method>
        <method>
            <name>onOpen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>onMessage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>xsocket.client.xClientSession</name>
        <shortname>xClientSession</shortname>
        <objectwrapper>org.noear.socketd.transport.client.ClientSession</objectwrapper>
        <owner>process</owner>
        <method>
            <name>closeStarting</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isValid</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sendAndRequest</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.RequestStream</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <method>
            <name>sessionId</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>reconnect</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>sendAndRequest2</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.Entity</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <method>
            <name>isClosing</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>send</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.SendStream</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <method>
            <name>close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>sendAndSubscribe</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.SubscribeStream</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <property>
            <name>ClientSession</name>
            <returntype>org.noear.socketd.transport.client.ClientSession</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>xsocket.client.xClientSessionB4A</name>
        <shortname>xClientSessionB4A</shortname>
        <objectwrapper>org.noear.socketd.transport.client.ClientSession</objectwrapper>
        <owner>process</owner>
        <method>
            <name>closeStarting</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isValid</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sendAndRequest</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.RequestStream</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <method>
            <name>sessionId</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>reconnect</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>sendAndRequest2</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.Entity</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <method>
            <name>isClosing</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>send</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.SendStream</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <method>
            <name>close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>sendAndSubscribe</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.SubscribeStream</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <property>
            <name>ClientSession</name>
            <returntype>org.noear.socketd.transport.client.ClientSession</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>xsocket.client.xClientSocket</name>
        <shortname>xClientSocket</shortname>
        <owner>process</owner>
        <event>OnConnected(session as xSession)</event>
        <event>OnMessage(session as xSession, message as xMessage)</event>
        <event>OnClose(session as xSession)</event>
        <event>OnError(session as xSession, error as String)</event>
        <method>
            <name>B4AConnect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>socket</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Connect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>socket</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>MQConnect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>socket</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>heartbeatInterval</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>sendAndRequest</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entry</name>
                <type>xsocket.client.xEntity</type>
            </parameter>
        </method>
        <method>
            <name>sendEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entry</name>
                <type>xsocket.client.xEntity</type>
            </parameter>
        </method>
        <method>
            <name>setSSL</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>clientKey</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>truststorePassword</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ReconnectNow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendAndSubscribe</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entry</name>
                <type>xsocket.client.xEntity</type>
            </parameter>
        </method>
        <property>
            <name>RequestTimeout</name>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ConnectTimeout</name>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Reconnect</name>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ClientSession</name>
            <returntype>org.noear.socketd.transport.client.ClientSession</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Charset</name>
            <parameter>
                <name>charset</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SessionId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>xsocket.client.xEntity</name>
        <shortname>xEntity</shortname>
        <objectwrapper>org.noear.socketd.transport.core.Entity</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
        </method>
        <method>
            <name>Size</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>release</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>metaMap</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
        </method>
        <method>
            <name>setMetaAsLong</name>
            <comment></comment>
            <returntype>long</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setMetaAsFloat</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setMetaAsInt</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>DeleteMeta</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setMetaAsDouble</name>
            <comment></comment>
            <returntype>double</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>PutMeta</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>meta</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetData</name>
            <comment></comment>
            <returntype>java.nio.ByteBuffer</returntype>
        </method>
        <method>
            <name>GetString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>metaOrDefault</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>def</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>Entity</name>
            <returntype>org.noear.socketd.transport.core.Entity</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>xsocket.server.xBrokerListener</name>
        <owner>process</owner>
        <method>
            <name>broadcast</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <method>
            <name>getPlayerAny</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.Session</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>onError</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>error</name>
                <type>java.lang.Throwable</type>
            </parameter>
        </method>
        <method>
            <name>doOn</name>
            <comment></comment>
            <returntype>xsocket.server.xBrokerListener</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>handler</name>
                <type>org.noear.socketd.transport.core.listener.MessageHandler</type>
            </parameter>
        </method>
        <method>
            <name>getPlayerCount</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>doOnMessage</name>
            <comment></comment>
            <returntype>xsocket.server.xBrokerListener</returntype>
            <parameter>
                <name>onMessage</name>
                <type>org.noear.socketd.transport.core.listener.MessageHandler</type>
            </parameter>
        </method>
        <method>
            <name>doOnClose</name>
            <comment></comment>
            <returntype>xsocket.server.xBrokerListener</returntype>
            <parameter>
                <name>onClose</name>
                <type>java.util.function.Consumer</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removePlayer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>onClose</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>forwardToSession</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>requester</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
            <parameter>
                <name>responder</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>onOpen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>addPlayer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>getPlayerNum</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getPlayerOne</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.Session</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>onMessage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
        </method>
        <method>
            <name>forwardToName</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>requester</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getPlayerAll</name>
            <comment></comment>
            <returntype>java.util.Collection</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>doOnOpen</name>
            <comment></comment>
            <returntype>xsocket.server.xBrokerListener</returntype>
            <parameter>
                <name>onOpen</name>
                <type>org.noear.socketd.utils.IoConsumer</type>
            </parameter>
        </method>
        <method>
            <name>doOnError</name>
            <comment></comment>
            <returntype>xsocket.server.xBrokerListener</returntype>
            <parameter>
                <name>onError</name>
                <type>java.util.function.BiConsumer</type>
            </parameter>
        </method>
        <property>
            <name>SessionAll</name>
            <returntype>java.util.Collection</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SessionAny</name>
            <returntype>org.noear.socketd.transport.core.Session</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NameAll</name>
            <returntype>java.util.Collection</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SessionCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <field>
            <name>log</name>
            <comment></comment>
            <returntype>org.slf4j.Logger</returntype>
        </field>
    </class>
    <class>
        <name>xsocket.server.xEntityDefault</name>
        <shortname>xEntityDefault</shortname>
        <objectwrapper>org.noear.socketd.transport.core.entity.EntityDefault</objectwrapper>
        <owner>process</owner>
        <method>
            <name>metaMapPut</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>metaMap</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>data</name>
            <comment></comment>
            <returntype>java.nio.ByteBuffer</returntype>
        </method>
        <method>
            <name>dataAsBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
        </method>
        <method>
            <name>release</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>range</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>metaOrDefault</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>def</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>putMeta</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dataSet</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>metaMap</name>
            <comment></comment>
            <returntype>java.util.Map</returntype>
        </method>
        <method>
            <name>dataSize</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>delMeta</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaStringSet</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>metaString</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>at</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaDel</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>meta</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dataAsString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>metaPut</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
    </class>
    <class>
        <name>xsocket.server.xEventListener</name>
        <owner>process</owner>
        <method>
            <name>onClose</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>onError</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>error</name>
                <type>java.lang.Throwable</type>
            </parameter>
        </method>
        <method>
            <name>onOpen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>doOn</name>
            <comment></comment>
            <returntype>xsocket.server.xEventListener</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>handler</name>
                <type>org.noear.socketd.transport.core.listener.MessageHandler</type>
            </parameter>
        </method>
        <method>
            <name>onMessage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
        </method>
        <method>
            <name>doOnMessage</name>
            <comment></comment>
            <returntype>xsocket.server.xEventListener</returntype>
            <parameter>
                <name>onMessage</name>
                <type>org.noear.socketd.transport.core.listener.MessageHandler</type>
            </parameter>
        </method>
        <method>
            <name>doOnClose</name>
            <comment></comment>
            <returntype>xsocket.server.xEventListener</returntype>
            <parameter>
                <name>onClose</name>
                <type>java.util.function.Consumer</type>
            </parameter>
        </method>
        <method>
            <name>doOnOpen</name>
            <comment></comment>
            <returntype>xsocket.server.xEventListener</returntype>
            <parameter>
                <name>onOpen</name>
                <type>org.noear.socketd.utils.IoConsumer</type>
            </parameter>
        </method>
        <method>
            <name>doOnError</name>
            <comment></comment>
            <returntype>xsocket.server.xEventListener</returntype>
            <parameter>
                <name>onError</name>
                <type>java.util.function.BiConsumer</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>xsocket.server.xFileEntity</name>
        <shortname>xFileEntity</shortname>
        <objectwrapper>org.noear.socketd.transport.core.entity.FileEntity</objectwrapper>
        <owner>process</owner>
        <method>
            <name>release</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>xsocket.server.xInetSocketAddress</name>
        <shortname>xInetSocketAddress</shortname>
        <objectwrapper>java.net.InetSocketAddress</objectwrapper>
        <owner>process</owner>
        <method>
            <name>isUnresolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>HostString</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Port</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HostName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>xsocket.server.xMessage</name>
        <shortname>xMessage</shortname>
        <objectwrapper>org.noear.socketd.transport.core.Message</objectwrapper>
        <owner>process</owner>
        <method>
            <name>metaAsDouble</name>
            <comment></comment>
            <returntype>double</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>rangeStart</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>metaAsInt</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>data</name>
            <comment></comment>
            <returntype>java.nio.ByteBuffer</returntype>
        </method>
        <method>
            <name>dataAsBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
        </method>
        <method>
            <name>isRequest</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>release</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>sid</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>atName</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>event</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>metaOrDefault</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>def</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>putMeta</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaAsLong</name>
            <comment></comment>
            <returntype>long</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaMap</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
        </method>
        <method>
            <name>metaAsFloat</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dataSize</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>rangeSize</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isSubscribe</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>delMeta</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>meta</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dataAsString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>entity</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.Entity</returntype>
        </method>
        <property>
            <name>Message</name>
            <returntype>org.noear.socketd.transport.core.Message</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>xsocket.server.xMessageDefault</name>
        <shortname>xMessageDefault</shortname>
        <objectwrapper>org.noear.socketd.transport.core.entity.MessageDefault</objectwrapper>
        <owner>process</owner>
        <method>
            <name>flag</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>data</name>
            <comment></comment>
            <returntype>java.nio.ByteBuffer</returntype>
        </method>
        <method>
            <name>dataAsBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
        </method>
        <method>
            <name>isRequest</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>release</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sid</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>event</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>metaOrDefault</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>def</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>putMeta</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaMap</name>
            <comment></comment>
            <returntype>java.util.Map</returntype>
        </method>
        <method>
            <name>dataSize</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isEnd</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isSubscribe</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>delMeta</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>meta</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dataAsString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>entity</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.Entity</returntype>
        </method>
    </class>
    <class>
        <name>xsocket.server.xPathListener</name>
        <owner>process</owner>
        <method>
            <name>onClose</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>onError</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>error</name>
                <type>java.lang.Throwable</type>
            </parameter>
        </method>
        <method>
            <name>size</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onOpen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>of</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.listener.EventListener</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>onMessage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
        </method>
        <method>
            <name>doOf</name>
            <comment></comment>
            <returntype>xsocket.server.xPathListener</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>listener</name>
                <type>org.noear.socketd.transport.core.Listener</type>
            </parameter>
        </method>
        <field>
            <name>pathRouteSelector</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.listener.RouteSelector</returntype>
        </field>
    </class>
    <class>
        <name>xsocket.server.xPipelineListener</name>
        <owner>process</owner>
        <method>
            <name>next</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.listener.PipelineListener</returntype>
            <parameter>
                <name>arg0</name>
                <type>org.noear.socketd.transport.core.Listener</type>
            </parameter>
        </method>
        <method>
            <name>onError</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>error</name>
                <type>java.lang.Throwable</type>
            </parameter>
        </method>
        <method>
            <name>doOn</name>
            <comment></comment>
            <returntype>xsocket.server.xPipelineListener</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>handler</name>
                <type>org.noear.socketd.transport.core.listener.MessageHandler</type>
            </parameter>
        </method>
        <method>
            <name>prev</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.listener.PipelineListener</returntype>
            <parameter>
                <name>arg0</name>
                <type>org.noear.socketd.transport.core.Listener</type>
            </parameter>
        </method>
        <method>
            <name>doOnMessage</name>
            <comment></comment>
            <returntype>xsocket.server.xPipelineListener</returntype>
            <parameter>
                <name>onMessage</name>
                <type>org.noear.socketd.transport.core.listener.MessageHandler</type>
            </parameter>
        </method>
        <method>
            <name>doOnClose</name>
            <comment></comment>
            <returntype>xsocket.server.xPipelineListener</returntype>
            <parameter>
                <name>onClose</name>
                <type>java.util.function.Consumer</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>onReply</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
        </method>
        <method>
            <name>onClose</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>onOpen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>size</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onSend</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
        </method>
        <method>
            <name>onMessage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
        </method>
        <method>
            <name>doOnOpen</name>
            <comment></comment>
            <returntype>xsocket.server.xPipelineListener</returntype>
            <parameter>
                <name>onOpen</name>
                <type>org.noear.socketd.utils.IoConsumer</type>
            </parameter>
        </method>
        <method>
            <name>doOnError</name>
            <comment></comment>
            <returntype>xsocket.server.xPipelineListener</returntype>
            <parameter>
                <name>onError</name>
                <type>java.util.function.BiConsumer</type>
            </parameter>
        </method>
        <field>
            <name>deque</name>
            <comment></comment>
            <returntype>java.util.Deque</returntype>
        </field>
    </class>
    <class>
        <name>xsocket.server.xRequestStream</name>
        <shortname>xRequestStream</shortname>
        <objectwrapper>org.noear.socketd.transport.stream.RequestStream</objectwrapper>
        <owner>process</owner>
        <method>
            <name>thenError</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.RequestStream</returntype>
            <parameter>
                <name>onError</name>
                <type>java.util.function.Consumer</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isDone</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sid</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>thenProgress</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.RequestStream</returntype>
            <parameter>
                <name>onProgress</name>
                <type>org.noear.socketd.utils.TriConsumer</type>
            </parameter>
        </method>
        <method>
            <name>thenReply</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.RequestStream</returntype>
            <parameter>
                <name>onReply</name>
                <type>org.noear.socketd.utils.IoConsumer</type>
            </parameter>
        </method>
        <method>
            <name>await</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.Reply</returntype>
        </method>
    </class>
    <class>
        <name>xsocket.server.xSendStream</name>
        <shortname>xSendStream</shortname>
        <objectwrapper>org.noear.socketd.transport.stream.SendStream</objectwrapper>
        <owner>process</owner>
        <method>
            <name>thenProgress</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.SendStream</returntype>
            <parameter>
                <name>onProgress</name>
                <type>org.noear.socketd.utils.TriConsumer</type>
            </parameter>
        </method>
        <method>
            <name>thenError</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.SendStream</returntype>
            <parameter>
                <name>onError</name>
                <type>java.util.function.Consumer</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isDone</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sid</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
    </class>
    <class>
        <name>xsocket.server.xServerSockets</name>
        <shortname>xServerSockets</shortname>
        <owner>process</owner>
        <event>OnConnected(session as xSession)</event>
        <event>OnMessage(session as xSession, message as xMessage)</event>
        <event>OnClose(session as xSession)</event>
        <event>OnError(session as xSession, error as String)</event>
        <event>PipeOnConnected(session as xSession)</event>
        <event>PipeOnMessage(session as xSession, message as xMessage)</event>
        <event>PipeOnClose(session as xSession)</event>
        <event>PipeOnError(session as xSession, error as String)</event>
        <method>
            <name>SendText</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsClosing</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SendReplyEnd</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>message</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Start</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>port</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Stop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddPath</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setSSL</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>truststorePath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>truststorePassword</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getPararam</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getAttri</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setMeta</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>socket</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SendAndRequest</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>EnablePathListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SendAlarm</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>message</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>timeout</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>RequestTimeout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>timeout</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>BrokerListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SendAndRequest2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>timeout</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>SendReply</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>message</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AddNewPath</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>EnableSimpleListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SendAndSubscribe</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>timeout</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>ExitsAttri</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetCharset</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getMeta</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>EnableEventListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
        </method>
        <property>
            <name>AllMeta</name>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HostString</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>RemoteAddress</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LiveTime</name>
            <returntype>long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Port</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SessionId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HostName</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>host</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Attr</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <field>
            <name>META_FRAGMENT_IDX</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>META_FRAGMENT_TOTAL</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>META_ENGTH</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>META_RANGE_SIZE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>META_TYPE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>META_FILE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>META_REAL_IP</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>xsocket.server.xSession</name>
        <shortname>xSession</shortname>
        <objectwrapper>org.noear.socketd.transport.core.Session</objectwrapper>
        <owner>process</owner>
        <method>
            <name>handshake</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.Handshake</returntype>
        </method>
        <method>
            <name>sendPing</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>closeStarting</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>sendAlarm</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>from</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
            <parameter>
                <name>alarm</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>attrOrDefault</name>
            <comment></comment>
            <returntype>T</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>def</name>
                <type>T</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>path</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>reconnect</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>param</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>attrPut</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.Session</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>T</type>
            </parameter>
        </method>
        <method>
            <name>liveTime</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>attr</name>
            <comment></comment>
            <returntype>T</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>reply</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>from</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <method>
            <name>close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remoteAddress</name>
            <comment></comment>
            <returntype>java.net.InetSocketAddress</returntype>
        </method>
        <method>
            <name>sendAndSubscribe</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.SubscribeStream</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
            <parameter>
                <name>timeout</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>isValid</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>pathNew</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pathnew</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendAndRequest</name>
            <comment></comment>
            <returntype>xsocket.server.xRequestStream</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
            <parameter>
                <name>timeout</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>sessionId</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>attrMap</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
        </method>
        <method>
            <name>attrHas</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>replyEnd</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>from</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <method>
            <name>localAddress</name>
            <comment></comment>
            <returntype>java.net.InetSocketAddress</returntype>
        </method>
        <method>
            <name>paramOrDefault</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>def</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isClosing</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>send</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.stream.SendStream</returntype>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>entity</name>
                <type>org.noear.socketd.transport.core.Entity</type>
            </parameter>
        </method>
        <property>
            <name>Session</name>
            <returntype>org.noear.socketd.transport.core.Session</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>xsocket.server.xSimpleListener</name>
        <owner>process</owner>
        <method>
            <name>onClose</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>onError</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>error</name>
                <type>java.lang.Throwable</type>
            </parameter>
        </method>
        <method>
            <name>onOpen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
        </method>
        <method>
            <name>onMessage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>session</name>
                <type>org.noear.socketd.transport.core.Session</type>
            </parameter>
            <parameter>
                <name>message</name>
                <type>org.noear.socketd.transport.core.Message</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>xsocket.server.xStringEntity</name>
        <shortname>xStringEntity</shortname>
        <objectwrapper>org.noear.socketd.transport.core.entity.StringEntity</objectwrapper>
        <owner>process</owner>
        <method>
            <name>metaMapPut</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>metaMap</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>data</name>
            <comment></comment>
            <returntype>java.nio.ByteBuffer</returntype>
        </method>
        <method>
            <name>dataAsBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
        </method>
        <method>
            <name>release</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>range</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getAT</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaOrDefault</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>def</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>putMeta</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dataSet</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>metaMap</name>
            <comment></comment>
            <returntype>java.util.Map</returntype>
        </method>
        <method>
            <name>dataSize</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>delMeta</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaStringSet</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>metaString</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>metaString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>metaDel</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>meta</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dataAsString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>metaPut</name>
            <comment></comment>
            <returntype>org.noear.socketd.transport.core.entity.EntityDefault</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <property>
            <name>Entity</name>
            <returntype>org.noear.socketd.transport.core.entity.StringEntity</returntype>
            <comment></comment>
        </property>
    </class>
    <version>2.17</version>
</root>
