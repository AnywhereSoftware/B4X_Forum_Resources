AppType=JavaFX
Build1=Default,com.stevel05.ztzip
Group=Default Group
Library1=jcore
Library2=jfx
Library3=javaobject
Module1=Zips
Module2=ZipUtils
Module3=FileSource
Module4=ByteSource
Module5=ZipEntry_Static
Module6=ZT_New
Module7=ZipEntry
NumberOfFiles=0
NumberOfLibraries=3
NumberOfModules=7
Version=6.78
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 600
	#MainFormHeight: 600 
#End Region

#AdditionalJar: zt-zip-1.13
#AdditionalJar: slf4j-api-1.7.25
#AdditionalJar: slf4j-jdk14-1.7.25

#LibraryAuthor: Stevel05
#LibraryVersion: 0.1
#LibraryName: jZT-Zip

'Info and javadoc available here: https://github.com/zeroturnaround/zt-zip
'zt-zip Download and javadoc available here : https://search.maven.org/artifact/org.zeroturnaround/zt-zip/1.13/jar
'SLF4j download is here: https://www.slf4j.org/download.html

'Update v0.2
'Fixed bug in getting CharSet's

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	'MainForm.RootPane.LoadLayout("Layout1") 'Load the layout file.
	MainForm.Show
	
	'Fluent API (Zips)
	
	'Create an empty zip file
	Dim Zip As Zips = ZT_New.NewZips
	'Set the target zip file
	Zip.Destination("D:\ZipTest","Temp.zip")
	
	'Add String as a text file
	Zip.AddEntry(ZT_New.NewByteSource("docs\test.txt","Test String".GetBytes("UTF8")))
	
	'Process these commands
	Zip.Process
	
	Log("***")
	
	'List the file entries
	IterateZip("D:\ZipTest","Temp.zip")
	

	'Get the existing Zip File
	Dim Zip As Zips = ZT_New.NewZipsExisting("D:\ZipTest","Temp.zip")
	
	'Add String as a text file
	Zip.AddEntry(ZT_New.NewByteSource("test2.txt","Test String2".GetBytes("UTF8")))
	
	'Process these commands
	Zip.Process
	
	Log("***")
	
	'List the file entries
	IterateZip("D:\ZipTest","Temp.zip")
	
	
	
	'Get the zip file
	Dim Zip As Zips = ZT_New.NewZipsExisting("D:\ZipTest","Temp.zip")
	
	'Set a new destination folder
	Zip.Destination("D:\ZipTest","Temp")
	
	'Unpack the zip file to the destination
	Zip.Unpack
	
	'Process these commands
	Zip.Process
	
	
	Log("***")
	'Remove an entry
	
	'Get the existing Zip File
	Dim Zip As Zips = ZT_New.NewZipsExisting("D:\ZipTest","Temp.zip")
	Zip.RemoveEntry("docs\test.txt")
	Zip.Process
	
	'List the file entries
	IterateZip("D:\ZipTest","Temp.zip")
	
	
	'Static Methods (ZipUtils)
	
	Log("***")
	
	'Unzip a single file to a byte array
	Dim B() As Byte = ZipUtils.UnpackEntry("D:\ZipTest","Temp.zip","test2.txt")
	Log(BytesToString(B,0,B.Length,"UTF8"))
	
	'Add a new file from a string
	ZipUtils.AddOrReplaceEntries("D:\ZipTest","Temp.zip",Array(ZT_New.NewByteSource("newtest.txt","Newtest".GetBytes("UTF8"))))
	
	Log("***")
	'Unpack one entry to a byte array
	Dim B() As Byte = ZipUtils.UnpackEntry("D:\ZipTest","Temp.zip","newtest.txt")
	Log(BytesToString(B,0,B.Length,"UTF8"))
	
	
	'Replace an Entry with a file from a string
	ZipUtils.AddOrReplaceEntries("D:\ZipTest","Temp.zip",Array(ZT_New.NewByteSource("newtest.txt","Newtest2".GetBytes("UTF8"))))
	
	Log("***")
	Dim B() As Byte = ZipUtils.UnpackEntry("D:\ZipTest","Temp.zip","newtest.txt")
	Log(BytesToString(B,0,B.Length,"UTF8"))
	
		
	'Copy the zip file and replace an entry at the same time
	ZipUtils.AddOrReplaceEntries2("D:\ZipTest","Temp.zip",Array(ZT_New.NewByteSource("newtest.txt","Newtest3".GetBytes("UTF8"))),"D:\ZipTest","Temp1.zip")
	
	Log("***")
	Dim B() As Byte = ZipUtils.UnpackEntry("D:\ZipTest","Temp1.zip","newtest.txt")
	Log(BytesToString(B,0,B.Length,"UTF8"))
End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub



Private Sub IterateZip(ZipDir As String, ZipFile As String)
	Private Zip As Zips
	Zip.Initialize
	Zip.Get(ZipDir,ZipFile)
	Zip.Iterate(Me,"Zip")
	Zip.Process
End Sub

Private Sub Zip_Item(ZEntry As ZipEntry)
	Log(ZEntry.GetName)
End Sub