AppType=JavaFX
Build1=Default,b4j.example
File1=Layout1.bjl
FileGroup1=Default Group
Group=Default Group
Library1=jcore
Library2=jfx
Library3=gcal4j
Library4=jnetwork
Library5=jrandomaccessfile
Library6=jokhttputils2
Library7=json
Library8=jsql
Library9=b4xencryption
Module1=GoogleOAuth2
NumberOfFiles=1
NumberOfLibraries=9
NumberOfModules=1
Version=8.31
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 600
	#MainFormHeight: 600 
#End Region


#AdditionalJar: mysql-connector-java-5.1.34-bin
#AdditionalJar:animal-sniffer-annotations-1.17.jar
#AdditionalJar:checker-compat-qual-2.5.5.jar
#AdditionalJar:commons-codec-1.11.jar
#AdditionalJar:commons-logging-1.2.jar
#AdditionalJar:error_prone_annotations-2.3.2.jar
#AdditionalJar:failureaccess-1.0.1.jar
#AdditionalJar:google-api-client-1.30.3.jar
#AdditionalJar:google-api-services-calendar-v3-rev20191117-1.30.3.jar
#AdditionalJar:google-http-client-1.32.0.jar
#AdditionalJar:google-http-client-jackson2-1.32.0.jar
#AdditionalJar:google-oauth-client-1.30.2.jar
#AdditionalJar:grpc-context-1.22.1.jar
#AdditionalJar:guava-28.0-android.jar
#AdditionalJar:httpclient-4.5.9.jar
#AdditionalJar:httpcore-4.4.11.jar
#AdditionalJar:j2objc-annotations-1.3.jar
#AdditionalJar:jackson-core-2.10.1.jar
#AdditionalJar:jsr305-3.0.2.jar
#AdditionalJar:listenablefuture-9999.0-empty-To-avoid-conflict-with-guava.jar
#AdditionalJar:opencensus-api-0.24.0.jar
#AdditionalJar:opencensus-contrib-http-util-0.24.0.jar

#AdditionalJar: sqlite-jdbc-3.7.2
#AdditionalJar: bcprov-jdk15on-154


Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private GCal As GoogleCalendar
	Private ClientId As String = "xxxx-yyyyy.apps.googleusercontent.com"
	Private ClientSecret As String = "zzzz"

	Private oauth2 As GoogleOAuth2
	Dim events As Events
	Private btnAuthReset As Button
	Private btnCheck As Button
End Sub


Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("Layout1") 'Load the layout file.
	
	oauth2.Initialize(Me, "oauth2", ClientId, "https://www.googleapis.com/auth/calendar", ClientSecret, File.DirData("GoogleCalendar"))

	'oauth2.ResetToken

	MainForm.Show
End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub

Sub btnAuthReset_Click
	oauth2.ResetToken

End Sub

Sub btnCheck_Click
	oauth2.GetAccessToken
	Wait For OAuth2_AccessTokenAvailable (Success As Boolean, token As String)
	If Success = False Then
		Log("Error accessing account.")
		Return
	Else
		Log($"Success = ${Success}"$)
		Log($"Token = ${token}"$)
'		kvs.Put("Token",token)	
		GCal.Initialize("Calendar","GCal",ClientId,ClientSecret,Null,token)
		
		Dim c As Calendar = GCal.Calendar
		Log("Calendar Object")
		Log(c)
		Log(c.RootUrl)
		events = c.Events ' events is a global Var. 
		'                   Once set you can use it for further operations. 
		'                   It is a important Object...
		Log("Events Object")
		Log(events)
		

		Log("CalendarList")
		Dim cl As CalendarList =  GCal.calendarList
		Log(cl)
		Dim calendarslist As List =  cl.Items
		If calendarslist <> Null And calendarslist.IsInitialized And calendarslist.Size > 0 Then
			For i=0 To calendarslist.Size-1
				Dim entry As CalendarListEntry = calendarslist.Get(i)
				Log($"=========== CALENDAR ==========================="$)
				Log(entry.Etag)
				Log(entry.Id)

				If entry.Id.Contains("xxxxx") Then ' work with the Calendar you want to
					
					Dim eventslist As List = events.List(entry.Id) ' Get all Events from the given Calendar.
					If eventslist.IsInitialized And eventslist.Size>0 Then
						Log("Events "&entry.Id)
						Log(eventslist.Size)
						For o= 0 To eventslist.Size-1
							Log($"=========== EVENT ==========================="$)
							Dim event As Event = eventslist.Get(o)
							Log(event)
							Log(event.Id)
							Log(event.Description)
							Log(event.Location)
							Log(event.Start)
							Log(event.End)
							Log(event.Etag)
						Next
					End If
					events
				End If
			Next
		End If
		
		'
		'Dim event As Event
		'event.Initialize
		'event.Description = "Bla"
		'event.Location = "Location"
		'event.Summary = "Bla bla in Blub :D"
		'
		'Dim oldformatD As String = DateTime.DateFormat
		'DateTime.DateFormat = "dd.MM.yyyy"
		'Dim oldformatT As String = DateTime.TimeFormat
		'DateTime.TimeFormat = "HH:mm"
		'
		'Dim dtstart As Long = DateTime.DateTimeParse("05.07.2020","20:30")
		'event.setStart(dtstart,"Europe/Berlin")
		'Dim dtend As Long = DateTime.DateTimeParse("05.07.2020","22:00")
		'event.setEnd(dtend,"Europe/Berlin")
		'DateTime.DateFormat = oldformatD
		'DateTime.TimeFormat = oldformatT
		Log($"GoogleID Event before Insert = ${event.Id} (probably null)"$)
		event = events.Insert("calendar-to-add-a-event-in@xxxxx",event)
		Log($"GoogleID Event = ${event.Id}"$) ' The Event now have a ID. Store it for later references. For ex. if you want to change a Event.
		'Log(event.Etag)
		'Log(event.Location)
		'Log(event.Description)
		
	End If
	
End Sub
