Version=0.1
AppType=JavaFX
IconFile=
NumberOfModules=0
Package=b4j.example
UserTypesHint=
NumberOfFiles=1
File1=1.fxml
NumberOfLibraries=4
Library1=javaobject
Library2=jcore
Library3=jexcel
Library4=jfx
@EndOfDesignText@
#Region  Project Attributes 
	#MainFormWidth: 600
	#MainFormHeight: 400 
#End Region

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Dim lstTable As ListView
	Dim lblFile As Label
	Private fc As FileChooser
	Private book As ReadableWorkbook
	Private sheets As Map
	Dim Table1 As TableView
	Dim progress1 As ProgressIndicator
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("1") 'Load the layout file.
	progress1.Visible = False
	MainForm.Show
	MainForm.BackColor = fx.Colors.White
	MainForm.Title = "Excel Example"
	fc.Initialize
	fc.SetExtensionFilter("Excel File", Array As String("*.xls"))
End Sub
Sub mnuOpen_Action
	Dim fileName As String = fc.ShowOpen(MainForm)
	If fileName <> "" Then
		progress1.Visible = True
		lblFile.Text = "Excel file: " & fileName
		book.InitializeAsync("book", "", fileName)
		lstTable.Items.Clear
	End If
End Sub
Sub Book_Ready (Success As Boolean)
	progress1.Visible = False
	If Success Then
		sheets.Initialize
		For i = 0 To book.NumberOfSheets - 1
			Dim sheet As ReadableSheet = book.GetSheet(i)
			sheets.Put(sheet.Name, sheet)
			lstTable.Items.Add(sheet.Name)
		Next
	Else
		lblFile.Text = "Error loading file."
	End If
End Sub

Sub lstTable_SelectedIndexChanged(Index As Int)
	Table1.Items.Clear
	If Index > -1 Then
		progress1.Visible = True
		Dim sheet As ReadableSheet = sheets.Get(lstTable.SelectedItem)
		sheet.GetAllAsync("Sheet")
	End If
End Sub

Sub Sheet_ValuesAvailable (Success As Boolean, Values As List)
	progress1.Visible = False
	If Success Then
		For rowCounter = 0 To Values.Size - 1
			Dim row() As String = Values.Get(rowCounter)
			If rowCounter = 0 Then
				Table1.SetColumns(row)
			Else
				Table1.Items.Add(row)
			End If
		Next
		Table1_Resize(Table1.Width, Table1.Height)
	Else
		Log(LastException)
	End If
End Sub


'This sub is not used in this example.
'You can use it to save the current table data to a new Excel file.
Sub SaveTable 'ignore
	'first we create a writable workbook.
	'the target file should be a NEW file.
	Dim newWorkbook As WritableWorkbook
	newWorkbook.Initialize(File.DirApp, "1.xls")
	Dim sheet1 As WritableSheet
	sheet1 = newWorkbook.AddSheet("Movies", 0)
	'add the headers to the sheet
	'we create a special format for the headers
	Dim cellFormat As WritableCellFormat
	cellFormat.Initialize2(cellFormat.FONT_ARIAL, 12, True, False, False, _
		cellFormat.COLOR_GREEN)
	cellFormat.HorizontalAlignment = cellFormat.HALIGN_CENTRE
	cellFormat.SetBorder(cellFormat.BORDER_ALL, _
		cellFormat.BORDER_STYLE_MEDIUM, cellFormat.COLOR_BLACK)
	cellFormat.SetBorder(cellFormat.BORDER_BOTTOM, cellFormat.BORDER_STYLE_THICK, _
		cellFormat.COLOR_BLUE)
	cellFormat.VertivalAlignment = cellFormat.VALIGN_CENTRE
	cellFormat.BackgroundColor = cellFormat.COLOR_GREY_25_PERCENT
	Dim col As Int = 0
	For i = 0 To Table1.ColumnsCount - 1
		Dim cell As WritableCell
		cell.InitializeText(col, 0, Table1.GetColumnHeader(i))
		cell.SetCellFormat(cellFormat)
		sheet1.AddCell(cell)
		sheet1.SetColumnWidth(col, 15)
		col = col + 1
	Next
	sheet1.SetColumnWidth(1, 40)
	sheet1.SetRowHeight(0, 15)
	'add the data
	Dim rowsFormat As WritableCellFormat
	rowsFormat.Initialize
	rowsFormat.HorizontalAlignment = rowsFormat.HALIGN_CENTRE
	Dim rowCounter, colCounter As Int
	For Each row() As Object In Table1.Items
		colCounter = 0
		For Each value As Object In row
			Dim cell As WritableCell
			cell.InitializeText(colCounter, rowCounter + 1, value)
			cell.SetCellFormat(rowsFormat)
			sheet1.AddCell(cell)
			colCounter = colCounter + 1
		Next
		rowCounter = rowCounter + 1
	Next
	'Must call write and close to save the data.
	newWorkbook.Write
	newWorkbook.Close
End Sub

Sub Table1_Resize (Width As Double, Height As Double)
	Dim w As Double = (Width - 20dip) / Table1.ColumnsCount
	For i = 0 To Table1.ColumnsCount - 1
		Table1.SetColumnWidth(i, w)
	Next
End Sub