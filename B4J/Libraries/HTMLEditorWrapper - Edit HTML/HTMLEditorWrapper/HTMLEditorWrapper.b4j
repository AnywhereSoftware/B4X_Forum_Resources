AppType=JavaFX
Build1=Default,b4j.example
File1=hewcodepane.bjl
File2=hewhtmleditor.bjl
File3=htmltableminilayout.bjl
File4=htmltables.css
File5=htmltableslayout.bjl
File6=Layout1.bjl
File7=multifieldinputtemplate.bjl
File8=selectsizelayout.bjl
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
Group=Default Group
Library1=byteconverter
Library2=javaobject
Library3=jcore
Library4=jfx
Library5=jxui
Library6=xui views
Library7=jstringutils
Module1=HTMLEditorWrapper
Module2=HTMLEW_Utils
Module3=HTMLTableMini
Module4=HTMLTables
Module5=MultiFieldInputTemplate
Module6=PlusMinusClick
Module7=SelectSize
Module8=SL_B4XColorTemplate
NumberOfFiles=8
NumberOfLibraries=7
NumberOfModules=8
Version=9.3
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 650
	#MainFormHeight: 600 
#End Region
#AdditionalJar: jSoup-1.14.3


#If UpdateDetail
'V 1.1
	Added Indent HTML with jsoup
	Added Indent Style tags - Custom code.
	Added mini table generator to the editor toolbar
	Added table editor to the code area
 	Added B4xPlusMinus click to edit
	Added SL_B4xColorTemplate to allow entry of values.  Accepts hex and web format color codes and optionally returns an appropriate color string.

'V1.2
	Bug fixes
	Restored table data remembers html styling from within the cells.
	Added Print to Job (Requires jFX8Print library)
	Added PasteHTML to HTMLEW_Utils
	Added getWebview to HTMLEditorWrapper (Needed to turn off the context menu)
	Added insert link. If the link is followed it is not normally possible to use a back method as the HTMLtext update is not registered in the browser history I've added an extra reload HTML button that will re-load a snapshot of the html from just before the link was followed.
	Added insert Image
		Urls strings are not validated.
	Added edit link as a menu item.  'The whole link needs to be manually selected by the user and although this is validated, the validation can fail
									  if there are two links with the same href, and the text in a second link matches the selected text from the first.
									  It shouldn't happen often, but it can screw up the html if/when it does. I guess a proper undo should be implemented
									  but therein lies other issues.
	Added edit image as a menu item. The image must be selected prior to clicking the edit option.
	Added OpenExternal as menu item. Will open an image or link in your default external viewer. Target must be selected as above.
	
		
V1.2 AddlDetail:
	Header background labels were enabled when Header row was checked, now removed.
#End If


Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private xui As XUI 
	Private Opts As Map
	Private HTMLEditorWrapper1 As HTMLEditorWrapper
	Private MenuBack, MenuForward, MenuEditLink, MenuEditImage, MenuOpenExternal As MenuItem
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("Layout1")
	MainForm.Show
	xui.SetDataFolder("HTMLEditorWrapper")
	HTMLEditorWrapper1.HTMLEditor1.HtmlText = $""$
	
	Opts.Initialize
	If File.Exists(xui.DefaultFolder,"Opts.dat") Then
		Opts = File.ReadMap(xui.DefaultFolder,"Opts.dat")
	End If
	SetFormMetrics(MainForm,"")
'	
'	Experiment with context menu.
	'Adding a context menu to the HTMLEditor was showing two as there is a context menu already on the Webview
'	this needed to be turned off first.
'
'

	Dim CM As ContextMenu
	CM.Initialize("CM")
	CM.MenuItems.Clear
	MenuBack.Initialize("Back","MI")
	MenuBack.Enabled = False
	CM.MenuItems.Add(MenuBack)
	MenuForward.Initialize("Forward","MI")
	MenuForward.Enabled = False
	CM.MenuItems.Add(MenuForward)
	CM.MenuItems.Add(HTMLEW_Utils.MenuSeparatorItem)
	MenuEditLink.Initialize("Edit Link","MI")
	CM.MenuItems.Add(MenuEditLink)
	MenuEditImage.Initialize("Edit Image","MI")
	CM.MenuItems.Add(MenuEditImage)
	MenuOpenExternal.Initialize("Open External","MI")
	CM.MenuItems.Add(MenuOpenExternal)
	
	'Print Testing Requires jFX8Print library
'	CM.MenuItems.Add(HTMLEW_Utils.MenuSeparatorItem)
'	Dim Mi As MenuItem
'	Mi.Initialize("Print","MI")
'	CM.MenuItems.Add(Mi)

	HTMLEditorWrapper1.WebView.As(JavaObject).RunMethod("setContextMenuEnabled",Array(False))
	HTMLEditorWrapper1.HTMLEditor1.ContextMenu = CM
	
End Sub

'Public Sub TestPrint
'	'Testing - Requires jFX8Print library
'	Dim PJ As PrinterJob = PrinterJob_Static.CreatePrinterJob
'	If PJ.ShowPageSetupDialog(Null) = False Then Return
'	If PJ.ShowPrintDialog(Null) = False Then Return
'	Wait For (HTMLEditorWrapper1.PrintToJob(PJ.GetObject)) Complete (BResp As Boolean)
'	If BResp = True Then
'		Log("Print OK")
'	Else
'		Log("Print Failed")
'	End If
'	PJ.EndJob
'End Sub

Private Sub MainForm_CloseRequest (EventData As Event)
	SaveFormMetrics(MainForm,"")
	File.WriteMap(xui.DefaultFolder,"Opts.dat",Opts)
End Sub

'Called when the user has followed an external link here appropriate menus are switched on or off.
'Also called when the editors HTML is restored with a new location of editor so menus can be restored.
Private Sub HTMLEditorWrapper1_LocationChanged(OldLocation As String, NewLocation As String)
	If NewLocation = "editor" Then
		MenuBack.Enabled = False
		MenuForward.Enabled = False
		MenuEditLink.Enabled = True
		MenuEditImage.Enabled = True
		MenuOpenExternal.Enabled = True
	Else
		MenuBack.Enabled = True
		MenuForward.Enabled = True
		MenuEditLink.Enabled = False
		MenuEditImage.Enabled = False
		MenuOpenExternal.Enabled = False
	End If
End Sub


Private Sub MI_Action
	Dim MI As MenuItem = Sender
	Select MI.Text
		Case "Insert Span"
			
			
			Dim SpanStr As String = $"Hi"$
			HTMLEditorWrapper1.HTMLEditor1.RequestFocus
			HTMLEW_Utils.PasteHTML(SpanStr,SpanStr)
		Case "Back","Forward"
			HTMLEditorWrapper1.NavigatePage(MI.Text)
		Case "Edit Link"
			Wait For(HTMLEditorWrapper1.EditLink) Complete (Resp As Boolean)
		Case "Edit Image"
			Wait For(HTMLEditorWrapper1.EditImage) Complete (Resp As Boolean)
		Case "Open External"
			Wait For(HTMLEditorWrapper1.OpenExternal) Complete (Resp As Boolean)
			
		'Requires jFX8Print library
'		Case "Print"
'			TestPrint
	End Select

End Sub

'
' Utils
'
Public Sub SaveFormMetrics(F As Form, Delim As String)
	If F.Title = "Form" Then
		Log(F.Title & " Cannot set form metrics for a form with an unmodified title")
		Return
	End If
	Dim FormName As String = F.Title
	If Delim <> "" And FormName.Contains(Delim) Then
		FormName = FormName.SubString2(0,FormName.IndexOf(Delim)).Trim
	End If
	Opts.Put("FormPos" & FormName & "Left",F.WindowLeft)
	Opts.Put("FormPos" & FormName & "Top",F.WindowTop)
	Opts.Put("FormPos" & FormName & "Width",F.WindowWidth)
	Opts.Put("FormPos" & FormName & "Height",F.WindowHeight)
End Sub

Public Sub SetFormMetrics(F As Form,Delim As String)
	Dim FormName As String = F.Title
	If Delim <> "" And FormName.Contains(Delim) Then
		FormName = FormName.SubString2(0,FormName.IndexOf(Delim)).Trim
	End If
	If Opts.ContainsKey("FormPos" & FormName & "Left") Then
		F.WindowLeft = Opts.Get("FormPos" & FormName & "Left")
		F.WindowTop = Opts.Get("FormPos" & FormName & "Top")
		F.WindowWidth = Opts.Get("FormPos" & FormName & "Width")
		F.WindowHeight = Opts.Get("FormPos" & FormName & "Height")
	End If
End Sub

#If Testingdata
'For print test
$"
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>HTML Page for Testing CSS</title>
</head>

<body>

<h1>Testing display of HTML elements</h1>
<p>This page contains a bunch of HTML Elements and text. You can copy the source code and use it test out various CSS Properties. For testing purposes, you may use <a href="css-linking#internal"><dfn>internal styles</dfn></a>. Recall that these CSS rules are placed in between the <code>head</code> tags using the following format:</p>

<pre><code>&lt;style type=&quot;text/css&quot;&gt;
  selector {
    property: value
  }
&lt;/style&gt;</code>
</pre>


<h1>This is 1st level heading</h1>
<p>This is a test paragraph.</p>
<h2>This is 2nd level heading</h2>
<p>This is a test paragraph.</p>
<h3>This is 3rd level heading</h3>
<p>This is a test paragraph.</p>
<h4>This is 4th level heading</h4>
<p>This is a test paragraph.</p>
<h5>This is 5th level heading</h5>
<p>This is a test paragraph.</p>
<h6>This is 6th level heading</h6>
<p>This is a test paragraph.</p>

<h2>Basic block level elements</h2>

<p>This is a normal paragraph (<code>p</code> element). To add some length to it, let us mention that this page was primarily written for testing the effect of <strong>user style sheets</strong>. You can use it for various other purposes as well, like just checking how your browser displays various HTML elements.</p> 

<p>This is another paragraph. <mark>I think it needs to be added that the set of elements tested is not exhaustive in any sense.</mark> I have selected those elements for which it can make sense to write user style sheet rules, in my opinion.</p>

<div>This is a <code>div</code> element. Authors may use such elements instead of paragraph markup for various reasons. (End of <code>div</code>.)</div>

<blockquote>
	<p>This is a <i>block quotation</i> containing a single paragraph. Well, not quite, since this is not <em>really</em> quoted text, but I hope you understand the point. After all, this page does not use HTML markup very normally anyway.</p>
</blockquote>

<p>The following contains links to the Comm-244 home page</p>

<p>
	<a href="http://web.simmons.edu/~grovesd/comm244">Comm-244 Website</a>,
	<a href="http://web.simmons.edu/~grovesd/comm244/week3">Week 3 page for class</A>
</p>

<h2>Lists</h2>

<p>This is a paragraph before an <strong>unordered</strong> list (<code>ul</code>). Note that the spacing between a paragraph and a list before or after that is hard to tune in a user style sheet. You can't guess which paragraphs are logically related to a list, e.g. as a "list header".</p>

<ul>
	<li> One.</li>
	<li> Two.</li>
	<li> Three. Well, probably this list item should be longer. Note that for short items lists look better if they are compactly presented, whereas for long items, it would be better to have more vertical spacing between items.</li>
	<li> Four. This is the last item in this list Let us terminate the list now without making any more fuss about it.</li>
</ul>

<p>This is a paragraph before a <strong>ordered</strong> list (<code>ol</code>). Note that the spacing between a paragraph and a list before or after that is hard to tune in a user style sheet. You can't guess which paragraphs are logically related to a list, e.g. as a "list header".</p>

<ol>
  <li> One.</li>
  <li> Two.</li>
  <li> Three. Well, probably this list item should be longer. Note that if items are short, lists look better if they are compactly presented, whereas for long items, it would be better to have more vertical spacing between items. </li>
  <li> Four. This is the last item in this list. Let us terminate the list now without making any more fuss about it. </li>
</ol>

<p>This is a paragraph before a <strong>definition</strong> list (<code>dl</code>). In principle, such a list should consist of <em>terms</em> and associated definitions. But many authors use <code>dl</code> elements for fancy "layout" things. Usually the effect is not <em>too</em> bad, if you design user style sheet rules for <code>dl</code> which are suitable for real definition lists.</p>

<dl>
	<dt> recursion <dt>
	<dd> see recursion </dd>
	<dt> recursion, indirect</dt>
	<dd> see indirect recursion</dd>
	<dt> indirect recursion</dt>
	<dd> see recursion, indirect</dd>
	<dt> term</dt>
	<dd> a word or other expression taken into specific use in a well-defined meaning, which is often defined rather rigorously, even formally, and may differ quite a lot from an everyday meaning</dd>
</dl>



</body>

</html>"$
#End If