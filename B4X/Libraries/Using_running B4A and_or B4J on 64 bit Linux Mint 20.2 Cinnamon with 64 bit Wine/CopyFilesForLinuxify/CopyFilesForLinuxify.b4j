AppType=StandardJava
Build1=Default,com.copyfilesforlinuxify
File1=compiletime.txt
FileGroup1=Default Group
Group=Default Group
Library1=jcore
Library2=javaobject
NumberOfFiles=1
NumberOfLibraries=2
NumberOfModules=0
Version=9.1
@EndOfDesignText@
' Prepares the necessary files for Linuxify when running on Linux under Wine.
' Args: Linux_top_directory_for_B4J_projects jarname_without_extension delete_temp_folder_Y_or_N [icon_file_path]
' If running on Linux under Wine (which is determined by the presence of environment variable 'WINEPREFIX'
' with a value other than ""):
' - creates the Linux top directory for B4J projects if necessary: Args(0)
' - creates the target directory if necessary: File.Combine(Args(0), Args(1))
' - copies jar and packager.json files to the target directory
' - if icon_file_path is provided, that file is copied to file 'Linuxify_icon.ico' in the target directory
' Deletes folder 'temp' if the third argument is 'Y'.
' Example: put CopyFilesForLinuxify.jar in your B4J 'Additional libraries' directory, and then, in your B4J source add:
'#CustomBuildAction: after packager, %ADDITIONAL%\CopyFilesForLinuxify.jar, "C:\Users\me\My Documents\B4JL" MyAppName Y ..\icon.ico

#Region Project Attributes
	#LibraryVersion: 0.1
	#LibraryName: CopyFilesForLinuxify
#End Region

Sub Process_Globals

	Private appName As String = "CopyFilesForLinuxify"

End Sub

Sub AppStart (Args() As String)

	Dim topFolder As String
	Dim tgtFolder As String

#If RELEASE
	RedirectOutput(File.DirData(appName), "stdx.log", False, True, True)
#End If

	' Are we working on Linux under Wine?
	If GetOS2 <> "x" Then
		Log("Nothing copied: not running on Linux under WinE")
		DeleteTempFolder(Args)
		ExitApplication
		Return
	End If

	' Validate arguments count
	Select Case Args.Length
		Case 3
			' Nothing to see here
		Case 4
			If File.Exists(Args(3), "") = False Then
				Log("Icon file does not exist: " & Args(3))
				ExitApplication2(1)
				Return
			Else If Args(3).Trim.ToLowerCase.EndsWith(".ico") = False Then
				Log("Icon file does not have extension '.ico': " & Args(3))
				ExitApplication2(2)
				Return
			End If
		Case Else
			Log("Expected 3 or 4 arguments, not " & Args.Length & ": Linux_top_directory_for_B4J_projects jarname_without_extension delete_temp_folder_Y_or_N [icon_file_path]")
			ExitApplication2(3)
			Return
	End Select

	' Create the Linux top directory for B4J projects if necessary
	topFolder = Args(0).Trim
	If File.Exists(topFolder, "") = False Then File.MakeDir(topFolder, "")

	' Create the target folder if necessary
	Args(1) = Args(1).Trim
	tgtFolder = File.Combine(topFolder, Args(1))
	If File.Exists(tgtFolder, "") = False Then File.MakeDir(tgtFolder, "")

	' Copy the jar and packager.json
	Try
		Log("Copying files for application: " & Args(1))
		File.Copy(Args(1) & ".jar", "", tgtFolder, Args(1) & ".jar")
		File.Copy("packager.json", "", tgtFolder, "packager.json")
		If Args.Length > 3 Then File.Copy(Args(3), "", tgtFolder, "Linuxify_icon.ico")
	Catch
		Log("File copy failed: " & LastException)
		ExitApplication2(4)
		Return
	End Try

	' Delete the temp folder?
	DeleteTempFolder(Args)

	ExitApplication

End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean

	Log("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
	Log("Application Error - Exception: " & Error.Message)
	Log("")
	Log("StackTrace: ")
	Log("")
	Log(StackTrace)
	Log("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")

	Return True

End Sub

' Returns 'w' for Windows, 'm' for Mac, 'l' for Linux, and 'x' for 'Linux running under Wine'
' 'x' is detected by the non-empty-string presence of environment variable 'WINEPREFIX'
Sub GetOS2 As String

	Dim os As String = GetSystemProperty("os.name", "").ToLowerCase
	If os.Contains("win") Then
		Return IIf(GetEnvironmentVariable("WINEPREFIX", "") = "", "w", "x")
	Else If os.Contains("mac") Then
		Return "m"
	Else
		Return "l"
	End If

End Sub

Sub DeleteTempFolder(args() As String)

	If args.Length > 2 Then
		If args(2).Trim.ToUpperCase = "Y" Then
			If File.Exists("temp", "") Then
				Log("Deleting temp folder")
				DeleteFolderRecursive(GetCanonicalPath("temp"))
			End If
			If File.Exists("temp", "") Then
				Try
					File.Delete("temp", "")
				Catch
					Log("Could not delete temp folder: " & LastException)
				End Try
			End If
		End If
	End If

End Sub

Sub GetCanonicalPath(Path As String) As String

	' Code from https://www.b4x.com/android/forum/threads/b4j-lastindexof.79572/#post-503846

	Dim fileO As JavaObject
	fileO.InitializeNewInstance("java.io.File", Array As Object(Path))
	Return fileO.RunMethod("getCanonicalPath", Null)

End Sub

Sub DeleteFolderRecursive(Folder As String)

	' Code from https://www.b4x.com/android/forum/threads/folder-remove.57304/#post-360773

	For Each f As String In File.ListFiles(Folder)
		If File.IsDirectory(Folder, f) Then
			DeleteFolderRecursive (File.Combine(Folder, f))
		End If
		File.Delete(Folder, f)
	Next

End Sub

Public Sub RedirectOutput(Dir As String, FileName As String, append As Boolean, stdout As Boolean, stderr As Boolean)

	' Code based on https://www.b4x.com/android/forum/threads/redirect-the-output-to-a-file.65165

	If (stdout = False) And (stderr = False) Then Return

	If (append = False) And File.Exists(Dir, FileName) Then
		Try
			File.Delete(Dir, FileName)
		Catch
			Log("RedirectOutput: " & LastException)
		End Try
	End If

	Dim out As OutputStream = File.OpenOutput(Dir, FileName, False) 'Set to True to append the logs
	Dim ps As JavaObject
	ps.InitializeNewInstance("java.io.PrintStream", Array(out, True, "utf8"))
	Dim jo As JavaObject
	jo.InitializeStatic("java.lang.System")
	If stdout Then jo.RunMethod("setOut", Array(ps))
	If stderr Then jo.RunMethod("setErr", Array(ps))

End Sub