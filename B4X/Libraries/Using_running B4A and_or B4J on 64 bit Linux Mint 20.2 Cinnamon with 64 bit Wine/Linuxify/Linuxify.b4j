AppType=JavaFX
Build1=Default,com.linuxify
File1=compiletime.txt
File2=icons8-linux-48.ico
File3=icons8-linux-48.png
File4=Layout1.bjl
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
Group=Default Group
Library1=javaobject
Library2=jcore
Library3=jfx
Library4=jrandomaccessfile
Library5=jshell
Library6=json
Library7=jxui
Library8=xui views
NumberOfFiles=4
NumberOfLibraries=8
NumberOfModules=0
Version=9.1
@EndOfDesignText@
' For info, see https://www.b4x.com/android/forum/threads/b4x-using-running-b4a-and-or-b4j-on-64-bit-linux-mint-20-2-cinnamon-with-64-bit-wine.134069/

#Region Project Attributes
	#MainFormWidth: 600
	#MainFormHeight: 610
	#LibraryVersion: 0.1
#End Region

Sub Process_Globals

	Private fx As JFX
	Private MainForm As Form
	Private xui As XUI
	Private lineSep As String
	Private home As String = ""
	Private cwd As String = ""
	Private settingsDir As String
	Private tempInputJar As String

	' Designer views
	Private ButtonProcess As Button
	Private ButtonB4JpackagerJar As Button
	Private ButtonEditPackagerJson As Button
	Private ButtonIconFile As Button
	Private ButtonInputJar As Button
	Private ButtonJava As Button
	Private ButtonOK As Button
	Private ButtonPackagerJson As Button
	Private ButtonTargetDir As Button
	Private CheckBoxCreateDesktopFile As CheckBox
	Private CheckBoxDeleteTempFolder As CheckBox
	Private LabelError As Label
	Private LabelIcon As Label
	Private TextArea1 As TextArea
	Private TextFieldAdditionalModulesInfo As TextField
	Private TextFieldB4JpackagerJar As TextField
	Private TextFieldExcludedModules As TextField
	Private TextFieldExeName As TextField
	Private TextFieldIconFile As TextField
	Private TextFieldIncludedModules As TextField
	Private TextFieldInputJar As TextField
	Private TextFieldJava As TextField
	Private TextFieldPackagerJson As TextField
	Private TextFieldTargetDir As TextField
	Private TextFieldVMargs As TextField

End Sub

Sub AppStart (Form1 As Form, Args() As String)

#If RELEASE
	RedirectOutput(File.DirData("Linuxify"), "stdx.log", False, True, True)
#End If

	MainForm = Form1
	MainForm.RootPane.LoadLayout("Layout1")
	MainForm.Icon = fx.LoadImage(File.DirAssets, "icons8-linux-48.png")
	MainForm.Show
	SetAllToolTipFonts(MainForm, fx.CreateFont("Arial", 16, True, False), False)

	lineSep = GetSystemProperty("line.separator", CRLF)
	home = GetEnvironmentVariable("HOME", ".")
	If home.EndsWith("/") = False Then home = home & "/"

	' cwd (current working directory) is fetched from Args(0) if present
	If Args.Length > 0 Then
		If File.Exists(Args(0), "") Then
			If File.IsDirectory(Args(0), "") Then
				cwd = Args(0)
			Else
				Log("This is not a directory: " & Args(0))
			End If
		Else
			Log("Directory does not exist, ignored: " & Args(0))
		End If
	End If

	' Establish Linuxify's settings directory
	If File.Exists(home & "Linuxify", "") Then
		settingsDir = home & "Linuxify"
	Else If File.Exists(home & "B4J/Linuxify", "") Then
		settingsDir = home & "B4J/Linuxify"
	Else If File.Exists(home & "B4X/Linuxify", "") Then
		settingsDir = home & "B4X/Linuxify"
	Else
		settingsDir = File.DirApp
	End If

	Log("home dir=" & home)
	Log("working dir=" & cwd)
	Log("settings dir=" & settingsDir)

	ReadSettings

End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean

	Log("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
	Log("Application Error - Exception: " & Error.Message)
	Log("")
	Log("StackTrace: ")
	Log("")
	Log(StackTrace)
	Log("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")

	Return True

End Sub

Public Sub RedirectOutput(Dir As String, FileName As String, append As Boolean, stdout As Boolean, stderr As Boolean)

	' Code based on https://www.b4x.com/android/forum/threads/redirect-the-output-to-a-file.65165

	If (stdout = False) And (stderr = False) Then Return

	If (append = False) And File.Exists(Dir, FileName) Then
		Try
			File.Delete(Dir, FileName)
		Catch
			Log("RedirectOutput: " & LastException)
		End Try
	End If

	Dim out As OutputStream = File.OpenOutput(Dir, FileName, False) 'Set to True to append the logs
	Dim ps As JavaObject
	ps.InitializeNewInstance("java.io.PrintStream", Array(out, True, "utf8"))
	Dim jo As JavaObject
	jo.InitializeStatic("java.lang.System")
	If stdout Then jo.RunMethod("setOut", Array(ps))
	If stderr Then jo.RunMethod("setErr", Array(ps))

End Sub

Private Sub SetAllToolTipFonts(frm As Form, F As Font, logErrors As Boolean) As Int

	Dim numDone As Int = 0

	For Each n As Node In frm.RootPane.GetAllViewsRecursive
		Try
			If SetToolTipFont(n, F) Then numDone = numDone + 1
		Catch
			If logErrors Then Log("SetAllToolTipFonts: " & LastException)
		End Try
	Next

	Return numDone

End Sub

Private Sub SetToolTipFont(N As Control, F As Font) As Boolean

	' Based on https://www.b4x.com/android/forum/threads/consistent-tooltips.100450/

	Try
		Dim JoN As JavaObject = N
		JoN.RunMethodJO("getTooltip",Null).RunMethod("setFont",Array (F))
		Return True
	Catch
		Return False
	End Try

End Sub

Private Sub MainForm_CloseRequest (EventData As Event)

	WriteSettings

End Sub

Private Sub ReadSettings

	Dim m As Map
	Dim raf As RandomAccessFile

	If File.Exists(settingsDir, "Linuxify_settings.txt") Then
		Try
			m.Initialize
			raf.Initialize(settingsDir, "Linuxify_settings.txt", True)
			m = raf.ReadObject(raf.CurrentPosition) ' Must use RAF and ReadObject/WriteObject because without File.WriteObject, everything would be converted to String, including the List-type objects !
			raf.Close
			TextFieldB4JpackagerJar.Text = m.GetDefault("TextFieldB4JpackagerJar", "")
			TextFieldJava.Text = m.GetDefault("TextFieldJava", "")
		Catch
			Log("Error reading Linuxify_settings.txt: " & LastException)
		End Try
	End If

	If TextFieldB4JpackagerJar.Text.Trim = "" Then
		' Use the default file?
		If File.Exists(home & "B4J/B4JPackager11.jar", "") Then
			TextFieldB4JpackagerJar.Text = home & "B4J/B4JPackager11.jar"
		Else If File.Exists(home & "B4X/B4JPackager11.jar", "") Then
			TextFieldB4JpackagerJar.Text = home & "B4X/B4JPackager11.jar"
		End If
	End If

	If TextFieldJava.Text.Trim = "" Then
		' Use the default file?
		If File.Exists(home & "java/jdk-11.0.1/bin/java", "") Then TextFieldJava.Text = home & "java/jdk-11.0.1/bin/java"
	End If

	If TextFieldVMargs.Text.Trim = "" Then TextFieldVMargs.Text = "-Dglass.win.uiScale=100%" ' See https://www.b4x.com/android/forum/threads/java-9.84236/#post-534160

	If TextFieldPackagerJson.Text = "" Then
		' Use the default file?
		If File.Exists(cwd, "packager.json") Then TextFieldPackagerJson.Text = GetCanonicalPath(File.Combine(cwd, "packager.json"))
	End If

	ReadPackagerJson

	Try
		For Each f As String In File.ListFiles(cwd)
			If File.IsDirectory(f, "") = False Then
				If f.ToLowerCase.EndsWith(".jar") Then
					' Found a jar in cwd, propose that one
					f = GetCanonicalPath(File.Combine(cwd, f))
					TextFieldInputJar.Text = f
					TextFieldExeName.Text = File.GetName(f).Replace(".jar", "")
					TextFieldTargetDir.Text = GetCanonicalPath(cwd)
					Exit
				End If
			End If
		Next
	Catch
		Log("Could not look for jar files in directory '" & cwd & "': " & LastException)
	End Try

	If TextFieldIconFile.Text.Trim <> "" Then
		If File.Exists(TextFieldIconFile.Text, "") = False Then TextFieldIconFile.Text = ""
	End If

	If TextFieldIconFile.Text.Trim = "" Then
		If File.Exists(cwd, "Linuxify_icon.ico") Then TextFieldIconFile.Text = File.Combine(cwd, "Linuxify_icon.ico")
	End If

	ShowButtonProcess

End Sub

Sub GetCanonicalPath(Path As String) As String

	' Code from https://www.b4x.com/android/forum/threads/file-dirapp-returns-short-filename-system.34859/#post-204164

	Dim fileO As JavaObject
	fileO.InitializeNewInstance("java.io.File", Array As Object(Path))
	Return fileO.RunMethod("getCanonicalPath", Null)

End Sub

Private Sub ReadPackagerJson

	If TextFieldPackagerJson.Text <> "" Then
		If File.Exists(TextFieldPackagerJson.Text, "") Then
			Try
				Log("Reading packager.json")
				Dim p As JSONParser
				p.Initialize(File.ReadString(TextFieldPackagerJson.Text, ""))
				Dim m As Map = p.NextObject
				For Each key As String In m.Keys
					Log("- " & key & ": " & m.Get(key))
				Next
				TextFieldAdditionalModulesInfo.Text = m.GetDefault("AdditionalModuleInfoString", "")
				TextFieldExcludedModules.Text = m.GetDefault("ExcludedModules", "")
				TextFieldExeName.Text = m.GetDefault("ExeName", "")
				TextFieldIconFile.Text = GetCanonicalPath(m.GetDefault("IconFile", ""))
				TextFieldIncludedModules.Text = m.GetDefault("IncludedModules", "")
				TextFieldVMargs.Text = m.GetDefault("VMArgs", "")
			Catch
				Log("ReadPackagerJson: " & LastException)
			End Try
		End If
	End If

	ShowButtonProcess

End Sub

Private Sub WriteSettings

	Dim m As Map
	Dim raf As RandomAccessFile

	If File.Exists(settingsDir, "Linuxify_settings.txt") Then File.Delete(settingsDir, "Linuxify_settings.txt")

	m.Initialize
	m.Put("TextFieldB4JpackagerJar", TextFieldB4JpackagerJar.Text)
	m.Put("TextFieldJava", TextFieldJava.Text)

	raf.Initialize(settingsDir, "Linuxify_settings.txt", False)
	raf.WriteObject(m, False, raf.CurrentPosition) ' Must use RAF and ReadObject/WriteObject because without File.WriteObject, everything would be converted to String, including the List-type objects !
	raf.Close

End Sub

Private Sub LabelIcon_MouseClicked (EventData As MouseEvent)

	fx.ShowExternalDocument("https://icons8.com/icon/17842/linux")

End Sub

Private Sub ButtonTargetDir_Click

	' Note: this caused an exception when used in debug mode; works fine in release mode.
	' This was also spotted by mw71: https://www.b4x.com/android/forum/threads/solved-trouble-with-directorychooser-b4xpages.127932

	Dim directoryChooser1 As DirectoryChooser
	directoryChooser1.Initialize
	If File.Exists(TextFieldTargetDir.Text, "") Then directoryChooser1.InitialDirectory = TextFieldTargetDir.Text
	directoryChooser1.Title = "Select the target directory"
	TextFieldTargetDir.Text = directoryChooser1.Show(MainForm)
	ShowButtonProcess

End Sub

Private Sub ButtonPackagerJson_Click

	Dim fileChooser1 As FileChooser
	fileChooser1.Initialize
	If File.Exists(TextFieldPackagerJson.Text, "") Then
		fileChooser1.InitialDirectory = File.GetFileParent(TextFieldPackagerJson.Text)
		fileChooser1.InitialFileName = File.GetName(TextFieldPackagerJson.Text)
	End If
	fileChooser1.Title = "Select the packager.json input file"
	fileChooser1.setExtensionFilter("json files", Array As String("*.json"))
	TextFieldPackagerJson.Text = fileChooser1.ShowOpen(MainForm)
	If TextFieldPackagerJson.Text.Trim <> "" Then ReadPackagerJson
	ShowButtonProcess

End Sub

Private Sub ButtonEditPackagerJson_Click

	' Note: this was coded for Linux Mint

	Try
		Dim shl As Shell
		shl.Initialize("", "xed", Array As String("--new-window", TextFieldPackagerJson.Text))
		shl.RunSynchronous(-1)
	Catch
		AddText("Couldn't start xed (the text editor on Linux Mint Cinnamon): " & LastException & lineSep)
	End Try

End Sub

Private Sub ButtonInputJar_Click

	Dim fileChooser1 As FileChooser
	fileChooser1.Initialize
	If File.Exists(TextFieldInputJar.Text, "") Then
		fileChooser1.InitialDirectory = File.GetFileParent(TextFieldInputJar.Text)
		fileChooser1.InitialFileName = File.GetName(TextFieldInputJar.Text)
	End If
	fileChooser1.Title = "Select the input jar file"
	fileChooser1.setExtensionFilter("jar files", Array As String("*.jar"))
	TextFieldInputJar.Text = fileChooser1.ShowOpen(MainForm)
	CheckBoxDeleteTempFolder.Visible = False
	CheckBoxDeleteTempFolder.Checked = False
	ShowButtonProcess

End Sub

Private Sub ButtonIconFile_Click

	Dim fileChooser1 As FileChooser
	fileChooser1.Initialize
	If File.Exists(TextFieldIconFile.Text, "") Then
		fileChooser1.InitialDirectory = File.GetFileParent(TextFieldIconFile.Text)
		fileChooser1.InitialFileName = File.GetName(TextFieldIconFile.Text)
	End If
	fileChooser1.Title = "Select the icon file (optional)"
	fileChooser1.setExtensionFilter("ico files", Array As String("*.ico"))
	TextFieldIconFile.Text = fileChooser1.ShowOpen(MainForm)
	ShowButtonProcess

End Sub

Private Sub ButtonB4JpackagerJar_Click

	Dim fileChooser1 As FileChooser
	fileChooser1.Initialize
	If File.Exists(TextFieldB4JpackagerJar.Text, "") Then
		fileChooser1.InitialDirectory = File.GetFileParent(TextFieldB4JpackagerJar.Text)
		fileChooser1.InitialFileName = File.GetName(TextFieldB4JpackagerJar.Text)
	End If
	fileChooser1.Title = "Select the B4Jpackager jar"
	fileChooser1.setExtensionFilter("jar files", Array As String("*.jar"))
	TextFieldB4JpackagerJar.Text = fileChooser1.ShowOpen(MainForm)
	ShowButtonProcess

End Sub

Private Sub ButtonJava_Click

	Dim fileChooser1 As FileChooser
	fileChooser1.Initialize
	If File.Exists(TextFieldJava.Text, "") Then
		fileChooser1.InitialDirectory = File.GetFileParent(TextFieldJava.Text)
		fileChooser1.InitialFileName = File.GetName(TextFieldJava.Text)
	End If
	fileChooser1.Title = "Select the Java program file"
	TextFieldJava.Text = fileChooser1.ShowOpen(MainForm)
	ShowButtonProcess

End Sub

Private Sub TextFieldExeName_TextChanged (Old As String, New As String)

	ShowButtonProcess

End Sub

Private Sub ShowButtonProcess

	LabelError.Text = ""
	ButtonProcess.Visible = False

	If TextFieldB4JpackagerJar.Text.Trim = "" Then Return
	If File.Exists(TextFieldB4JpackagerJar.Text, "") = False Then
		LabelError.Text = "File does not exist: " & TextFieldB4JpackagerJar.Text
		Return
	End If

	If TextFieldJava.Text.Trim = "" Then Return
	If File.Exists(TextFieldJava.Text, "") = False Then
		LabelError.Text = "File does not exist: " & TextFieldJava.Text
		Return
	End If

	If TextFieldExeName.Text.Trim = "" Then Return
	If TextFieldExeName.Text.Contains("/") Then
		LabelError.Text = "Exe name may not contain path information ('/')"
		Return
	End If
	Try
		File.WriteString("LinuxifyTemp" & TextFieldExeName.Text.Trim, "", "")
		File.Delete("LinuxifyTemp" & TextFieldExeName.Text.Trim, "")
	Catch
		LabelError.Text = "Exe name must be a valid filename"
		Return
	End Try

	If TextFieldIconFile.Text.Trim <> "" Then
		If File.Exists(TextFieldIconFile.Text, "") = False Then
			LabelError.Text = "File does not exist: " & TextFieldIconFile.Text
			Return
		End If
	End If

	If TextFieldTargetDir.Text.Trim = "" Then Return
	If File.Exists(TextFieldTargetDir.Text, "") = False Then
		LabelError.Text = "Directory does not exist: " & TextFieldTargetDir.Text
		Return
	End If

	If TextFieldInputJar.Text.Trim = "" Then Return
	CheckBoxDeleteTempFolder.Visible = False
	If File.Exists(TextFieldInputJar.Text, "") Then
		If File.GetFileParent(TextFieldInputJar.Text).ToLowerCase <> TextFieldTargetDir.Text.Trim.ToLowerCase Then
			CheckBoxDeleteTempFolder.Visible = File.Exists(File.GetFileParent(TextFieldInputJar.Text), "temp")
		End If
	Else
		LabelError.Text = "File does not exist: " & TextFieldInputJar.Text
		Return
	End If
	If CheckBoxDeleteTempFolder.Visible = False Then CheckBoxDeleteTempFolder.Checked = False

	ButtonEditPackagerJson.Visible = False
	If TextFieldPackagerJson.Text.Trim <> "" Then
		If File.Exists(TextFieldPackagerJson.Text, "") = False Then
			LabelError.Text = "File does not exist: " & TextFieldPackagerJson.Text
			Return
		Else
			ButtonEditPackagerJson.Visible = True
		End If
	End If

	ButtonProcess.Visible = True

End Sub

Private Sub ButtonProcess_Click

	Dim i As Int

	WriteSettings

	ButtonProcess.Visible = False
	CheckBoxCreateDesktopFile.Visible = False
	CheckBoxDeleteTempFolder.Visible = False
	TextArea1.Text = ""
	TextArea1.Visible = True
	BringToFront(TextArea1)
	Sleep(0)

	' Copy the input jar to the target folder
	Try
		i = File.GetName(TextFieldInputJar.Text).LastIndexOf(".")
		tempInputJar = File.GetName(TextFieldInputJar.Text).SubString2(0, i) & ".Linuxify.input.jar"
		If File.Exists(TextFieldTargetDir.Text, tempInputJar) Then File.Delete(TextFieldTargetDir.Text, tempInputJar)
		File.Copy(TextFieldInputJar.Text, "", TextFieldTargetDir.Text, tempInputJar)
	Catch
		AddText("Could not copy " & TextFieldInputJar.Text & " to " & File.Combine(TextFieldTargetDir.Text, tempInputJar) & ": " & LastException & lineSep)
		ButtonOK.Visible = True
		Return
	End Try

	' Create packager.json in the target folder
	Dim m As Map
	m.Initialize
	m.Put("InputJar", File.Combine(TextFieldTargetDir.Text, tempInputJar))
	If TextFieldAdditionalModulesInfo.Text <> "" Then m.Put("AdditionalModuleInfoString", TextFieldAdditionalModulesInfo.Text)
	If TextFieldExcludedModules.Text <> "" Then m.Put("ExcludedModules", TextFieldExcludedModules.Text)
	If TextFieldExeName.Text <> "" Then m.Put("ExeName", TextFieldExeName.Text)
	If TextFieldIconFile.Text <> "" Then m.Put("IconFile", TextFieldIconFile.Text)
	If TextFieldIncludedModules.Text <> "" Then m.Put("IncludedModules", TextFieldIncludedModules.Text)
	If TextFieldVMargs.Text <> "" Then m.Put("VMArgs", TextFieldVMargs.Text)
	Dim g As JSONGenerator
	g.Initialize(m)
	File.WriteString(TextFieldTargetDir.Text, "packager.json", g.ToPrettyString(2))

	' Create the .desktop file?
	If CheckBoxCreateDesktopFile.Checked Then
		Dim l As List
		l.Initialize
		l.Add("[Desktop Entry]")
		l.Add("Name=" & TextFieldExeName.Text)
		l.Add("Exec=" & TextFieldTargetDir.Text & "/temp/build/run.command")
		If TextFieldIconFile.Text <> "" Then l.Add("Icon=" & TextFieldIconFile.Text)
		l.Add("Terminal=false")
		l.Add("Type=Application")
		File.WriteList(TextFieldTargetDir.Text, TextFieldExeName.Text.Trim & ".desktop", l)
	End If

	' Create a 'run.command' file, which in turn just runs ./temp/build/run.command;
	' it saves you the trouble of navigating to the latter directory
	File.WriteString(TextFieldTargetDir.Text, "run.command", File.Combine(TextFieldTargetDir.Text, "/temp/build/run.command"))

	' Run B4Jpackager
	Dim shl As Shell
	shl.Initialize("shl", TextFieldJava.Text, Array As String("-jar", TextFieldB4JpackagerJar.Text, File.Combine(TextFieldTargetDir.Text, "packager.json")))
	shl.WorkingDirectory = TextFieldTargetDir.Text
	shl.RunWithOutputEvents(-1)

End Sub

Private Sub shl_ProcessCompleted(Success As Boolean, ExitCode As Int, StdOut As String, StdErr As String)

	Try
		File.Delete(TextFieldTargetDir.Text, tempInputJar)
	Catch
		AddText("Could not delete the temp input jar '" & File.Combine(TextFieldTargetDir.Text, tempInputJar) & "': " & LastException)
	End Try

	If CheckBoxDeleteTempFolder.Checked Then
		If File.Exists(File.GetFileParent(TextFieldInputJar.Text), "temp") Then
			DeleteFolderRecursive(File.Combine(File.GetFileParent(TextFieldInputJar.Text), "temp"))
			AddText("The input temp folder has been deleted" & lineSep)
		End If
	End If

	If File.Exists(TextFieldTargetDir.Text, "run.command") Then
		Try
			Dim shl As Shell
			shl.Initialize("", "chmod", Array As String("u+x", File.Combine(TextFieldTargetDir.Text, "run.command")))
			shl.RunSynchronous(-1)
		Catch
			AddText("Couldn't chmod u+x run.command: " & LastException & lineSep)
		End Try
	End If

	ButtonOK.Visible = True

End Sub

Sub DeleteFolderRecursive(Folder As String)

	' Code from https://www.b4x.com/android/forum/threads/folder-remove.57304/#post-360773

	For Each f As String In File.ListFiles(Folder)
		If File.IsDirectory(Folder, f) Then
			DeleteFolderRecursive(File.Combine(Folder, f))
		End If
		File.Delete(Folder, f)
	Next

End Sub

Private Sub shl_StdErr(Buffer() As Byte, Length As Int)

	AddText(BytesToString(Buffer,0,Length,"UTF-8"))

End Sub

Private Sub shl_StdOut(Buffer() As Byte, Length As Int)

	AddText(BytesToString(Buffer,0,Length,"UTF-8"))

End Sub

Private Sub AddText(txt As String)

	TextArea1.Text = TextArea1.Text & txt
	TextArea1.SetSelection(TextArea1.Text.Length, TextArea1.Text.Length)
	Sleep(0)

End Sub

Private Sub ButtonOK_Click

	ButtonOK.Visible = False
	TextArea1.Visible = False
	ButtonProcess.Visible = True
	CheckBoxCreateDesktopFile.Visible = True
	If CheckBoxDeleteTempFolder.Checked Then CheckBoxDeleteTempFolder.Visible = True

End Sub

Private Sub BringToFront(n As Node)

	' Code from https://www.b4x.com/android/forum/threads/pane-bringtofront.70149

	Dim joNode As JavaObject = n
	joNode.RunMethod("toFront", Null)

End Sub