Build1=Default,b4a.example
File1=1.bal
FileGroup1=Default Group
Group=Default Group
IconFile=
Library1=core
Library2=filedownloadindeterminate
Library3=xui
Library4=xui views
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~'End of default text.~\n~
Module1=Starter
NumberOfFiles=1
NumberOfLibraries=4
NumberOfModules=1
Version=9.5
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4A Example
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private XUI As XUI
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.
	Private Dialog As B4XDialog
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	Activity.LoadLayout("1")
	
	Dialog.Initialize(Activity)
	Dialog.BackgroundColor = XUI.Color_Black
End Sub

Private Sub Button1_Click
	
	Dialog.Title = "Downloading file no complete dialog"

	Dim DT As FileDownloadIndeterminate_Template
	DT.Initialize
	DT.Text = "Filename"
	
	Dialog.ShowTemplate(DT,"","","")
	
	
	Wait For(WorkingLoop(5000)) Complete (R As Boolean)
	Log("Working Sub Complete " & R)
	
	Dialog.Close(0)
	
	Sleep(500)
	
	Dialog.Title = "Downloading file with complete dialog"
	Dim DT As FileDownloadIndeterminate_Template
	DT.Initialize
	DT.Text = "Filename"
	Dialog.ShowTemplate(DT,"Save","Process","Cancel")
	
	
	Wait For(WorkingLoop(5000)) Complete (R As Boolean)
	Log("Working Sub Complete " & R)
	
	DT.Complete(Me,"DT")
	Wait For DT_CompleteAndClosed(Result As Int)
	Log(Result)
	
	Log("Dialog closed")
	
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

'Simulation of program function, note long running tasks must be either background, such as HTTP jobs,
'or include Sleep statements to periodically release the gui thread
Private Sub WorkingLoop(Duration As Long) As ResumableSub
	
	Dim StartTime As Long = DateTime.Now
	Do While DateTime.Now < StartTime + Duration
		Sleep(0)
	Loop
	Return True
End Sub