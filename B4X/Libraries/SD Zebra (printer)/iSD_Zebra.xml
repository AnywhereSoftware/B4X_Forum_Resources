<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <b4x_version>8.80</b4x_version>
  <dependsOn>ibitmapcreator</dependsOn>
  <dependsOn>icore</dependsOn>
  <dependsOn>ihttp</dependsOn>
  <dependsOn>inetwork</dependsOn>
  <dependsOn>irandomaccessfile</dependsOn>
  <dependsOn>ixui</dependsOn>
  <dependsOn>ible</dependsOn>
  <dependsOn>avfoundation.framework</dependsOn>
  <dependsOn>libz.dylib</dependsOn>
  <class>
    <name>b4i_lanzebraprinter</name>
    <shortname>LanZebraPrinter</shortname>
    <comment>Ctrl + click to build b4xlib: ide://run?file=%JAVABIN%\jar.exe&amp;WorkingDirectory=%PROJECT%\..&amp;Args=-cMf&amp;Args=%PROJECT_NAME%.b4xlib&amp;&amp;Args=..&amp;Args=*.bas&amp;Args=manifest.txt
 preview http://labelary.com/viewer.html
</comment>
    <event>Opened (Success As Boolean)</event>
    <event>Preview (Success as boolean,bmp As B4XBitmap)</event>
    <method>
      <name>IsInitialized</name>
      <comment>Verifica se l'oggetto sia stato inizializzato.</comment>
      <returntype>BOOL</returntype>
    </method>
    <method>
      <name DesignerName="Active">_active:</name>
      <returntype>NSString*</returntype>
      <parameter>
        <name>CodeActivation</name>
        <type>NSString*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCode">_addbarcode:::::</name>
      <comment> Code 128
 Zebra.AddBarCode(50,50,"1234567890",5)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCodeEAN13">_addbarcodeean13:::::</name>
      <comment>EAN13
 Zebra.AddBarCodeEAN13(50,50,"1234567890",5)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCodeEAN8">_addbarcodeean8:::::</name>
      <comment>EAN8
 Zebra.AddBarCodeEAN8(50,50,"1234567890",5)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddCircle">_addcircle:::::</name>
      <comment> Zebra.AddCircle(50,50,25,3,false)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>radius</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>BOOL</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddHorizLine">_addhorizline::::</name>
      <comment> Zebra.AddHorizLine(50,50,700,3)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddImage">_addimage:::</name>
      <comment> Zebra.AddImage()  ' not active
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>bmp</name>
        <type>B4XBitmapWrapper*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddLogoSD">_addlogosd::</name>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddQRcode">_addqrcode:::::</name>
      <comment> Zebra.AddQRcode(50,50,"1234567890",5)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRaw">_addraw:</name>
      <returntype>NSString*</returntype>
      <parameter>
        <name>Text</name>
        <type>NSString*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRectangle">_addrectangle:::::::</name>
      <comment> Zebra.AddRectangle(50,50,100,100,3,false,false)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>BOOL</type>
      </parameter>
      <parameter>
        <name>InvertBrush</name>
        <type>BOOL</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRectangleRounded">_addrectanglerounded:::::::</name>
      <comment> Zebra.AddRectangleRounded(50,50,100,100,3,false,5)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>BOOL</type>
      </parameter>
      <parameter>
        <name>Rounded</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddText">_addtext:::::</name>
      <comment> Zebra.AddText(50,50,"Text",50, false)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Text</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>TextSize</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Bold</name>
        <type>BOOL</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddTextRotate">_addtextrotate::::::</name>
      <comment> Zebra.AddTextRotate(50,50,"Text",50, false,Zebra.RotateNormal)
 Zebra.AddTextRotate(50,50,"Text",50, false,Zebra.Rotate90)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Text</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>TextSize</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Bold</name>
        <type>BOOL</type>
      </parameter>
      <parameter>
        <name>Rotation</name>
        <type>NSString*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddVertLine">_addvertline::::</name>
      <comment> Zebra.AddVertLine(400,100,300,3)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="Clear">_clear</name>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="Close">_close</name>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="getBlackRange" HideFromIDE="true">_getblackrange</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getRaw" HideFromIDE="true">_getraw</name>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize:::</name>
      <comment>Initializes the object. You can add parameters to this method if needed.
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>ba</name>
        <type>B4I*</type>
      </parameter>
      <parameter>
        <name>Callback</name>
        <type>NSObject*</type>
      </parameter>
      <parameter>
        <name>Event</name>
        <type>NSString*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Open">_open::</name>
      <comment> Zebra.Open("192.168.1.202",Zebra.desktop)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>Host</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>TypePrinter</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Preview">_preview</name>
      <comment> Evito di usare okHttpUtils
</comment>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="Print">_print</name>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="PrintAndClose">_printandclose</name>
      <returntype>void</returntype>
    </method>
    <method>
      <name DesignerName="setBlackRange" HideFromIDE="true">_setblackrange:</name>
      <comment> Printer.BlackRange=125
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>R</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLabelWidth" HideFromIDE="true">_setlabelwidth:</name>
      <returntype>NSString*</returntype>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="BlackRange">_blackrange</name>
      <comment> Printer.BlackRange=125
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Raw">_raw</name>
      <returntype>NSString*</returntype>
    </property>
    <property>
      <name DesignerName="LabelWidth">_labelwidth</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="Mobile">_mobile</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="desktop">_desktop</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="RotateNormal">_rotatenormal</name>
      <returntype>NSString*</returntype>
    </field>
    <field>
      <name DesignerName="Rotate90">_rotate90</name>
      <returntype>NSString*</returntype>
    </field>
    <field>
      <name DesignerName="Rotate180">_rotate180</name>
      <returntype>NSString*</returntype>
    </field>
    <field>
      <name DesignerName="Rotate270">_rotate270</name>
      <returntype>NSString*</returntype>
    </field>
    <field>
      <name DesignerName="Encoding">_encoding</name>
      <returntype>NSString*</returntype>
    </field>
  </class>
  <class>
    <name>b4i_blezebraprinter</name>
    <shortname>BLEZebraPrinter</shortname>
    <event>PrinterFound(Name As String, ID as String)</event>
    <event>Connected(services as List)</event>
    <event>Disconnected</event>
    <event>WriteComplete (Characteristic As String, Success As Boolean)</event>
    <event>ImageWriteComplete</event>
    <event>StateChanged(msg As String)</event>
    <event>BLEisOFF</event>
    <method>
      <name>IsInitialized</name>
      <comment>Verifica se l'oggetto sia stato inizializzato.</comment>
      <returntype>BOOL</returntype>
    </method>
    <method>
      <name DesignerName="Active">_active:</name>
      <returntype>NSString*</returntype>
      <parameter>
        <name>CodeActivation</name>
        <type>NSString*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCode">_addbarcode:::::</name>
      <comment>CODE 128
 Zebra.AddBarCode(50,50,"1234567890",5)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCodeEAN13">_addbarcodeean13:::::</name>
      <comment>EAN13
 Zebra.AddBarCodeEAN13(50,50,"1234567890",5)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCodeEAN8">_addbarcodeean8:::::</name>
      <comment>EAN8
 Zebra.AddBarCodeEAN8(50,50,"1234567890",5)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddCircle">_addcircle:::::</name>
      <comment> Zebra.AddCircle(50,50,25,3,false)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>radius</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>BOOL</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddHorizLine">_addhorizline::::</name>
      <comment> Zebra.AddHorizLine(50,50,700,3)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddImage">_addimage:::</name>
      <comment> Zebra.AddImage()  ' not active
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>bmp</name>
        <type>B4XBitmapWrapper*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddLogoSD">_addlogosd::</name>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddQRcode">_addqrcode:::::</name>
      <comment> Zebra.AddQRcode(50,50,"1234567890",5)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRaw">_addraw:</name>
      <returntype>NSString*</returntype>
      <parameter>
        <name>Text</name>
        <type>NSString*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRectangle">_addrectangle:::::::</name>
      <comment> Zebra.AddRectangle(50,50,100,100,3,false,false)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>BOOL</type>
      </parameter>
      <parameter>
        <name>InvertBrush</name>
        <type>BOOL</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRectangleRounded">_addrectanglerounded:::::::</name>
      <comment> Zebra.AddRectangleRounded(50,50,100,100,3,false,5)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>BOOL</type>
      </parameter>
      <parameter>
        <name>Rounded</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddText">_addtext:::::</name>
      <comment> Zebra.AddText(50,50,"Text",50, false)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Text</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>TextSize</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Bold</name>
        <type>BOOL</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddTextRotate">_addtextrotate::::::</name>
      <comment> Zebra.AddTextRotate(50,50,"Text",50, false,Zebra.RotateNormal)
 Zebra.AddTextRotate(50,50,"Text",50, false,Zebra.Rotate90)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Text</name>
        <type>NSString*</type>
      </parameter>
      <parameter>
        <name>TextSize</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Bold</name>
        <type>BOOL</type>
      </parameter>
      <parameter>
        <name>Rotation</name>
        <type>NSString*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddVertLine">_addvertline::::</name>
      <comment> Zebra.AddVertLine(400,100,300,3)
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="Connect">_connect:</name>
      <comment>CharatteristicName = "2AF0" or "2AF1"
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>ID</name>
        <type>NSString*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Disconnect">_disconnect</name>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="getBlackRange" HideFromIDE="true">_getblackrange</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getisConnect" HideFromIDE="true">_getisconnect</name>
      <returntype>BOOL</returntype>
    </method>
    <method>
      <name DesignerName="getisScanning" HideFromIDE="true">_getisscanning</name>
      <returntype>BOOL</returntype>
    </method>
    <method>
      <name DesignerName="getRaw" HideFromIDE="true">_getraw</name>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize:::</name>
      <comment>Initializes the object. You can add parameters to this method if needed.
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>ba</name>
        <type>B4I*</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>NSObject*</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>NSString*</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Preview">_preview</name>
      <comment> Evito di usare okHttpUtils
</comment>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="Print">_print</name>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="ScanPrinter">_scanprinter</name>
      <returntype>NSString*</returntype>
    </method>
    <method>
      <name DesignerName="setBlackRange" HideFromIDE="true">_setblackrange:</name>
      <comment> Printer.BlackRange=125
</comment>
      <returntype>NSString*</returntype>
      <parameter>
        <name>R</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLabelWidth" HideFromIDE="true">_setlabelwidth:</name>
      <returntype>NSString*</returntype>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="StopScanning">_stopscanning</name>
      <returntype>NSString*</returntype>
    </method>
    <property>
      <name DesignerName="BlackRange">_blackrange</name>
      <comment> Printer.BlackRange=125
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="isConnect">_isconnect</name>
      <returntype>BOOL</returntype>
    </property>
    <property>
      <name DesignerName="isScanning">_isscanning</name>
      <returntype>BOOL</returntype>
    </property>
    <property>
      <name DesignerName="Raw">_raw</name>
      <returntype>NSString*</returntype>
    </property>
    <property>
      <name DesignerName="LabelWidth">_labelwidth</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="RotateNormal">_rotatenormal</name>
      <returntype>NSString*</returntype>
    </field>
    <field>
      <name DesignerName="Rotate90">_rotate90</name>
      <returntype>NSString*</returntype>
    </field>
    <field>
      <name DesignerName="Rotate180">_rotate180</name>
      <returntype>NSString*</returntype>
    </field>
    <field>
      <name DesignerName="Rotate270">_rotate270</name>
      <returntype>NSString*</returntype>
    </field>
    <field>
      <name DesignerName="Encoding">_encoding</name>
      <returntype>NSString*</returntype>
    </field>
    <field>
      <name DesignerName="ServiceName">_servicename</name>
      <returntype>NSString*</returntype>
    </field>
    <field>
      <name DesignerName="CharatteristicName">_charatteristicname</name>
      <returntype>NSString*</returntype>
    </field>
    <field>
      <name DesignerName="currentState">_currentstate</name>
      <returntype>int</returntype>
    </field>
  </class>
  <version>1.12</version>
  <author>Star-Dust</author>
</root>