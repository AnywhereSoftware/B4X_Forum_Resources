<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>net.mazezone.TrackerBox</name>
        <shortname>TrackerBox</shortname>
        <owner>process</owner>
        <method>
            <name>AudioWrite</name>
            <comment>Sample Playback. Asynchronous function. Control with AudioReady</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Buf</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AudioReady</name>
            <comment>State AudioWrite. True - busy</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>AudioWrite2</name>
            <comment>Sample Playback. Synchronous function</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Buf</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AudioOpen</name>
            <comment>Opening a cross-platform device for audio playback</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SampleRate</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>LoadModule</name>
            <comment>Loading a module into memory
    SampleRate: 8000 Hz to 128000 Hz</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SampleRate</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SeekSequencePos</name>
            <comment>Seek to the specified position and row in the sequence.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>sequencePos</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>sequenceRow</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Audio</name>
            <comment>Generate audio.
  The number of samples placed into outputBuf is returned.
  The output buffer length must be at least that returned by MixBufferLength().
  A "sample" is a pair of 16-bit integer amplitudes, one for each of the stereo channels.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>outputBuf</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initialization</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>Muted</name>
            <comment>Mute or unmute the specified channel. If channel is negative, mute or unmute all channels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>channel</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mute</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Seek</name>
            <comment>Seek to approximately the specified sample position.
  The actual sample position reached is returned.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>samplePos</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AudioClose</name>
            <comment>Closing a cross-platform device for audio playback</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>SequenceLength</name>
            <returntype>int</returntype>
            <comment>Return the sequence length of the module</comment>
        </property>
        <property>
            <name>SequencerEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Enable or disable the sequencer.
  Return true if the sequencer is enabled.</comment>
        </property>
        <property>
            <name>I_LINEAR</name>
            <returntype>int</returntype>
            <comment>Constant: Linear interpolation</comment>
        </property>
        <property>
            <name>MixBufferLength</name>
            <returntype>int</returntype>
            <comment>Returns the length of the buffer required by Audio().</comment>
        </property>
        <property>
            <name>BreakSeqPos</name>
            <returntype>int</returntype>
            <comment>Get the break sequence position.</comment>
        </property>
        <property>
            <name>ReadyModule</name>
            <returntype>boolean</returntype>
            <comment>Module loaded into memory</comment>
        </property>
        <property>
            <name>Interpolation</name>
            <returntype>int</returntype>
            <parameter>
                <name>interpolation</name>
                <type>int</type>
            </parameter>
            <comment>Set the resampling quality to one of I_NEAREST, I_LINEAR, I_SINC. 
  Return the current resampling quality setting.</comment>
        </property>
        <property>
            <name>CalculateSongDuration</name>
            <returntype>int</returntype>
            <comment>Returns the song duration in samples at the current sampling rate.</comment>
        </property>
        <property>
            <name>I_SINC</name>
            <returntype>int</returntype>
            <comment>Constant: Sinc interpolation</comment>
        </property>
        <property>
            <name>SampleRatePlayback</name>
            <returntype>int</returntype>
            <parameter>
                <name>rate</name>
                <type>int</type>
            </parameter>
            <comment>Set the sampling rate of playback. This can be used with SampleRate to adjust the tempo and pitch. 
  Return the sampling rate of playback.</comment>
        </property>
        <property>
            <name>NumChannels</name>
            <returntype>int</returntype>
            <comment>Return the number of channels of the module</comment>
        </property>
        <property>
            <name>NextRow</name>
            <returntype>int</returntype>
            <comment>Get the next row position.</comment>
        </property>
        <property>
            <name>SequencePos</name>
            <returntype>int</returntype>
            <parameter>
                <name>pos</name>
                <type>int</type>
            </parameter>
            <comment>Set the pattern in the sequence to play. The tempo is reset to the default. 
  Get the current pattern position in the sequence.</comment>
        </property>
        <property>
            <name>I_NEAREST</name>
            <returntype>int</returntype>
            <comment>Constant: No interpolation</comment>
        </property>
        <property>
            <name>SongName</name>
            <returntype>java.lang.String</returntype>
            <comment>Return the name of the module</comment>
        </property>
        <property>
            <name>Row</name>
            <returntype>int</returntype>
            <comment>Get the current row position.</comment>
        </property>
    </class>
    <version>1.0</version>
</root>
