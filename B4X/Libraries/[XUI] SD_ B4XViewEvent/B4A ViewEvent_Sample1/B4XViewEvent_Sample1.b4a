Build1=Default,b4a.example
File1=Layout1.bal
FileGroup1=Default Group
Group=Default Group
IconFile=
Library1=core
Library2=xui
Library3=sd_b4xviewevent
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="19"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~'End of default text.~\n~
Module1=Starter
NumberOfFiles=1
NumberOfLibraries=3
NumberOfModules=1
Version=8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4A Example
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.

End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.
	Dim Manager As ManagerEvent
	Private Label1 As Label
	Private Label2 As Label
	
	Dim Left, Top As Int
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	Activity.LoadLayout("Layout1")
	
	Manager.Initialize(Me)
	Manager.SetEvent(Label1,"Label1")
	Manager.SetEvent(Label2,"Label2")
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub Label1_TouchEvent (action As Int, Coordinate() As TCoordinate)
	Select action
		Case Manager.Action_Down
			Log($"Label1: Press- X:${Coordinate(0).X} Y:${Coordinate(0).y}"$)
			Left=Coordinate(0).X - Label1.Left
			Top=Coordinate(0).y - Label1.Top
		Case Manager.Action_Drag ' Drag
			Log($"Label1: Drag- X:${Coordinate(0).X} Y:${Coordinate(0).y}"$)
			Label1.Left=Label1.Left-Left+Coordinate(0).X
			Label1.Top=Label1.Top-Top+Coordinate(0).y
		Case Manager.Action_Up ' Release click
			Log($"Label1: Release - X:${Coordinate(0).X} Y:${Coordinate(0).y}"$)
			Label1.Left=0
			Label1.Top=0
		Case Manager.Action_Click
			Log($"Label1: Click- X:${Coordinate(0).X} Y:${Coordinate(0).y}"$)
		Case Manager.Action_DoubleClick
			Log($"Label1: DoubleClick- X:${Coordinate(0).X} Y:${Coordinate(0).y}"$)
		Case Manager.Action_LongClick
			Log($"Label1: LongClick- X:${Coordinate(0).X} Y:${Coordinate(0).y}"$)
		Case Else
			Log($"Label1: ${action}- X:${Coordinate(0).X} Y:${Coordinate(0).y}"$)
	End Select
End Sub

Sub Label2_TouchEvent (action As Int, Coordinate() As TCoordinate)
	Log($"Label2: ${action}- X:${Coordinate(0).X} Y:${Coordinate(0).y}"$)
	
	ToastMessageShow("Label2",False)
End Sub