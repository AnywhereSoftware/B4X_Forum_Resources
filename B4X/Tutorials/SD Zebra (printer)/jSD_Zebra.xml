<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <b4x_version>10.20</b4x_version>
  <dependsOn>jbitmapcreator</dependsOn>
  <dependsOn>jcore</dependsOn>
  <dependsOn>jfx</dependsOn>
  <dependsOn>jnetwork</dependsOn>
  <dependsOn>jrandomaccessfile</dependsOn>
  <dependsOn>jxui</dependsOn>
  <dependsOn>okhttp</dependsOn>
  <dependsOn>javaobject</dependsOn>
  <dependsOn>json</dependsOn>
  <dependsOn>okhttp-4.9.0</dependsOn>
  <dependsOn>okio-2.8.0</dependsOn>
  <dependsOn>okhttp-urlconnection-4.9.3</dependsOn>
  <dependsOn>kotlin-stdlib-1.6.10</dependsOn>
  <class>
    <name>b4j.example.lanzebraprinter</name>
    <shortname>LanZebraPrinter</shortname>
    <comment>Ctrl + click to build b4xlib: ide://run?file=%JAVABIN%\jar.exe&amp;WorkingDirectory=%PROJECT%\..&amp;Args=-cMf&amp;Args=%PROJECT_NAME%.b4xlib&amp;&amp;Args=..&amp;Args=*.bas&amp;Args=manifest.txt
 preview http://labelary.com/viewer.html
</comment>
    <event>Opened (Success As Boolean)</event>
    <event>Preview (Success as boolean,bmp As B4XBitmap)</event>
    <method>
      <name>IsInitialized</name>
      <comment>Verifica se l'oggetto sia stato inizializzato.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Active">_active</name>
      <returntype>String</returntype>
      <parameter>
        <name>CodeActivation</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCode">_addbarcode</name>
      <comment> Code 128
 Zebra.AddBarCode(50,50,"1234567890",5)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCodeEAN13">_addbarcodeean13</name>
      <comment>EAN13
 Zebra.AddBarCodeEAN13(50,50,"1234567890",5)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCodeEAN8">_addbarcodeean8</name>
      <comment>EAN8
 Zebra.AddBarCodeEAN8(50,50,"1234567890",5)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddCircle">_addcircle</name>
      <comment> Zebra.AddCircle(50,50,25,3,false)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>radius</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddHorizLine">_addhorizline</name>
      <comment> Zebra.AddHorizLine(50,50,700,3)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddImage">_addimage</name>
      <comment> Zebra.AddImage()  ' not active
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>bmp</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddLogoSD">_addlogosd</name>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddQRcode">_addqrcode</name>
      <comment> Zebra.AddQRcode(50,50,"1234567890",5)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRaw">_addraw</name>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRectangle">_addrectangle</name>
      <comment> Zebra.AddRectangle(50,50,100,100,3,false,false)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>InvertBrush</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRectangleRounded">_addrectanglerounded</name>
      <comment> Zebra.AddRectangleRounded(50,50,100,100,3,false,5)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>Rounded</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddText">_addtext</name>
      <comment> Zebra.AddText(50,50,"Text",50, false)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>TextSize</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Bold</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddTextRotate">_addtextrotate</name>
      <comment> Zebra.AddTextRotate(50,50,"Text",50, false,Zebra.RotateNormal)
 Zebra.AddTextRotate(50,50,"Text",50, false,Zebra.Rotate90)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>TextSize</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Bold</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>Rotation</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddVertLine">_addvertline</name>
      <comment> Zebra.AddVertLine(400,100,300,3)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Clear">_clear</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Close">_close</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getBlackRange" HideFromIDE="true">_getblackrange</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getRaw" HideFromIDE="true">_getraw</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object. You can add parameters to this method if needed.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>Callback</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Event</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Open">_open</name>
      <comment> Zebra.Open("192.168.1.202",Zebra.desktop)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Host</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>TypePrinter</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Preview">_preview</name>
      <comment> Evito di usare okHttpUtils
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Print">_print</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="PrintAndClose">_printandclose</name>
      <returntype>void</returntype>
    </method>
    <method>
      <name DesignerName="setBlackRange" HideFromIDE="true">_setblackrange</name>
      <comment> Printer.BlackRange=125
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>R</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLabelWidth" HideFromIDE="true">_setlabelwidth</name>
      <returntype>String</returntype>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="BlackRange">_blackrange</name>
      <comment> Printer.BlackRange=125
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Raw">_raw</name>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="LabelWidth">_labelwidth</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="Mobile">_mobile</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="desktop">_desktop</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="RotateNormal">_rotatenormal</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="Rotate90">_rotate90</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="Rotate180">_rotate180</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="Rotate270">_rotate270</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="Encoding">_encoding</name>
      <returntype>String</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.usbzebraprinter</name>
    <shortname>UsbZebraPrinter</shortname>
    <comment>Ctrl + click to build b4xlib: ide://run?file=%JAVABIN%\jar.exe&amp;WorkingDirectory=%PROJECT%\..&amp;Args=-cMf&amp;Args=%PROJECT_NAME%.b4xlib&amp;&amp;Args=..&amp;Args=*.bas&amp;Args=manifest.txt
 preview http://labelary.com/viewer.html
</comment>
    <event>Opened (Success As Boolean)</event>
    <event>Preview (Success as boolean,bmp As B4XBitmap)</event>
    <method>
      <name>IsInitialized</name>
      <comment>Verifica se l'oggetto sia stato inizializzato.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Active">_active</name>
      <returntype>String</returntype>
      <parameter>
        <name>CodeActivation</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCode">_addbarcode</name>
      <comment> Code 128
 Zebra.AddBarCode(50,50,"1234567890",5)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCodeEAN13">_addbarcodeean13</name>
      <comment>EAN13
 Zebra.AddBarCodeEAN13(50,50,"1234567890",5)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddBarCodeEAN8">_addbarcodeean8</name>
      <comment>EAN8
 Zebra.AddBarCodeEAN8(50,50,"1234567890",5)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddCircle">_addcircle</name>
      <comment> Zebra.AddCircle(50,50,25,3,false)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>radius</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddHorizLine">_addhorizline</name>
      <comment> Zebra.AddHorizLine(50,50,700,3)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddImage">_addimage</name>
      <comment> Zebra.AddImage()  ' not active
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>bmp</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddLogoSD">_addlogosd</name>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddQRcode">_addqrcode</name>
      <comment> Zebra.AddQRcode(50,50,"1234567890",5)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Code</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Size</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRaw">_addraw</name>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRectangle">_addrectangle</name>
      <comment> Zebra.AddRectangle(50,50,100,100,3,false,false)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>InvertBrush</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRectangleRounded">_addrectanglerounded</name>
      <comment> Zebra.AddRectangleRounded(50,50,100,100,3,false,5)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>Rounded</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddText">_addtext</name>
      <comment> Zebra.AddText(50,50,"Text",50, false)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>TextSize</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Bold</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddTextRotate">_addtextrotate</name>
      <comment> Zebra.AddTextRotate(50,50,"Text",50, false,Zebra.RotateNormal)
 Zebra.AddTextRotate(50,50,"Text",50, false,Zebra.Rotate90)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>TextSize</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Bold</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>Rotation</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddVertLine">_addvertline</name>
      <comment> Zebra.AddVertLine(400,100,300,3)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Clear">_clear</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getBlackRange" HideFromIDE="true">_getblackrange</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getRaw" HideFromIDE="true">_getraw</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object. You can add parameters to this method if needed.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>Callback</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Event</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Preview">_preview</name>
      <comment> Evito di usare okHttpUtils
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Print">_print</name>
      <returntype>String</returntype>
      <parameter>
        <name>printer</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PrintAndClose">_printandclose</name>
      <returntype>String</returntype>
      <parameter>
        <name>printer</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setBlackRange" HideFromIDE="true">_setblackrange</name>
      <comment> Printer.BlackRange=125
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>R</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLabelWidth" HideFromIDE="true">_setlabelwidth</name>
      <returntype>String</returntype>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="BlackRange">_blackrange</name>
      <comment> Printer.BlackRange=125
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Raw">_raw</name>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="LabelWidth">_labelwidth</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="Mobile">_mobile</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="desktop">_desktop</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="RotateNormal">_rotatenormal</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="Rotate90">_rotate90</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="Rotate180">_rotate180</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="Rotate270">_rotate270</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="Encoding">_encoding</name>
      <returntype>String</returntype>
    </field>
  </class>
  <version>1.12</version>
  <author>Star-Dust</author>
</root>