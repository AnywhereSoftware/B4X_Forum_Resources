Build1=Default,b4i.xGraphDemo
File1=Main.bil
FileGroup1=Default Group
Group=Default Group
Library1=icore
Library2=ixui
Library3=xui views
Module1=|relative|..\B4J\xGraph
NumberOfFiles=1
NumberOfLibraries=3
NumberOfModules=1
Version=7
@EndOfDesignText@
'Code module
#Region  Project Attributes 
	#ApplicationLabel: xGraphDemo
	#Version: 1.0.0 
	'Orientation possible values: Portrait, LandscapeLeft, LandscapeRight and PortraitUpsideDown
	#iPhoneOrientations: LandscapeLeft, LandscapeRight
	#iPadOrientations: Portrait, LandscapeLeft, LandscapeRight, PortraitUpsideDown
	#Target: iPhone, iPad
	#ATSEnabled: True
	#MinVersion: 8
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'Public variables can be accessed from all modules.
	Public App As Application
	Public NavControl As NavigationController
	Private Page1 As Page
	
	Private xui As XUI
	
	Private SameScaleIndex = 1 As Int
	Private Samples As Int
	Private xGraph1 As xGraph
	Private rbtAuto, rbtManu, rbtSameScales(), rbtSameScales0, rbtSameScales1, rbtSameScales2, rbtSameScales3, btnZoom, btnUnZoom As B4XView
	Private lblAuto, lblManu, lblScale0, lblScale1, lblScale2, lblScale3 As B4XView
	Private cbxDisplayCurve, cbxSuperposCurves As B4XComboBox
	Private CurrentDisplayCurve, CurrentSuperposCurves As Switch
End Sub

Private Sub Application_Start (Nav As NavigationController)
	'SetDebugAutoFlushLogs(True) 'Uncomment if program crashes before all logs are printed.
	NavControl = Nav
	Page1.Initialize("Page1")
	Page1.Title = "xGraphDemo"
	Page1.RootPanel.Color = Colors.White
	Page1.RootPanel.LoadLayout("Main")
	NavControl.ShowPage(Page1)
	
	rbtSameScales = Array As B4XView (rbtSameScales0, rbtSameScales1, rbtSameScales2, rbtSameScales3)

	CurrentDisplayCurve = rbtAuto
	CurrentSuperposCurves = rbtSameScales0
	
	InitGraph
	
End Sub

Private Sub Page1_Resize(Width As Int, Height As Int)
	
End Sub

Private Sub Application_Background
	
End Sub

Private Sub InitGraph
	Private i As Int

	xGraph1.CurveYName(0) = "Temperature"
	xGraph1.CurveYUnit(0) = "°C"
	xGraph1.CurveYName(1) = "Pressure"
	xGraph1.CurveYUnit(1) = "bar"
	xGraph1.CurveYName(2) = "Acceleration"
	xGraph1.CurveYUnit(2) = "m/s2"
	xGraph1.CurveYName(3) = "Speed"
	xGraph1.CurveYUnit(3) = "m/s"
	xGraph1.CurveYName(5) = "Acceleretion"
	xGraph1.CurveYUnit(5) = "m/s2"
	
	Private lstSuperposCurves As List
	lstSuperposCurves.Initialize
	lstSuperposCurves.Add("0, 1")
	lstSuperposCurves.Add("0, 1, 2")
	lstSuperposCurves.Add("0, 1, 2, 3")
	lstSuperposCurves.Add("0, 2")
	lstSuperposCurves.Add("0, 3")
	lstSuperposCurves.Add("1, 2, 3")
	lstSuperposCurves.Add("0, 1, 3")
	lstSuperposCurves.Add("5, 6, 7")
	lstSuperposCurves.Add("6, 8")
	cbxSuperposCurves.SetItems(lstSuperposCurves)
	cbxSuperposCurves.SelectedIndex = 2
	
	xGraph1.CurvesToDisplay.Initialize2(Array As Int(0, 1, 2, 3))
		
'	Private x0 = -320 As Int
	Private x0 = 0 As Int
	Samples = 300
	xGraph1.NbSamples = Samples + 1
	For i = 0 To Samples
		xGraph1.CurveX(i) = (i + x0) * 0.001
		xGraph1.CurveY(0, i) = 90 * SinD(i * 9)
		xGraph1.CurveY(1, i) = 48 * CosD(i * 12) + 50
		xGraph1.CurveY(2, i) = 45 * -SinD(i * 6) - 50
		xGraph1.CurveY(3, i) = 45 * -CosD(i * 15)
		If i Mod 100 < 50 Then
			xGraph1.CurveY(5, i) = 30
		Else
			xGraph1.CurveY(5, i) = -30
		End If
	Next

	xGraph1.CalcSum2Curves(0, 1, 4, False)
	xGraph1.CurveYUnit(4) = ""
'	xGraph1.SetCurveUnit(4, "", False)

	xGraph1.CalcIntegral(5, 6, 0, False)
	xGraph1.CalcIntegral(6, 7, 0, False)
	xGraph1.CalcDerivative(7, 8, False)

	Private lstDisplayCurveItems As List
	lstDisplayCurveItems.Initialize
	For i = 0 To xGraph1.NbMaxCurves - 1
		lstDisplayCurveItems.Add(i & " : " & xGraph1.CurveYName(i))
	Next
	cbxDisplayCurve.SetItems(lstDisplayCurveItems)
	cbxDisplayCurve.SelectedIndex = 0
	
'	xGraph1.Title = "Test"
'	xGraph1.SetZoomIndexes(5, 295)
'	xGraph1.ScaleYValues = "1!3!10"
'	xGraph1.DisplayCurveUnit = False
'	xGraph1.DisplayCurveIndex = False
	
	xGraph1.DrawGraph
	
	lblScale0.TextColor =  xui.Color_Red
	lblScale1.TextColor =  xui.Color_Blue
	lblScale2.TextColor =  xui.Color_Magenta
	lblScale3.TextColor =  xui.Color_RGB(0, 153, 0)
End Sub

Private Sub rbtScale_ValueChanged (Value As Boolean)
	Private rbt As Switch
	
	If Value = True Then
		CurrentDisplayCurve.Value = False
		rbt = Sender
		Select rbt.Tag
			Case "Auto"
				xGraph1.AutomaticYScales = True
				lblAuto.TextColor = xui.Color_RGB(50, 205, 50)
				lblManu.TextColor = xui.Color_Red
			Case "Manu"
				xGraph1.AutomaticYScales = False
				lblAuto.TextColor = xui.Color_Red
				lblManu.TextColor = xui.Color_RGB(50, 205, 50)
			Case Else
		End Select
		CurrentDisplayCurve = Sender
	End If
	SameScaleIndex = -1
	CurrentSuperposCurves.Value = False
End Sub

Private Sub rbtSameScales_ValueChanged(Value As Boolean)
	Private rbt As Switch
	
	If Value = True Then
		If CurrentSuperposCurves <> Sender Then
			CurrentSuperposCurves.Value = False			
		End If
		rbt = Sender
		SameScaleIndex = rbt.Tag
		xGraph1.SetSameScale(xGraph1.CurvesToDisplay.Get(SameScaleIndex))
		CurrentSuperposCurves = Sender
	End If
End Sub

Private Sub cbxDisplayCurve_SelectedIndexChanged(Index As Int)
	Private lst As List
	
	lst.Initialize
	lst.Add(Index)
	xGraph1.CurvesToDisplay = lst
	
	xGraph1.DrawGraph
End Sub

Private Sub cbxSuperposCurves_SelectedIndexChanged(Index As Int)
	Private lst As List
	Private i, CurveIndex As Int
	Private Value, txt() As String
	
	Value = cbxSuperposCurves.GetItem(Index)
	txt = Regex.Split(", ", Value)
	lst.Initialize
	For i = 0 To txt.Length - 1
		CurveIndex = txt(i)
		lst.Add(CurveIndex)
	Next
	xGraph1.CurvesToDisplay = lst

	For i = 1 To lst.Size - 1
		rbtSameScales(i).Visible = True
	Next
	For i = lst.Size To 3
		rbtSameScales(i).Visible = False
	Next
		
	xGraph1.DrawGraph
End Sub

Private Sub btnZoom_Click
	xGraph1.SetZoomMode
	btnUnZoom.Visible = True
End Sub

Private Sub btnUnZoom_Click
	xGraph1.SetZoomIndexes(0, Samples)
	btnUnZoom.Visible = False
End Sub

Private Sub Snapshot
	Private bmp As B4XBitmap
	Private Out As OutputStream
	xui.SetDataFolder("GraphDemo")
	Out = File.OpenOutput(xui.DefaultFolder, "Graph.jpg", False)
'	Log(xui.DefaultFolder)
	bmp = xGraph1.Snapshot
	bmp.WriteToStream(Out, 100, "JPEG")
	Out.Close
End Sub
