AppType=JavaFX
Build1=Default,b4j.example
File1=1.bjl
File2=icon.png
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
Library1=jcore
Library2=jfx
Library3=jpoi
Library4=jsql
Library5=xlutils
Library6=jxui
NumberOfFiles=2
NumberOfLibraries=6
NumberOfModules=0
Version=8.9
@EndOfDesignText@
#Region  Project Attributes 
	#MainFormWidth: 800
	#MainFormHeight: 230 
#End Region
#AdditionalJar: sqlite-jdbc-3.7.2
Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private btnBuild As Button
	Private txtDB As TextField
	Private fc As FileChooser
	Private txtXlsx As TextField
	Private ui As Boolean = True
	Private xl As XLUtils
	Private xui As XUI
	
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	If Args.Length > 0 Then
		ui = False
		BuildDatabase(Args(0), Args(1))
	End If
	MainForm = Form1
	MainForm.RootPane.LoadLayout("1")
	
	MainForm.Show
	fc.Initialize
	If File.Exists(File.DirApp, "settings.txt") Then
		Dim m As Map = File.ReadMap(File.DirApp, "settings.txt")
		txtDB.Text = m.Get("db")
		txtXlsx.Text = m.Get("xlsx")
	End If
	btnBuild.RequestFocus
	xl.Initialize
End Sub

Sub MainForm_Closed
	File.WriteMap(File.DirApp, "settings.txt", CreateMap("xlsx": txtXlsx.Text, "db": txtDB.Text))
End Sub

Sub btnXlsx_Action
	Browse(txtXlsx, "xlsx", False)
End Sub

Sub btnDB_Action
	Browse(txtDB, "db", True)
End Sub

Private Sub Browse(tf As TextField, extension As String, save As Boolean)
	If File.Exists(File.GetFileParent(tf.Text), "") Then fc.InitialDirectory = File.GetFileParent(tf.Text)
	fc.SetExtensionFilter(extension, Array($"*.${extension}"$))
	Dim path As String
	If save Then
		path = fc.ShowSave(MainForm)
	Else
		path = fc.ShowOpen(MainForm)
	End If
	If path <> "" Then tf.Text = path
End Sub

Sub btnBuild_Action
	If txtDB.Text = "" Or txtXlsx.Text = "" Then
		fx.Msgbox(MainForm, "Please enter both fields", "")
		Return
	End If
	BuildDatabase(txtXlsx.Text, txtDB.Text)
	
End Sub

Private Sub BuildDatabase (Xls As String, Output As String)
	Private sql As SQL
	Dim ExitCode As Int = 0
	File.Delete(Output, "")
	sql.InitializeSQLite(Output, "", True)
	sql.BeginTransaction
	Try
		sql.ExecNonQuery("CREATE TABLE data (key TEXT, lang TEXT, value TEXT, PRIMARY KEY (lang, key))")
		Dim result As XLReaderResult = xl.Reader.ReadSheetByIndex(Xls, "", 0)
		
		Dim langs As List
		langs.Initialize
		For col = 0 To result.BottomRight.Col0Based
			Dim val As String = result.Get(xl.AddressZero(col, 0))
			If val = "key" Then Continue
			langs.Add(val)
		Next
		For row0 = 1 To result.BottomRight.Row0Based
			Dim key As String = result.Get(xl.AddressZero(0, row0))
			For col0 = 1 To result.BottomRight.Col0Based
				Dim lang As String = langs.Get(col0 - 1)
				sql.ExecNonQuery2("INSERT INTO data VALUES (?, ?, ?)", Array (key.ToLowerCase, lang, result.Get(xl.AddressZero(col0, row0))))
			Next
		Next
		sql.TransactionSuccessful
		LogMessage("Database created successfully!")
	Catch
		Log(LastException)
		sql.Rollback
		LogMessage("Error: " & LastException)
		ExitCode = 1
	End Try
	sql.Close
	If Not(ui) Then
		ExitApplication2(ExitCode)
	End If
End Sub

Sub LogMessage(msg As String)
	If ui Then
		xui.MsgboxAsync(msg, "")
	Else
		Log(msg)
	End If
End Sub

