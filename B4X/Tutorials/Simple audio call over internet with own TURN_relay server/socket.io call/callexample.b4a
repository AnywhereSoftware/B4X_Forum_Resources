Build1=Default,b4a.example
File1=Call.bal
File2=classic_ringtone.mp3
File3=Home.bal
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
Group=Default Group
Library1=core
Library10=phone
Library2=socketioclient
Library3=okhttputils2
Library4=audio
Library5=runtimepermissions
Library6=randomaccessfile
Library7=json
Library8=javaobject
Library9=reflection
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="28"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~'End of default text.~\n~SetApplicationAttribute(android:usesCleartextTraffic, "true")~\n~AddPermission(android.permission.RECORD_AUDIO)~\n~AddPermission(android.permission.WAKE_LOCK)
Module1=CallActivity
Module2=Starter
NumberOfFiles=3
NumberOfLibraries=10
NumberOfModules=2
Version=10.2
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Socket.IO call
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region
#BridgeLogger:true

Sub Process_Globals
	
End Sub

Sub Globals
	Public statusLbl As Label
	Private connectedList As ListView
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("Home")
End Sub

Sub Activity_PermissionResult (Permission As String, Result As Boolean)
	If Not(Result) Then
		Msgbox2Async("", "Cannot proceed without microphone access permission!", "OK", "", "", Null, False)
		Wait For Msgbox_Result (r As Int)
		ExitApplication
	End If
End Sub

Sub Activity_Resume
	update_user_list
	Starter.rp.CheckAndRequest(Starter.rp.PERMISSION_RECORD_AUDIO)
End Sub

Sub Activity_Pause (UserClosed As Boolean)
	If UserClosed Then Starter.socket.disconnect
End Sub

Sub update_status(status As String)
	statusLbl.text = "Status: "&status
End Sub

Sub update_user_list
	connectedList.Clear
	For Each uid As String In Starter.connectedUsers
		If uid <> Starter.myID Then connectedList.AddTwoLines2(uid,"Click to call",uid)
	Next
End Sub

Sub connectedList_ItemClick (Position As Int, Value As Object)
	CallActivity.callType = "out"
	CallActivity.peerId = Value
	StartActivity(CallActivity)
End Sub