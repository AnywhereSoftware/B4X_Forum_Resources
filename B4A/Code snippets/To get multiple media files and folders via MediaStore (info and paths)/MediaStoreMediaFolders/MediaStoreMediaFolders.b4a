Build1=Default,b4a.mediastoremediafolders
File1=icon_picture_gray.png
File2=Layout.bal
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
Library1=contentresolver
Library2=core
Library3=javaobject
Library4=runtimepermissions
Library5=sql
Library6=reflection
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="30"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~~\n~AddPermission(android.permission.WRITE_EXTERNAL_STORAGE) ' Allows an application to write to external storage.~\n~'AddPermission(android.permission.READ_EXTERNAL_STORAGE)~\n~~\n~'SetApplicationAttribute(android:requestLegacyExternalStorage, true)~\n~~\n~'AddPermission("android.permission.MANAGE_EXTERNAL_STORAGE")~\n~'~\n~'AddApplicationText(~\n~'  <provider~\n~'  android:name="android.support.v4.content.FileProvider"~\n~'  android:authorities="$PACKAGE$.provider"~\n~'  android:exported="false"~\n~'  android:grantUriPermissions="true">~\n~'  <meta-data~\n~'  android:name="android.support.FILE_PROVIDER_PATHS"~\n~'  android:resource="@xml/provider_paths"/>~\n~'  </provider>~\n~')~\n~'CreateResource(xml, provider_paths,~\n~'   <files-path name="name" path="shared" />~\n~')~\n~
Module1=Starter
NumberOfFiles=2
NumberOfLibraries=6
NumberOfModules=1
Version=11.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: MediaStoreMediaFolders
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
	#BridgeLogger: True
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	
	Private rp As RuntimePermissions
	Private lstRepresetativeImages As List		'For pictures
	Private lstRepresetativeImages2 As List		'For video thumbnails
End Sub

Sub Globals

	Private ivPicture As ImageView
	Private btnImageFolders As Button
	Private btnVideoFolders As Button
	Private edtFoldersResult As EditText
	Private edtFirstMediaResult As EditText
End Sub

Sub Activity_Create(FirstTime As Boolean)
	
	rp.CheckAndRequest(rp.PERMISSION_WRITE_EXTERNAL_STORAGE)
	Wait For Activity_PermissionResult (Permission As String, Result As Boolean)
	If Result = True Then
		Activity.LoadLayout("Layout")
'		Log(rp.GetSafeDirDefaultExternal(""))
		If FirstTime Then
			lstRepresetativeImages.Initialize
			lstRepresetativeImages2.Initialize
		End If
	End If
	
'	rp.CheckAndRequest(rp.PERMISSION_READ_EXTERNAL_STORAGE)
'	Wait For Activity_PermissionResult (Permission As String, Result As Boolean)
'	If Result = True Then
'		
'	End If
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub


Sub GetGalleryFolders(MediaType As String)
	
	Dim jo As JavaObject		' Create a JavaObject instance for MediaStore.Images.ImageColumns		'JavaObject library
	Dim MediaStore As JavaObject
	
	If MediaType = "image" Then
		jo.InitializeStatic("android.provider.MediaStore$Images$ImageColumns")		'Android inner class that defines the media table of contents columns for images stored on the device
	Else
		jo.InitializeStatic("android.provider.MediaStore$Video$VideoColumns")		'Android inner class that defines the media table of contents columns for videos stored on the device
	End If
    
	'The column names:
	Dim mime_type As String = jo.GetField("MIME_TYPE")	'mime_type
	Dim bucket_display_name As String = jo.GetField("BUCKET_DISPLAY_NAME")	'bucket_display_name
'	Dim data1 As String = jo.GetField("DATA")		'_data
'	Log(data1)
	Log(mime_type)
	Log(bucket_display_name)
	


	If MediaType = "image" Then
		MediaStore.InitializeStatic("android.provider.MediaStore.Images$Media")		'class in Android that provides access to the media table of contents of images in the device storage. This class is part of the Android MediaStore content framework		
	Else
		MediaStore.InitializeStatic("android.provider.MediaStore.Video$Media")
	End If

	
	
	Dim uri As Object = MediaStore.GetField("EXTERNAL_CONTENT_URI")		'content://media/external/images/media for images, content://media/external/video/media fo videos
	Dim projection() As String = Array As String(bucket_display_name, mime_type, "_data")
'	Log(uri)	
	
	If MediaType = "image" Then
		Dim selection As String = bucket_display_name & " IS NOT NULL AND " & mime_type & " LIKE 'image/%'"
	Else
		Dim selection As String = bucket_display_name & " IS NOT NULL AND " & mime_type & " LIKE 'video/%'"
	End If
	
	Dim sortOrder As String = bucket_display_name & " ASC"



	Dim cr, cr2 As ContentResolver
	cr.Initialize("")
	cr2.Initialize("")
		
	Dim cursor As Cursor		'SQL lib
	cursor = cr.Query(uri, projection, selection, Null, sortOrder)
	
	Dim folderList As List
	folderList.Initialize
	
	cursor.Position = 0
	Log("Number of columns =" & cursor.ColumnCount)
	Log("Number of rows = " & cursor.RowCount)
	
	If cursor <> Null And cursor.RowCount > 0 Then	'Checks to make sure the cursor is not null and has at least one result
		
		Try		
			For i = 0 To cursor.RowCount - 1
				cursor.Position = i
						
				Dim bucketName As String = cursor.GetString(bucket_display_name)		'Folder name
				Dim data As String = cursor.GetString("_data")							'Path
				
'				Log($"bucketName: ${bucketName} (${data})"$)		'bucketName: Camera (/storage/emulated/0/DCIM/Camera/20190805_182028.jpg)...
				
				
				'We filter to save only once the name of the folder:
				Dim pattern As String = "(.+)/.+"
				
				Dim m As Matcher = Regex.Matcher(pattern, data)
				Do While m.Find
					Dim folderPath As String = m.Group(1)
					If Not(folderList.IndexOf(folderPath) > -1) Then			'It only saves the first path contained in the folder
						folderList.Add(folderPath)
						LogColor($"Folder: ${bucketName} (${folderPath})"$, Colors.Blue)			'Folder: Camera (/storage/emulated/0/DCIM/Camera)
						edtFoldersResult.Text = edtFoldersResult.Text & $"Folder: ${bucketName} (${folderPath})"$ & CRLF & CRLF
						Sleep(0)		'To give the app time to write the line
						
						
						' Get the path of the first image in the folder by comparing the folder names:
						Dim cursor2 As Cursor = cr.Query(uri, Array As String("_id", "_data"), bucket_display_name & "= ?", Array As String(bucketName), sortOrder)
						If cursor2 <> Null And cursor2.RowCount > 0 Then
							cursor2.Position = 0
							Dim mediaPath As String = cursor2.GetString("_data")
							
							If MediaType = "image" Then
								Log($"First picture: ${mediaPath}"$)
								lstRepresetativeImages.Add(mediaPath)
							Else
								'Now it does it with bitmaps, but it should save them in files and make a list of their paths
								Log($"First video: ${mediaPath}"$)
								Private bmp As Bitmap = CreateVideoThumbnail(mediaPath)
								lstRepresetativeImages2.Add(bmp)
							End If
							
							edtFirstMediaResult.Text = edtFirstMediaResult.Text & $"First media: ${mediaPath}"$  & CRLF & CRLF
							Sleep(0)		'To give the app time to write the line
						End If
						cursor2.Close
										
					End If
				Loop
			Next
						
		Catch
			Log(LastException)
			
			cursor.Close
		End Try
		
		Log("lstRepresetativeImages Size = " & lstRepresetativeImages.Size)
		Log("lstRepresetativeImages2 Size = " & lstRepresetativeImages2.Size)
		
		If MediaType = "image" Then
			RepresetativeImages
		Else
			RepresetativeImages2
		End If
	End If
End Sub


Sub CheckForRepeatedChar(s As String, c As Char) As Boolean
	For i = 0 To s.Length - 1
		If s.CharAt(i) = c And s.SubString(i + 1).IndexOf(c) > -1 Then
			Return True
		End If
	Next
	Return False
End Sub


'Source: https://www.b4x.com/android/forum/threads/get-single-bitmap-frame-from-mp4.29553/#post-171643
Sub CreateVideoThumbnail(vidfile As String) As Bitmap
	
	Dim rfl As Reflector		'Reflection library
	Dim obj As Object
	Dim b As Bitmap
	 
	obj = rfl.CreateObject("android.media.MediaMetadataRetriever")
	rfl.Target = obj
	rfl.RunMethod2("setDataSource", vidfile, "java.lang.String")
	b = rfl.RunMethod3("getFrameAtTime", 0, "java.lang.long", 3, "java.lang.int")
	 
	Return b
End Sub


Private Sub RepresetativeImages
		
	For j = 0 To lstRepresetativeImages.Size - 1
		Private Path As String = lstRepresetativeImages.Get(j)
		
		'We get the directory and file name:
		Private LastIndex As String = Path.LastIndexOf("/")
		Private Directory As String = Path.SubString2(0, LastIndex)
		Private FileName As String = Path.SubString(LastIndex+1)
		
'		Log($"Path: ${Directory} (${FileName})"$)

		Sleep(800)	'So that you have time to see all the images. His thing is to put it on a grid
		
		
		'To avoid images as Path: /storage/emulated/0/documents (fb.bin.png)		with 2 dots
		If CheckForRepeatedChar(FileName, ".") = False Then
			Private bmp As Bitmap = LoadBitmapResize(Directory, FileName, ivPicture.Width, ivPicture.Height, True)
			ivPicture.Bitmap = bmp
		Else
			ivPicture.Bitmap = LoadBitmapResize(File.DirAssets, "icon_picture_gray.png", ivPicture.Width, ivPicture.Height, True)
		End If
	Next
	
	btnImageFolders.Enabled = True
	btnVideoFolders.Enabled = True
End Sub


Private Sub RepresetativeImages2
	
	For j = 0 To lstRepresetativeImages2.Size - 1
		Private bmp As Bitmap = lstRepresetativeImages2.Get(j)
		Sleep(800)
		ivPicture.Bitmap = bmp
	Next
	
	btnImageFolders.Enabled = True
	btnVideoFolders.Enabled = True
End Sub



'Controls:
Sub btnImageFolders_Click
	
	btnImageFolders.Enabled = False
	btnVideoFolders.Enabled = False
	lstRepresetativeImages.Clear
	edtFoldersResult.Text = ""
	edtFirstMediaResult.Text = ""
	ivPicture.Bitmap = Null
	Sleep(0)	'To give the app time to disable the buttons
	GetGalleryFolders("image")
End Sub


Private Sub btnVideoFolders_Click
	
	btnImageFolders.Enabled = False
	btnVideoFolders.Enabled = False
	lstRepresetativeImages2.Clear
	edtFoldersResult.Text = ""
	edtFirstMediaResult.Text = ""
	ivPicture.Bitmap = Null
	Sleep(0)
	GetGalleryFolders("video")
End Sub