Build1=Default,b4a.example
File1=smiley.gif
FileGroup1=New Group
Group=Default Group
IconFile=
Library1=core
Library2=javaobject
Library3=stringutils
Library4=xui
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="19"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~
Module1=Starter
Module2=URLUtils
NumberOfFiles=1
NumberOfLibraries=4
NumberOfModules=2
Version=7.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4A Example
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
   Dim xui As XUI
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.

End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	'Activity.LoadLayout("Layout1")
	
	' Put here a file name of one of files inside your device root external folder
	Dim DirRootExternalFileName As String = "This is my file   name that even contain some spaces.png"
	
	' ---------------- URI TEST ----------------
	
	' Should be the same result
	Log($"URI: <img src="${xui.FileUri(File.DirAssets, "smiley.gif")}" />"$)	
	Log($"URI: <img src="${URLUtils.FileURI(File.DirAssets, "smiley.gif")}" />"$)
	Log($"URI: <img src="${URLUtils.AssetFileURI("smiley.gif")}" />"$)
	
	Log(" ")
	
	' Should be the same result
	Log($"URI: <img src="${xui.FileUri(File.DirRootExternal, DirRootExternalFileName)}" />"$)
	Log($"URI: <img src="${URLUtils.FileURI(File.DirRootExternal, DirRootExternalFileName)}" />"$)
	
	'or:
	
	Log(" ")
	
	' Should be the same result
	Log($"URI: ${xui.FileUri(File.DirAssets, "smiley.gif")}"$)
	Log($"URI: ${URLUtils.FileURI(File.DirAssets, "smiley.gif")}"$)
	Log($"URI: ${URLUtils.AssetFileURI("smiley.gif")}"$)
	
	Log(" ")
	
	' Should be the same result
	Log($"URI: ${xui.FileUri(File.DirRootExternal, DirRootExternalFileName)}"$)
	Log($"URI: ${URLUtils.FileURI(File.DirRootExternal, DirRootExternalFileName)}"$)
	
	Log(" ")
	
	' ---------------- URL TEST ----------------
	
	' Should be the same result
	Log($"URL: <img src="${URLUtils.FileURL(File.DirAssets, "smiley.gif")}" />"$)
	Log($"URL: <img src="${URLUtils.AssetFileURL("smiley.gif")}" />"$)
	
	Log($"URL: <img src="${URLUtils.FileURL(File.DirRootExternal, DirRootExternalFileName)}" />"$)
	
	'or:
	
	Log(" ")
	
	' Should be the same result
	Log($"URL: ${URLUtils.FileURL(File.DirAssets, "smiley.gif")}"$)
	Log($"URL: ${URLUtils.AssetFileURL("smiley.gif")}"$)
	
	Log($"URL: ${URLUtils.FileURL(File.DirRootExternal, DirRootExternalFileName)}"$)
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub
