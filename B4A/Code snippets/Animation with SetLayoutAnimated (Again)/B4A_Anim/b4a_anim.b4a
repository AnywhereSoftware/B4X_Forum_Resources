Build1=Default,b4a.anim.example
File1=a.bal
FileGroup1=Default Group
Group=Default Group
IconFile=
Library1=core
Library2=xui views
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="28"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~'End of default text.~\n~
Module1=Starter
NumberOfFiles=1
NumberOfLibraries=2
NumberOfModules=1
Version=9.5
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4A Animation Example 
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals

End Sub

Sub Globals

	Private SwiftButton1 As SwiftButton
	Private xui As XUI
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("a")
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub SwiftButton1_Click
	Dim l1, l2, t1, t2 As Long
	Dim btn As SwiftButton = SwiftButton1
	
	l1 = btn.mBase.Left - 50dip
	l2 = btn.mBase.Left + btn.mBase.Width + 50dip
	t1 = btn.mBase.Top - 50dip
	t2 = btn.mBase.Top + btn.mBase.Height + 50dip
	
	For i = 1 To 8
		Animated(l1,l2,t1,t2)
	Next
	
End Sub

Sub Animated(l1 As Long, l2 As Long, t1 As Long, t2 As Long)
	Dim p As B4XView = xui.CreatePanel("")
	Activity.AddView(p, Rnd(l1,l2), Rnd(t1,t2), 30dip, 30dip)
	p.SendToBack 'this is optional
	p.SetColorAndBorder(xui.Color_ARGB(255, Rnd(0,255), Rnd(0,255), Rnd(0,255)), 0dip, xui.Color_White, Rnd(0,20))
	p.SetLayoutAnimated(1000, Rnd(l1,l2), Rnd(t1,t2), 5dip, 5dip)
	p.SetVisibleAnimated(1000, False)
	Sleep(1000)
	p.RemoveViewFromParent
End Sub


Sub Activity_Touch (Action As Int, X As Float, Y As Float)
	Dim l1, l2, t1, t2 As Long
	
	l1 = x - 100dip
	l2 = x + 100dip
	t1 = y - 100dip
	t2 = y + 100dip
	
	For i = 1 To 2
		Animated(l1,l2,t1,t2)
	Next
End Sub

