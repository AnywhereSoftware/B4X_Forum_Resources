<?xml version="1.0" encoding="utf-8"?>
<dictionary>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Audio</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Beep</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Audio</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Beep</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Beep</Keywords>
        <Imports>Audio</Imports>
        <Code>' # give Beep sound
' # Version 1, release
Public Sub Beep
	Beeper.Initialize(300,500)
	Beeper.beep
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Internet</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>OpenWebPage</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Internet</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>OpenWebPage</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Browser, Web, Internet</Keywords>
        <Imports>Phone</Imports>
        <Code>' # Version 1, release
Public Sub OpenWebPage(Url As String)
	Try
		' check if internet is available
		If IsConnected Then
			Dim p As PhoneIntents
			StartActivity(p.OpenBrowser(Url))
		Else
			xui.Msgbox2Async("No Internet!","Internet?","OK","","",Starter.icoerror)
		End If
	Catch
		xui.Msgbox2Async(LastException,"Modul1OpenWebPage","OK","","",Starter.icoerror)
	End Try
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Internet</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>isConnected</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Internet</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>isConnected</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Web, Internet, Netzwerk</Keywords>
        <Imports>Phone, Network</Imports>
        <Code>' # check if Internet connection is available
' # Version 1, release
Public Sub IsConnected As Boolean
	Dim P As Phone,server As ServerSocket
	Try
		server.Initialize(0, "")
		Log("mobile data state: " &amp; P.GetDataState &amp; _
		 	" wifi_on: " &amp; P.GetSettings("wifi_on") &amp; _
			" server ip: " &amp; server.GetMyIP &amp; CRLF &amp; _
			  "wifi ip: " &amp; server.GetMyWifiIP)
		If server.GetMyIP = "127.0.0.1" Then Return False  'this is the local host address
		If Not(P.GetDataState.EqualsIgnoreCase("CONNECTED")) And _
			server.GetMyWifiIP = "127.0.0.1" Then Return False
		Return True
	Catch
		xui.Msgbox2Async(LastException,"Modul1IsConnected","OK","","",Starter.icoerror)
		Return False
	End Try
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Basic Structure</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Basic Structure</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Structure</Keywords>
        <Imports />
        <Code>'###############################################
'
'-----------------------------------------------
' Name:			x
' Version:		
' State:		()WIP ()Release
' Depend Libs:	
' Depend Mod.:	
' Depend Class:	
' Layout:		
' Files:		
' Database:		
' Other:	
'-----------------------------------------------
' (C) TECHDOC G. Becker
'###############################################

#region --- Globals ---

#end region

'###############################################

#region --- Activity/Page Basics ---

#end region

'###############################################

#region --- ActionBar/Drawer/Menu/StatusBar ---

#end region

'###############################################

#region --- TabBar ---

#end region

'###############################################

#region --- View Click Events ---

#end region

#region --- View other Events ---

#end region

'###############################################

#region --- Helpers ---

#end region

'###############################################
`(C) TECDOC G. Becker
'###############################################


</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Basic Sub</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Basic Sub</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Sub</Keywords>
        <Imports>MsgDialog</Imports>
        <Code>' #
' Version: 1, WIP
Sub
	Try
	
	Catch
		Modul1.DialogMsg(LastException,sPName &amp; "Close","error","","","",True)
	end try
end sub
		
Needed: Modul1,icons error.png, attention.png, info.png, question.png</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Designer Property Boolean</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Designer Property Boolean</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>DesignerProperty</Keywords>
        <Imports />
        <Code>#DesignerProperty: Key: , DisplayName: . FieldType: Boolean, DefaultValue: false, Description:</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Designer Property String</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Designer Property String</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>DesignerProperty</Keywords>
        <Imports />
        <Code>#DesignerProperty: Key: , DisplayName: . FieldType: String, DefaultValue: , Description:</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Designer Property List</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Designer Property List</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>DesignerProperty</Keywords>
        <Imports />
        <Code>#DesignerProperty: Key: , DisplayName: . FieldType: String, List: a|B, DefaultValue: a, Description:</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Designer Property Int</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Designer Property Int</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>DesignerProperty</Keywords>
        <Imports />
        <Code>#DesignerProperty: Key: , DisplayName: . FieldType: Int, DefaultValue: 0, InRange: 0, MaxRange:5, Description:</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Designer Property Color</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Designer Property Color</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>DesignerProperty</Keywords>
        <Imports />
        <Code>#DesignerProperty: Key: , DisplayName: . FieldType: Color, DefaultValue: 0xFFFFFFFF, Description:</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Designer Event</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Designer Event</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>DesignerProperty</Keywords>
        <Imports />
        <Code>Event#

	' call parent sub/event
	If xui.SubExists(mCallBack,mEventName &amp; "_TabChanged",0) Then
		CallSub2(mCallBack,mEventName &amp; "_TabChanged",TabClicked)
	End If</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>B4XPage Drawer</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>B4XPage Drawer</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Drawer</Keywords>
        <Imports />
        <Code>		oRoot = Root1
		
		' set Page ID
		sPName = "MainPage"
		
		' Load Layout and INI Drawer
		oMyDrawer.Initialize(Me, "Drawer", oRoot, 400dip)
		oMyDrawer.CenterPanel.LoadLayout("MainLayout")
		oMyDrawer.LeftPanel.LoadLayout("MainMenu")
		Sleep(0)

	
' # close page and exit app
' # Version 1, release
Private Sub B4XPage_CloseRequest As ResumableSub
	Try
		If oMyDrawer.LeftOpen=True Then
			oMyDrawer.LeftOpen=False
			Return False
		Else
			Return True
		End If
	Catch
		Modul1.DialogMsg("Test",sPName &amp; "Close","error","","","",True)
		Return True
	End Try
End Sub

' # resize page
' # Version 1, release
Private Sub B4XPage_Resize (Width As Int, Height As Int)
	Try
		oMyDrawer.Resize(Width,Height)
	Catch
		Modul1.DialogMsg("Test",sPName &amp; "Close","error","","","",True)
	End Try
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Manifest o. ActionBar</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Manifest o. ActionBar</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Manifest</Keywords>
        <Imports />
        <Code>'This code will be applied to the manifest file during compilation.
'You do not need to modify it in most cases.
'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136
AddManifestText(
&lt;uses-sdk android:minSdkVersion="25" android:targetSdkVersion="29"/&gt;
&lt;supports-screens android:largeScreens="true" 
    android:normalScreens="true" 
    android:smallScreens="true" 
    android:anyDensity="true"/&gt;)
SetApplicationAttribute(android:icon, "@drawable/icon")
SetApplicationAttribute(android:label, "$LABEL$")
CreateResourceFromFile(Macro, Themes.LightTheme)
'End of default text.

'This is to hide standard action bar and use LightTheme
SetApplicationAttribute(android:theme, "@style/LightTheme")
CreateResource(values-v20, theme.xml,
&lt;resources&gt;
    &lt;style
        name="LightTheme" parent="@android:style/Theme.Material.NoActionBar.Fullscreen"&gt;
    &lt;/style&gt;
&lt;/resources&gt;
)
CreateResource(values-v14, theme.xml,
&lt;resources&gt;
    &lt;style
        name="LightTheme" parent="@android:style/Theme.Holo.NoActionBar.Fullscreen"&gt;
    &lt;/style&gt;
&lt;/resources&gt;
)
CreateResource(values, colors.xml,
&lt;resources&gt;
   &lt;color name="actionbar"&gt;#ff039be5&lt;/color&gt;
   &lt;color name="statusbar"&gt;#ff006db3&lt;/color&gt;
  &lt;color name="textColorPrimary"&gt;#ff000000&lt;/color&gt;
  &lt;color name="navigationBar"&gt;#ff006db3&lt;/color&gt;
&lt;/resources&gt;
)
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Android Version List</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Android Version List</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Android</Keywords>
        <Imports />
        <Code>Android Versionen
2016 API 25 7.0 Nougat
2017 API 26 8.0 Oreao
2018 API 28	9.0 Pie
2019 API 29 10.0 Adroid 10
2020 API 30 11.0 Android 11</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Dialog</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>DialogMsg</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Dialog</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>DialogMsg</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Dialog</Keywords>
        <Imports>Xui </Imports>
        <Code>' # show Msg-Dialog
' # sOK="" &gt; sOK="OK"
Public Sub DialogMsg(sMsg As String, sTitle As String, sCategory As String, _
		sOK As String, sNo As String, sCancel As String,blBeep As Boolean) As Int
	
	Dim bmIco As Bitmap
	
	Select sCategory.ToLowerCase
		Case "error"
			bmIco.Initialize(File.DirAssets,"error.png")
		Case "attention"
			bmIco.Initialize(File.DirAssets,"attention.png")
		Case "question"
			bmIco.Initialize(File.DirAssets,"question.png")
		Case Else
			bmIco.Initialize(File.DirAssets,"info.png")
	End Select

	If sOK = "" Then sOK ="OK"
	If blBeep Then Beep	
	
	Return xui.Msgbox2Async(sMsg,sTitle,sOK,sCancel,sNo,bmIco)

End Sub

Needed: Modul1,icons error.png, attention.png, info.png, question.png</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Database</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>DBUtils Check is in DB</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Database</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>DBUtils Check is in DB</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Database, SQL</Keywords>
        <Imports>DBUtils, SQL</Imports>
        <Code>' check if ac is in database
Dim mval As Map: mval.initialize
Dim oRSAC As ResultSet = Starter.oSQlight.ExecQuery("SELECT * FROM AC")
If oRSAC.IsInitialized Then
	If oRSAC.RowCount = 0 Then ' if not insert it
		mval.Put("ICAO",edtAC.Text)
		DBUtils.InsertMaps(Starter.oSQlight,"AC",mval)
	End If
End If
oRSAC.Close</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Database</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>DBUtils Select, Insert, Update</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Database</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>DBUtils Select, Insert, Update</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Database, SQL</Keywords>
        <Imports>DBUtils, SQL</Imports>
        <Code>' get records, update and insert
	Dim sSQL As String = "SELECT rowid FROM Flights WHERE "
	sSQL=sSQL &amp; "AC = '" &amp; edtAC.text &amp; "' AND "
	sSQL=sSQL &amp; "Cat = '" &amp; edtCategory.text &amp; "'"
		
	Dim oRS As ResultSet = Starter.oSQlight.ExecQuery(sSQL)
	
	' get view values
	mval.Clear
	mval.Put("AC",edtAC.Text)
	mval.Put("cat", edtCategory.Text)
	mval.Put("Task",RTFEditor1.EditorText)

	If oRS.IsInitialized Then
		If oRS.RowCount = 1 Then ' flight found &gt; update
			Dim mWhere As Map : mWhere.initialize
			mWhere.put("rowid",oRS.getlong("rowid"))
			DBUtils.UpdateRecord2(Starter.oSQlight,"Checklist",mval,mWhere)
		Else ' insert
			Dim lival As List:lival.Initialize
			lival.Add(mval)
			DBUtils.InsertMaps(Starter.oSQlight,"Checklist",lival)
		End If
	End If
	oRS.close</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Localization</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Localization with excel</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Localization</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Localization with excel</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Excel, Localization, Device, Locale</Keywords>
        <Imports>Excel, Reflection, XUI</Imports>
        <Code>' # setup localization strings Map
' 1. get locale String
' Example: de_DE, en_US
Dim r As Reflector
r.Target = r.RunStaticMethod("java.util.Locale", "getDefault", Null, Null)
slocDevice= r.RunMethod("toString")
' get the localized strings from Exel file

File.Delete(xui.DefaultFolder,"ePilotLocalization.xls") ' for testing comment out
File.Copy(File.DirAssets,"epilotLocalization.xls", _
	xui.DefaultFolder,"epilotLocalization.xls") ' copy to accessable folder (Android Documents)

' 2. get strings from Excel File localization.xls
If File.Exists(xui.DefaultFolder,"epilotLocalization.xls") Then
	oExcelWorkbook.Initialize(xui.DefaultFolder,"epilotLocalization.xls")
	oExcelSheet = oExcelWorkbook.GetSheet(0)
	
	Dim keys As List : keys.initialize
	Dim keys1 As List: keys1.initialize
	Dim key, value As String
	Dim iColIdx As Int = -1
	
	slocStrings.initialize
	
	' get column index of slocDevice as value column
	For col = 1 To oExcelSheet.ColumnsCount-1			
		If oExcelSheet.GetCellValue(col,0) = slocDevice Then 
			iColIdx = col
			Exit			
		End If
	Next
	If iColIdx = -1 Then iColIdx = 2 ' if locale not found set english as standard
	
	' set localized strings and identifier key to slicStrings
	For row = 1 To oExcelSheet.RowsCount-1
		key = oExcelSheet.GetCellValue(0,row)
		value = oExcelSheet.GetCellValue(iColIdx,row)
		slocStrings.Put(key,value)
	Next
	
	' close excel file
	oExcelWorkbook.Close
End If</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>File Transfer</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>File copy</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>File Transfer</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>File copy</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>File, copy, Memory, DirExternal, DirInternal, Documents</Keywords>
        <Imports>Xui</Imports>
        <Code>' File copy to Android\Documents
File.Copy(File.DirAssets,"epilotLocalization.xls", _
	xui.DefaultFolder,"epilotLocalization.xls")

' File copy to Android\Internal
File.Copy(File.DirAssets,"ABC",File.DirInternal,"ABC")

' File copy to external Memory Card
' give permission!
File.Copy(File.DirAssets,"ABC",File.DirExternal,"ABC")</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Database</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Open Database</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Database</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Open Database</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Database, SQL</Keywords>
        <Imports>DBUtils,SQL</Imports>
        <Code>' # copy Database to accessable directory and open database
File.Delete(File.DirInternal,"epilot.db") ' for debug uncomment for release
DBUtils.CopyDBFromAssets("epilot.db")
oSQlight.Initialize(DBUtils.GetDBFolder,"epilot.db",True)
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Graphic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Bottom Frameline -tint</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Graphic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Bottom Frameline -tint</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Frames, Tint, EditText, CheckBox, RadioButton</Keywords>
        <Imports>JavaObject, Xui</Imports>
        <Code>'# set tint of edittext views
' View= 	View to tint
' Active= 	color if focused
' Enabled= color if enabled but not focused
Public Sub TintEditText(View As View,Active As Int, Enabled As Int)
	Try
		Dim States(2,1) As Int
		States(0,0) = 16842908     'Active
		States(1,0) = 16842910    'Enabled
		Dim Color(2) As Int = Array As Int(Active,Enabled)
		Dim CSL As JavaObject
		CSL.InitializeNewInstance("android.content.res.ColorStateList",Array As Object(States,Color))
		Dim jo As JavaObject
		jo.InitializeStatic("android.support.v4.view.ViewCompat")
		jo.RunMethod("setBackgroundTintList", Array(View, CSL))
	Catch
		xui.MsgboxAsync(LastException,"Tint EditText")
	End Try
End Sub

'# set tint of checkbox views
' View= 	View to tint
' Active= 	color if focused
' Enabled= color if enabled but not focused
Public Sub TintCheckRadio(View As View, Disabled As Int, Enabled As Int)
	Try
		Dim States(2,1) As Int
		Dim sd As StateListDrawable 'ignore
		States(0, 0) = sd.State_Enabled
		States(1, 0) = sd.State_Disabled
		Dim Color(2) As Int = Array As Int(Enabled, Disabled)
		Dim CSL As JavaObject
		CSL.InitializeNewInstance("android.content.res.ColorStateList",Array(States,Color))
		Dim jo As JavaObject
		jo.InitializeStatic("android.support.v4.widget.CompoundButtonCompat")
		jo.RunMethod("setButtonTintList", Array(View, CSL))
	Catch
		xui.MsgboxAsync(LastException,"Tint CheckRadioBox")
	End Try
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Keyboard</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>IME</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Keyboard</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>IME</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>oIME, Keyboard</Keywords>
        <Imports>IME</Imports>
        <Code>Dim oIME as IME
oIME.Initialize("")

oIme.HideKeyboard</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Text</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Text Align</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Text</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Text Align</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Align, Center, Text</Keywords>
        <Imports />
        <Code>label.Gravity= Bit.Or(Gravity.CENTER, Gravity.CENTER_HORIZONTAL)

</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Graphic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Rotate Bitmap</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Graphic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Rotate Bitmap</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Bitmap, Rotate</Keywords>
        <Imports>B4XCanvas, Xui, B4XBitmap</Imports>
        <Code>Sub RotateBitmap (bmp As B4XBitmap, Degrees As Float) As B4XBitmap
   Dim cvs As B4XCanvas
   Dim panel As B4XView = xui.CreatePanel("")
   panel.SetLayoutAnimated(0, 0, 0, bmp.Width, bmp.Height)
   cvs.Initialize(panel)
   cvs.DrawBitmapRotated(bmp, cvs.TargetRect, Degrees)
   cvs.Invalidate
   Dim b As B4XBitmap = cvs.CreateBitmap
   cvs.Release
   Return b
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Dialog</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Custom Toast</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Dialog</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Custom Toast</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Toast, Dialog</Keywords>
        <Imports>JavaObject</Imports>
        <Code>Sub ShowCustomToast(Text As Object, LongDuration As Boolean, BackgroundColor As Int)
   Dim ctxt As JavaObject
   ctxt.InitializeContext
   Dim duration As Int
   If LongDuration Then duration = 1 Else duration = 0
   Dim toast As JavaObject
   toast = toast.InitializeStatic("android.widget.Toast").RunMethod("makeText", Array(ctxt, Text, duration))
   Dim v As View = toast.RunMethod("getView", Null)
  Dim cd As ColorDrawable
  cd.Initialize(BackgroundColor, 20dip)
  v.Background = cd
   'uncomment to show toast in the center:
'   toast.RunMethod("setGravity", Array( _
'       Bit.Or(Gravity.CENTER_HORIZONTAL, Gravity.CENTER_VERTICAL), 0, 0))
   toast.RunMethod("show", Null)
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Graphic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>IconToButton</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Graphic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>IconToButton</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Button, Icon, Material</Keywords>
        <Imports>CSBuilder</Imports>
        <Code>'prefixes the given text with the given Material icon (with a space between).
'relativeSize is usually around 1.2 for 18-point text, smaller for larger text.
'shiftDown is usually around 5 (non-dip) for 18-point text, larger for larger text
Sub addIconToButton(buttonArg As Button, materialIconCode As Int, relativeSize As Float, shiftDown As Int)
   Dim cs1, cs2 As CSBuilder
   cs1.Initialize.Typeface(Typeface.MATERIALICONS)
   cs1.Size(buttonArg.TextSize).RelativeSize(relativeSize)
   cs1.VerticalAlign(DipToCurrent(shiftDown))
   cs1.Append(Chr(materialIconCode)).PopAll
   cs1.Typeface(Typeface.DEFAULT).Append(" " &amp; buttonArg.Text).PopAll
   cs2.Initialize.VerticalAlign(-DipToCurrent(shiftDown - 2)).Append(cs1).PopAll
   buttonArg.Text = cs2
End Sub


ddIconToButton(saveButton, 0xE5CA, 1.2, 5)     'checkmark icon</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Graphic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Material Icon to BMP</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Graphic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Material Icon to BMP</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Material, Icon, Awesome, BitmaP</Keywords>
        <Imports>Canvas</Imports>
        <Code>Sub FontBit (icon As String, font_size As Float, color As Int, awesome As Boolean) As Bitmap
    If color = 0 Then color = Colors.White
    Dim typ As Typeface = Typeface.MATERIALICONS
    If awesome Then typ = Typeface.FONTAWESOME
    Dim bmp As Bitmap
    bmp.InitializeMutable(32dip, 32dip)
    Dim cvs As Canvas
    cvs.Initialize2(bmp)
    Dim h As Double
    If Not(awesome) Then
        h = cvs.MeasureStringHeight(icon, typ, font_size) + 10dip
    Else
        h = cvs.MeasureStringHeight(icon, typ, font_size)
    End If
    cvs.DrawText(icon, bmp.Width / 2, bmp.Height / 2 + h / 2, typ, font_size, color, "CENTER")
    Return bmp
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Geo</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Measure Distance Lat/long</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Geo</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Measure Distance Lat/long</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Distance, GPS, Geo</Keywords>
        <Imports />
        <Code>'
' Return Distance between two points
'
Sub distance(lat1 As Double, lon1 As Double, lat2 As Double, lon2 As Double) As Double
    Dim theta As Double
    Dim dist As Double
   
    theta = lon1 - lon2
    dist = Sin(deg2rad(lat1)) * Sin(deg2rad(lat2)) + Cos(deg2rad(lat1)) * Cos(deg2rad(lat2)) * Cos(deg2rad(theta))
    dist = ACos(dist)
    dist = rad2deg(dist)
    Return dist * 60 * 1.1515
End Sub

'
'  This function converts decimal degrees to radians
'
Sub deg2rad(Deg As Double) As Double
    Dim pi As Double= 3.14159265358979
    Return Deg * pi / 180
End Sub

'
'  This function converts radians to decimal degrees
'
Sub rad2deg(Rad As Double) As Double
    Dim pi As Double= 3.14159265358979
    Return Rad * 180 / pi
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Graphic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>SetScrollBarColor</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Graphic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>SetScrollBarColor</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Scroll, Color</Keywords>
        <Imports>Reflection</Imports>
        <Code>Sub SetScrollbarColor(sv As ScrollView, clr As Int)
   Dim r As Reflector
   r.Target = sv
   r.Target = r.GetField("mScrollCache")
   r.Target = r.GetField("scrollBar")
   Dim cd As ColorDrawable
   cd.Initialize(clr, 5dip)
   r.RunMethod4("setVerticalThumbDrawable", Array(cd), Array As String("android.graphics.drawable.Drawable"))
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Add Permission</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Add Permission</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Permission, Android, Manifest</Keywords>
        <Imports />
        <Code>Description: A list of all permissions usable in Android (B4A). Every permission is one line of the following list. To use this permission in your app you need to add the line you need in the B4A-Manifest-Editor

AddPermission(android.permission.BODY_SENSORS) ' Required for Google Fit´s Heartratesensor
AddPermission(android.permission.ACCESS_CHECKIN_PROPERTIES) ' Allows read/write access to the "properties" table in the checkin database, to change values that get uploaded.
AddPermission(android.permission.ACCESS_COARSE_LOCATION) ' Allows an app to access approximate location derived from network location sources such as cell towers and Wi-Fi.
AddPermission(android.permission.ACCESS_FINE_LOCATION) ' Allows an app to access precise location from location sources such as GPS, cell towers, and Wi-Fi.
AddPermission(android.permission.ACCESS_LOCATION_EXTRA_COMMANDS) ' Allows an application to access extra location provider commands.
AddPermission(android.permission.ACCESS_MOCK_LOCATION) ' Allows an application to create mock location providers for testing.
AddPermission(android.permission.ACCESS_NETWORK_STATE) ' Allows applications to access information about networks.
AddPermission(android.permission.ACCESS_SURFACE_FLINGER) ' Allows an application to use SurfaceFlinger's low level features.
AddPermission(android.permission.ACCESS_WIFI_STATE) ' Allows applications to access information about Wi-Fi networks.
AddPermission(android.permission.ACCOUNT_MANAGER) ' Allows applications to call into AccountAuthenticators.
AddPermission(android.permission.ADD_VOICEMAIL) ' Allows an application to add voicemails into the system.
AddPermission(android.permission.AUTHENTICATE_ACCOUNTS) ' Allows an application to act as an AccountAuthenticator for the AccountManager.
AddPermission(android.permission.BATTERY_STATS) ' Allows an application to collect battery statistics.
AddPermission(android.permission.BIND_ACCESSIBILITY_SERVICE) ' Must be required by an AccessibilityService, to ensure that only the system can bind to it.
AddPermission(android.permission.BIND_APPWIDGET) ' Allows an application to tell the AppWidget service which application can access AppWidget's data.
AddPermission(android.permission.BIND_DEVICE_ADMIN) ' Must be required by device administration receiver, to ensure that only the system can interact with it.
AddPermission(android.permission.BIND_INPUT_METHOD) ' Must be required by an InputMethodService, to ensure that only the system can bind to it.
AddPermission(android.permission.BIND_NFC_SERVICE) ' Must be required by a HostApduService or OffHostApduService to ensure that only the system can bind to it.
AddPermission(android.permission.BIND_NOTIFICATION_LISTENER_SERVICE) ' Must be required by an NotificationListenerService, to ensure that only the system can bind to it.
AddPermission(android.permission.BIND_PRINT_SERVICE) ' Must be required by a PrintService, to ensure that only the system can bind to it.
AddPermission(android.permission.BIND_REMOTEVIEWS) ' Must be required by a RemoteViewsService, to ensure that only the system can bind to it.
AddPermission(android.permission.BIND_TEXT_SERVICE) ' Must be required by a TextService (e.g.
AddPermission(android.permission.BIND_VPN_SERVICE) ' Must be required by a VpnService, to ensure that only the system can bind to it.
AddPermission(android.permission.BIND_WALLPAPER) ' Must be required by a WallpaperService, to ensure that only the system can bind to it.
AddPermission(android.permission.BLUETOOTH) ' Allows applications to connect to paired bluetooth devices.
AddPermission(android.permission.BLUETOOTH_ADMIN) ' Allows applications to discover and pair bluetooth devices.
AddPermission(android.permission.BLUETOOTH_PRIVILEGED) ' Allows applications to pair bluetooth devices without user interaction.
AddPermission(android.permission.BRICK) ' Required to be able to disable the device (very dangerous!).
AddPermission(android.permission.BROADCAST_PACKAGE_REMOVED) ' Allows an application to broadcast a notification that an application package has been removed.
AddPermission(android.permission.BROADCAST_SMS) ' Allows an application to broadcast an SMS receipt notification.
AddPermission(android.permission.BROADCAST_STICKY) ' Allows an application to broadcast sticky intents.
AddPermission(android.permission.BROADCAST_WAP_PUSH) ' Allows an application to broadcast a WAP PUSH receipt notification.
AddPermission(android.permission.CALL_PHONE) ' Allows an application to initiate a phone call without going through the Dialer user interface for the user to confirm the call being placed.
AddPermission(android.permission.CALL_PRIVILEGED) ' Allows an application to call any phone number, including emergency numbers, without going through the Dialer user interface for the user to confirm the call being placed.
AddPermission(android.permission.CAMERA) ' Required to be able to access the camera device.
AddPermission(android.permission.CAPTURE_AUDIO_OUTPUT) ' Allows an application to capture audio output.
AddPermission(android.permission.CAPTURE_SECURE_VIDEO_OUTPUT) ' Allows an application to capture secure video output.
AddPermission(android.permission.CAPTURE_VIDEO_OUTPUT) ' Allows an application to capture video output.
AddPermission(android.permission.CHANGE_COMPONENT_ENABLED_STATE) ' Allows an application to change whether an application component (other than its own) is enabled or not.
AddPermission(android.permission.CHANGE_CONFIGURATION) ' Allows an application to modify the current configuration, such as locale.
AddPermission(android.permission.CHANGE_NETWORK_STATE) ' Allows applications to change network connectivity state.
AddPermission(android.permission.CHANGE_WIFI_MULTICAST_STATE) ' Allows applications to enter Wi-Fi Multicast mode.
AddPermission(android.permission.CHANGE_WIFI_STATE) ' Allows applications to change Wi-Fi connectivity state.
AddPermission(android.permission.CLEAR_APP_CACHE) ' Allows an application to clear the caches of all installed applications on the device.
AddPermission(android.permission.CLEAR_APP_USER_DATA) ' Allows an application to clear user data.
AddPermission(android.permission.CONTROL_LOCATION_UPDATES) ' Allows enabling/disabling location update notifications from the radio.
AddPermission(android.permission.DELETE_CACHE_FILES) ' Allows an application to delete cache files.
AddPermission(android.permission.DELETE_PACKAGES) ' Allows an application to delete packages.
AddPermission(android.permission.DEVICE_POWER) ' Allows low-level access to power management.
AddPermission(android.permission.DIAGNOSTIC) ' Allows applications to RW to diagnostic resources.
AddPermission(android.permission.DISABLE_KEYGUARD) ' Allows applications to disable the keyguard.
AddPermission(android.permission.DUMP) ' Allows an application to retrieve state dump information from system services.
AddPermission(android.permission.EXPAND_STATUS_BAR) ' Allows an application to expand or collapse the status bar.
AddPermission(android.permission.FACTORY_TEST) ' Run as a manufacturer test application, running as the root user.
AddPermission(android.permission.FLASHLIGHT) ' Allows access to the flashlight.
AddPermission(android.permission.FORCE_BACK) ' Allows an application to force a BACK operation on whatever is the top activity.
AddPermission(android.permission.GET_ACCOUNTS) ' Allows access to the list of accounts in the Accounts Service.
AddPermission(android.permission.GET_PACKAGE_SIZE) ' Allows an application to find out the space used by any package.
AddPermission(android.permission.GET_TASKS) ' Allows an application to get information about the currently or recently running tasks.
AddPermission(android.permission.GET_TOP_ACTIVITY_INFO) ' Allows an application to retrieve private information about the current top activity, such as any assist context it can provide.
AddPermission(android.permission.GLOBAL_SEARCH) ' This permission can be used on content providers to allow the global search system to access their data.
AddPermission(android.permission.HARDWARE_TEST) ' Allows access to hardware peripherals.
AddPermission(android.permission.INJECT_EVENTS) ' Allows an application to inject user events (keys, touch, trackball) into the event stream and deliver them to ANY window.
AddPermission(android.permission.INSTALL_LOCATION_PROVIDER) ' Allows an application to install a location provider into the Location Manager.
AddPermission(android.permission.INSTALL_PACKAGES) ' Allows an application to install packages.
AddPermission(android.permission.INSTALL_SHORTCUT) ' Allows an application to install a shortcut in Launcher.
AddPermission(android.permission.INTERNAL_SYSTEM_WINDOW) ' Allows an application to open windows that are for use by parts of the system user interface.
AddPermission(android.permission.INTERNET) ' Allows applications to open network sockets.
AddPermission(android.permission.KILL_BACKGROUND_PROCESSES) ' Allows an application to call killBackgroundProcesses(String).
AddPermission(android.permission.LOCATION_HARDWARE) ' Allows an application to use location features in hardware, such as the geofencing api.
AddPermission(android.permission.MANAGE_ACCOUNTS) ' Allows an application to manage the list of accounts in the AccountManager.
AddPermission(android.permission.MANAGE_APP_TOKENS) ' Allows an application to manage (create, destroy, Z-order) application tokens in the window manager.
AddPermission(android.permission.MANAGE_DOCUMENTS) ' Allows an application to manage access to documents, usually as part of a document picker.
AddPermission(android.permission.MASTER_CLEAR) ' Not for use by third-party applications.
AddPermission(android.permission.MEDIA_CONTENT_CONTROL) ' Allows an application to know what content is playing and control its playback.
AddPermission(android.permission.MODIFY_AUDIO_SETTINGS) ' Allows an application to modify global audio settings.
AddPermission(android.permission.MODIFY_PHONE_STATE) ' Allows modification of the telephony state - power on, mmi, etc.
AddPermission(android.permission.MOUNT_FORMAT_FILESYSTEMS) ' Allows formatting file systems for removable storage.
AddPermission(android.permission.MOUNT_UNMOUNT_FILESYSTEMS) ' Allows mounting and unmounting file systems for removable storage.
AddPermission(android.permission.NFC) ' Allows applications to perform I/O operations over NFC.
AddPermission(android.permission.PERSISTENT_ACTIVITY) ' This constant was deprecated in API level 9. This functionality will be removed in the future; please do not use. Allow an application to make its activities persistent.
AddPermission(android.permission.PROCESS_OUTGOING_CALLS) ' Allows an application to see the number being dialed during an outgoing call with the option to redirect the call to a different number or abort the call altogether.
AddPermission(android.permission.READ_CALENDAR) ' Allows an application to read the user's calendar data.
AddPermission(android.permission.READ_CALL_LOG) ' Allows an application to read the user's call log.
AddPermission(android.permission.READ_CONTACTS) ' Allows an application to read the user's contacts data.
AddPermission(android.permission.READ_EXTERNAL_STORAGE) ' Allows an application to read from external storage.
AddPermission(android.permission.READ_FRAME_BUFFER) ' Allows an application to take screen shots and more generally get access to the frame buffer data.
AddPermission(android.permission.READ_HISTORY_BOOKMARKS) ' Allows an application to read (but not write) the user's browsing history and bookmarks.
AddPermission(android.permission.READ_INPUT_STATE) ' This constant was deprecated in API level 16. The API that used this permission has been removed.
AddPermission(android.permission.READ_LOGS) ' Allows an application to read the low-level system log files.
AddPermission(android.permission.READ_PHONE_STATE) ' Allows read only access to phone state.
AddPermission(android.permission.READ_PROFILE) ' Allows an application to read the user's personal profile data.
AddPermission(android.permission.READ_SMS) ' Allows an application to read SMS messages.
AddPermission(android.permission.READ_SOCIAL_STREAM) ' Allows an application to read from the user's social stream.
AddPermission(android.permission.READ_SYNC_SETTINGS) ' Allows applications to read the sync settings.
AddPermission(android.permission.READ_SYNC_STATS) ' Allows applications to read the sync stats.
AddPermission(android.permission.READ_USER_DICTIONARY) ' Allows an application to read the user dictionary.
AddPermission(android.permission.REBOOT) ' Required to be able to reboot the device.
AddPermission(android.permission.RECEIVE_BOOT_COMPLETED) ' Allows an application to receive the ACTION_BOOT_COMPLETED that is broadcast after the system finishes booting.
AddPermission(android.permission.RECEIVE_MMS) ' Allows an application to monitor incoming MMS messages, to record or perform processing on them.
AddPermission(android.permission.RECEIVE_SMS) ' Allows an application to monitor incoming SMS messages, to record or perform processing on them.
AddPermission(android.permission.RECEIVE_WAP_PUSH) ' Allows an application to monitor incoming WAP push messages.
AddPermission(android.permission.RECORD_AUDIO) ' Allows an application to record audio.
AddPermission(android.permission.REORDER_TASKS) ' Allows an application to change the Z-order of tasks.
AddPermission(android.permission.RESTART_PACKAGES) ' This constant was deprecated in API level 8. The restartPackage(String) API is no longer supported.
AddPermission(android.permission.SEND_RESPOND_VIA_MESSAGE) ' Allows an application (Phone) to send a request to other applications to handle the respond-via-message action during incoming calls.
AddPermission(android.permission.SEND_SMS) ' Allows an application to send SMS messages.
AddPermission(android.permission.SET_ACTIVITY_WATCHER) ' Allows an application to watch and control how activities are started globally in the system.
AddPermission(android.permission.SET_ALARM) ' Allows an application to broadcast an Intent to set an alarm for the user.
AddPermission(android.permission.SET_ALWAYS_FINISH) ' Allows an application to control whether activities are immediately finished when put in the background.
AddPermission(android.permission.SET_ANIMATION_SCALE) ' Modify the global animation scaling factor.
AddPermission(android.permission.SET_DEBUG_APP) ' Configure an application for debugging.
AddPermission(android.permission.SET_ORIENTATION) ' Allows low-level access to setting the orientation (actually rotation) of the screen.
AddPermission(android.permission.SET_POINTER_SPEED) ' Allows low-level access to setting the pointer speed.
AddPermission(android.permission.SET_PREFERRED_APPLICATIONS) ' This constant was deprecated in API level 7. No longer useful, see addPackageToPreferred(String) for details.
AddPermission(android.permission.SET_PROCESS_LIMIT) ' Allows an application to set the maximum number of (not needed) application processes that can be running.
AddPermission(android.permission.SET_TIME) ' Allows applications to set the system time.
AddPermission(android.permission.SET_TIME_ZONE) ' Allows applications to set the system time zone.
AddPermission(android.permission.SET_WALLPAPER) ' Allows applications to set the wallpaper.
AddPermission(android.permission.SET_WALLPAPER_HINTS) ' Allows applications to set the wallpaper hints.
AddPermission(android.permission.SIGNAL_PERSISTENT_PROCESSES) ' Allow an application to request that a signal be sent to all persistent processes.
AddPermission(android.permission.STATUS_BAR) ' Allows an application to open, close, or disable the status bar and its icons.
AddPermission(android.permission.SUBSCRIBED_FEEDS_READ) ' Allows an application to allow read access the subscribed feeds ContentProvider.
AddPermission(android.permission.SUBSCRIBED_FEEDS_WRITE) ' Allows an application to allow write access the subscribed feeds ContentProvider.
AddPermission(android.permission.SYSTEM_ALERT_WINDOW) ' Allows an application to open windows using the type TYPE_SYSTEM_ALERT, shown on top of all other applications.
AddPermission(android.permission.TRANSMIT_IR ALLOWS) ' Allows using the device's IR transmitter, if available.
AddPermission(android.permission.UNINSTALL_SHORTCUT) ' Allows an application to uninstall a shortcut in Launcher.
AddPermission(android.permission.UPDATE_DEVICE_STATS) ' Allows an application to update device statistics.
AddPermission(android.permission.USE_CREDENTIALS) ' Allows an application to request authtokens from the AccountManager.
AddPermission(android.permission.USE_SIP) ' Allows an application to use SIP service.
AddPermission(android.permission.VIBRATE) ' Allows access to the vibrator.
AddPermission(android.permission.WAKE_LOCK) ' Allows using PowerManager WakeLocks to keep processor from sleeping or screen from dimming.
AddPermission(android.permission.WRITE_APN_SETTINGS) ' Allows applications to write the apn settings.
AddPermission(android.permission.WRITE_CALENDAR) ' Allows an application to write (but not read) the user's calendar data.
AddPermission(android.permission.WRITE_CALL_LOG) ' Allows an application to write (but not read) the user's contacts data.
AddPermission(android.permission.WRITE_CONTACTS) ' Allows an application to write (but not read) the user's contacts data.
AddPermission(android.permission.WRITE_EXTERNAL_STORAGE) ' Allows an application to write to external storage.
AddPermission(android.permission.WRITE_GSERVICES) ' Allows an application to modify the Google service map.
AddPermission(android.permission.WRITE_HISTORY_BOOKMARKS) ' Allows an application to write (but not read) the user's browsing history and bookmarks.
AddPermission(android.permission.WRITE_PROFILE) ' Allows an application to write (but not read) the user's personal profile data.
AddPermission(android.permission.WRITE_SECURE_SETTINGS) ' Allows an application to read or write the secure system settings.
AddPermission(android.permission.WRITE_SETTINGS) ' Allows an application to read or write the system settings.
AddPermission(android.permission.WRITE_SMS) ' Allows an application to write SMS messages.
AddPermission(android.permission.WRITE_SOCIAL_STREAM) ' Allows an application to write (but not read) the user's social stream data.
AddPermission(android.permission.WRITE_SYNC_SETTINGS) ' Allows applications to write the sync settings.
AddPermission(android.permission.WRITE_USER_DICTIONARY) ' Allows an application to write to the user dictionary.
AddPermission(android.permission.BIND_DREAM_SERVICE) ' When targeting API level 21 and higher, this permission is required by a Daydream service, to ensure that only the system can bind to it.
AddPermission(com.android.vending.CHECK_LICENSE) ' Allows an application to check Play store licensing.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Database</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>GetTableInfo</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Database</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>GetTableInfo</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>SQlight. Table, Databaser</Keywords>
        <Imports>SQL</Imports>
        <Code>Sub GetTablePragmas(DBDir As String, DBName As String) As List
    Dim SQLP As SQL
    #if B4J
         SQLP.InitializeSQLite(DBDir, DBName , True)
    #Else
         SQLP.Initialize(DBDir, DBName , True)
    #End If
    Dim ReturnList As List
    ReturnList.Initialize
    Private DBQuery, TBQuery As String
    Dim TBName, ColumnName, ColumnType As String
    Log("DB-Name: " &amp; DBName)
    DBQuery = "Select name FROM sqlite_master WHERE Type='table' ORDER BY name"
    Dim RSDB As ResultSet=SQLP.ExecQuery(DBQuery)
    Do While RSDB.NextRow
        TBName=RSDB.GetString2(0)
        Log("   Table: " &amp; TBName)
        If TBName.StartsWith("SQlite") = False Then
            Dim TBMap As Map
            TBMap.Initialize
            TBMap.Put("tbname",TBName)
            TBQuery = "PRAGMA table_info(" &amp; TBName &amp; ")"
            Dim TBRS As ResultSet=SQLP.ExecQuery(TBQuery)
            Dim ColumnParmsMap As Map
            ColumnParmsMap.Initialize
            Do While TBRS.NextRow
                For i=0 To TBRS.ColumnCount-1
                    Log ("     " &amp; i &amp; ": " &amp;  TBRS.GetColumnName(i) &amp; "-&gt;" &amp; TBRS.GetString2(i))
                    ColumnParmsMap.Put(TBRS.GetColumnName(i), TBRS.GetString2(i))
                Next
            Loop
            TBMap.Put("columnparms",ColumnParmsMap)
            ReturnList.Add(TBMap)
            TBRS.Close
        End If
    Loop
    RSDB.Close
    SQLP.Close
    Return ReturnList
End Sub


Dim TableInfo As List
    TableInfo.Initialize
    TableInfo=GetTablePragmas(Dir,DbName)</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Graphic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Change Radio Button</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Graphic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Change Radio Button</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Radio Button</Keywords>
        <Imports>JavaObject,Canvas</Imports>
        <Code>'Change the size and color of a RadioButton graphic.
'Pass the required colors for the attributes, size should be at most the smallest side of the view.
Sub SetRadioButtonDrawable(RBtn As RadioButton,CircleColor As Int,Size As Int,SelectedColor As Int,DisabledColor As Int,StrokeWidth As Int)
    Dim Enabled,Selected,Disabled,DisabledSelected As BitmapDrawable
    Dim EnabledJO,SelectedJO,DisabledJO,DisabledSelectedJO As JavaObject
    Dim SLD As StateListDrawable
    SLD.Initialize

    'Changing the padding also determines how far away the text is from the drawing
    Dim Padding As Int = Size / 100 * 50
    Dim Radius As Int = (Size - Padding) / 2
    Dim InnerPadding As Int = Max(1Dip,1)

    Dim BMEnabled,BMSelected,BMDisabled,BMDisabledSelected As Bitmap
    BMEnabled.InitializeMutable(Size,Size)
    BMSelected.InitializeMutable(Size,Size)
    BMDisabled.InitializeMutable(Size,Size)
    BMDisabledSelected.InitializeMutable(Size,Size)

    'Draw Enabled State
    Dim CNV As Canvas
    CNV.Initialize2(BMEnabled)
    CNV.DrawCircle(Radius + InnerPadding,Size / 2,Radius,CircleColor,False,StrokeWidth)
    Enabled.Initialize(BMEnabled)
    EnabledJO = Enabled
    EnabledJO.RunMethod("setAntiAlias",Array As Object(True))
    Enabled.Gravity = Gravity.left

    'Draw Selected state
    Dim CNV1 As Canvas
    CNV1.Initialize2(BMSelected)
    CNV1.DrawCircle(Radius + InnerPadding,Size / 2,Radius,CircleColor,False,StrokeWidth)
    'Draw the Selected state centered in the box
    CNV1.DrawCircle(Radius + InnerPadding,Size / 2,(Radius - InnerPadding) / 2,SelectedColor,True,StrokeWidth)
    Selected.Initialize(BMSelected)
    SelectedJO = Selected
    SelectedJO.RunMethod("setAntiAlias",Array As Object(True))
    Selected.Gravity = Gravity.left

    'Draw Disabled Selected State
    Dim CNV2 As Canvas
    CNV2.Initialize2(BMDisabledSelected)
    CNV2.DrawCircle(Radius + InnerPadding,Size / 2,Radius,DisabledColor,False,StrokeWidth)
    'Draw the Disabled Selected state centered in the box
    CNV2.DrawCircle(Radius + InnerPadding,Size / 2,(Radius - InnerPadding) / 2,DisabledColor,True,StrokeWidth)
    DisabledSelected.Initialize(BMDisabledSelected)
    DisabledSelectedJO = DisabledSelected
    DisabledSelectedJO.RunMethod("setAntiAlias",Array As Object(True))
    DisabledSelected.Gravity = Gravity.left

    'Draw disabled State
    Dim CNV3 As Canvas
    CNV3.Initialize2(BMDisabled)
    CNV3.DrawCircle(Radius + InnerPadding,Size / 2,Radius,DisabledColor,False,StrokeWidth)
    Disabled.Initialize(BMDisabled)
    DisabledJO = Disabled
    DisabledJO.RunMethod("setAntiAlias",Array As Object(True))
    Disabled.Gravity = Gravity.left

    'Add To the StateList Drawable
    SLD.AddState2(Array As Int(SLD.State_Disabled,SLD.State_Checked),DisabledSelected)
    SLD.AddState(SLD.State_Disabled,Disabled)
    SLD.AddState(SLD.State_Checked,Selected)
    SLD.AddState(SLD.State_Enabled,Enabled)
    SLD.AddCatchAllState(Enabled)
    'Add SLD To the CheckBox
    Dim JO As JavaObject = RBtn
    JO.RunMethod("setButtonDrawable",Array As Object(SLD))
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Graphic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Draw Border</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Graphic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Draw Border</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Border</Keywords>
        <Imports />
        <Code>    'Draws a border around all the given Buttons, Spinners and Imageviews on a Panel
    'PanelName = Panel to process
    'Border = border width, i.e. 3dip or 1%x
    'BorderColor = color of the border.  This is actually the color of the panel that is being used
    'Exclusions = a text list of views to not process using the Tag value i.e. "btnStart,btnIgnore".  All other views will be processed
    Sub Draw_Borders(PanelName As Panel, Border As Int, BorderColor As Int, Exclusions As String)
     
          Dim matcher1 As Matcher
        
          For Each v As View In PanelName.GetAllViewsRecursive
            If v Is Spinner OR v Is Button OR v Is ImageView Then
               
                matcher1=Regex.Matcher(v.Tag,Exclusions)
                If matcher1.find = False OR Exclusions.Length = 0 Then
                    Dim pnlBack As Panel
                    pnlBack.Initialize("")
                   
                    PanelName.Addview(pnlBack, v.Left - Border, v.Top - Border, v.Width + Border*2, v.Height + Border*2)
                    pnlBack.SendToBack
                    pnlBack.Color = BorderColor
                End If   
            End If
        Next

    End Sub
    
    Draw_Borders(pnlSessionStart, 2dip, Colors.White,"tbServe")</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Text</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Set Text Size to fit</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Text</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Set Text Size to fit</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Text, Size</Keywords>
        <Imports>JavaObject</Imports>
        <Code>Dim v As View
    Dim JO As JavaObject
  
    For i =0 To sv.Panel.NumberOfViews-1
        v=sv.Panel.getview(i)
        JO=v  
        Log(v)
      
        Select True
      
            Case v Is Button
                Log("&gt;&gt; Button")
          
            Case v Is Spinner
                Log("&gt;&gt; Spinner")
          
            Case v Is EditText
                Log("&gt;&gt; Edittext")
                Dim et As EditText
                et=v
                SetEditTextSize(et,et.Text)
                JO.RunMethod("setPadding",Array As Object(5,0,0,0))
          
            Case v Is Label
                Log("&gt;&gt; Label")
                Dim la As Label
                la=v
                SetLabelTextSize(la,la.Text)
                JO.RunMethod("setPadding",Array As Object(5,0,0,0))
  
        End Select  
          
    Next

Sub SetLabelTextSize(ex As Label, txt As String)
    Dim dt As Float
    Dim limit = 0.5 As Float
    Dim h As Int
  
    ex.Text = txt
    ex.TextSize = 72
    dt = ex.TextSize
    h = stu.MeasureMultilineTextHeight(ex, txt)  
    Do While dt &gt; limit OR h &gt; ex.Height
        dt = dt / 2
        h = stu.MeasureMultilineTextHeight(ex, txt)  
        If h &gt; ex.Height Then
            ex.TextSize = ex.TextSize - dt
        Else
            ex.TextSize = ex.TextSize + dt
        End If
    Loop
    ex.TextSize=ex.textsize * 0.8
End Sub

Sub SetEditTextSize(ex As EditText, txt As String)
    Dim dt As Float
    Dim limit = 0.5 As Float
    Dim h As Int
  
    ex.Text = txt
    ex.TextSize = 72
    dt = ex.TextSize
    h = stu.MeasureMultilineTextHeight(ex, txt)  
    Do While dt &gt; limit OR h &gt; ex.Height
        dt = dt / 2
        h = stu.MeasureMultilineTextHeight(ex, txt)  
        If h &gt; ex.Height Then
            ex.TextSize = ex.TextSize - dt
        Else
            ex.TextSize = ex.TextSize + dt
        End If
    Loop
    ex.TextSize=ex.textsize *0.8
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Database</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Inner Join</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Database</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Inner Join</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>SQL, Inner Join</Keywords>
        <Imports>SQL</Imports>
        <Code>txt="SELECT T1.COUNTRY, T2.CAPITAL , T1.POPULATION FROM DB1Table T1 " _
    &amp; " INNER JOIN D2.DB2Table T2 ON T1.COUNTRY=T2.COUNTRY"</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Text</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Show Edit Text ScrollBar</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Text</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Show Edit Text ScrollBar</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Edit Text, Scroll</Keywords>
        <Imports>JavaObject</Imports>
        <Code>Dim jo As JavaObject = EditText1
jo.RunMethod("setScrollbarFadingEnabled", Array (False))</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Basic</Category>
        <Language>B4A</Language>
        <Public>false</Public>
        <Name>Android Directories</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Basic</Category>
          <Language>B4A</Language>
          <Public>false</Public>
          <Name>Android Directories</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords>Directory, File</Keywords>
        <Imports />
        <Code>xui.DefauötFolder
Android/data/user/0/packageName/files
Package Filname from Project Config

DirAssets
B4X File Dir of the Project (read only), inside .apk file

DirInternal
private folder not accessable by othe apps
= xui.DefaultFolder

DirInternalCache
/data/uiser/0/package name/cahce
DirRootExternal -&gt; SD Card root Folder
/storage/emulated/0

DirDefaultExternal /DUtils.CopyFromAssets/DBUtils.GetDefaultFolder -&gt;
/storage/emulated/0/Android/data/package name/files

</Code>
      </SnippetValue>
    </value>
  </item>
</dictionary>