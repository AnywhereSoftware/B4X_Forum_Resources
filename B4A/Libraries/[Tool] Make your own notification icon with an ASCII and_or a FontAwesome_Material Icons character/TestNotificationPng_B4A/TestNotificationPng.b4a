Build1=Default,b4a.example
File1=1.bal
FileGroup1=Default Group
Group=Default Group
IconFile=
Library1=core
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~'End of default text.~\n~
Module1=Starter
NumberOfFiles=1
NumberOfLibraries=1
NumberOfModules=1
Version=8.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: TestNotificationPng
	#VersionCode: 1
	#VersionName: 1
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
	#DebuggerForceStandardAssets: True
	#BridgeLogger: True
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.

	Public notif As Notification
	Public notifId As Int = 1

End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.

	Private Button1 As Button
	Private EditText1 As EditText

End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	Activity.LoadLayout("1")
	Activity.Title = "TestNotificationPng"

End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub Button1_Click

	If EditText1.Text = "" Then
		Msgbox("Enter a filename first (from folder res/drawable)", Application.LabelName)
		Return
	End If

	Try
		notif.Cancel(notifId)
	Catch
		Log(LastException)
	End Try

	notif.Initialize
	notif.Insistent = False
	notif.OnGoingEvent = False
	notif.Sound = False
	notif.Vibrate = False
	notif.Icon = EditText1.Text
	notif.SetInfo("TestNotificationPng", "Just testing the icon", Me)

	Try
		notif.Notify(notifId)
	Catch
		Msgbox(LastException, "Error")
	End Try

End Sub