<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.05</doclet-version-NOT-library-version>
    <class>
        <name>com.tillekesoft.screenrecorder.B4AScreenRecorder</name>
        <shortname>ScreenRecorder</shortname>
        <owner>process</owner>
        <event>Result(Grant As Boolean)</event>
        <method>
            <name>GetPermission</name>
            <comment>Call GetPermission() to let user grant permission.
 Check the Result-event if the user granted the app permission to record
 or not. If the Grant-value is true, permission was granted.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>StopRecording</name>
            <comment>Call StopRecording() to stop recording.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes B4A ScreenRecorder. Make sure to add an EventName since
 it is needed for the GetPermission method.
 Usage of Wrapper:
 Call GetPermission() and then check the Result-event if the user
 granted the app permission to record or not. If the Grant-value is true,
 permission was granted and you can call StartRecording to begin recording.
 To stop recording call StopRecording. Recordings are encapsulated in
 the mp4 container format and can become very large. You should save
 the video on the SD-card.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>StartRecording</name>
            <comment>Call StartRecording() to begin recording. You can set video size using
 Width and Height and you can set your own values. However, the real screen sizes
 are suggested (use B4A method GetDeviceLayoutValues). Finally, you need to pass on
 the directory where you want to save the video (sd-card is highly recommended due to size)
 and the file-name. The wrapper does not verify if the file is already existing or not
 and you need to do that yourself.
 Note: Recordings are encapsulated in the mp4 container format and the Wrapper adds
 automatically the mp4-extension to the fileName-parameter.
 Example usage:
 rec.StartRecording(GetDeviceLayoutValues.Width, GetDeviceLayoutValues.Height, File.DirRootExternal, "rec1")</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dirPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>fileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>net.yrom.screenrecorder.ScreenRecorder</name>
        <owner>process</owner>
        <method>
            <name>activeCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>resume</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>suspend</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>currentThread</name>
            <comment></comment>
            <returntype>java.lang.Thread</returntype>
        </method>
        <method>
            <name>isInterrupted</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dumpStack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>destroy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>run</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>interrupted</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>checkAccess</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>sleep</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>isAlive</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>holdsLock</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>stop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDaemon</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>yield</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>interrupt</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>countStackFrames</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>quit</name>
            <comment>stop task</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>enumerate</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Thread[]</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>join</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Daemon</name>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>StackTrace</name>
            <returntype>java.lang.StackTraceElement[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Priority</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>State</name>
            <returntype EnumType="true">java.lang.Thread.State</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ContextClassLoader</name>
            <returntype>java.lang.ClassLoader</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.ClassLoader</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DefaultUncaughtExceptionHandler</name>
            <returntype>java.lang.Thread.UncaughtExceptionHandler</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Thread.UncaughtExceptionHandler</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ThreadGroup</name>
            <returntype>java.lang.ThreadGroup</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AllStackTraces</name>
            <returntype>java.util.Map</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UncaughtExceptionHandler</name>
            <returntype>java.lang.Thread.UncaughtExceptionHandler</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Thread.UncaughtExceptionHandler</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>MIN_PRIORITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MAX_PRIORITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NORM_PRIORITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <version>0.7</version>
    <author>moster67/Mikael Osterhed</author>
</root>
