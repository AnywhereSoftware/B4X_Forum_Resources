<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <dependsOn>opengl</dependsOn>
  <dependsOn>reflection</dependsOn>
  <class>
    <name>Dudu.BodyGL.bodygl._vertice3d</name>
    <shortname>Vertice3D</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Initializes the fields to their default value.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>x</name>
      <returntype>float[]</returntype>
    </field>
    <field>
      <name>y</name>
      <returntype>float[]</returntype>
    </field>
    <field>
      <name>z</name>
      <returntype>float[]</returntype>
    </field>
  </class>
  <class>
    <name>Dudu.BodyGL.bodygl._glcolor</name>
    <shortname>glcolor</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Initializes the fields to their default value.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>R</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>G</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>B</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>A</name>
      <returntype>float</returntype>
    </field>
  </class>
  <class>
    <name>Dudu.BodyGL.bodygl._glpolarray</name>
    <shortname>glpolarray</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Initializes the fields to their default value.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>s</name>
      <returntype>short[]</returntype>
    </field>
  </class>
  <class>
    <name>Dudu.BodyGL.bodygl</name>
    <shortname>BodyGL</shortname>
    <owner>activity</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AsView">_asview</name>
      <comment>Returns the panel which is the base of the view.</comment>
      <returntype>anywheresoftware.b4a.objects.ConcreteViewWrapper</returntype>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getLineWidth" HideFromIDE="true">_getlinewidth</name>
      <comment>Gets and sets the line width</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="GetViewAngle">_getviewangle</name>
      <comment>Gets the ViewAngle value, used to perform zoom. Default is 60.</comment>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object. 
size is the width and height of the view, always a square.
BodyArray is the array of vertices, defined in a type Vertice3D, example:
   vert.x = Array As Float(2, 2, 2, 2,-2,-2,-2,-2)
   vert.y = Array As Float(2, 2,-2,-2, 2, 2,-2,-2)
   vert.z = Array As Float(2,-2,-2, 2, 2,-2,-2, 2)
Polygons() is a string array, each item holds the order of vertices' number in ' a polygon, in a clockwise order when looking into the body's center, example:
   pol(0) = "3,2,1,0" 
   pol(1) = "2,6,5,1"
   pol(2) = "6,7,4,5"
   pol(3) = "0,4,7,3"
   pol(4) = "0,1,5,4"
   pol(5) = "2,3,7,6"
color() is array of the n polygons colors.
bmp - use if you set a beckground bitmap to the view, otherwise use Null.</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>BodyArray</name>
        <type>Dudu.BodyGL.bodygl._vertice3d</type>
      </parameter>
      <parameter>
        <name>polygons</name>
        <type>String[]</type>
      </parameter>
      <parameter>
        <name>Color</name>
        <type>int[]</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>bmp</name>
        <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
      </parameter>
      <parameter>
        <name>Line</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Move">_move</name>
      <comment>Moves the body in the space coordinates. use single units to check the effect.</comment>
      <returntype>String</returntype>
      <parameter>
        <name>dx</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>dy</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>dz</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Position">_position</name>
      <comment>Moves the body in the space coordinates. use single units to check the effect.</comment>
      <returntype>String</returntype>
      <parameter>
        <name>newx</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>newy</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>newz</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLineWidth" HideFromIDE="true">_setlinewidth</name>
      <comment>Gets and sets the view angle in degrees</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetViewAngle">_setviewangle</name>
      <comment>Sets the ViewAngle value, used to perform zoom. Default is 60.</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Show">_show</name>
      <comment>Turns the body to new angles , in degrees.</comment>
      <returntype>String</returntype>
      <parameter>
        <name>xangle</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>yangle</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>zangle</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Show1">_show1</name>
      <comment>Positions the body to a new position and new angles , in degrees.</comment>
      <returntype>String</returntype>
      <parameter>
        <name>xangle</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>yangle</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>zangle</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>newx</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>newy</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>newz</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Start">_start</name>
      <returntype>String</returntype>
    </method>
    <property>
      <name DesignerName="LineWidth">_linewidth</name>
      <comment>Gets and sets the line width</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
  </class>
  <version>1.2</version>
  <author>David Erez (derez)</author>
</root>