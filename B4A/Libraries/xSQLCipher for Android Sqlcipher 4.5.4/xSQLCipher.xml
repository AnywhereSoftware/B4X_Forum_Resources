<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.tummosoft.EncryptionIO</name>
        <owner>process</owner>
    </class>
    <class>
        <name>com.tummosoft.PreferencesHelper</name>
        <owner>process</owner>
        <method>
            <name>saveTokenToPreferences</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>keyName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ValueToken</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getTokenFromPreferences</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>keyName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.Rules</name>
        <shortname>Rules</shortname>
        <owner>process</owner>
        <method>
            <name>Equal</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>object</name>
                <type>com.tummosoft.Rules</type>
            </parameter>
        </method>
        <field>
            <name>R_UPGRADE_DELETE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DB_COPY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DB_CREATE_NEW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DB_BACKUP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.tummosoft.SQLiteHelper</name>
        <owner>process</owner>
        <method>
            <name>getReadableDatabase</name>
            <comment></comment>
            <returntype>net.sqlcipher.database.SQLiteDatabase</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>onConfigure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>net.sqlcipher.database.SQLiteDatabase</type>
            </parameter>
        </method>
        <method>
            <name>onCreate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>sqld</name>
                <type>net.sqlcipher.database.SQLiteDatabase</type>
            </parameter>
        </method>
        <method>
            <name>onUpgrade</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>sqld</name>
                <type>net.sqlcipher.database.SQLiteDatabase</type>
            </parameter>
            <parameter>
                <name>oldversion</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>newversion</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onOpen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>sqld</name>
                <type>net.sqlcipher.database.SQLiteDatabase</type>
            </parameter>
        </method>
        <method>
            <name>onDowngrade</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>net.sqlcipher.database.SQLiteDatabase</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>databaseFileExists</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
        </method>
        <method>
            <name>getDatabaseFile</name>
            <comment></comment>
            <returntype>java.io.File</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
        </method>
        <method>
            <name>getWritableDatabase</name>
            <comment></comment>
            <returntype>net.sqlcipher.database.SQLiteDatabase</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>WriteAheadLoggingEnabled</name>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DatabaseName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.TokenManager</name>
        <shortname>TokenManager</shortname>
        <owner>process</owner>
        <method>
            <name>getDatabaseState</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>dbPath</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>saveTokenToPreferences</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>keyName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ValueToken</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getTokenFromPreferences</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>keyName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.xDatabase</name>
        <owner>process</owner>
        <method>
            <name>needUpgrade</name>
            <comment>{@inheritDoc}</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>newVersion</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>updateWithOnConflict</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.content.ContentValues</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>java.lang.String[]</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>resetCompiledSqlCache</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>replace</name>
            <comment></comment>
            <returntype>long</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.content.ContentValues</type>
            </parameter>
        </method>
        <method>
            <name>beginTransactionWithListener</name>
            <comment>{@inheritDoc}</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>android.database.sqlite.SQLiteTransactionListener</type>
            </parameter>
        </method>
        <method>
            <name>getBytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>char[]</type>
            </parameter>
        </method>
        <method>
            <name>queryWithFactory</name>
            <comment></comment>
            <returntype>net.sqlcipher.Cursor</returntype>
            <parameter>
                <name>arg0</name>
                <type>net.sqlcipher.database.SQLiteDatabase.CursorFactory</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>java.lang.String[]</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg5</name>
                <type>java.lang.String[]</type>
            </parameter>
            <parameter>
                <name>arg6</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg7</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg8</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg9</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>onAllReferencesReleasedFromContainer</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>rawQueryWithFactory</name>
            <comment></comment>
            <returntype>net.sqlcipher.Cursor</returntype>
            <parameter>
                <name>arg0</name>
                <type>net.sqlcipher.database.SQLiteDatabase.CursorFactory</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.String[]</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>onAllReferencesReleased</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>beginTransactionWithListenerNonExclusive</name>
            <comment>{@inheritDoc}</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>android.database.sqlite.SQLiteTransactionListener</type>
            </parameter>
        </method>
        <method>
            <name>markTableSyncable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>releaseReferenceFromContainer</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>create</name>
            <comment></comment>
            <returntype>net.sqlcipher.database.SQLiteDatabase</returntype>
            <parameter>
                <name>arg0</name>
                <type>net.sqlcipher.database.SQLiteDatabase.CursorFactory</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>yieldIfContended</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>openDatabase</name>
            <comment></comment>
            <returntype>net.sqlcipher.database.SQLiteDatabase</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>net.sqlcipher.database.SQLiteDatabase.CursorFactory</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>releaseMemory</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>releaseReference</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>execSQL</name>
            <comment>{@inheritDoc}</comment>
            <returntype>void</returntype>
            <parameter>
                <name>sql</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>enableWriteAheadLogging</name>
            <comment>{@inheritDoc}</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>query</name>
            <comment>{@inheritDoc}</comment>
            <returntype>android.database.Cursor</returntype>
            <parameter>
                <name>sql</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>purgeFromCompiledSqlCache</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>openOrCreateDatabase</name>
            <comment></comment>
            <returntype>net.sqlcipher.database.SQLiteDatabase</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.io.File</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>net.sqlcipher.database.SQLiteDatabase.CursorFactory</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>net.sqlcipher.database.SQLiteDatabaseHook</type>
            </parameter>
        </method>
        <method>
            <name>findEditTable</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>insertWithOnConflict</name>
            <comment></comment>
            <returntype>long</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.content.ContentValues</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isOpen</name>
            <comment>{@inheritDoc}</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>beginTransaction</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>compileStatement</name>
            <comment></comment>
            <returntype>net.sqlcipher.database.SQLiteStatement</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>rekey</name>
            <comment>Changes the passphrase associated with this database. The char[] is *not*
 cleared by this method -- please zero it out if you are done with it.
passphrase: the new passphrase to use</comment>
            <returntype>void</returntype>
            <parameter>
                <name>passphrase</name>
                <type>char[]</type>
            </parameter>
        </method>
        <method>
            <name>isDbLockedByOtherThreads</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getQueryStats</name>
            <comment></comment>
            <returntype>net.sqlcipher.database.SQLiteQueryStats</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>setTransactionSuccessful</name>
            <comment>{@inheritDoc}</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>endTransaction</name>
            <comment>{@inheritDoc}</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>status</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>rawQuery</name>
            <comment></comment>
            <returntype>net.sqlcipher.Cursor</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>beginTransactionNonExclusive</name>
            <comment>{@inheritDoc}</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>insert</name>
            <comment>{@inheritDoc}</comment>
            <returntype>long</returntype>
            <parameter>
                <name>table</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>conflictAlgorithm</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>android.content.ContentValues</type>
            </parameter>
        </method>
        <method>
            <name>update</name>
            <comment>{@inheritDoc}</comment>
            <returntype>int</returntype>
            <parameter>
                <name>table</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>conflictAlgorithm</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>android.content.ContentValues</type>
            </parameter>
            <parameter>
                <name>whereClause</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>whereArgs</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>setMaximumSize</name>
            <comment>{@inheritDoc}</comment>
            <returntype>long</returntype>
            <parameter>
                <name>numBytes</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>delete</name>
            <comment>{@inheritDoc}</comment>
            <returntype>int</returntype>
            <parameter>
                <name>table</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>whereClause</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>whereArgs</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>isReadOnly</name>
            <comment>{@inheritDoc}</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>yieldIfContendedSafely</name>
            <comment>{@inheritDoc}</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>close</name>
            <comment>{@inheritDoc}</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>replaceOrThrow</name>
            <comment></comment>
            <returntype>long</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.content.ContentValues</type>
            </parameter>
        </method>
        <method>
            <name>isDbLockedByCurrentThread</name>
            <comment>{@inheritDoc}</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>inTransaction</name>
            <comment>{@inheritDoc}</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>insertOrThrow</name>
            <comment></comment>
            <returntype>long</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.content.ContentValues</type>
            </parameter>
        </method>
        <method>
            <name>getChars</name>
            <comment></comment>
            <returntype>char[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>isWriteAheadLoggingEnabled</name>
            <comment>{@inheritDoc}</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>loadLibs</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Context</type>
            </parameter>
        </method>
        <method>
            <name>rawExecSQL</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>disableWriteAheadLogging</name>
            <comment>{@inheritDoc}</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>changePassword</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isDatabaseIntegrityOk</name>
            <comment>{@inheritDoc}</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>acquireReference</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isInCompiledSqlCache</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>Locale</name>
            <parameter>
                <name>locale</name>
                <type>java.util.Locale</type>
            </parameter>
            <comment>{@inheritDoc}</comment>
        </property>
        <property>
            <name>Path</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaximumSize</name>
            <returntype>long</returntype>
            <comment>{@inheritDoc}</comment>
        </property>
        <property>
            <name>LockingEnabled</name>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PageSize</name>
            <returntype>long</returntype>
            <parameter>
                <name>numBytes</name>
                <type>long</type>
            </parameter>
            <comment>{@inheritDoc}</comment>
        </property>
        <property>
            <name>MaxSqlCacheSize</name>
            <returntype>int</returntype>
            <parameter>
                <name>cacheSize</name>
                <type>int</type>
            </parameter>
            <comment>{@inheritDoc}</comment>
        </property>
        <property>
            <name>Version</name>
            <returntype>int</returntype>
            <parameter>
                <name>version</name>
                <type>int</type>
            </parameter>
            <comment>{@inheritDoc}</comment>
        </property>
        <property>
            <name>SyncedTables</name>
            <returntype>java.util.Map</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ForeignKeyConstraintsEnabled</name>
            <parameter>
                <name>enable</name>
                <type>boolean</type>
            </parameter>
            <comment>{@inheritDoc}</comment>
        </property>
        <property>
            <name>AttachedDbs</name>
            <returntype>java.util.List</returntype>
            <comment>{@inheritDoc}</comment>
        </property>
        <property>
            <name>ICURoot</name>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>CONFLICT_REPLACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OPEN_READWRITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OPEN_READONLY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>CREATE_IF_NECESSARY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>CONFLICT_FAIL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>CONFLICT_IGNORE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEMORY</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>NO_LOCALIZED_COLLATORS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SQLITE_MAX_LIKE_PATTERN_LENGTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SQLCIPHER_ANDROID_VERSION</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CONFLICT_ROLLBACK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>CONFLICT_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>CONFLICT_ABORT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MAX_SQL_CACHE_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.tummosoft.xEncrypter</name>
        <shortname>xEncrypter</shortname>
        <owner>process</owner>
        <method>
            <name>CopyResource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>sourcePath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>backupPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>parseByte2HexStr</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>buf</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>parseHexStr2Byte</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>hexStr</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>encrypt</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>secretKey</name>
                <type>javax.crypto.SecretKey</type>
            </parameter>
            <parameter>
                <name>PASSWORD</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>backupDatabase</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>dbName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>backupPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFileInputStream</name>
            <comment></comment>
            <returntype>java.io.InputStream</returntype>
            <parameter>
                <name>filepath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>symetricKey</name>
                <type>javax.crypto.spec.SecretKeySpec</type>
            </parameter>
        </method>
        <method>
            <name>restoreDatabase</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>dbName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>backupPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>decrypt</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>secretKey</name>
                <type>javax.crypto.SecretKey</type>
            </parameter>
            <parameter>
                <name>PASSWORD</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>generateAESKey</name>
            <comment></comment>
            <returntype>javax.crypto.SecretKey</returntype>
        </method>
        <method>
            <name>encrypt2</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>secretKey</name>
                <type>javax.crypto.SecretKey</type>
            </parameter>
            <parameter>
                <name>PASSWORD</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>createFileOutputStream</name>
            <comment></comment>
            <returntype>java.io.OutputStream</returntype>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>symetricKey</name>
                <type>javax.crypto.spec.SecretKeySpec</type>
            </parameter>
        </method>
        <property>
            <name>SecretKey</name>
            <returntype>byte[]</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.xSQLCipher</name>
        <shortname>xSQLCipher</shortname>
        <owner CheckForReinitialize="true">process</owner>
        <event>CopyCompleted(succes as boolean)</event>
        <method>
            <name>initializeCipher</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>database</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>version</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment>Tests whether the database is initialized and opened.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>BeginTransaction</name>
            <comment>Begins a transaction. A transaction is a set of multiple "writing"
 statements that are atomically committed, hence all changes will be made
 or no changes will be made. As a side effect those statements will be
 executed significantly faster (in the default case a transaction is
 implicitly created for each statement). It is very important to handle
 transaction carefully and close them. The transaction is considered
 successful only if TransactionSuccessful is called. Otherwise no changes
 will be made. Typical usage:&lt;code&gt;
SQL1.BeginTransaction
Try
	'block of statements like:
	For i = 1 to 1000
		SQL1.ExecNonQuery("INSERT INTO table1 VALUES(...)
	Next
	SQL1.TransactionSuccessful
Catch
	Log(LastException.Message) 'no changes will be made
End Try
SQL1.EndTransaction&lt;/code&gt;</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddNonQueryToBatch</name>
            <comment>Adds a non-query statement to the batch of statements. The statements are
 (asynchronously) executed when you call ExecNonQueryBatch. Args parameter
 can be Null if it is not needed. null null null     Example:&lt;code&gt;
For i = 1 To 1000
	sql.AddNonQueryToBatch("INSERT INTO table1 VALUES (?)", Array(Rnd(0, 100000)))
Next
Dim SenderFilter As Object = sql.ExecNonQueryBatch("SQL")
Wait For (SenderFilter) SQL_NonQueryComplete (Success As Boolean)
Log("NonQuery: " &amp; Success)&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Statement</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Args</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>encrypt</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>RealPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>passphrase</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>ExecQuerySingleResult</name>
            <comment>Executes the query and returns the value in the first column and the
 first row (in the result set). Returns Null if no results were found.
 null null null     Example:&lt;code&gt;
Dim NumberOfMatches As Int
NumberOfMatches = SQL1.ExecQuerySingleResult("SELECT count(*) FROM table1 WHERE col2 &gt; 300")&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Query</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ExecNonQuery</name>
            <comment>Executes a single non query SQL statement. null null null     Example:&lt;code&gt;
SQL1.ExecNonQuery("CREATE TABLE table1 (col1 TEXT , col2 INTEGER, col3 INTEGER)")&lt;/code&gt;
 If you plan to do many "writing" queries one after another, then you
 should consider using BeginTransaction / EndTransaction. It will execute
 significantly faster.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Statement</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ExecNonQuery2</name>
            <comment>Executes a single non query SQL statement. The statement can include
 question marks which will be replaced by the items in the given list.
 Note that Basic4android converts arrays to lists implicitly. The values
 in the list should be strings, numbers or bytes arrays. null null null     Example:&lt;code&gt;
SQL1.ExecNonQuery2("INSERT INTO table1 VALUES (?, ?, 0)", Array As Object("some text", 2))&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Statement</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Args</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>EndTransaction</name>
            <comment>Ends the transaction.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ExecQuery2</name>
            <comment>Executes the query and returns a cursor which is used to go over the
 results. The query can include question marks which will be replaced with
 the values in the array. null null null     Example:&lt;code&gt;
Dim Cursor As Cursor
Cursor = sql1.ExecQuery2("SELECT col1 FROM table1 WHERE col3 = ?", Array As String(22))&lt;/code&gt;
 SQLite will try to convert the string values based on the columns types.</comment>
            <returntype>android.database.Cursor</returntype>
            <parameter>
                <name>Query</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>StringArgs</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>isDBEncrypted</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>DBPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ExecQuery</name>
            <comment>Executes the query and returns a cursor which is used to go over the
 results. null null null     Example:&lt;code&gt;
Dim Cursor As Cursor
Cursor = SQL1.ExecQuery("SELECT col1, col2 FROM table1")
For i = 0 To Cursor.RowCount - 1
	Cursor.Position = i
	Log(Cursor.GetString("col1"))
	Log(Cursor.GetInt("col2"))
Next&lt;/code&gt;</comment>
            <returntype>android.database.Cursor</returntype>
            <parameter>
                <name>Query</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>initialize4</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>DBpath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>version</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ExecQuerySingleResult2</name>
            <comment>Executes the query and returns the value in the first column and the
 first row (in the result set). Returns Null if no results were found.
 null null null     Example:&lt;code&gt;
Dim NumberOfMatches As Int
NumberOfMatches = SQL1.ExecQuerySingleResult2("SELECT count(*) FROM table1 WHERE col2 &gt; ?", Array As String(300))&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Query</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>StringArgs</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>initializeCipher2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>database</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>version</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DeleteTable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>table</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>whereClause</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>whereArgs</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>initializeOnlyOpen2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>DBpath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>version</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>changePassword2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>password</name>
                <type>char[]</type>
            </parameter>
        </method>
        <method>
            <name>initialize3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>DBpath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>version</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>changePassword</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ExecNonQueryBatch</name>
            <comment>Asynchronously executes a batch of non-query statements (such as INSERT).
 The NonQueryComplete event is raised after the statements are completed.
 You should call AddNonQueryToBatch one or more times before calling this
 method to add statements to the batch. Note that this method internally
 begins and ends a transaction. Returns an object that can be used as the
 sender filter for Wait For calls. null null null     Example:&lt;code&gt;
For i = 1 To 1000
	sql.AddNonQueryToBatch("INSERT INTO table1 VALUES (?)", Array(Rnd(0, 100000)))
Next
Dim SenderFilter As Object = sql.ExecNonQueryBatch("SQL")
Wait For (SenderFilter) SQL_NonQueryComplete (Success As Boolean)
Log("NonQuery: " &amp; Success)&lt;/code&gt;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>compileStatement</name>
            <comment></comment>
            <returntype>net.sqlcipher.database.SQLiteStatement</returntype>
            <parameter>
                <name>sql</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>initializeOnlyOpen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>DBpath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>version</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TransactionSuccessful</name>
            <comment>Marks the transaction as a successful transaction. No further statements
 should be executed till calling EndTransaction.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment>Closes the database. Does not do anything if the database is not opened
 or was closed before.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ExecQueryAsync</name>
            <comment>Asynchronously executes the given query. The QueryComplete event will be
 raised when the results are ready. Note that ResultSet extends Cursor.
 You can use Cursor if preferred. Returns an object that can be used as
 the sender filter for Wait For calls. null null null     Example:&lt;code&gt;
Dim SenderFilter As Object = sql.ExecQueryAsync("SQL", "SELECT * FROM table1", Null)
Wait For (SenderFilter) SQL_QueryComplete (Success As Boolean, rs As ResultSet)
If Success Then
	Do While rs.NextRow
		Log(rs.GetInt2(0))
	Loop
	rs.Close
Else
	Log(LastException)
End If&lt;/code&gt;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Query</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Args</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>decrypt</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>RealPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>passphrase</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>initializeCopy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>DBSource</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>version</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>Path</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PageSize</name>
            <returntype>long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Version</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DatabasePath</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.xSQLiteException</name>
        <owner>process</owner>
        <method>
            <name>printStackTrace</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>addSuppressed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Throwable</type>
            </parameter>
        </method>
        <method>
            <name>initCause</name>
            <comment></comment>
            <returntype>java.lang.Throwable</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Throwable</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>fillInStackTrace</name>
            <comment></comment>
            <returntype>java.lang.Throwable</returntype>
        </method>
        <property>
            <name>Message</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>StackTrace</name>
            <returntype>java.lang.StackTraceElement[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.StackTraceElement[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Suppressed</name>
            <returntype>java.lang.Throwable[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Cause</name>
            <returntype>java.lang.Throwable</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocalizedMessage</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <version>1.04</version>
    <comment></comment>
    <dependsOn>android-database-sqlcipher-4.5.4.aar</dependsOn>
</root>
