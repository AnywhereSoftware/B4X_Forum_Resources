<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>de.donmanfred.FirebaseOptionwrapper</name>
        <shortname>FirebaseOptions</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>com.google.firebase.FirebaseOptions</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>apiKey</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>appID</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>dbUrl</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>GcmsenderID</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>bucketID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>de.donmanfred.FirebaseUIWrapper</name>
        <shortname>FirebaseUI</shortname>
        <owner>activity</owner>
        <event>TokenAvailable(user As FirebaseUser, success As Boolean, token As String)</event>
        <event>AccessTokenAvailable(success As Boolean, token As String)</event>
        <event>SignedIn(user As firebaseUser)</event>
        <event>IdTokenChanged(user As firebaseUser)</event>
        <event>SignedOut()</event>
        <event>UpdateEmail(success As Boolean, email As String)</event>
        <event>UpdatePassword(success As Boolean, password As String)</event>
        <event>UpdateProfile(success As Boolean, request As Object)</event>
        <event>ResetPassword(success As Boolean)</event>
        <method>
            <name>AddListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>com.google.firebase.auth.FirebaseAuth.AuthStateListener</type>
            </parameter>
        </method>
        <method>
            <name>RemoveListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>com.google.firebase.auth.FirebaseAuth.AuthStateListener</type>
            </parameter>
        </method>
        <method>
            <name>updatePassword</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>newPassword</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>signOut</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RemoveIdTokenListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>com.google.firebase.auth.FirebaseAuth.IdTokenListener</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>defaultClient</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendPasswordResetEmail</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>email</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CreateIdTokenListener</name>
            <comment></comment>
            <returntype>com.google.firebase.auth.FirebaseAuth.IdTokenListener</returntype>
        </method>
        <method>
            <name>CreateListener</name>
            <comment></comment>
            <returntype>com.google.firebase.auth.FirebaseAuth.AuthStateListener</returntype>
        </method>
        <method>
            <name>updateEmail</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>newEmail</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>createSignInIntentBuilder</name>
            <comment></comment>
            <returntype>com.firebase.ui.auth.AuthUI.SignInIntentBuilder</returntype>
        </method>
        <method>
            <name>AddIdTokenListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>com.google.firebase.auth.FirebaseAuth.IdTokenListener</type>
            </parameter>
        </method>
        <method>
            <name>SendSigninIntent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>signin</name>
                <type>Intent</type>
            </parameter>
        </method>
        <method>
            <name>signInWithCustomToken</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>token</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>LanguageCode</name>
            <parameter>
                <name>code</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CurrentUser</name>
            <returntype>de.donmanfred.FirebaseUIWrapper.FirebaseUserWrapper</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.FirebaseUIWrapper.FirebaseUserWrapper</name>
        <shortname>FirebaseUser</shortname>
        <objectwrapper>com.google.firebase.auth.FirebaseUser</objectwrapper>
        <owner>process</owner>
        <method>
            <name>isAnonymous</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sendEmailVerification</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Uid</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Email</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DisplayName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PhoneNumber</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PhotoUrl</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.SignInIntentBuilderWrapper</name>
        <shortname>SignInIntentBuilder</shortname>
        <objectwrapper>com.firebase.ui.auth.AuthUI.SignInIntentBuilder</objectwrapper>
        <owner>process</owner>
        <method>
            <name>setAvailableProviders</name>
            <comment></comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper</returntype>
            <parameter>
                <name>providers</name>
                <type>java.util.List</type>
            </parameter>
        </method>
        <method>
            <name>setLogo</name>
            <comment></comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper</returntype>
            <parameter>
                <name>logo</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>addProvider</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>provider</name>
                <type>com.firebase.ui.auth.AuthUI.IdpConfig</type>
            </parameter>
        </method>
        <method>
            <name>getIdpGOOGLE_PROVIDER</name>
            <comment>
client: 
Return type: @return:config</comment>
            <returntype>com.firebase.ui.auth.AuthUI.IdpConfig</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>client</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setIsSmartLockEnabled</name>
            <comment></comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setTosUrl</name>
            <comment></comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper</returntype>
            <parameter>
                <name>tosUrl</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetIdpGOOGLE_PROVIDER3</name>
            <comment></comment>
            <returntype>com.firebase.ui.auth.AuthUI.IdpConfig</returntype>
            <parameter>
                <name>client</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetIdpGOOGLE_PROVIDER2</name>
            <comment></comment>
            <returntype>com.firebase.ui.auth.AuthUI.IdpConfig</returntype>
            <parameter>
                <name>client</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>scopes</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>setAlwaysShowSignInMethodScreen</name>
            <comment></comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper</returntype>
            <parameter>
                <name>alwaysShow</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>builder</name>
                <type>com.firebase.ui.auth.AuthUI.SignInIntentBuilder</type>
            </parameter>
        </method>
        <method>
            <name>setIsSmartLockEnabled2</name>
            <comment></comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper</returntype>
            <parameter>
                <name>enableCredentials</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>enableHints</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getResourceId</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>resourceName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setEmailLink</name>
            <comment></comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper</returntype>
            <parameter>
                <name>emailLink</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>build</name>
            <comment></comment>
            <returntype>Intent</returntype>
        </method>
        <method>
            <name>setTheme</name>
            <comment></comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper</returntype>
            <parameter>
                <name>theme</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPrivacyPolicyUrl</name>
            <comment></comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper</returntype>
            <parameter>
                <name>privacyPolicyUrl</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearProvider</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>IdpEMAIL_PROVIDER</name>
            <returntype>com.firebase.ui.auth.AuthUI.IdpConfig</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IdpFACEBOOK_PROVIDER</name>
            <returntype>com.firebase.ui.auth.AuthUI.IdpConfig</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IdpTWITTER_PROVIDER</name>
            <returntype>com.firebase.ui.auth.AuthUI.IdpConfig</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Providerlist</name>
            <returntype>java.util.List</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IdpANONYMOUS_PROVIDER</name>
            <returntype>com.firebase.ui.auth.AuthUI.IdpConfig</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IdpPHONE_VERIFICATION_PROVIDER</name>
            <returntype>com.firebase.ui.auth.AuthUI.IdpConfig</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IdpGITHUB_PROVIDER</name>
            <returntype>com.firebase.ui.auth.AuthUI.IdpConfig</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.SignInIntentBuilderWrapper.GoogleBuilder</name>
        <shortname>GoogleBuilder</shortname>
        <owner>process</owner>
        <method>
            <name>setScopes</name>
            <comment>Set the scopes that your app will request when using Google sign-in. See all &lt;a
 href="https://developers.google.com/identity/protocols/googlescopes"&gt;available
 scopes&lt;/a&gt;.
scopes: additional scopes to be requested</comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper.GoogleBuilder</returntype>
            <parameter>
                <name>scopes</name>
                <type>java.util.List</type>
            </parameter>
        </method>
        <method>
            <name>BARef</name>
            <comment></comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper.GoogleBuilder</returntype>
            <parameter>
                <name>pba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>build</name>
            <comment></comment>
            <returntype>com.firebase.ui.auth.AuthUI.IdpConfig</returntype>
        </method>
        <method>
            <name>DefaultWebClient</name>
            <comment></comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper.GoogleBuilder</returntype>
            <parameter>
                <name>client</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setSignInOptions</name>
            <comment>Set the {@link GoogleSignInOptions} to be used for Google sign-in. Standard
 options like requesting the user's email will automatically be added.
options: sign-in options</comment>
            <returntype>de.donmanfred.SignInIntentBuilderWrapper.GoogleBuilder</returntype>
            <parameter>
                <name>options</name>
                <type>com.google.android.gms.auth.api.signin.GoogleSignInOptions</type>
            </parameter>
        </method>
        <property>
            <name>ProviderId</name>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Params</name>
            <returntype>android.os.Bundle</returntype>
            <comment></comment>
        </property>
    </class>
    <version>0.6</version>
    <author>DonManfred (wrapper)</author>
</root>
