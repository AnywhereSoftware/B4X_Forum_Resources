<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.biswajit.dji.BaseApplication</name>
        <owner>process</owner>
        <method>
            <name>checkUriPermissions</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.List</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>sendOrderedBroadcast</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>bindIsolatedService</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>java.util.concurrent.Executor</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>android.content.ServiceConnection</type>
            </parameter>
        </method>
        <method>
            <name>getExternalFilesDirs</name>
            <comment></comment>
            <returntype>java.io.File[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>enforceCallingPermission</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendBroadcastAsUser</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.UserHandle</type>
            </parameter>
        </method>
        <method>
            <name>attachBaseContext</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>paramContext</name>
                <type>android.content.Context</type>
            </parameter>
        </method>
        <method>
            <name>updateServiceGroup</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ServiceConnection</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>deleteDatabase</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>createContext</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ContextParams</type>
            </parameter>
        </method>
        <method>
            <name>onLowMemory</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>checkSelfPermission</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>enforceCallingOrSelfPermission</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>revokeSelfPermissionsOnKill</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.Collection</type>
            </parameter>
        </method>
        <method>
            <name>openFileInput</name>
            <comment></comment>
            <returntype>java.io.FileInputStream</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeStickyBroadcastAsUser</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.UserHandle</type>
            </parameter>
        </method>
        <method>
            <name>checkPermission</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>enforceUriPermission</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.net.Uri</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>registerActivityLifecycleCallbacks</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.app.Application.ActivityLifecycleCallbacks</type>
            </parameter>
        </method>
        <method>
            <name>isDeviceProtectedStorage</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>databaseList</name>
            <comment></comment>
            <returntype>java.lang.String[]</returntype>
        </method>
        <method>
            <name>sendStickyOrderedBroadcastAsUser</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.UserHandle</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.content.BroadcastReceiver</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>android.os.Handler</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg5</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg6</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>fileList</name>
            <comment></comment>
            <returntype>java.lang.String[]</returntype>
        </method>
        <method>
            <name>bindServiceAsUser</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.content.ServiceConnection</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>android.os.UserHandle</type>
            </parameter>
        </method>
        <method>
            <name>checkCallingOrSelfUriPermissions</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.List</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDatabasePath</name>
            <comment></comment>
            <returntype>java.io.File</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>enforceCallingOrSelfUriPermission</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.net.Uri</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>moveDatabaseFrom</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>unregisterComponentCallbacks</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ComponentCallbacks</type>
            </parameter>
        </method>
        <method>
            <name>unregisterActivityLifecycleCallbacks</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.app.Application.ActivityLifecycleCallbacks</type>
            </parameter>
        </method>
        <method>
            <name>getText</name>
            <comment></comment>
            <returntype>java.lang.CharSequence</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startIntentSender</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.IntentSender</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>checkCallingOrSelfPermission</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getSystemServiceName</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Class</type>
            </parameter>
        </method>
        <method>
            <name>openOrCreateDatabase</name>
            <comment></comment>
            <returntype>android.database.sqlite.SQLiteDatabase</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.database.sqlite.SQLiteDatabase.CursorFactory</type>
            </parameter>
        </method>
        <method>
            <name>checkCallingUriPermissions</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.List</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getFileStreamPath</name>
            <comment></comment>
            <returntype>java.io.File</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>startActivities</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent[]</type>
            </parameter>
        </method>
        <method>
            <name>obtainStyledAttributes</name>
            <comment></comment>
            <returntype>android.content.res.TypedArray</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>createWindowContext</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>startService</name>
            <comment></comment>
            <returntype>android.content.ComponentName</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
        </method>
        <method>
            <name>getColorStateList</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>registerReceiver</name>
            <comment></comment>
            <returntype>android.content.Intent</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.BroadcastReceiver</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.content.IntentFilter</type>
            </parameter>
        </method>
        <method>
            <name>sendOrderedBroadcastAsUser</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.UserHandle</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>android.content.BroadcastReceiver</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>android.os.Handler</type>
            </parameter>
            <parameter>
                <name>arg5</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg6</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg7</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>revokeSelfPermissionOnKill</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>onConfigurationChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Configuration</type>
            </parameter>
        </method>
        <method>
            <name>bindService</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.content.ServiceConnection</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isRestricted</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>enforceCallingUriPermission</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.net.Uri</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isUiContext</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>checkCallingUriPermission</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.net.Uri</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>sendBroadcast</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
        </method>
        <method>
            <name>getSystemService</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>moveSharedPreferencesFrom</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>unbindService</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ServiceConnection</type>
            </parameter>
        </method>
        <method>
            <name>removeStickyBroadcast</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
        </method>
        <method>
            <name>onTerminate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>checkCallingOrSelfUriPermission</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.net.Uri</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>peekWallpaper</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>createConfigurationContext</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Configuration</type>
            </parameter>
        </method>
        <method>
            <name>startForegroundService</name>
            <comment></comment>
            <returntype>android.content.ComponentName</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
        </method>
        <method>
            <name>openFileOutput</name>
            <comment></comment>
            <returntype>java.io.FileOutputStream</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startActivity</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
        </method>
        <method>
            <name>createPackageContext</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>sendStickyBroadcast</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
        </method>
        <method>
            <name>registerOnProvideAssistDataListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.app.Application.OnProvideAssistDataListener</type>
            </parameter>
        </method>
        <method>
            <name>enforcePermission</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getSharedPreferences</name>
            <comment></comment>
            <returntype>android.content.SharedPreferences</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>grantUriPermission</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.net.Uri</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>checkUriPermission</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.net.Uri</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDir</name>
            <comment></comment>
            <returntype>java.io.File</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startInstrumentation</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ComponentName</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>deleteFile</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>onCreate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearWallpaper</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getExternalFilesDir</name>
            <comment></comment>
            <returntype>java.io.File</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendStickyBroadcastAsUser</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.UserHandle</type>
            </parameter>
        </method>
        <method>
            <name>revokeUriPermission</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.net.Uri</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getColor</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onTrimMemory</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>sendStickyOrderedBroadcast</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.content.BroadcastReceiver</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.os.Handler</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg5</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>sendBroadcastWithMultiplePermissions</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>deleteSharedPreferences</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>checkCallingPermission</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>createAttributionContext</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>createContextForSplit</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>unregisterReceiver</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.BroadcastReceiver</type>
            </parameter>
        </method>
        <method>
            <name>unregisterOnProvideAssistDataListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.app.Application.OnProvideAssistDataListener</type>
            </parameter>
        </method>
        <method>
            <name>stopService</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Intent</type>
            </parameter>
        </method>
        <method>
            <name>createDisplayContext</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.Display</type>
            </parameter>
        </method>
        <method>
            <name>createDeviceProtectedStorageContext</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
        </method>
        <method>
            <name>registerComponentCallbacks</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ComponentCallbacks</type>
            </parameter>
        </method>
        <property>
            <name>ProcessName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>CodeCacheDir</name>
            <returntype>java.io.File</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MainLooper</name>
            <returntype>android.os.Looper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ExternalCacheDir</name>
            <returntype>java.io.File</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PackageName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PackageResourcePath</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ApplicationInfo</name>
            <returntype>android.content.pm.ApplicationInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>CacheDir</name>
            <returntype>java.io.File</returntype>
            <comment></comment>
        </property>
        <property>
            <name>OpPackageName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ContentResolver</name>
            <returntype>android.content.ContentResolver</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ApplicationContext</name>
            <returntype>android.content.Context</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PackageManager</name>
            <returntype>android.content.pm.PackageManager</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Assets</name>
            <returntype>android.content.res.AssetManager</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AttributionSource</name>
            <returntype>android.content.AttributionSource</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ClassLoader</name>
            <returntype>java.lang.ClassLoader</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DataDir</name>
            <returntype>java.io.File</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ObbDir</name>
            <returntype>java.io.File</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FilesDir</name>
            <returntype>java.io.File</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Params</name>
            <returntype>android.content.ContextParams</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AttributionTag</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>WallpaperDesiredMinimumHeight</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PackageCodePath</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>WallpaperDesiredMinimumWidth</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ExternalCacheDirs</name>
            <returntype>java.io.File[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BaseContext</name>
            <returntype>android.content.Context</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MainExecutor</name>
            <returntype>java.util.concurrent.Executor</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Theme</name>
            <returntype>android.content.res.Resources.Theme</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ObbDirs</name>
            <returntype>java.io.File[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ExternalMediaDirs</name>
            <returntype>java.io.File[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NoBackupFilesDir</name>
            <returntype>java.io.File</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Wallpaper</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Resources</name>
            <returntype>android.content.res.Resources</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Display</name>
            <returntype>android.view.Display</returntype>
            <comment></comment>
        </property>
        <field>
            <name>FINGERPRINT_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>INPUT_METHOD_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DOMAIN_VERIFICATION_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>LOCALE_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MODE_APPEND</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DEVICE_POLICY_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BIND_NOT_PERCEPTIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_CLASSIFICATION_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ACCOUNT_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>VPN_MANAGEMENT_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>LAUNCHER_APPS_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BLOB_STORE_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>PEOPLE_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>TELEPHONY_SUBSCRIPTION_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>APP_SEARCH_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>USAGE_STATS_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>JOB_SCHEDULER_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>GAME_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>STORAGE_STATS_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BIND_DEBUG_UNBIND</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>WIFI_P2P_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MEDIA_COMMUNICATION_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CONTEXT_IGNORE_SECURITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MIDI_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>NSD_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>STATUS_BAR_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BIND_NOT_FOREGROUND</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BIND_INCLUDE_CAPABILITIES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEDIA_SESSION_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>TV_INPUT_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ALARM_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>NETWORK_STATS_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EUICC_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>KEYGUARD_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>SEARCH_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MODE_PRIVATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>COMPANION_DEVICE_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>USER_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>IPSEC_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>APPWIDGET_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DOWNLOAD_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>PERFORMANCE_HINT_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CROSS_PROFILE_APPS_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>PRINT_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>WINDOW_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ACTIVITY_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CONNECTIVITY_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>FILE_INTEGRITY_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>INPUT_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MEDIA_ROUTER_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CLIPBOARD_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CAPTIONING_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>TELEPHONY_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MEDIA_PROJECTION_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>STORAGE_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>SYSTEM_HEALTH_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>VIBRATOR_MANAGER_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BIND_ADJUST_WITH_ACTIVITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>VIBRATOR_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>RECEIVER_NOT_EXPORTED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DISPLAY_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>RECEIVER_VISIBLE_TO_INSTANT_APPS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DISPLAY_HASH_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>UI_MODE_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>TELECOM_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>TV_INTERACTIVE_APP_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>TELEPHONY_IMS_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CONTEXT_RESTRICTED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>APP_OPS_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BIND_ALLOW_OOM_MANAGEMENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>CAMERA_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ROLE_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>SHORTCUT_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MODE_WORLD_WRITEABLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MODE_WORLD_READABLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>AUDIO_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CONSUMER_IR_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>WALLPAPER_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>SENSOR_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BIND_EXTERNAL_SERVICE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BIND_WAIVE_PRIORITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>WIFI_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CARRIER_CONFIG_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>LAYOUT_INFLATER_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>NFC_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>HARDWARE_PROPERTIES_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DROPBOX_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MODE_NO_LOCALIZED_COLLATORS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>USB_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MODE_ENABLE_WRITE_AHEAD_LOGGING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RECEIVER_EXPORTED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MODE_MULTI_PROCESS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BIND_ABOVE_CLIENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_SERVICES_MANAGER_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BIOMETRIC_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CONNECTIVITY_DIAGNOSTICS_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BIND_AUTO_CREATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>CONTEXT_INCLUDE_CODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BIND_IMPORTANT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEDIA_METRICS_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>NOTIFICATION_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>POWER_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>WIFI_RTT_RANGING_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BLUETOOTH_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>LOCATION_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>RESTRICTIONS_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>WIFI_AWARE_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BATTERY_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BUGREPORT_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.DataProtectionManagerWrapper</name>
        <shortname>DataProtectionManager</shortname>
        <owner>process</owner>
        <method>
            <name>agreeToProductImprovement</name>
            <comment>Agree or disagree with the product improvement project. Through this project, DJI MSDK will collect DJI device UUID, mobile device UUID and diagnostic and usage data for user behavior analysis. This analysis helps DJI improve products and services. DJI will take necessary data protection measures before data analysis.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>isAgree</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isAgreeToProductImprovement</name>
            <comment>Gets whether to agree to the product improvement project.</comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.biswajit.dji.DJIErrorWrapper</name>
        <shortname>DJIError</shortname>
        <owner>process</owner>
        <method>
            <name>hint</name>
            <comment>Get the hint of an error code.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>errorCode</name>
            <comment>Get error code.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>description</name>
            <comment>Get the description of an error code. Support Chinese and English, the language will switch according to the system language.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment>Get all error messages.</comment>
            <returntype>java.lang.String</returntype>
        </method>
    </class>
    <class>
        <name>com.biswajit.dji.FlightLogManagerWrapper</name>
        <shortname>FlightLogManager</shortname>
        <owner>process</owner>
        <property>
            <name>FlyClogPath</name>
            <returntype>java.lang.String</returntype>
            <comment>Get the local directory of flight Controller compact logs.
 Note:
 If the remote controller is replaced or the app is reinstalled during use, the aircraft needs to be reboot to generate the flight Controller compact logs.</comment>
        </property>
        <property>
            <name>FlightRecordPath</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.LDMManagerWrapper</name>
        <shortname>LDMManager</shortname>
        <owner>process</owner>
        <event>LDMEnable(success as Boolean, error as DJIError)</event>
        <event>LDMDisable(success as Boolean, error as DJIError)</event>
        <method>
            <name>isLDMEnabled</name>
            <comment>Return whether the LDM is enabled.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isLDMLicenseLoaded</name>
            <comment>After calling enableLDM, MSDK will check if there is a local LDM license. Otherwise, it will ask the server to transmit a LDM license. If the LDM license has been loaded and activated, then returntrue.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>loadLocalLDMLicenseContent</name>
            <comment>Load the content of LDM license, the content is the license_appname.txt given by developer website after successfully applying the LDM license.</comment>
            <returntype>com.biswajit.dji.DJIErrorWrapper</returntype>
            <parameter>
                <name>content</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isNetworkServiceEnabledForModule</name>
            <comment>Check the internet access of input LDMExemptModule.
module: One LDMExemptModule constant value. 
 true means LDM is not enabled or the input LDMExemptModule still has internet access when LDM is enabled.false means LDM is enabled and the input LDMExemptModule has no internet access.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>module</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getLocalLDMLicensePath</name>
            <comment>Get the saved path of the offline LDM license. Please put the offline LDM license under this directory.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>enableLDM</name>
            <comment>A method of enabling LDM mode. When calling this method, you can pass multiple LDMExemptModule parameters in. It means the exempt modules when LDM is enabled. E.g. When you pass RTK and FLY_SAFE in, those modules can still access internet after enabling LDM.
 Note:
 1. You have to call this method after calling SDKManager.init() method in order to enable LDM. If you don't have an offline license, then you need to pass this parameter in, MSDK_INIT_AND_REGISTRATION. This will allow MSDK registration module to complete the registration.
 2. Make sure your offline LDM license (license_appname.txt) is saved in the correct directory when you use an offline LDM license to enable LDM. You can use getLocalLDMLicensePath to get the offline LDM License path.
 3. Except save the offline LDM license to the specified path, you can also call loadLocalLDMLicenseContent to load the content of LDM license to the LDM module.
 4. If you don't have an offline LDM license, the first time you call this method will access DJI LDM server to download the LDM license. Later on, calling this method will read the local cache.
 5. If you want to use the offline LDM license, you need to apply fromhttps://developer.dji.comloin your user account and apply.
modules: If you need some modules than are exempt when LDM is enabled so that they can still access internet, you can set this in modules.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>modules</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>disableLDM</name>
            <comment>Disable LDM.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <field>
            <name>LDMExemptModule_MSDK_INIT_AND_REGISTRATION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LDMExemptModule_FIRMWARE_UPGRADE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LDMExemptModule_RTK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LDMExemptModule_FLY_SAFE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LDMExemptModule_USER_ACCOUNT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LDMExemptModule_LTE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LDMExemptModule_REAL_NAME</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LDMExemptModule_EXPERENCE_IMPROVEMENT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LDMExemptModule_LIVE_STREAMING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.SDKManagerWrapper</name>
        <shortname>SDKManager</shortname>
        <owner>process</owner>
        <event>RegisterComplete(success as Boolean, error as DJIError)</event>
        <event>ProductDisconnect(productId as Int)</event>
        <event>ProductConnect(productId as Int)</event>
        <event>ProductChanged(productId as Int)</event>
        <event>InitProcess(initEventStatus as Object, totalProcess as Int)</event>
        <event>DatabaseDownloadProgress(current as Long, total as Long)</event>
        <method>
            <name>registerApp</name>
            <comment>MSDK registration, MSDK connects to the DJI server through the Internet to verify the App KEY applied by the developer on the official website. This method needs to be called after the INITIALIZE_COMPLETE event is returned in the onInitProcess method. Whether the registration is successful or the registration fails, it will be returned in SDKManagerCallback. After successful registration, MSDK will automatically start to connect to the hardware product. If the hardware product connection is successful, the onProductConnect method will be called back.
 Notice:
 1. If the developer uses the offline license file method to open LDM before registerApp, the registration operation can be completed without connecting to the Internet.
 2. If you use the method of downloading the license file from the Internet to enable LDM, you need to pass in MSDK_INIT_AND_REGISTRATION to enableLDM, in order to connect to the DJI server through the Internet to verify the App KEY and complete the registration process.
 3. After MSDK is successfully registered, the registration information will be cached locally. When MSDK is started again, MSDK will verify the locally cached information to complete the registration process without connecting to the Internet. It is not necessary to perform online registration again until the application is reinstalled to complete the registration process.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isRegistered</name>
            <comment>Get MSDK registration status. true means that the MSDK has been registered successfully.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>MSDK is initialized, and the MSDK internal module initialization operation is performed. After the initialization is completed, registerApp needs to be called to perform the MSDK registration operation.
 Note: MSDK will always hold a strong reference to the SDKManagerCallback object, please do not let SDKManagerCallback to hold objects with a short life cycle in the program, such as Activity and Fragment, otherwise there will be memory leaks</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>ProductCategory</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the MSDK package type.</comment>
        </property>
        <property>
            <name>SDKVersion</name>
            <returntype>java.lang.String</returntype>
            <comment>Get the MSDK version number.</comment>
        </property>
        <field>
            <name>ProductCategory_ALL</name>
            <comment>All categories, this MSDK package contains all DJI products supported by MSDK.</comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ProductCategory_HANDHELD</name>
            <comment>Handheld category, this MSDK package only contains all handhelds supported by MSDK.</comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>DJISDKInitEvent_START_TO_INITIALIZE</name>
            <comment>MSDK starts to initialize. Returned in InitProcess event sub.</comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ProductCategory_AIRCRAFT</name>
            <comment>Aircraft category, this MSDK package only contains all aircraft supported by MSDK.</comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>DJISDKInitEvent_INITIALIZE_COMPLETE</name>
            <comment>MSDK completes initialization. Returned in InitProcess event sub.</comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.AreaCodeManager.AreaCodeDataWrapper</name>
        <shortname>AreaCodeData</shortname>
        <owner>process</owner>
        <property>
            <name>AreaCode</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Source</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <field>
            <name>AreaCodeDataSource_AIRCRAFT_GPS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaCodeDataSource_MCC</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaCodeDataSource_CACHE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaCodeDataSource_UNRELIABLE_SOURCE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaCodeDataSource_PHONE_GPS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaCodeDataSource_IP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaCodeDataSource_LOW_ACCURACY_GPS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.AreaCodeManager.AreaCodeManagerWrapper</name>
        <shortname>AreaCodeManager</shortname>
        <owner>process</owner>
        <event>AreaCodeOnChange(from as AreaCodeData, to as AreaCodeData)</event>
        <method>
            <name>clearAllListeners</name>
            <comment>Remove all the listeners of area code.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>addAreaCodeChangeListener</name>
            <comment>Add the listener of area code.
 Return the listener object which can be used to call removeAreaCodeChangeListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeAreaCodeChangeListener</name>
            <comment>Remove the listener of area code.
 Send the listener object received from addAreaCodeChangeListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>AreaCode</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get current area code data.</comment>
        </property>
        <field>
            <name>AreaCode_UNITED_STATES_OF_AMERICA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaCode_FRANCE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaCode_JAPAN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaCode_CHINA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.DeviceHealthManager.DeviceHealthManagerWrapper</name>
        <shortname>DeviceHealthManager</shortname>
        <owner>process</owner>
        <event>HealthInfoUpdate(infos[] as DJIDeviceHealthInfo)</event>
        <method>
            <name>addDJIDeviceHealthInfoChangeListener</name>
            <comment>Add the listener of the device helth information.
 Return the listener object which can be used to call removeDJIDeviceHealthInfoChangeListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllListeners</name>
            <comment>Remove all listeners of device health information.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeDJIDeviceHealthInfoChangeListener</name>
            <comment>Remove the listener of the device health information.
 Send the listener object received from addDJIDeviceHealthInfoChangeListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>CurrentDJIDeviceHealthInfos</name>
            <returntype>com.biswajit.dji.DeviceHealthManager.DJIDeviceHealthInfoWrapper[]</returntype>
            <comment>Get the currnet device health information.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.DeviceHealthManager.DJIDeviceHealthInfoWrapper</name>
        <shortname>DJIDeviceHealthInfo</shortname>
        <owner>process</owner>
        <method>
            <name>informationCode</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>description</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>warningLevel</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>title</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <field>
            <name>WarningLevel_NOTICE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WarningLevel_NORMAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WarningLevel_SERIOUS_WARNING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WarningLevel_CAUTION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WarningLevel_WARNING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.DeviceStatusManager.DeviceStatusManagerWrapper</name>
        <shortname>DeviceStatusManager</shortname>
        <owner>process</owner>
        <event>DeviceStatusUpdate(from as DJIDeviceStatus, to as DJIDeviceStatus)</event>
        <method>
            <name>clearAllListeners</name>
            <comment>Remove all listeners of the device status.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>addDJIDeviceStatusChangeListener</name>
            <comment>Add the listener of the device status.
 Return the listener object which can be used to call removeDJIDeviceStatusChangeListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeDJIDeviceStatusChangeListener</name>
            <comment>Remove the listener of the device status.
 Send the listener object received from addDJIDeviceStatusChangeListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>CurrentDJIDeviceStatus</name>
            <returntype>com.biswajit.dji.DeviceStatusManager.DJIDeviceStatusWrapper</returntype>
            <comment>Get the current device status.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.DeviceStatusManager.DJIDeviceStatusWrapper</name>
        <shortname>DJIDeviceStatus</shortname>
        <owner>process</owner>
        <method>
            <name>description</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>warningLevel</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>statusCode</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <field>
            <name>WarningLevel_NOTICE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WarningLevel_NORMAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WarningLevel_SERIOUS_WARNING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WarningLevel_CAUTION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WarningLevel_WARNING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.FlyZoneManager.FlySafeDatabaseInfoWrapper</name>
        <shortname>FlySafeDatabaseInfo</shortname>
        <owner>process</owner>
        <property>
            <name>DatabaseName</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the name of the fly safety database.
 Note: The database name on the aircraft cannot be obtained.</comment>
        </property>
        <property>
            <name>DatabaseTimeStamp</name>
            <returntype>long</returntype>
            <comment>Gets the import timestamp of the fly safety database.</comment>
        </property>
        <property>
            <name>Component</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the component type of the fly safety database.</comment>
        </property>
        <property>
            <name>DatabaseSize</name>
            <returntype>long</returntype>
            <comment>Gets the size of the fly safety database.
 Note: The database size on the aircraft cannot be obtained.</comment>
        </property>
        <property>
            <name>FlySafeDatabaseUpgradeMode</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the upgrade mode of the fly safety database.</comment>
        </property>
        <field>
            <name>FlySafeDatabaseComponent_AIRCRAFT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeDatabaseComponent_MSDK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeDatabaseUpgradeMode_MANUAL_IMPORT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeDatabaseUpgradeMode_AUTOMATIC_UPGRADE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.FlyZoneManager.FlySafeReturnToHomeInformationWrapper</name>
        <shortname>FlySafeReturnToHomeInformation</shortname>
        <owner>process</owner>
        <property>
            <name>Description</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the description of fly safety notification related to returning to home.</comment>
        </property>
        <property>
            <name>Event</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the event of fly safety notification related to returning to home.</comment>
        </property>
        <field>
            <name>FlySafeReturnToHomeEvent_CROSS_NO_FLY_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeReturnToHomeEvent_NEAR_NO_FLY_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.FlyZoneManager.FlySafeSeriousWarningInformationWrapper</name>
        <shortname>FlySafeSeriousWarningInformation</shortname>
        <owner>process</owner>
        <property>
            <name>Description</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the description of fly serious safety warning information.</comment>
        </property>
        <property>
            <name>HeightLimit</name>
            <returntype>int</returntype>
            <comment>Gets the height limit of current fly zone. Returns 0 if not in the height limit zone.</comment>
        </property>
        <property>
            <name>Event</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the event of fly serious safety warning.</comment>
        </property>
        <property>
            <name>Countdown</name>
            <returntype>int</returntype>
            <comment>Gets the countdown to start automatically landing. After the countdown is over, it will automatically drop to the limit height, you will not be able to control the throttle, but you can adjust the horizontal direction to avoid obstacles.</comment>
        </property>
        <property>
            <name>FlyZoneInformation</name>
            <returntype>com.biswajit.dji.FlyZoneManager.FlyZoneInformationWrapper[]</returntype>
            <comment>Gets information about the fly zones. Returns null if not in a restricted fly zone.</comment>
        </property>
        <field>
            <name>FlySafeSeriousWarningEvent_IN_AUTHORIZATION_ZONE_WITHOUT_UNLOCKING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeSeriousWarningEvent_HAVE_THREE_MIN_WILL_APPLY_TFRS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeSeriousWarningEvent_IN_NO_FLY_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeSeriousWarningEvent_IN_LIMIT_HEIGHT_AREA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.FlyZoneManager.FlySafeTipInformationWrapper</name>
        <shortname>FlySafeTipInformation</shortname>
        <owner>process</owner>
        <property>
            <name>Description</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the description of fly safety tip information.</comment>
        </property>
        <property>
            <name>HeightLimit</name>
            <returntype>int</returntype>
            <comment>Gets the height limit of current fly zone. Returns 0 if not in the height limit zone.</comment>
        </property>
        <property>
            <name>Event</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the event of fly safety tip.</comment>
        </property>
        <property>
            <name>FlyZoneInformation</name>
            <returntype>com.biswajit.dji.FlyZoneManager.FlyZoneInformationWrapper[]</returntype>
            <comment>Gets information about the fly zones. Returns null if not in a restricted fly zone.</comment>
        </property>
        <field>
            <name>FlySafeTipEvent_TAKE_OFF_IN_WARNING_AREA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeTipEvent_COLLISION_WITH_LIMIT_HEIGHT_AREA_SOON_IN_WHITE_LIST_VALID_AREA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeTipEvent_ENTER_LIMIT_HEIGHT_AREA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeTipEvent_TAKE_OFF_IN_HEIGHT_LIMIT_ZONE_WITHOUT_GPS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeTipEvent_TOUCH_AUTHORIZATION_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeTipEvent_REACH_MAXIMUM_FLIGHT_HEIGHT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeTipEvent_RTH_AFFECTED_AT_BOUNDARY_OF_GEO_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeTipEvent_AT_BOUNDARY_OF_CUSTOM_UNLOCK_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeTipEvent_TAKE_OFF_IN_HEIGHT_LIMIT_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeTipEvent_TOUCH_NO_FLY_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.FlyZoneManager.FlySafeWarningInformationWrapper</name>
        <shortname>FlySafeWarningInformation</shortname>
        <owner>process</owner>
        <property>
            <name>Description</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the description of fly safety warning information.</comment>
        </property>
        <property>
            <name>HeightLimit</name>
            <returntype>int</returntype>
            <comment>Gets the height limit of current fly zone. Returns 0 if not in the height limit zone.</comment>
        </property>
        <property>
            <name>Event</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the event of fly safety warning.</comment>
        </property>
        <property>
            <name>FlyZoneInformation</name>
            <returntype>com.biswajit.dji.FlyZoneManager.FlyZoneInformationWrapper[]</returntype>
            <comment>Gets information about the fly zones. Returns null if not in a restricted fly zone.</comment>
        </property>
        <field>
            <name>FlySafeWarningEvent_TAKE_OFF_FAILED_IN_AUTHORIZED_ZONE_WITHOUT_UNLOCKING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_TAKE_OFF_FAILED_IN_AUTHORIZED_AREA_WITHOUT_GPS_AND_UNLOCKING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_TAKE_OFF_FAILED_IN_AUTHORIZED_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_AUTHORIZED_ZONE_WITHOUT_UNLOCKING_NEARBY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_TAKE_OFF_FAILED_UNDER_LIMIT_AREA_WITH_GPS_ONCE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_IN_AUTHORIZATION_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_HAVE_ONE_HOUR_WILL_APPLY_TFRS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_TAKE_OFF_FAILED_IN_NO_FLY_ZONE_WITHOUT_GPS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_TAKE_OFF_NEAR_NO_FLY_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_TAKE_OFF_FAILED_WITHOUT_CUSTOM_UNLOCKING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_LIMITED_RESTRICTIONS_NEARBY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_AUTHORIZED_ZONE_AND_RESTRICTIONS_NEARBY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_TAKE_OFF_IN_ENHANCED_WARNING_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_TAKE_OFF_FAILED_IN_NO_FLY_ZONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeWarningEvent_RESTRICTIONS_IN_LIMITED_FLY_ZONE_NEARBY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.FlyZoneManager.FlyZoneInformationWrapper</name>
        <shortname>FlyZoneInformation</shortname>
        <owner>process</owner>
        <property>
            <name>FlyZoneID</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Category</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the category of the fly zone. Includes restricted zone, authorization zone, warning zone and enhanced warning zone, etc.</comment>
        </property>
        <property>
            <name>Shape</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the shape of the fly zone. Includes circles and polygons.</comment>
        </property>
        <property>
            <name>CircleCenter</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate2DWrapper</returntype>
            <comment>Gets the coordinates of the center of the circular restricted-fly zone.</comment>
        </property>
        <property>
            <name>LowerLimit</name>
            <returntype>double</returntype>
            <comment>Gets the lower limit of GeoZone data, currently only supports EU GeoZone data.</comment>
        </property>
        <property>
            <name>MultiPolygonFlyZoneInformation</name>
            <returntype>com.biswajit.dji.FlyZoneManager.MultiPolygonFlyZoneInformationWrapper[]</returntype>
            <comment>Gets the polygon restricted fly zone information. Contains cylindrical and polygonal no-fly zone information.</comment>
        </property>
        <property>
            <name>CircleRadius</name>
            <returntype>double</returntype>
            <comment>Gets the radius of the circular restricted fly zone.</comment>
        </property>
        <property>
            <name>UpperLimit</name>
            <returntype>double</returntype>
            <comment>Gets the upper limit of GeoZone data, currently only supports EU GeoZone data.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FlyZoneType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the type fly zone. Includes airports, parks, schools, stadium, etc.</comment>
        </property>
        <field>
            <name>FlyZoneType_PROHIBITED_SPECIAL_USE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_PRISON</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_RESTRICTED_SPECIAL_USE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneCategory_ENHANCED_WARNING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_TEMPORARY_FLIGHT_RESTRICTIONS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_CLASS_B_AIR_SPACE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneShape_CIRCLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_STADIUM</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_NUCLEAR_POWER_PLANT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneShape_MULTI_POLYGON</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_PRIVATE_RECREATIONAL_AIRPORTS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_NOAA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_NATIONAL_PARKS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_PRIVATE_COMMERCIAL_AIRPORTS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_POWER_PLANT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_CLASS_D_AIR_SPACE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_RECREATIONAL_AIRPORTS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_SCHOOL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_MILITARY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneCategory_WARNING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_PARCEL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_SPECIAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_COMMERCIAL_AIRPORTS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_CLASS_E_AIR_SPACE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_HELIPORT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_CLASS_C_AIR_SPACE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_UNPAVED_AIRPORT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneType_AIRPORT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneCategory_AUTHORIZATION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlyZoneCategory_RESTRICTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.FlyZoneManager.FlyZoneLicenseInfoWrapper</name>
        <shortname>FlyZoneLicenseInfo</shortname>
        <owner>process</owner>
        <method>
            <name>isEnabled</name>
            <comment>Gets whether the restricted fly zone license is valid. You can call setFlyZoneLicensesEnabled to enable or disable the licnese. After enabling the license, the aircraft will be able to take off normally in the restricted fly zone.\</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isValid</name>
            <comment>Gets whether the restricted fly zone licnese is valid. If the licnese has expired, please re-apply the license on the DJI official website.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>FlyZoneIDs</name>
            <returntype>int[]</returntype>
            <comment>Gets the ID of unlock restricted fly zone.</comment>
        </property>
        <property>
            <name>CylinderHeight</name>
            <returntype>int</returntype>
            <comment>Gets the height limit of the unlock cylinder zone.</comment>
        </property>
        <property>
            <name>CountryId</name>
            <returntype>int</returntype>
            <comment>Gets the country unlock zone ID.</comment>
        </property>
        <property>
            <name>Description</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the description of the restricted fly zone licnese.</comment>
        </property>
        <property>
            <name>LimitedHeight</name>
            <returntype>int</returntype>
            <comment>Gets the unlock height limit.</comment>
        </property>
        <property>
            <name>CylinderLongitude</name>
            <returntype>float</returntype>
            <comment>Gets the longitude of the unlock cylinder zone.</comment>
        </property>
        <property>
            <name>RidUnlockType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the RID unlock type.</comment>
        </property>
        <property>
            <name>PolygonPoints</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate2DWrapper[]</returntype>
            <comment>Gets the range of the unlock polygon zone.</comment>
        </property>
        <property>
            <name>LicenseId</name>
            <returntype>int</returntype>
            <comment>Gets the ID of the restricted fly zone release license.</comment>
        </property>
        <property>
            <name>LicenseType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the type of the restricted fly zone licnese.</comment>
        </property>
        <property>
            <name>EndTimeStamp</name>
            <returntype>long</returntype>
            <comment>Gets the end timestamp of the validity period of the restricted fly zone license.</comment>
        </property>
        <property>
            <name>CylinderLatitude</name>
            <returntype>float</returntype>
            <comment>Gets the latitude of the unlock cylinder zone.</comment>
        </property>
        <property>
            <name>StartTimeStamp</name>
            <returntype>long</returntype>
            <comment>Gets the start timestamp of the validity period of the restricted fly zone license.</comment>
        </property>
        <property>
            <name>SN</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the flight controller SN of the aircraft that is bound to the licnese.</comment>
        </property>
        <property>
            <name>CylinderRadius</name>
            <returntype>float</returntype>
            <comment>Gets the radius of the unlock cylinder zone.</comment>
        </property>
        <field>
            <name>RidUnlockType_EUROPEAN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeLicenseType_GEO_UNLOCK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeLicenseType_PARAMETER_CONFIGURATION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeLicenseType_POWER_UNLOCK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeLicenseType_PENTAGON_UNLOCK_AREA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeLicenseType_CIRCLE_UNLOCK_AREA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RidUnlockType_CHINA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeLicenseType_RID_UNLOCK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeLicenseType_COUNTRY_UNLOCK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.FlyZoneManager.FlyZoneManagerWrapper</name>
        <shortname>FlyZoneManager</shortname>
        <owner>process</owner>
        <event>OnSurroundingFlyZonesUpdate(zoneInfo() as FlyZoneInformation)</event>
        <event>OnReturnToHomeNotificationUpdate(info as FlySafeReturnToHomeInformation)</event>
        <event>OnSeriousWarningNotificationUpdate(info as FlySafeSeriousWarningInformation)</event>
        <event>OnTipNotificationUpdate(info as FlySafeTipInformation)</event>
        <event>OnWarningNotificationUpdate(info as FlySafeWarningInformation)</event>
        <event>GetFlyZonesInSurroundingArea(zoneInfo() as FlyZoneInformation, success as boolean, error as DJIError)</event>
        <event>UnlockAllEnhancedWarningFlyZone(success as boolean, error as DJIError)</event>
        <event>UnlockAuthorizationFlyZone(success as boolean, error as DJIError)</event>
        <event>DownloadFlyZoneLicensesFromServer(licenseInfo() as FlyZoneLicenseInfo, success as boolean, error as DJIError)</event>
        <event>PushFlyZoneLicensesToAircraft(success as boolean, error as DJIError)</event>
        <event>PullFlyZoneLicensesFromAircraft(licenseInfo() as FlyZoneLicenseInfo, success as boolean, error as DJIError)</event>
        <event>DeleteFlyZoneLicensesFromAircraft(success as boolean, error as DJIError)</event>
        <event>SetFlyZoneLicensesEnabled(success as boolean, error as DJIError)</event>
        <event>OnFlySafeDatabaseInfoUpdate(info as FlySafeReturnToHomeInformation)</event>
        <event>OnFlySafeDatabaseStateUpdate(state as Object)</event>
        <event>ImportFlySafeDBToMSDK(success as boolean, error as DJIError)</event>
        <event>ImportFlySafeDBToMSDKProgress(progress as Double)</event>
        <event>PushFlySafeDBToAircraft(success as boolean, error as DJIError)</event>
        <event>PushFlySafeDBToAircraftProgress(progress as Double)</event>
        <method>
            <name>deleteFlyZoneLicensesFromAircraft</name>
            <comment>Delete the licenses pushed to the aircraft.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addFlySafeDatabaseListener</name>
            <comment>Add a listener for the fly safety database. Fly safety database information includes: database upgrade mode, database upgrade status, and manually imported database information.
 Return the listener object which can be used to call removeFlySafeDatabaseListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeFlySafeNotificationListener</name>
            <comment>remove the listener for fly safety notification.
 Send the listener object received from addFlySafeNotificationListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>clearAllFlySafeDatabaseListener</name>
            <comment>Clear all listeners for fly safety database.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getFlyZonesByAreaID</name>
            <comment>Gets the restricted fly zone information for a specific areaID.
areaID: Restricted fly zone ID.</comment>
            <returntype>com.biswajit.dji.FlyZoneManager.FlyZoneInformationWrapper[]</returntype>
            <parameter>
                <name>areaID</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>removeFlySafeDatabaseListener</name>
            <comment>remove the listener for fly safety database.
 Send the listener object received from addFlySafeDatabaseListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>unlockAuthorizationFlyZone</name>
            <comment>Unlock the authorization fly zone. After unlocking the authorization fly zone, the aircraft will be able to take off normally in the authorization fly zone.
 Note:
 M300 RTK, M350 RTK, M30 series, M3E series and other enterprise aircraft can be directly transferred to flyZoneID to unlock the authorized area, and the authorization fly zone will continue to be banned after reboot the aircraft.
 DJI Mini 3 and DJI Mini 3 Pro and other consumer aircraft, you need to refer to the unlocking process of the restricted fly zone. After applying for unlocking on the official website of DJI, call downloadFlyZoneLicensesFromServer and pushFlyZoneLicensesToAircraft to unlock the authorization fly zone.
flyZoneID: Authorization fly zone ID.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>flyZoneID</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>pushFlyZoneLicensesToAircraft</name>
            <comment>Push the unlock licenses into the aircraft. MSDK will push the licenses matching the SN of the flight controller into the aircraft. After the push is successful, you can call pullFlyZoneLicensesFromAircraft to get the list of licenses that have been pushed to the aircraft. If you need to unlock the restricted zone, you can call setFlyZoneLicensesEnabled to enable or disable the unlock license</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setFlyZoneLicensesEnabled</name>
            <comment>Enable or disable unlock license. After enabling the license, the aircraft will be able to take off normally in the restricted fly zone.
info: license information.
isEnabled: true means enabled the licence.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>info</name>
                <type>com.biswajit.dji.FlyZoneManager.FlyZoneLicenseInfoWrapper</type>
            </parameter>
            <parameter>
                <name>isEnabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>clearAllFlySafeNotificationListener</name>
            <comment>Clear all listeners for fly safety notification.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getFlyZonesInSurroundingArea</name>
            <comment>Gets the fly zones within 50 kilometers from the central location.
 Note: If there are too many fly zones obtained, drawing the fly zones on the map may cause ANR problems. It is recommended to optimize the display.
location: Set the the central location.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>location</name>
                <type>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate2DWrapper</type>
            </parameter>
        </method>
        <method>
            <name>pullFlyZoneLicensesFromAircraft</name>
            <comment>Gets the licenses pushed to the aircraft.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>importFlySafeDynamicDatabaseToMSDK</name>
            <comment>Import the fly safety dynamic database into the MSDK. Currently, only only support to import the EU GeoZone data. If you want to fly your drone compliantly in the EU, please refer to the following process to import EU GeoZone data into the aircraft.
 Check European Aviation Safety Agency official website to download GeoZone data and import it into the aircraft.
 Call setFlySafeDynamicDatabaseUpgradeMode to set the fly safety dynamic database upgrade mode to manual import mode.
 Call importFlySafeDynamicDatabaseToMSDK to import GeoZone data into MSDK.
 Call pushFlySafeDynamicDatabaseToAircraft to synchronize GeoZone data to the aircraft.
 Call getFlyZonesInSurroundingArea to obtain GeoZone data within a range of 50 kilometers centered on the aircraft.
databaseFilePath: Database file path, the database file must be in JSON format and needs to comply with the ED-269 specification.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>databaseFilePath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>unlockAllEnhancedWarningFlyZone</name>
            <comment>Unlock all enhanced warning fly zones. After unlocking, the aircraft will no longer prompt any enhanced warning zone, and will continue to warn after reboot the aircraft.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>downloadFlyZoneLicensesFromServer</name>
            <comment>Gets the licenses for restricted fly zone from the server. In order to get the unlock licenses for the relevant account, please call logInDJIUserAccount to log in to the DJI account first,
 Note: If you want to draw the restricted fly zone in the license on the map, please pass the areaID in the restricted fly zone to getFlyZonesByAreaID, then you can get the restricted fly zone information of the areaID for drawing.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addFlySafeNotificationListener</name>
            <comment>Add a listener for fly safety notification. Fly safety n notification information includes: tips information, return home information, warning information, serious warning information, and fly zone near the aircraft.
 Return the listener object which can be used to call removeFlySafeNotificationListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>pushFlySafeDynamicDatabaseToAircraft</name>
            <comment>Synchronize the fly safety dynamic database to the aircraft. Currently only support to synchronize the EU GeoZone data. If you want to fly your drone compliantly in the EU, please refer to the following process to import EU GeoZone data into the aircraft.
 Check European Aviation Safety Agency official website to download GeoZone data and import it into the aircraft.
 Call setFlySafeDynamicDatabaseUpgradeMode to set the fly safety dynamic database upgrade mode to manual import mode.
 Call importFlySafeDynamicDatabaseToMSDK to import GeoZone data into MSDK.
 Call pushFlySafeDynamicDatabaseToAircraft to synchronize GeoZone data to the aircraft.
 Call getFlyZonesInSurroundingArea to obtain GeoZone data within a range of 50 kilometers centered on the aircraft.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <field>
            <name>FlySafeDatabaseState_NEED_TO_SYNC</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeDatabaseState_UP_TO_DATE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeDatabaseState_NEED_TO_IMPORT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeDatabaseUpgradeMode_MANUAL_IMPORT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlySafeDatabaseUpgradeMode_AUTOMATIC_UPGRADE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.FlyZoneManager.MultiPolygonFlyZoneInformationWrapper</name>
        <shortname>MultiPolygonFlyZoneInformation</shortname>
        <owner>process</owner>
        <property>
            <name>FlyZoneID</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Shape</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the shape type of the restricted fly zone. Contains cylinders and polygons.</comment>
        </property>
        <property>
            <name>LimitedHeight</name>
            <returntype>int</returntype>
            <comment>Gets the height limit of restricted fly zone.</comment>
        </property>
        <property>
            <name>PolygonPoints</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate2DWrapper[]</returntype>
            <comment>Gets the range of the polygon's restricted fly zone.</comment>
        </property>
        <property>
            <name>CylinderRadius</name>
            <returntype>double</returntype>
            <comment>Gets the radius of the cylindrical restricted fly zone.</comment>
        </property>
        <property>
            <name>CylinderCenter</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate2DWrapper</returntype>
            <comment>Gets the coordinates of the center of the cylindrical restricted-fly zone.</comment>
        </property>
        <field>
            <name>MultiPolygonFlyZoneShape_POLYGON</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MultiPolygonFlyZoneShape_CYLINDER</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper</name>
        <shortname>DJIValue</shortname>
        <owner>process</owner>
        <field>
            <name>ThermalROI_SKY_EXCLUDED50</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_AUTO_LANDING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_WIDE_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_2500</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_1DOT67</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_15</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_10</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MultiSpectralFusionType_NDVI</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ChannelSelectionMode_AUTO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AutoTurnOffLEDMode_FRONT_LEDS_ONLY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraISO_ISO_12800</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkType_OCU_SYNC</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraISO_ISO_AUTO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_0EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED3DOT2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_1P0EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ChannelSelectionMode_MANUAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMode_PHOTO_HYPER_LIGHT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LaserMeasureState_NORMAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindDirection_NORTH_EAST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_GPS_TRIPOD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MultiSpectralDisplayMode_PIP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_40</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraISO_ISO_6400</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindDirection_EAST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>SuperResolutionState_SELECTING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraType_ZENMUSE_H20</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraType_ZENMUSE_L1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_30</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MultiSpectralFusionType_GNDVI</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_20000</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CompassCalibrationState_FAILED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_2DOT5</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoRatio_RATIO_18COLON9</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraType_ZENMUSE_L2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraISO_ISO_50</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureMode_MANUAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalDisplayMode_PIP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ProductType_DJI_MINI_3</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalFFCMode_AUTO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerFlightMode_A</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_25</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_20</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_NDVI_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerFlightMode_F</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VideoFrameRate_RATE_60FPS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_ATTI</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraType_M30</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FailsafeAction_HOVER</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraThermalPalette_COLOR2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalTemperatureMeasureMode_REGION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraThermalPalette_COLOR1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_1P0EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GoHomeState_COMPLETED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MultiSpectralFusionType_NDRE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindDirection_NORTH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_12800</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_MS_R_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_0P3EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraStorageLocation_SDCARD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraType_M3E</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ProductType_M300_RTK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CompassCalibrationState_VERTICAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_2P0EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalAngleRotationMode_ABSOLUTE_ANGLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraType_M3M</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LengthUnit_METER</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_ZOOM_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraType_M3T</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightCoordinateSystem_BODY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseDirection_NORTH_EAST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalResetType_PITCH_YAW</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseDirection_NORTH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_AUTO_AVOIDANCE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_0P3EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalMode_FPV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BANDWIDTH_20MHZ_46Mbps</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoPanoramaMode_MODE_3x3</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WlmDongleWorkState_REGISTER_HOME_NETWORK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoPanoramaMode_MODE_3x1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraAntiFlicker_ANTI_FLICKER_50HZ</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>IMUCalibrationOrientation_NOSE_DOWN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraType_ZENMUSE_P1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>NavigationSatelliteSystem_GPS_GLONASS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>IMUCalibrationState_SUCCESSFUL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalROI_SKY_EXCLUDED33</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>IMUCalibrationOrientation_RIGHT_DOWN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightCoordinateSystem_GROUND</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GoHomeState_RETURNING_TO_HOME</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>IMUCalibrationOrientation_TAIL_DOWN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>SuperResolutionState_FINISH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraFocusMode_MANUAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMode_VIDEO_NORMAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AutoTurnOffLEDMode_BACK_LEDS_ONLY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMode_PHOTO_INTERVAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_TAKE_OFF_READY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GoHomeState_IDLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraWhiteBalanceMode_UNDERWATER</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1DOT6</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_2P0EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_PANO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_500</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1DOT3</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseDirection_SOUTH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AccessLockerStorageType_SD_CARD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoFileFormat_RAW</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MediaFileType_DNG</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_VISION_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BANDWIDTH_10MHZ_23Mbps</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GPSSignalLevel_3</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GPSSignalLevel_4</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraWhiteBalanceMode_NATURAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GPSSignalLevel_1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GPSSignalLevel_2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AccessLockerDeviceType_SLAVE_2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GPSSignalLevel_0</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AccessLockerDeviceType_SLAVE_1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AccessLockerDeviceType_SLAVE_3</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GPSSignalLevel_5</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindDirection_SOUTH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseWarningLevel_1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseWarningLevel_2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseWarningLevel_0</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LonLatFormat_DEGREES_DECIMAL_MINUTES</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalMode_FREE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_3200</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ControlLocation_LEFT_BOTTOM</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MultiSpectralDisplayMode_NDVI_ONLY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>SuperResolutionState_IN_PROGRESS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WlmDongleWorkState_REGISTER_DENIED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_GPS_SPORT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMeteringMode_CENTER</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindWarning_LEVEL_2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseWarningLevel_3</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseWarningLevel_4</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VideoFileFormat_MOV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindWarning_LEVEL_0</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindWarning_LEVEL_1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_725</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VideoFileFormat_MP4</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>SDCardLoadState_NOT_INSERTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>SuperResolutionState_TIP_GIMBAL_OUT_OF_RANGE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_3P0EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WlmDongleWorkState_NOT_REGISTER_SEARCHING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LowBatteryRTHState_CANCELLED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LaserMeasureState_TOO_CLOSE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_5P0EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindDirection_SOUTH_EAST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMode_PHOTO_NORMAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoFileFormat_RAW_JPEG</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_1250</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalCalibrationState_FAILED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_1P3EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_1000</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_1P3EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMeteringMode_AVERAGE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalIsothermUnit_PERCENTAGE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>SuperResolutionState_EXIT_SHOOT_FAIL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>IMUCalibrationOrientation_TOP_DOWN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerFlightMode_P</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalResetType_ONLY_ROLL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_POINT_CLOUD_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerFlightMode_M</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_3P0EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerFlightMode_T</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalScene_DEFAULT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerFlightMode_S</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED2DOT5</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalFFCMode_MANUAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_0P7EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AccessLockerDeviceType_MASTER</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_RGB_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoRatio_RATIO_16COLON9</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraFocusMode_AF</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MediaFileType_JPEG</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VideoFrameRate_RATE_30FPS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_3000</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED100</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LowBatteryRTHState_COUNTING_DOWN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FrequencyBand_BAND_2_DOT_4G</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMeteringMode_REGION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_10000</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_4P0EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseDirection_EAST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VideoResolution_RESOLUTION_1920x1080</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalCalibrationState_IN_PROGRESS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_800</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>SuperResolutionState_EXIT_GIMBAL_BLOCK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraISO_ISO_800</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraFocusMode_AFC</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureMode_SHUTTER_PRIORITY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMode_PHOTO_AEB</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_2000</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CompassCalibrationState_SUCCEEDED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraISO_ISO_3200</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_2P3EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LaserMeasureState_NO_SIGNAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseDirection_SOUTH_EAST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>IMUCalibrationState_FAILED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LaserWorkMode_OPEN_ALWAYS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>IMUCalibrationOrientation_LEFT_DOWN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_2P3EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindDirection_NORTH_WEST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED120</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_0P7EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraISO_ISO_100</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LowBatteryRTHState_IDLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>SuperResolutionState_EXIT_OUT_OF_STORAGE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_4P0EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_MS_RE_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_100</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_3P3EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraType_M30T</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_VIRTUAL_STICK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraThermalPalette_IRONBOW1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GPSSignalLevel_NONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalIsothermUnit_CELSIUS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CompassCalibrationState_IDLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WlmDongleWorkState_NOT_REGISTER_NO_SEARCH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_MS_NIR_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalDisplayMode_THERMAL_ONLY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalTemperatureMeasureMode_SPOT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_6DOT25</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_350</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMode_PHOTO_SUPER_RESOLUTION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalScene_MANUAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoRatio_RATIO_SQUARE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_3P3EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_1P7EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraISO_ISO_200</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureMode_APERTURE_PRIORITY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoSize_SIZE_LARGE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraWhiteBalanceMode_SUNNY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_200</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_320</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_6400</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AutoTurnOffLEDMode_ALL_LEDS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraThermalPalette_RAINBOW</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_4000</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ProductType_M30_SERIES</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_1P7EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>SuperResolutionState_TIP_OUT_OF_ZOOM</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>NavigationSatelliteSystem_BEIDOU</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_5P0EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseDirection_NORTH_WEST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LaserMeasureState_TOO_FAR</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraThermalPalette_ICE_FIRE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>IMUOrientationCalibrationState_CALIBRATING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoRatio_RATIO_4COLON3</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VideoResolution_RESOLUTION_640x512</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_MOTOR_START</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_INFRARED_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraType_ZENMUSE_H20T</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalAngleRotationMode_RELATIVE_ANGLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LonLatFormat_DECIMAL_DEGREE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_6000</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraThermalPalette_WHITE_HOT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraStorageLocation_INTERNAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>IMUCalibrationState_CALIBRATING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FailsafeAction_GOHOME</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraThermalPalette_GREEN_HOT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_4P3EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalResetType_PITCH_UP_OR_DOWN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FailsafeAction_LANDING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_WAYPOINT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_5000</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_400</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkType_WIFI</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraISO_ISO_400</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ProductType_M350_RTK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_4P3EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_640</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_2P7EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_12DOT5</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_MS_G_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalMode_YAW_FOLLOW</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LengthUnit_FOOT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>IMUCalibrationOrientation_BOTTOM_DOWN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalGainMode_HIGH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LaserWorkMode_OPEN_ON_DEMAND</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoFileFormat_JPEG</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_2P7EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMode_PHOTO_HIGH_RESOLUTION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalPIPPosition_SIDE_BY_SIDE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_16000</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureMode_PROGRAM</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalGainMode_LOW</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MediaFileType_MOV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraWhiteBalanceMode_MANUAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalCalibrationState_IDLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MediaFileType_MP4</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraWhiteBalanceMode_WATER_SURFACE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GPSSignalLevel_10</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_GO_HOME</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraAntiFlicker_ANTI_FLICKER_AUTO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED60</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BANDWIDTH_40MHZ_80Mbps</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED4</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GoHomeState_LANDING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_180</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED3</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED6</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED5</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalResetType_ONLY_YAW</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED8</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalScene_INSPECTION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraThermalPalette_RAIN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED7</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_3P7EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED9</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED50</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WlmLinkQualityLevel_LEVEL_5</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindDirection_WINDLESS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WlmLinkQualityLevel_LEVEL_3</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WlmLinkQualityLevel_LEVEL_4</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED_AUTO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_90</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_FIXED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WlmLinkQualityLevel_LEVEL_1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindDirection_SOUTH_WEST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WlmLinkQualityLevel_LEVEL_2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>SuperResolutionState_EXIT_GIMBAL_ABNORMAL_MOVE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AudioStorageLocation_PERMANENT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AudioStorageLocation_UNKNOWN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraVideoStreamSourceType_DEFAULT_CAMERA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_3P7EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_GPS_NORMAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_160</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoRatio_RATIO_3COLON2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LonLatFormat_SEXAGESIMAL_DEGREE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ProductType_DJI_MINI_3_PRO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED80</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ControlLocation_RIGHT_BOTTOM</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AutoTurnOffLEDMode_DISABLED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseDirection_WEST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AudioStorageLocation_TMEPORARY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalResetType_PITCH_UP_OR_DOWN_WITH_YAW_CENTER</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_8</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_FORCE_LANDING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_5</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraISO_ISO_25600</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraAntiFlicker_ANTI_FLICKER_60HZ</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_3</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_4</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMode_PHOTO_PANORAMA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraAntiFlicker_ANTI_FLICKER_OFF</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraWhiteBalanceMode_CLOUDY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FrequencyBand_BAND_5_DOT_8G</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED23</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_MANUAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_AUTO_TAKE_OFF</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED20</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalResetType_ONLY_PITCH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_60</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraWhiteBalanceMode_INDOOR_INCANDESCENT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED25</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_1DOT25</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FrequencyBand_BAND_DUAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WlmLinkQualityLevel_NO_SIGNAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraWhiteBalanceMode_AUTO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraMode_PHOTO_BURST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED13</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED10</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED11</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraISO_ISO_1600</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_50</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalROI_FULL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED16</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_SMART_FLY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_POI</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraWhiteBalanceMode_INDOOR_FLUORESCENT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED15</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_1500</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraThermalPalette_RED_HOT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_NEG_4P7EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ControlLocation_LEFT_TOP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoPanoramaMode_MODE_SPHERE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PhotoSize_SIZE_DEFAULT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirSenseDirection_SOUTH_WEST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED40</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_125</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalDigitalZoomFactor_FACTOR_X2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkType_LIGHT_BRIDGE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalDigitalZoomFactor_FACTOR_X1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WlmDongleWorkState_REGISTER_ROAMING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_80</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LowBatteryRTHState_EXECUTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ControlLocation_RIGHT_TOP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_240</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalDigitalZoomFactor_FACTOR_X8</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_120</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>SDCardLoadState_INSERTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ThermalDigitalZoomFactor_FACTOR_X4</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>IMUOrientationCalibrationState_SUCCESSFUL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightMode_APAS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraExposureCompensation_POS_4P7EV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_8000</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED30</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WindDirection_WEST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ProductType_DJI_MAVIC_3_ENTERPRISE_SERIES</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VideoResolution_RESOLUTION_3840x2160</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_250</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CompassCalibrationState_HORIZONTAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraThermalPalette_BLACK_HOT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraShutterSpeed_SHUTTER_SPEED1_1600</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.GimbalCalibrationStatusInfoWrapper</name>
        <shortname>GimbalCalibrationStatusInfo</shortname>
        <owner>process</owner>
        <property>
            <name>Status</name>
            <returntype>java.lang.Object</returntype>
            <comment>Return gimbal automatic calibration status.</comment>
        </property>
        <property>
            <name>Progress</name>
            <returntype>int</returntype>
            <comment>Return gimbal automatic calibration percentage.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.GimbalAttitudeRangeWrapper</name>
        <shortname>GimbalAttitudeRange</shortname>
        <owner>process</owner>
        <property>
            <name>Pitch</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.DoubleMinMaxWrapper</returntype>
            <comment>Return gimbal pitch value range.</comment>
        </property>
        <property>
            <name>Roll</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.DoubleMinMaxWrapper</returntype>
            <comment>Return gimbal roll value range.</comment>
        </property>
        <property>
            <name>Yaw</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.DoubleMinMaxWrapper</returntype>
            <comment>Return gimbal yaw value range.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.GimbalAngleRotationWrapper</name>
        <shortname>GimbalAngleRotation</shortname>
        <owner>process</owner>
        <property>
            <name>Mode</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>mode</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set gimbal angle rotation mode.</comment>
        </property>
        <property>
            <name>Pitch</name>
            <returntype>double</returntype>
            <parameter>
                <name>pitch</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set pitch angle of gimbal rotation. The positive number is rotated upward, while the negative number is rotated downward.</comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>double</returntype>
            <parameter>
                <name>duration</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set the time of gimbal rotation operation, which does not take effect in the waypoint mission.</comment>
        </property>
        <property>
            <name>Roll</name>
            <returntype>double</returntype>
            <parameter>
                <name>roll</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set the roll angle of gimbal rotation. Positive number is rotated right, while negative number is rotated left.</comment>
        </property>
        <property>
            <name>Yaw</name>
            <returntype>double</returntype>
            <parameter>
                <name>yaw</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set the yaw angle of gimbal rotation. The positive number is rotated right, while negative number is rotated left.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.GimbalSpeedRotationWrapper</name>
        <shortname>GimbalSpeedRotation</shortname>
        <owner>process</owner>
        <property>
            <name>Pitch</name>
            <returntype>double</returntype>
            <parameter>
                <name>pitch</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set pitch angle of gimbal rotation. The positive number is rotated upward, while the negative number is rotated downward.</comment>
        </property>
        <property>
            <name>Roll</name>
            <returntype>double</returntype>
            <parameter>
                <name>roll</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set the roll angle of gimbal rotation. Positive number is rotated right, while negative number is rotated left.</comment>
        </property>
        <property>
            <name>Yaw</name>
            <returntype>double</returntype>
            <parameter>
                <name>yaw</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set the yaw angle of gimbal rotation. The positive number is rotated right, while negative number is rotated left.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.MultiGimbalSyncControlInfoWrapper</name>
        <shortname>MultiGimbalSyncControlInfo</shortname>
        <owner>process</owner>
        <property>
            <name>GimbalSyncList</name>
            <returntype>java.lang.Object[]</returntype>
            <parameter>
                <name>gimbalSyncList</name>
                <type>java.lang.Object[]</type>
            </parameter>
            <comment>Get/Sets the list of gimbals that need to be synchronization control.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.MultiGimbalSyncStatusWrapper</name>
        <shortname>MultiGimbalSyncStatusWrapper</shortname>
        <owner>process</owner>
        <property>
            <name>IsInGimbalSync</name>
            <returntype>boolean</returntype>
            <comment>Gets whether it is in the multi-gimbal synchronization control state.</comment>
        </property>
        <property>
            <name>OnSyncGimbals</name>
            <returntype>java.lang.Object[]</returntype>
            <comment>Gets the list of gimbals that need to be synchronization control.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.CameraHybridZoomSpecWrapper</name>
        <shortname>CameraHybridZoomSpec</shortname>
        <owner>process</owner>
        <property>
            <name>FocalLengthStep</name>
            <returntype>double</returntype>
            <comment>To get the set step size for hybrid zoom. Unit: 0.1mm.</comment>
        </property>
        <property>
            <name>MaxFocalLength</name>
            <returntype>double</returntype>
            <comment>To get the maximum focal length of the hybrid zoom. Unit: 0.1mm.</comment>
        </property>
        <property>
            <name>MinFocalLength</name>
            <returntype>double</returntype>
            <comment>To get the minimum focal length of hybrid zoom. Unit: 0.1mm.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.VideoResolutionFrameRateWrapper</name>
        <shortname>VideoResolutionFrameRate</shortname>
        <owner>process</owner>
        <property>
            <name>FrameRate</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>frameRate</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set the resolution and frame rate of the camera lens video. Check VideoFrameRate constant.</comment>
        </property>
        <property>
            <name>Resolution</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>resolution</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set the resolution and frame rate of the camera lens video. Check VideoResolution constant.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.ZoomRatiosRangeWrapper</name>
        <shortname>ZoomRatiosRange</shortname>
        <owner>process</owner>
        <method>
            <name>isContinuous</name>
            <comment>Gets whether the zoom ratio range is continuous. If it is not continuous, it means that only the value in the key gear can be set. If continuous, it means that any value between the minimum value and maximum value in the key gear can be set.
 Take M3T as an example: isContinuous is TRUE, and the key gears are: [1,2,4,7,28,56], which means that any value of [1,56] can be set.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Gears</name>
            <returntype>int[]</returntype>
            <comment>Gets to the key gear of the zoom ratio range.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.LaserMeasureInformationWrapper</name>
        <shortname>LaserMeasureInformation</shortname>
        <owner>process</owner>
        <property>
            <name>LaserMeasureState</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the laser measure status.</comment>
        </property>
        <property>
            <name>TargetPoint</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.DoublePoint2DWrapper</returntype>
            <comment>Gets the position of the target point on the camera screen. Range of x and y: [0,100]. [0,0] represents the upper left corner of the camera screen, [100,100] represents the lower right corner of the camera screen.</comment>
        </property>
        <property>
            <name>Location3D</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate3DWrapper</returntype>
            <comment>Gets the location of the target point, including longitude, latitude and altitude.</comment>
        </property>
        <property>
            <name>Distance</name>
            <returntype>double</returntype>
            <comment>Gets the distance of the target point from the laser sensor. The target point must be at least 3m away from The laser sensor.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.MultiSpectralFusionDisplayRangeWrapper</name>
        <shortname>MultiSpectralFusionDisplayRange</shortname>
        <owner>process</owner>
        <property>
            <name>DisplayMax</name>
            <returntype>int</returntype>
            <parameter>
                <name>displayMax</name>
                <type>int</type>
            </parameter>
            <comment>Get/Set the maximum value of multispectral fusion display range.</comment>
        </property>
        <property>
            <name>DisplayMin</name>
            <returntype>int</returntype>
            <parameter>
                <name>displayMin</name>
                <type>int</type>
            </parameter>
            <comment>Get/Set the minimum value of multispectral fusion display range.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.CameraWhiteBalanceInfoWrapper</name>
        <shortname>CameraWhiteBalanceInfo</shortname>
        <owner>process</owner>
        <property>
            <name>ColorTemperature</name>
            <returntype>int</returntype>
            <parameter>
                <name>displayMin</name>
                <type>int</type>
            </parameter>
            <comment>Get/Set Color temperature value in the range of [20, 100]. Real color temperature value (K) = value * 100. For example, 50 -&gt; 5000K.</comment>
        </property>
        <property>
            <name>WhiteBalanceMode</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>whiteBalanceMode</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set White Balance. Check CameraWhiteBalanceMode constant.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.CameraStreamSettingsInfoWrapper</name>
        <shortname>CameraStreamSettingsInfo</shortname>
        <owner>process</owner>
        <property>
            <name>CameraVideoStreamSources</name>
            <returntype>java.lang.Object[]</returntype>
            <parameter>
                <name>cameraVideoStreamSources</name>
                <type>java.lang.Object[]</type>
            </parameter>
            <comment>Get/Set lens video source type that needs to store media files. It can be set to store multiple lens video sources.</comment>
        </property>
        <property>
            <name>RequestCurrentScreen</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>requestCurrentScreen</name>
                <type>boolean</type>
            </parameter>
            <comment>True means to store the media files generated by the current live video stream when taking pictures or recording videos. You can get the video source type of the current live video stream through KeyCameraVideoStreamSource.
 Notice:
 If it is in the camera mode, the stored photo is the photo of the video source of the current lens, but in the split-screen mode PIP of the infrared lens, it is a screenshot of the image transmission.
 If it is in recording mode, the stored video is the image transmitted by the current lens, not a high-definition video.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.CameraWatermarkSettingsWrapper</name>
        <shortname>CameraWatermarkSettings</shortname>
        <owner>process</owner>
        <property>
            <name>EnabledForVideos</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>enabledForVideos</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set whether to generate the watermark information in the video.</comment>
        </property>
        <property>
            <name>EnabledForPhotos</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>enabledForPhotos</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set whether to generate the watermark information in the photo.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.CustomExpandNameSettingsWrapper</name>
        <shortname>CustomExpandNameSettings</shortname>
        <owner>process</owner>
        <property>
            <name>CustomContent</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>customContent</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Get/Set custom name.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.WatermarkDisplayContentSettingsWrapper</name>
        <shortname>WatermarkDisplayContentSettings</shortname>
        <owner>process</owner>
        <property>
            <name>GpsLonLatEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>gpsLonLatEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set whether to add the drone longitude and latitude location information to the watermark. You can set the display format of longitude and latitude location information through getLonLatFormat.</comment>
        </property>
        <property>
            <name>DateTimeEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>dateTimeEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set whether to add time information to the watermark.</comment>
        </property>
        <property>
            <name>LonLatFormat</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>lonLatFormat</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set the display format of the latitude and longitude in the watermark. Check KeyTools class for the LonLatFormat constant.</comment>
        </property>
        <property>
            <name>ScreenLocation</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>screenLocation</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set where the watermark is displayed on the camera screen. Check KeyTools class for the ControlLocation constant.</comment>
        </property>
        <property>
            <name>UserCustomStringEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>userCustomStringEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set whether to add custom copy information to the watermark.</comment>
        </property>
        <property>
            <name>GpsAltitudeEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>gpsAltitudeEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set whether to add the aircraft altitude  information to the watermark.</comment>
        </property>
        <property>
            <name>DroneTypeEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>droneTypeEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set whether to add drone type information to the watermark.</comment>
        </property>
        <property>
            <name>LengthUnit</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>lengthUnit</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set the display unit for height in the watermark. Check KeyTools class for the LengthUnit constant.</comment>
        </property>
        <property>
            <name>DroneSnEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>droneSnEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set whether to add drone SN information to the watermark.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.CameraStorageInfosWrapper</name>
        <shortname>CameraStorageInfos</shortname>
        <owner>process</owner>
        <property>
            <name>CameraStorageInfoList</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.CameraStorageInfoWrapper[]</returntype>
            <comment>To get the details of the current camera storage card, including the details of the SD Card and onboard memory.</comment>
        </property>
        <property>
            <name>CurrentStorageType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the current storage location in use by the camera. 0 means that the SD card is currently being used to store media files. 1 indicates that the onboard memory is currently being used to store media files.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.CameraStorageInfoWrapper</name>
        <shortname>CameraStorageInfo</shortname>
        <owner>process</owner>
        <property>
            <name>StorageType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get camera storage type.</comment>
        </property>
        <property>
            <name>AvailablePhotoCount</name>
            <returntype>long</returntype>
            <comment>To get the remaining available photo count.</comment>
        </property>
        <property>
            <name>AvailableVideoDuration</name>
            <returntype>long</returntype>
            <comment>To get the remaining available video duration. Unit: second.</comment>
        </property>
        <property>
            <name>StorageCapacity</name>
            <returntype>double</returntype>
            <comment>To get the storage card capacity. Unit: MB.</comment>
        </property>
        <property>
            <name>StorageState</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the storage card insertion status. The on-board memory is plugged in by default.</comment>
        </property>
        <property>
            <name>StorageLeftCapacity</name>
            <returntype>double</returntype>
            <comment>To get the remaining capacity of the memory card. Unit: MB.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.ThermalGainModeTemperatureRangeWrapper</name>
        <shortname>ThermalGainModeTemperatureRange</shortname>
        <owner>process</owner>
        <property>
            <name>LowGainMax</name>
            <returntype>double</returntype>
            <comment>To get the maximum temperature of low gain mode.</comment>
        </property>
        <property>
            <name>HighGainMax</name>
            <returntype>double</returntype>
            <comment>To get the maximum temperature of high gain mode.</comment>
        </property>
        <property>
            <name>HighGainMin</name>
            <returntype>double</returntype>
            <comment>To get the minimum temperature of high gain mode.</comment>
        </property>
        <property>
            <name>LowGainMin</name>
            <returntype>double</returntype>
            <comment>To get the minimum temperature of low gain mode.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.ThermalAreaMetersureTemperatureWrapper</name>
        <shortname>ThermalAreaMetersureTemperature</shortname>
        <owner>process</owner>
        <property>
            <name>AverageAreaTemperature</name>
            <returntype>double</returntype>
            <comment>To get the average temperature measured in the current area.</comment>
        </property>
        <property>
            <name>MinTemperaturePoint</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.DoublePoint2DWrapper</returntype>
            <comment>To get the position of the minimum temperature measured in the current area.</comment>
        </property>
        <property>
            <name>MaxAreaTemperature</name>
            <returntype>double</returntype>
            <comment>To get the maximum temperature measured in the current area.</comment>
        </property>
        <property>
            <name>MinAreaTemperature</name>
            <returntype>double</returntype>
            <comment>To get the minimum temperature measured in the current area.</comment>
        </property>
        <property>
            <name>MaxTemperaturePoint</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.DoublePoint2DWrapper</returntype>
            <comment>To get the position of the maximum temperature measured in the current area.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.GeneratedMediaFileInfoWrapper</name>
        <shortname>GeneratedMediaFileInfo</shortname>
        <owner>process</owner>
        <property>
            <name>Type</name>
            <returntype>java.lang.Object</returntype>
            <comment>To get media file type.</comment>
        </property>
        <property>
            <name>CreateTime</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.DateTimeWrapper</returntype>
            <comment>To get the generation time of the media file.</comment>
        </property>
        <property>
            <name>Index</name>
            <returntype>int</returntype>
            <comment>To get the index of media file. Unique identifier for the media file. You can use this identifier and MediaFile to index more detailed media file information.</comment>
        </property>
        <property>
            <name>FileSize</name>
            <returntype>long</returntype>
            <comment>To get the media file size. Unit: byte.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.PhotoIntervalShootSettingsWrapper</name>
        <shortname>PhotoIntervalShootSettings</shortname>
        <owner>process</owner>
        <property>
            <name>Count</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment>Get/Set photo number of interval shooting.</comment>
        </property>
        <property>
            <name>Interval</name>
            <returntype>double</returntype>
            <parameter>
                <name>interval</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set the time of interval shooting. Since the camera needs a response time to take photos, the minimum photo interval needs to be set to more than 2 seconds.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.SuperResolutionInfoWrapper</name>
        <shortname>SuperResolutionInfo</shortname>
        <owner>process</owner>
        <property>
            <name>Status</name>
            <returntype>java.lang.Object</returntype>
            <comment>To get the status of super resolution photo shooting.</comment>
        </property>
        <property>
            <name>MaxArea</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.DoubleRect4SidesWrapper</returntype>
            <comment>To get the maximum area of super resolution photo shooting. This range is automatically calculated by the camera based on the camera angle.</comment>
        </property>
        <property>
            <name>CaptureRowCount</name>
            <returntype>int</returntype>
            <comment>To get the column number of super resolution photo shooting.</comment>
        </property>
        <property>
            <name>Progress</name>
            <returntype>int</returntype>
            <comment>To get the progress of super resolution photo shooting.</comment>
        </property>
        <property>
            <name>CaptureColumnCount</name>
            <returntype>int</returntype>
            <comment>To get the row number of super resolution photo shooting.</comment>
        </property>
        <property>
            <name>CaptureArea</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.DoubleRect4SidesWrapper</returntype>
            <comment>To get the currently set area of super resolution photo shooting.</comment>
        </property>
        <property>
            <name>IsStorageOverflow</name>
            <returntype>boolean</returntype>
            <comment>To get whether the SD Card is full.</comment>
        </property>
        <property>
            <name>ZoomTotalCount</name>
            <returntype>int</returntype>
            <comment>To get the total number of zoom photos that need to be taken for super resolution photo shooting.</comment>
        </property>
        <property>
            <name>ZoomCapturedCount</name>
            <returntype>int</returntype>
            <comment>To get the number of shots taken by super resolution photo shooting.</comment>
        </property>
        <property>
            <name>CaptureRemainingTime</name>
            <returntype>long</returntype>
            <comment>To get the remaining time of super resolution photo shooting.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.DoubleMinMaxWrapper</name>
        <shortname>DoubleMinMax</shortname>
        <owner>process</owner>
        <property>
            <name>Min</name>
            <returntype>double</returntype>
            <parameter>
                <name>min</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set minimum value.</comment>
        </property>
        <property>
            <name>Max</name>
            <returntype>double</returntype>
            <parameter>
                <name>max</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set maximum value.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate3DWrapper</name>
        <shortname>LocationCoordinate3D</shortname>
        <owner>process</owner>
        <property>
            <name>Latitude</name>
            <returntype>double</returntype>
            <parameter>
                <name>latitude</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Longitude</name>
            <returntype>double</returntype>
            <parameter>
                <name>longitude</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Altitude</name>
            <returntype>double</returntype>
            <parameter>
                <name>altitude</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate2DWrapper</name>
        <shortname>LocationCoordinate2D</shortname>
        <owner>process</owner>
        <property>
            <name>Latitude</name>
            <returntype>double</returntype>
            <parameter>
                <name>latitude</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Longitude</name>
            <returntype>double</returntype>
            <parameter>
                <name>longitude</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.DoublePoint2DWrapper</name>
        <shortname>DoublePoint2D</shortname>
        <owner>process</owner>
        <property>
            <name>X</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set x-axis data of two dimensional plane.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>double</returntype>
            <parameter>
                <name>y</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set y-axis data of two dimensional plane.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.DateTimeWrapper</name>
        <shortname>DJIDateTime</shortname>
        <owner>process</owner>
        <property>
            <name>Month</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Year</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Minute</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Second</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Hour</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Day</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.DateWrapper</name>
        <shortname>DJIDate</shortname>
        <owner>process</owner>
        <property>
            <name>Month</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Year</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Day</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.DoubleRect4SidesWrapper</name>
        <shortname>DoubleRect4Sides</shortname>
        <owner>process</owner>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Bottom</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.DoubleRectWrapper</name>
        <shortname>DoubleRect</shortname>
        <owner>process</owner>
        <property>
            <name>X</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.AttitudeWrapper</name>
        <shortname>Attitude</shortname>
        <owner>process</owner>
        <property>
            <name>Pitch</name>
            <returntype>double</returntype>
            <parameter>
                <name>pitch</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set pitch value.</comment>
        </property>
        <property>
            <name>Roll</name>
            <returntype>double</returntype>
            <parameter>
                <name>roll</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set the roll value</comment>
        </property>
        <property>
            <name>Yaw</name>
            <returntype>double</returntype>
            <parameter>
                <name>yaw</name>
                <type>double</type>
            </parameter>
            <comment>Get/Set the yaw value.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.IntValueConfigWrapper</name>
        <shortname>IntValueConfig</shortname>
        <owner>process</owner>
        <property>
            <name>DefaultValue</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Min</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Max</name>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.Velocity3DWrapper</name>
        <shortname>Velocity3D</shortname>
        <owner>process</owner>
        <property>
            <name>X</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Z</name>
            <returntype>double</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.BatteryLedsInfoWrapper</name>
        <shortname>BatteryLedsInfo</shortname>
        <owner>process</owner>
        <property>
            <name>AircraftLed</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>aircraftLed</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set the status of the power light on the aircraft.</comment>
        </property>
        <property>
            <name>BatteryLed</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>batteryLed</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set the status of the battery on the aircraft.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.PlayingAudioFileInfoWrapper</name>
        <shortname>PlayingAudioFileInfo</shortname>
        <owner>process</owner>
        <property>
            <name>Index</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsPlaying</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>isPlaying</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set the status of the power light on the aircraft.</comment>
        </property>
        <property>
            <name>Location</name>
            <returntype>java.lang.Object</returntype>
            <comment>Return AudioStorageLocation constant.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.WlmLinkQualityLevelInfoWrapper</name>
        <shortname>WlmLinkQualityLevelInfo</shortname>
        <owner>process</owner>
        <property>
            <name>LteLinkQualityLevel</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the LTE link signal quality level.
 Return WlmLinkQualityLevel constant.</comment>
        </property>
        <property>
            <name>OcuSyncLinkQualityLevel</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the OcuSync link signal quality level.
 Return WlmLinkQualityLevel constant.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.WlmDongleInfoWrapper</name>
        <shortname>WlmDongleInfo</shortname>
        <owner>process</owner>
        <property>
            <name>IsSimCardInserted</name>
            <returntype>boolean</returntype>
            <comment>Get whether the SIM card is inserted.</comment>
        </property>
        <property>
            <name>IsNeedUpgrade</name>
            <returntype>boolean</returntype>
            <comment>Get whether Dongle needs to be upgraded. MSDK currently does not support Dongle upgrade. If you need to upgrade, please use the DJI official App to upgrade.</comment>
        </property>
        <property>
            <name>Version</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the version of the LTE Dongle.</comment>
        </property>
        <property>
            <name>WorkState</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the working status of LTE Dongle.
 Return WlmDongleWorkState constant.</comment>
        </property>
        <property>
            <name>Sn</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the Dongle SN</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.WlmDongleListInfoWrapper</name>
        <shortname>WlmDongleListInfo</shortname>
        <owner>process</owner>
        <property>
            <name>StateList</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.WlmDongleInfoWrapper[]</returntype>
            <comment>Gets LTE dongle list information.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.IMUCalibrationInfoWrapper</name>
        <shortname>IMUCalibrationInfo</shortname>
        <owner>process</owner>
        <property>
            <name>OrientationsCalibrated</name>
            <returntype>java.lang.Object[]</returntype>
            <comment>Get a list with the aircraft orientations that have been calibrated.</comment>
        </property>
        <property>
            <name>OrientationCalibrationState</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the calibration status of the current orientation.
 Return IMUOrientationCalibrationState constant.</comment>
        </property>
        <property>
            <name>OrientationsToCalibrate</name>
            <returntype>java.lang.Object[]</returntype>
            <comment>Get a list with the aircraft orientations that have not been calibrated yet.</comment>
        </property>
        <property>
            <name>CalibrationState</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the IMU calibraion state.
 Return IMUCalibrationState constant.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.LowBatteryRTHInfoWrapper</name>
        <shortname>LowBatteryRTHInfo</shortname>
        <owner>process</owner>
        <property>
            <name>TimeNeededToLand</name>
            <returntype>long</returntype>
            <comment>To get the time required to complete the landing. Unit: second.
 The estimated time of the aircraft to complete landing in the present position.</comment>
        </property>
        <property>
            <name>LowBatteryRTHStatus</name>
            <returntype>java.lang.Object</returntype>
            <comment>To get the status of low battery return-to-home.</comment>
        </property>
        <property>
            <name>BatteryPercentNeededToLand</name>
            <returntype>long</returntype>
            <comment>To get the remaining power percentage when the aircraft needs of low battery landing. When the remaining power percentage is lower than this value, the low battery landing will be prompted.</comment>
        </property>
        <property>
            <name>MaxRadiusCanFlyAndGoHome</name>
            <returntype>double</returntype>
            <comment>To get the maximum safety flight radius with the home point as the center. Unit: meter. The maximum safety flight radius that the aircraft can safely return to the home point, which is calculated based on the flight altitude, distance from the home point, remaining battery power and other information. If the flight distance of the aircraft exceeds the radius, the aircraft may land on the way back.</comment>
        </property>
        <property>
            <name>RemainingFlightTime</name>
            <returntype>long</returntype>
            <comment>To get the estimated remaining flight time. Unit: second.
 The estimated remaining flight time is the time required for the aircraft to return home with 10% of the remaining battery power, including the time for the aircraft to land. If the aircraft is using the simulator, the value will be 0.</comment>
        </property>
        <property>
            <name>TimeNeededToGoHome</name>
            <returntype>long</returntype>
            <comment>To get the time required to complete smart return-to-home. Unit: second.
 The estimated time of the aircraft flying from present location to home point.</comment>
        </property>
        <property>
            <name>BatteryPercentNeededToGoHome</name>
            <returntype>long</returntype>
            <comment>To get the remaining power percentage when the aircraft needs smart low battery return-to-home. When the remaining power percentage is lower than this value, low battery return-to-home will be prompted.</comment>
        </property>
        <property>
            <name>SmartRTHCountdown</name>
            <returntype>long</returntype>
            <comment>To get the user confirmed countdown when returning home in low battery. Unit: second. 
 Once the countdown reaches 0, the aircraft will automatically return home. Only when the getLowBatteryRTHStatus is COUNTING_DOWN, it can work.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.LEDsSettingsWrapper</name>
        <shortname>LEDsSettings</shortname>
        <owner>process</owner>
        <property>
            <name>StatusIndicatorLEDsOn</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>statusIndicatorLEDsOn</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set the rear arm status indicator is on or off.</comment>
        </property>
        <property>
            <name>FrontLEDsOn</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>frontLEDsOn</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set the front LED on or off.</comment>
        </property>
        <property>
            <name>NavigationLEDsOn</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>navigationLEDsOn</name>
                <type>boolean</type>
            </parameter>
            <comment>Get/Set navigation LED on or off.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.AccessLockerVerifySecurityCodeInfoWrapper</name>
        <shortname>AccessLockerVerifySecurityCodeInfo</shortname>
        <owner>process</owner>
        <property>
            <name>DeviceType</name>
            <parameter>
                <name>type</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Set the device type to be verified.</comment>
        </property>
        <property>
            <name>StorageType</name>
            <parameter>
                <name>type</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Set the storage type that needs to be verifyed.</comment>
        </property>
        <property>
            <name>SecurityCode</name>
            <parameter>
                <name>code</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Set a secure code for verification.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.AccessLockerEncryptionStatusWrapper</name>
        <shortname>AccessLockerEncryptionStatus</shortname>
        <owner>process</owner>
        <property>
            <name>IsFeatureNeedToBeVerified</name>
            <returntype>boolean</returntype>
            <comment>Gets whether the security code of the storage device needs to be verified.</comment>
        </property>
        <property>
            <name>IsFeatureSupported</name>
            <returntype>boolean</returntype>
            <comment>Gets whether the storage device supports the security code function.</comment>
        </property>
        <property>
            <name>IsFeatureEnabled</name>
            <returntype>boolean</returntype>
            <comment>Gets whether the security code function of the storage device is enabled.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.AccessLockerDeviceStatusWrapper</name>
        <shortname>AccessLockerDeviceStatus</shortname>
        <owner>process</owner>
        <property>
            <name>SdCardEncryption</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.AccessLockerEncryptionStatusWrapper</returntype>
            <comment>Gets the security code status of the SD card.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.AccessLockerModifySecurityCodeInfoWrapper</name>
        <shortname>AccessLockerModifySecurityCodeInfo</shortname>
        <owner>process</owner>
        <property>
            <name>DeviceType</name>
            <parameter>
                <name>deviceType</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Set the device type to be modified.</comment>
        </property>
        <property>
            <name>StorageType</name>
            <parameter>
                <name>storageType</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Set the storage type that needs to be modified.</comment>
        </property>
        <property>
            <name>SecurityCode</name>
            <parameter>
                <name>securityCode</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Set the original security code.</comment>
        </property>
        <property>
            <name>NewSecurityCode</name>
            <parameter>
                <name>securityCode</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Set a new security code.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.AccessLockerResetSecurityCodeInfoWrapper</name>
        <shortname>AccessLockerResetSecurityCodeInfo</shortname>
        <owner>process</owner>
        <property>
            <name>DeviceType</name>
            <parameter>
                <name>deviceType</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Set the device type to be reset.</comment>
        </property>
        <property>
            <name>StorageType</name>
            <parameter>
                <name>storageType</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Set the storage type that needs to be reset.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.AccessLockerSetSecurityCodeInfoWrapper</name>
        <shortname>AccessLockerSetSecurityCodeInfo</shortname>
        <owner>process</owner>
        <property>
            <name>DeviceType</name>
            <parameter>
                <name>deviceType</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Set the device type.</comment>
        </property>
        <property>
            <name>StorageType</name>
            <parameter>
                <name>storageType</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Set the storage type.</comment>
        </property>
        <property>
            <name>SecurityCode</name>
            <parameter>
                <name>securityCode</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Set a security code.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.AirSenseAirplaneStateWrapper</name>
        <shortname>AirSenseAirplaneState</shortname>
        <owner>process</owner>
        <property>
            <name>RelativeDirection</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the direction of the airplane relative to the DJI aircraft.</comment>
        </property>
        <property>
            <name>Heading</name>
            <returntype>double</returntype>
            <comment>Gets the heading of the airplane.</comment>
        </property>
        <property>
            <name>WarningLevel</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the warning level determined by DJI AirSense system.</comment>
        </property>
        <property>
            <name>Latitude</name>
            <returntype>double</returntype>
            <comment>Gets the latitude of the airplane's position.</comment>
        </property>
        <property>
            <name>AbsoluteAltitude</name>
            <returntype>double</returntype>
            <comment>Gets the altitude of the airplane, unit: meter. For airplane of flight safety, this is the altitude after offset confusion, for reference only.</comment>
        </property>
        <property>
            <name>Code</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the unique code (ICAO) of the airplane.</comment>
        </property>
        <property>
            <name>Longitude</name>
            <returntype>double</returntype>
            <comment>Gets the longitude of the airplane's position.</comment>
        </property>
        <property>
            <name>Distance</name>
            <returntype>double</returntype>
            <comment>Gets the distance between the airplane and DJI aircraft in meters.</comment>
        </property>
        <property>
            <name>Altitude</name>
            <returntype>double</returntype>
            <comment>Gets the relative altitude between the airplane and the DJI aircraft, unit: meter. For reasons of airplane flight safety, this is the altitude after offset confusion, for reference only.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.DJIValueWrapper.AirSenseSystemInformationWrapper</name>
        <shortname>AirSenseSystemInformation</shortname>
        <owner>process</owner>
        <property>
            <name>WarningLevel</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the overall system warning level. This will be the worst case of all individual aircraft warning levels.</comment>
        </property>
        <property>
            <name>AirplaneStates</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.AirSenseAirplaneStateWrapper[]</returntype>
            <comment>Gest the state of all airplanes detected by DJI AirSense system.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.KeyManagerWrapper</name>
        <shortname>KeyManager</shortname>
        <owner>process</owner>
        <event>GetValueComplete(value as Object, success as Boolean, error as DJIError)</event>
        <event>SetValueComplete(success as Boolean, error as DJIError)</event>
        <event>PerformActionSuccess(result as Object, success as Boolean, error as DJIError)</event>
        <event>ValueChange(oldValue as Object, newValue as Object)</event>
        <method>
            <name>getValue</name>
            <comment>Obtain the DJIValue value of the DJIKey synchronously, which is the value obtained from the MSDK cache. To get the value asynchronously from the hardware device, please call getValueAsync.
key: DJIKey instance. Create using KeyTools.
Return type: @return:Return DJIValue value.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getValueDefault</name>
            <comment>Obtain the DJIValue value of the DJIKey synchronously, which is the value obtained from the MSDK cache. If the value cannot be read, the set defaultValue will be returned. To get the value asynchronously from the hardware device, please call getValueAsync.
key: DJIKey instance. Create using KeyTools.
defaultValue: When the MSDK cache value cannot be read, will return the default value.
Return type: @return:Return DJIValue value.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>defaultValue</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>cancelListen3</name>
            <comment>Cancels all listeners for a specific Holder.
listenHolder: The holder of the listener.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listenHolder</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getValueAsync</name>
            <comment>Get the DJIValue value of DJIKey asynchronously, which is the value obtained from the hardware device. To read the value from the MSDK cache, please call getValue/getValueDefault.
key: DJIKey instance. Create using KeyTools.
Return type: @return:Return DJIValue value in GetValueSuccess event.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>key</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>performAction</name>
            <comment>Execute the Action behavior of DJIKey.
key: DJIKey instance. Create using KeyTools.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>key</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>cancelListen1</name>
            <comment>Cancel the listening of specific DJIKey and specific listenHolder.
key: DJIKey instance. Create using KeyTools.
listenHolder: The holder of the listener.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>listenHolder</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>setValue</name>
            <comment>Set the parameter of DJIKey.
key: DJIKey instance. Create using KeyTools.
param: Parameter set.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>key</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>cancelListen2</name>
            <comment>Cancel the listening of specific DJIKey.
key: DJIKey instance. Create using KeyTools.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>performActionWithParam</name>
            <comment>Execute the Action behavior of DJIKey.
key: DJIKey instance. Create using KeyTools.
param: Action parameter.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>key</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>listen</name>
            <comment>Listen to the DJIValue value of DJIKey. While listening, the DJIValue value can be obtained asynchronously once.
key: DJIKey instance. Create using KeyTools.
listenHolder: The holder of the listener.
getOnce: true means that the value is obtained asynchronously once while listening.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>key</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>listenHolder</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>getOnce</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.biswajit.dji.KeyManager.KeyToolsWrapper</name>
        <shortname>KeyTools</shortname>
        <owner>process</owner>
        <method>
            <name>createKey1</name>
            <comment>The default method for creating Key instances.
mKeyInfo: A key interface in DJIKey. For example, CameraKey.KeyCameraType, which represents the key of the camera type.
productId: Product ID of the currently connected device, defaults to 0.
componentIndex: Gimbal load position. One of ComponentIndexType constant.
subComponentType: Camera lens type. One of CAMERA_LENS_MS_NIR constant.
subComponentIndex: Reserved parameter.
Return type: @return:Return instance of DJIKey.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>mKeyInfo</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>productId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>componentIndex</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>subComponentType</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>subComponentIndex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>createKey2</name>
            <comment>Create a Key instance by passing a DJIKeyInfo instance of a Key interface. This method is suitable for instance creation of keys that have nothing to do with the gimbal load and camera.
mKeyInfo: A key interface in DJIKey. For example, FlightControllerKey.KeyAircraftAttitude, which represents the key to get the aircraft attitude.
Return type: @return:Return instance of DJIKey.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>mKeyInfo</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>createCameraKey</name>
            <comment>Create a Key instance by passing in the DJIKeyInfo instance of a Key interface, camera lens type and the load position of the gimbal. This method is suitable for instance creation of keys related to the camera.
mKeyInfo: A key interface in DJIKey. For example, CameraKey.KeyCameraType, which represents the key of the camera type.
componentIndexType: Gimbal load position. One of ComponentIndexType constant.
cameraLensType: Camera lens type. One of CAMERA_LENS constant.
Return type: @return:Return instance of DJIKey.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>mKeyInfo</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>componentIndexType</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>cameraLensType</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>createKey3</name>
            <comment>Create a Key instance by passing in the DJIKeyInfo instance of a Key interface and the load position of the gimbal. This method is suitable for instance creation of keys related to the gimbal load.
mKeyInfo: A key interface in DJIKey. For example, GimbalKey.KeyGimbalReset, which represents the key to reset the gimbal.
componentIndexType: Gimbal load position. One of ComponentIndexType constant.
Return type: @return:Return instance of DJIKey.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>mKeyInfo</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>componentIndexType</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>createActionKey1</name>
            <comment>The default method for creating an ActionKey instance.
mKeyInfo: A key interface in DJIKey. For example, CameraKey.KeyCameraType, which represents the key of the camera type.
productId: Product ID of the currently connected device, defaults to 0.
componentIndex: Gimbal load position. One of ComponentIndexType constant.
subComponentType: Camera lens type. One of CAMERA_LENS_MS_NIR constant.
subComponentIndex: Reserved parameter.
Return type: @return:Return instance of DJIKey.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>mActionKeyInfo</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>productId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>componentIndex</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>subComponentType</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>subComponentIndex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>createActionKey2</name>
            <comment>Create an ActionKey instance by passing in a DJIKeyInfo instance of a Key interface. This method is suitable for instance creation of ActionKey which is not related to gimbal load and camera.
mKeyInfo: A key interface in DJIKey. For example, FlightControllerKey.KeyAircraftAttitude, which represents the key to get the aircraft attitude.
Return type: @return:Return instance of DJIKey.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>mActionKeyInfo</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>createActionKey3</name>
            <comment>Create an ActionKey instance by passing in the DJIKeyInfo instance of an ActionKey interface and the load position of the gimbal. This method is suitable for instance creation of ActionKey related to gimbal load.
mKeyInfo: A key interface in DJIKey. For example, GimbalKey.KeyGimbalReset, which represents the key to reset the gimbal.
componentIndexType: Gimbal load position. One of ComponentIndexType constant.
Return type: @return:Return instance of DJIKey.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>mActionKeyInfo</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>componentIndexType</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>createCameraActionKey</name>
            <comment>Create an ActionKey instance by passing in the DJIKeyInfo instance of an ActionKey interface, camera lens type and the load position of the gimbal. This method is suitable for instance creation of ActionKey related to camera.
mKeyInfo: A key interface in DJIKey. For example, CameraKey.KeyCameraType, which represents the key of the camera type.
componentIndexType: Gimbal load position. One of ComponentIndexType constant.
cameraLensType: Camera lens type. One of CAMERA_LENS constant.
Return type: @return:Return instance of DJIKey.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>mActionKeyInfo</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>componentIndexType</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>cameraLensType</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <field>
            <name>FlightControllerKey_KeyFirmwareVersion</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalPaletteRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyPhotoPanoramaProgress</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyRecordCameraStreamSettings</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeySuperResolutionInfo</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraVideoCaptionEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyGimbalReset</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyFrequencyInterference</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalIsothermEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CAMERA_LENS_THERMAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyFirmwareVersion</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyFiveDimensionPressedStatus</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraVideoStreamSourceRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyPhotoSize</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyExposureCompensationRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyFineTunePitchTotalDegree</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraVideoStreamSource</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CAMERA_LENS_DEFAULT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyMultiSpectralDisplayMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeySuperResolutionCaptureArea</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlLockAuthority</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyPhotoFileFormatRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyAutoTurnOffLEDMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyConnection</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraFocusRingMaxValue</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraZoomFocalLength</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalSuperResolution</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyMultiGimbalSyncStatus</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyFirmwareVersion</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyBatteryTemperature</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyMultiSpectralFusionType</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyRightDial</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyIsShootingPhoto</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyStopShootPhoto</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraWatermarkSettings</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyFlightMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyNumberOfCells</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyRecordButtonDown</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyCellVoltages</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalPalette</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalTemperatureMeasureMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CAMERA_LENS_MS_R</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyRecordingTime</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAccessLockerSetSecurityCode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyIsNearHeightLimit</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyIsNearDistanceLimit</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyFineTuneYawInDegrees</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyIMUCalibrationInfo</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyHomeLocationUsingCurrentAircraftLocation</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyLaserMeasureEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyFineTuneRollTotalDegree</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCleanFog</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlStatus</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraZoomRatiosRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyAntiFlicker</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyDistanceLimitRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyIsSeriousLowBatteryWarning</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyWatermarkDisplayContentSettings</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyChargeRemainingInPercent</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyCustomButton2Down</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyCoordinatedTurnEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyLowBatteryRTHConfirm</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyLeftDial</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyIsLowBatteryWarning</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CAMERA_LENS_MS_NDVI</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalRegionMetersureTemperature</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyYawControlMaxSpeed</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyGoHomeButtonDown</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalContrast</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraStorageInfos</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CAMERA_LENS_WIDE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalIsothermUpperValue</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalTriggerFFC</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyIsHomeLocationSet</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyShutterButtonDown</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyStopPairing</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyRCSwitchButtonDown</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyConnection</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCaptureCameraStreamSettings</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyISORange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAccessLockerVerifySecurityCode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalZoomRatios</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyGimbalVerticalShotEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraMeteringMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyLowBatteryWarningThreshold</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ComponentIndexType_UP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyResetCameraSetting</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyRegionMeteringArea</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraWhiteBalanceRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyCompassHeading</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyCompassCount</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyStopGoHome</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyIsCompassCalibrating</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyStickRightVertical</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyFrequencyPointRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlOnlineRcCount</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraFocusRingMinValue</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyWlmRcDongleListInfo</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyHeightLimitRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyPauseButtonDown</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyFormatStorage</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalGainModeTemperatureRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyLowBatteryRTHInfo</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyLaserMeasureInformation</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraFocusRingValue</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyYawSmoothingFactor</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCustomExpandFileNameSettings</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalRegionMetersureArea</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyConfirmLanding</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeySerialNumber</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyIRCutEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyRcFirmwareInfo</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlGimbalAuthorityOwner</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyFirmwareVersion</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyCustomButton3Down</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyAirLinkType</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyFineTunePitchInDegrees</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlRequestPairing</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAircraftVelocity</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyRequestPairing</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyCurrent</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyFrequencyPoint</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyControllingGimbal</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyLinkZoomEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyDynamicDataRate</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyVideoFileFormat</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyWindDirection</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAircraftTotalFlightTimes</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeySerialNumber</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyNavigationSatelliteSystemSource</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyDistanceLimit</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlIsSupported</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyVideoResolutionFrameRateRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyCompassCalibrationStatus</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAccessLockerAllDeviceStatus</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyConnection</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalIsothermUnit</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyCustomButton1Down</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyIsFlying</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyFailsafeAction</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyWlmAircraftDongleListInfo</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlChannel</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyWindSpeed</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyPitchRangeExtensionEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyDistanceLimitEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyRebootDevice</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyMultipleFlightModeEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyStickLeftVertical</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyStopCompassCalibration</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyStickRightHorizontal</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ComponentIndexType_RIGHT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyChargeRemaining</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyTakeoffLocationAltitude</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ProductKey_KeyFirmwareVersion</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyFirmwareVersion</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyIsShootingPhotoPanorama</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyStartCompassCalibration</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ProductKey_KeyConnection</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyGPSSatelliteCount</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyRebootDevice</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyPitchSmoothingFactor</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyESCBeepEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyYawRelativeToAircraftHeading</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyUltrasonicHeight</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyGimbalMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyBatteryHighVoltageStorageTime</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyPairingStatus</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyRotateBySpeed</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlExecuteFailSafeActionWhenLostControl</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyVideoFileFormatRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyFineTuneYawTotalDegree</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyGoHomeHeightRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyStartMultiGimbalSyncControl</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyNumberOfDischarges</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraZoomRatios</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyVoltage</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyGimbalCalibrate</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyWlmLinkQualityLevel</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyStartIMUCalibration</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyLockGimbalDuringShootPhotoEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlFlightControlAuthorityOwner</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAircraftLocation3D</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyBandwidth</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAccessLockerModifySecurityCode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyConnection</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalScene</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyIMUCount</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyLowBatteryRTHEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeySecondBatteryInfo</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraModeRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyExposureMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyIsLandingConfirmationNeeded</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyRestoreFactorySettings</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalDisplayMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyFineTuneRollInDegrees</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ProductKey_KeyProductType</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyFlightLogIndex</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyFlightTimeInSeconds</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeySerialNumber</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyStopRecord</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyFrequencyBand</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyHeightLimit</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyGimbalCalibrationStatus</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyControlMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyConnection</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CAMERA_LENS_MS_RE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeySignalQuality</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalPIPPosition</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraType</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyRemoteControllerType</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalBrightness</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAircraftTotalFlightDuration</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyChannelSelectionMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalFFCMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyConnection</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlOnlineAppCount</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyVideoResolutionFrameRate</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeySeriousLowBatteryWarningThreshold</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ComponentIndexType_LEFT_OR_MAIN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlLostControlNotice</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CAMERA_LENS_MS_NIR</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyWhiteBalance</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CAMERA_LENS_ZOOM</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyPhotoRatio</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyStartAutoLanding</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyStartShootPhoto</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyShutterSpeedRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyIsRecording</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCustomExpandDirectoryNameSettings</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyISO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyHomeLocation</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalSpotMetersurePoint</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyPhotoRatioRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraFocusTarget</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyPhotoIntervalCountdown</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyPhotoPanoramaMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyExposureCompensation</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AirLinkKey_KeyFrequencyBandRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyFullChargeCapacity</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyStartTakeoff</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAirSenseSystemInformation</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyExposureModeRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyScrollWheel</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ComponentIndexType_FPV</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyLockMotors</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyBatterySelfDischargeInDays</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyCompassHasError</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyWatermarkUserCustomInfo</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyRemoteControllerFlightMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalDDE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyStopTakeoff</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyWindWarning</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyShutterSpeed</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAccessLockerResetSecurityCode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyStopAutoLanding</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CAMERA_LENS_MS_G</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyPhotoIntervalShootSettings</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyGoHomeStatus</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeySwitchRcFirmware</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyNewlyGeneratedMediaFile</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyPitchControlMaxSpeed</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalGainMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAreMotorsOn</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyCameraFocusMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAircraftTotalFlightDistance</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyAELockEnabled</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CAMERA_LENS_RGB</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalROI</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyAircraftAttitude</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlFlightControlAuthorityLockStatus</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyLEDsSettings</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyGoHomeHeight</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>BatteryKey_KeyBatteryManufacturedDate</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyStopMultiGimbalSyncControl</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyGimbalAttitude</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyStartRecord</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeySpotMeteringPoint</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyGPSSignalLevel</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyStartGoHome</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControllerKey_KeyIsFailSafe</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalSpotMetersureTemperature</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyMultiControlAuthorityObtain</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyMultiSpectralFusionDisplayRange</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyBatteryInfo</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyLaserWorkMode</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteControllerKey_KeyStickLeftHorizontal</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyPhotoFileFormat</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GimbalKey_KeyRotateByAngle</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CameraKey_KeyThermalIsothermLowerValue</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.LTEManager.LTEAuthenticationInfoWrapper</name>
        <shortname>LTEAuthenticationInfo</shortname>
        <owner>process</owner>
        <method>
            <name>isLTEAuthenticated</name>
            <comment>Gets whether the drone is LTE authenticated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isLTEAuthenticationAvailable</name>
            <comment>Gets whether the LTE authentication function is available.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>LTEAuthenticatedPhoneNumber</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the mobile phone number for LTE authentication of this drone.</comment>
        </property>
        <property>
            <name>LTEAuthenticatedPhoneAreaCode</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the area code of the mobile phone number for this drone's LTE authentication.</comment>
        </property>
        <property>
            <name>LTELastAuthenticatedTime</name>
            <returntype>long</returntype>
            <comment>Gets the UTC timestamp of the last LTE authentication for this drone.</comment>
        </property>
        <property>
            <name>LTEAuthenticatedRemainingTime</name>
            <returntype>long</returntype>
            <comment>Get the remaining UTC timestamp of this drone's LTE authentication. LTE authentication is valid for 30 days by default.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.LTEManager.LTELinkInfoWrapper</name>
        <shortname>LTELinkInfo</shortname>
        <owner>process</owner>
        <property>
            <name>RemoteControllerPrivatizationServerInfo</name>
            <returntype>com.biswajit.dji.LTEManager.LTEPrivatizationServerInfoWrapper</returntype>
            <comment>Gets the address of the remote controller LTE privatization server that has been set. If the set IP address is empty, you can call setLTERemoteControllerPrivatizationServerInfo to set it.</comment>
        </property>
        <property>
            <name>AircraftPrivatizationServerInfo</name>
            <returntype>com.biswajit.dji.LTEManager.LTEPrivatizationServerInfoWrapper</returntype>
            <comment>Gets the address of the aircraft LTE privatization server that has been set. If the set IP address is empty, you can call setLTEAircraftPrivatizationServerInfo to set it.</comment>
        </property>
        <property>
            <name>LTELinkType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Getss the LTE link type.</comment>
        </property>
        <property>
            <name>LinkQualityLevel</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.WlmLinkQualityLevelInfoWrapper</returntype>
            <comment>Gets the LTE link quality level.</comment>
        </property>
        <field>
            <name>LTELinkType_OCU_SYNC_LTE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LTELinkType_OCU_SYNC</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.LTEManager.LTEManagerWrapper</name>
        <shortname>LTEManager</shortname>
        <owner>process</owner>
        <event>OnLTEAircraftDongleInfoUpdate(info() as WlmDongleInfo)</event>
        <event>OnLTERemoteControllerDongleInfoUpdate(info() as WlmDongleInfo)</event>
        <event>OnLTEAuthInfoUpdate(info as LTEAuthenticationInfo)</event>
        <event>UpdateLTEAuthInfo(success as boolean, error as DJIError)</event>
        <event>GetLTEAuthVerificationCode(success as boolean, error as DJIError)</event>
        <event>StartLTEAuthentication(success as boolean, error as DJIError)</event>
        <event>SetLTEEnhancedTransmissionType(success as boolean, error as DJIError)</event>
        <event>GetLTEEnhancedTransmissionType(LTELinkType as Object, success as boolean, error as DJIError)</event>
        <event>OnLTELinkInfoUpdate(info as LTELinkInfo)</event>
        <event>SetLTEAircraftPrivatizationServerInfo(success as boolean, error as DJIError)</event>
        <event>ClearLTEAircraftPrivatizationServer(success as boolean, error as DJIError)</event>
        <event>SetLTERemoteControllerPrivatizationServerInfo(success as boolean, error as DJIError)</event>
        <event>ClearLTERemoteControllerPrivatizationServer(success as boolean, error as DJIError)</event>
        <method>
            <name>clearAllLTEDongleInfoListener</name>
            <comment>Clean all the listener of the LTE dongle info.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setLTEAircraftPrivatizationServerInfo</name>
            <comment>Set the aircraft LTE privatization server address. You can call getAircraftPrivatizationServerInfo to monitor the address of the aircraft LTE privatization server that has been set.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>serverInfo</name>
                <type>com.biswajit.dji.LTEManager.LTEPrivatizationServerInfoWrapper</type>
            </parameter>
        </method>
        <method>
            <name>getLTEEnhancedTransmissionType</name>
            <comment>Obtain the LTE enhanced transmission type. OCU_SYNC_LTE means the enhanced image transmission function is enabled, and OCU_SYNC means the enhanced image transmission function is disabled and OCUSYNC video transmission is used.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setLTERemoteControllerPrivatizationServerInfo</name>
            <comment>Set the remote controller LTE privatization server address. You can call getRemoteControllerPrivatizationServerInfo to monitor the address of the remote controller LTE privatization server that has been set.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>serverInfo</name>
                <type>com.biswajit.dji.LTEManager.LTEPrivatizationServerInfoWrapper</type>
            </parameter>
        </method>
        <method>
            <name>clearLTERemoteControllerPrivatizationServer</name>
            <comment>Clear the remote controller LTE privatization server address.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearLTEAircraftPrivatizationServer</name>
            <comment>Clear the aircraft LTE privatization server address.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addLTEDongleInfoListener</name>
            <comment>Add a listener of LTE dongle information, through which the dongle information of the LTE can be obtained.
 Return the listener object which can be used to call removeLTEDongleInfoListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeLTEDongleInfoListener</name>
            <comment>Remove a listener of LTE dongle information.
 Send the listener object received from addLTEDongleInfoListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>updateLTEAuthenticationInfo</name>
            <comment>Update LTE authentication information. If LTEAuthenticationInfoListener fails to monitor the authentication information, you can call this interface to update the authentication information from the DJI server.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeLTEAuthenticationInfoListener</name>
            <comment>Remove a listener of LTE authentication information.
 Send the listener object received from addLTEAuthenticationInfoListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>removeLTELinkInfoListener</name>
            <comment>Remove a listener of LTE link information.
 Send the listener object received from addLTELinkInfoListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getLTEAuthenticationVerificationCode</name>
            <comment>Obtain the LTE authentication verification code. If isLTEAuthenticated is false, it means that the aircraft is not LTE-authenticated. You can obtain the LTE authentication verification code through this interface, and then call startLTEAuthentication to start LTE authentication .
phoneAreaCode: The area code of the LTE authentication mobile phone number, currently only supports mainland China (86).
phoneNumber: LTE authentication mobile phone number.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>phoneAreaCode</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>phoneNumber</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addLTELinkInfoListener</name>
            <comment>Add a listener of LTE link information, through which the link quality level can be obtained.
 Return the listener object which can be used to call removeLTELinkInfoListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllLTELinkInfoListener</name>
            <comment>Clean all the listener of the LTE link info.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>startLTEAuthentication</name>
            <comment>Start LTE authentication, call getLTEAuthenticationVerificationCode to get the LTE authentication verification code, and then call this interface to start LTE authentication. After passing the authentication, you can call setLTEEnhancedTransmissionType to enable and disable LTE enhanced video transmission.
phoneAreaCode: The area code of the LTE authentication mobile phone number, currently only supports mainland China (86).
phoneNumber: LTE authentication mobile phone number.
verificationCode: LTE authentication verification code.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>phoneAreaCode</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>phoneNumber</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>verificationCode</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setLTEEnhancedTransmissionType</name>
            <comment>Set the LTE enhanced transmission type, enable or disable the enhanced video transmission function. If the type is OCU_SYNC_LTE, it means that the enhanced video transmission function is enabled, and if the type is OCU_SYNC, it means that the enhanced video transmission function is disabled, and OCUSYNC video transmission is used.
lteLinkType: Check LTELinkType constant values.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>lteLinkType</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addLTEAuthenticationInfoListener</name>
            <comment>Add a listener of LTE authentication information, through which the authentication status and authentication information can be obtained. This function requires access to the DJI server for authentication, please ensure that the network connection is normal.
 Return the listener object which can be used to call removeLTEAuthenticationInfoListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllLTEAuthenticationInfoListener</name>
            <comment>Clean all the listener of the LTE authentication info.</comment>
            <returntype>void</returntype>
        </method>
        <field>
            <name>LTELinkType_OCU_SYNC_LTE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LTELinkType_OCU_SYNC</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.LTEManager.LTEPrivatizationServerInfoWrapper</name>
        <shortname>LTEPrivatizationServerInfo</shortname>
        <owner>process</owner>
        <property>
            <name>Ip</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ip</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Port</name>
            <returntype>int</returntype>
            <parameter>
                <name>port</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.AgoraSettingsWrapper</name>
        <shortname>AgoraSettings</shortname>
        <owner>process</owner>
        <method>
            <name>isEnableSafety</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Uid</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Token</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ChannelId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.CameraStreamManagerWrapper</name>
        <shortname>CameraStreamManager</shortname>
        <owner>process</owner>
        <event>AvailableCameraUpdated(cameraIndex[] as Object)</event>
        <event>FrameReceived(frameData() as byte, offset as Int, length as Int, width as Int, height as Int, frameFormat as Object)</event>
        <event>StreamReceived(data() as byte, offset as Int, length as Int, info as StreamInfo)</event>
        <method>
            <name>addFrameListener</name>
            <comment>Add video frame data listener. This listener can listen the video frame data of the specified camera. You can use video frame data to implement functions such as AI recognition.
cameraIndex: One of ComponentIndexType constant. Check KeyManager for ComponentIndexType constant.
fameFormat: One of FrameFormat constant.
TAG: Any identifier that will be passed to FrameReceived event.
Return type: @return:Return the listener object which can be used to call removeFrameListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>cameraIndex</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>fameFormat</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>TAG</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>removeReceiveStreamListener</name>
            <comment>Remove video stream data listener.
 Send the listener object received from addReceiveStreamListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addReceiveStreamListener</name>
            <comment>Add a video stream data listener. Through this listener, you can receive the raw video stream data of the specified camera. You can use this stream data to decode and display it yourself or implement functions such as third-party live streaming.
cameraIndex: One of ComponentIndexType constant. Check KeyManager for ComponentIndexType constant.
TAG: Any identifier that will be passed to StreamReceived event.
Return type: @return:Return the listener object which can be used to call removeReceiveStreamListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>cameraIndex</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>TAG</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addAvailableCameraUpdatedListener</name>
            <comment>Set available camera listener. This listener allows you to listen for available camera indexes. After obtaining the available camera indexes, you can call putCameraStreamSurface to display the video stream of a specific camera.
 Return the listener object which can be used to call removeAvailableCameraUpdatedListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeCameraStreamSurface</name>
            <comment>Remove the added surface. When you no longer need to use the surface, please call this interface to remove the added surface, otherwise it will cause memory leaks. After removal, the surface will no longer display the video stream.
panel: Set the Surface to be removed</comment>
            <returntype>void</returntype>
            <parameter>
                <name>panel</name>
                <type>android.view.ViewGroup</type>
            </parameter>
        </method>
        <method>
            <name>removeAvailableCameraUpdatedListener</name>
            <comment>Remove the listener of available camera.
 Send the listener object received from addAvailableCameraUpdatedListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>removeFrameListener</name>
            <comment>Remove video frame data listener.
 Send the listener object received from addFrameListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>putCameraStreamSurface</name>
            <comment>Display the camera video stream to a specific surface. A single surface can display at most one cameraIndex camera video stream at the same time. If this interface is called multiple times for the same surface, the parameters of the surface will be updated, such as updating the camera index, surface's size or scale type.
 Note:
 If you want to display images from different camera lenses, you can call KeyCameraVideoStreamSource to switch camera lenses.
cameraIndex: One of ComponentIndexType constant. Check KeyManager for ComponentIndexType constant.
panel: Set the surface that needs to display the video stream. It does not support GLSurfaceView surface and any surface bound to OpenGL.
scaleType: One of ScaleType constant.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>cameraIndex</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>panel</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>scaleType</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>KeepAliveDecoding</name>
            <parameter>
                <name>isKeepALive</name>
                <type>boolean</type>
            </parameter>
            <comment>Whether to let the decoder continue decoding in the background, the default value is false. If it is false, when the manager does not reference any Surface, ReceiveStreamListener, or CameraFrameListener, the decoder will pause decoding to reduce background performance/power consumption, but this will increase the delay in pushing camera video stream data for the first time. If true, the decoder will continue to decode in the background, which will increase performance/power consumption, but can reduce the delay in pushing camera video stream data for the first time.</comment>
        </property>
        <field>
            <name>ScaleType_CENTER_CROP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ScaleType_FIX_XY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FrameFormat_RGBA_8888</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MimeType_H264</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ScaleType_CENTER_INSIDE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MimeType_H265</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FrameFormat_NV21</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FrameFormat_YUV420_888</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FrameFormat_YUV444_888</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FrameFormat_YUY2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.GB28181SettingsWrapper</name>
        <shortname>GB28181Settings</shortname>
        <owner>process</owner>
        <property>
            <name>ServerID</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocalPort</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ServerIP</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Channel</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AgentID</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ServerPort</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Password</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.LiveStreamManagerWrapper</name>
        <shortname>LiveStreamManager</shortname>
        <owner>process</owner>
        <event>LiveStreamStartComplete(success as Boolean, error as DJIError)</event>
        <event>LiveStreamStopComplete(success as Boolean, error as DJIError)</event>
        <event>LiveStreamError(error as DJIError)</event>
        <event>LiveStreamStatusUpdate(status as LiveStreamStatus)</event>
        <method>
            <name>stopStream</name>
            <comment>Stop live streaming.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isStreaming</name>
            <comment>Get whether the aircraft is live streaming now.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>startStream</name>
            <comment>Start live streaming.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeLiveStreamStatusListener</name>
            <comment>Remove the listener of live stream status.
 Send the listener object received from addLiveStreamStatusListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addLiveStreamStatusListener</name>
            <comment>Add the listener of live stream status.
 Return the listener object which can be used to call removeLiveStreamStatusListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>CameraIndex</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>cameraIndex</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set the camera index that needs to live stream.</comment>
        </property>
        <property>
            <name>LiveStreamSettings</name>
            <returntype>com.biswajit.dji.MediaDataCenter.LiveStreamSettingsWrapper</returntype>
            <parameter>
                <name>settings</name>
                <type>com.biswajit.dji.MediaDataCenter.LiveStreamSettingsWrapper</type>
            </parameter>
            <comment>Get/Set live stream settings.</comment>
        </property>
        <property>
            <name>LiveVideoBitrate</name>
            <returntype>int</returntype>
            <parameter>
                <name>bitrate</name>
                <type>int</type>
            </parameter>
            <comment>Get/Set the live stream video bitrate.</comment>
        </property>
        <property>
            <name>LiveVideoBitrateMode</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>bitrateMode</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set the mode of live stream video bitrate.</comment>
        </property>
        <property>
            <name>LiveStreamQuality</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>quality</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set the type of live stream video quality.</comment>
        </property>
        <field>
            <name>LiveStreamType_RTSP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LiveStreamType_AGORA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>StreamQuality_HD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LiveStreamType_RTMP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LiveStreamType_GB28181</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LiveVideoBitrateMode_AUTO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>StreamQuality_SD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LiveVideoBitrateMode_MANUAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>StreamQuality_FULL_HD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.LiveStreamSettingsWrapper</name>
        <shortname>LiveStreamSettings</shortname>
        <owner>process</owner>
        <property>
            <name>RtspSettings</name>
            <returntype>com.biswajit.dji.MediaDataCenter.RtspSettingsWrapper</returntype>
            <comment>Get the RTSP video stream settings.</comment>
        </property>
        <property>
            <name>RtmpSettings</name>
            <returntype>com.biswajit.dji.MediaDataCenter.RtmpSettingsWrapper</returntype>
            <comment>Get the RTMP video stream settings.</comment>
        </property>
        <property>
            <name>LiveStreamType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the type of live stream protocol.
 Check LiveStreamManager for LiveStreamType constant values;</comment>
        </property>
        <property>
            <name>AgoraSettings</name>
            <returntype>com.biswajit.dji.MediaDataCenter.AgoraSettingsWrapper</returntype>
            <comment>Get the Agora video stream settings.</comment>
        </property>
        <property>
            <name>Gb28181Settings</name>
            <returntype>com.biswajit.dji.MediaDataCenter.GB28181SettingsWrapper</returntype>
            <comment>Get the GB28181 video stream settings.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.LiveStreamStatusWrapper</name>
        <shortname>LiveStreamStatus</shortname>
        <owner>process</owner>
        <method>
            <name>isStreaming</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Rtt</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PacketCacheLen</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Vbps</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Fps</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PacketLoss</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Resolution</name>
            <returntype>com.biswajit.dji.MediaDataCenter.VideoResolutionWrapper</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.MediaDataCenterWrapper</name>
        <shortname>MediaDataCenter</shortname>
        <owner>process</owner>
        <property>
            <name>CameraStreamManager</name>
            <returntype>com.biswajit.dji.MediaDataCenter.CameraStreamManagerWrapper</returntype>
            <comment>Obtain the CameraStreamManager instance, which supports functions such as camera lens video stream display, frame data and video stream data acquisition. CameraStreamManager has an abstract design for VideoStreamManager, shielding the concept of underlying VideoChannel. Make video stream management simpler and more stable.</comment>
        </property>
        <property>
            <name>LiveStreamManager</name>
            <returntype>com.biswajit.dji.MediaDataCenter.LiveStreamManagerWrapper</returntype>
            <comment>Get instance of MediaManager. This instance is used to manage the camera functions such as media file list download, media file preview, download and video playback.</comment>
        </property>
        <property>
            <name>MediaManager</name>
            <returntype>com.biswajit.dji.MediaDataCenter.MediaManagerWrapper</returntype>
            <comment>Get instance of MediaManager. This instance is used to manage the camera functions such as media file list download, media file preview, download and video playback.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.MediaFileListDataSourceWrapper</name>
        <shortname>MediaFileListDataSource</shortname>
        <owner>process</owner>
        <property>
            <name>ComponentIndexType</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>componentIndexType</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set location of payload.
 Check KeyTools for ComponentIndexType constant values</comment>
        </property>
        <property>
            <name>StorageLocation</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>storageLocation</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get/Set the storage location of data source.
 Check DJIValue for CameraStorageLocation constant values.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.MediaFileListDataWrapper</name>
        <shortname>MediaFileListData</shortname>
        <owner>process</owner>
        <property>
            <name>Data</name>
            <returntype>com.biswajit.dji.MediaDataCenter.MediaFileWrapper[]</returntype>
            <comment>Get the data of media file list.
 Return list of MediaFile</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.MediaFileWrapper</name>
        <shortname>MediaFile</shortname>
        <owner>process</owner>
        <event>PullThumbnailComplete(thumb as Bitmap, success as Boolean, error as DJIError)</event>
        <event>PullPreviewComplete(thumb as Bitmap, success as Boolean, error as DJIError)</event>
        <event>PullPreviewStopComplete(success as Boolean, error as DJIError)</event>
        <event>PullOrgMediaStopComplete(success as Boolean, error as DJIError)</event>
        <event>PullOrgMediaStarted</event>
        <event>PullOrgMediaComplete</event>
        <event>PullOrgMediaFailed(error as DJIError)</event>
        <event>PullOrgMediaProgress(total as Long, current as Long)</event>
        <event>PullOrgMediaRealtimeData(data() as byte, position as Long)</event>
        <event>PullXMPDataComplete(data as String,success as Boolean, error as DJIError)</event>
        <event>PullXMPCustomInfoComplete(data as String,success as Boolean, error as DJIError)</event>
        <method>
            <name>pullOriginalMediaFileFromCamera</name>
            <comment>Pull the origin media file from the camera. The pulled media file will be returned to the developer in the callback method. MSDK will no save the origin media file in memory and you can save it as needed.
offset: Offset value of media file download. Unit:byte.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>stopPullOriginalMediaFileFromCamera</name>
            <comment>Stop pulling origin media file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>stopPullPreviewFromCamera</name>
            <comment>Stop pulling the preview of media file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>pullXMPCustomInfoFromCamera</name>
            <comment>Pull XMP custom information in photo file from the camera.
 Notice:
 Currently only supports Zenmuse H20 series cameras, Zenmuse L1 camera, and Zenmuse P1 camera.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>pullPreviewFromCamera</name>
            <comment>Pull the preview of media file from the camera. The pulled preview will be returned to the developer in the callback method. MSDK will no save the preview in memory and you can save it as needed.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>pullXMPFileDataFromCamera</name>
            <comment>Pull XMP information in photo file from the camera.
 Notice:
 Currently only supports Zenmuse H20 series cameras, Zenmuse L1 camera, and Zenmuse P1 camera.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>pullThumbnailFromCamera</name>
            <comment>Pull the thumbnail of media file from the camera. The pulled thumbnail will be returned to the developer in the callback method and will be saved to the memory at the same time. You can call getThumbNail to get thumbnail from the memory.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>FrameRate</name>
            <returntype>java.lang.Object</returntype>
            <comment>Check DJIValue for VideoFrameRate constant values.</comment>
        </property>
        <property>
            <name>FileName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PhotoRatio</name>
            <returntype>java.lang.Object</returntype>
            <comment>Check DJIValue for PhotoRatio constant values.</comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>long</returntype>
            <comment>Get the duration of video play. Unit: second.</comment>
        </property>
        <property>
            <name>XMPCustomInfo</name>
            <returntype>java.lang.String</returntype>
            <comment>Synchronously obtain XMP custom information in photo file. If the return is empty, please call pullXMPFileDataFromCamera to pull XMP information from the camera.
 Notice:
 Currently only supports Zenmuse H20 series cameras, Zenmuse L1 camera, and Zenmuse P1 camera.</comment>
        </property>
        <property>
            <name>Date</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.DateTimeWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileIndex</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>XMPFileData</name>
            <returntype>java.lang.String</returntype>
            <comment>Synchronously obtain XMP information in photo file. If the return is empty, please call pullXMPFileDataFromCamera to pull XMP information from the camera.
 Notice:
 Currently only supports Zenmuse H20 series cameras, Zenmuse L1 camera, and Zenmuse P1 camera.</comment>
        </property>
        <property>
            <name>FileType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Check DJIValue for MediaFileType constant values.</comment>
        </property>
        <property>
            <name>ThumbNail</name>
            <returntype>android.graphics.Bitmap</returntype>
            <comment>Get media file thumbnail. Please call pullThumbnailFromCamera to pull the thumbnail from the camera first, and save to the memory.</comment>
        </property>
        <property>
            <name>FileSize</name>
            <returntype>long</returntype>
            <comment>Get size of media file. Unit: byte.</comment>
        </property>
        <property>
            <name>Resolution</name>
            <returntype>java.lang.Object</returntype>
            <comment>Check DJIValue for VideoResolution constant values.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.MediaManagerWrapper</name>
        <shortname>MediaManager</shortname>
        <owner>process</owner>
        <event>EnableComplete(success as boolean, error as DJIError)</event>
        <event>DisableComplete(success as boolean, error as DJIError)</event>
        <event>MediaFileListStateUpdate(mediaFileListState as Object)</event>
        <event>PullMediaComplete(success as boolean, error as DJIError)</event>
        <event>DeleteMediaComplete(success as boolean, error as DJIError)</event>
        <event>SetXMPCustomInfoComplete(success as boolean, error as DJIError)</event>
        <event>GetXMPCustomInfoComplete(data as String, success as boolean, error as DJIError)</event>
        <event>MediaStreamReceived(data() as byte, offset as Int, length as Int, info as StreamInfo)</event>
        <event>MediaPlaybackError(error as DJIError)</event>
        <event>MediaSeekSuccess</event>
        <event>MediaPauseSuccess</event>
        <event>MediaResumeSuccess</event>
        <event>MediaStopSuccess</event>
        <method>
            <name>release</name>
            <comment>Resource release. Calling this interface will cancel the media file data downloading, clear the thumbnail cache and clear the media file list data. It is recommended that you call it when the system memory is insufficient.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeAllVideoPlayStateListener</name>
            <comment>Remove listeners of media file playing status.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeAllMediaFileListStateListener</name>
            <comment>Remove all the listeners of media file list status.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>resumeVideo</name>
            <comment>Resume to play the media file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>pauseVideo</name>
            <comment>Pause playing the media file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>deleteMediaFiles</name>
            <comment>Delete the media file in camera. After calling this interface, media file list status MediaFileListState will change to UPDATING. After the deletion, the media file list status MediaFileListState is UP_TO_DATE, please call getMediaFileListData to update media file list data.
files: Media file list that needs to be deleted.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>files</name>
                <type>com.biswajit.dji.MediaDataCenter.MediaFileWrapper[]</type>
            </parameter>
        </method>
        <method>
            <name>playVideoToSurface</name>
            <comment>Start playing the set media file. Media file data can be obtained by callback method.
 Note:
 If you want to decode to display the video by yourself, you can call custom decoder to decode the video through the video stream data from the listener.
mediaFile: Media file list that needs to playback.
panel: The surface that needs to be displayed.
scaleType: Set the scale type required for video stream display. Check CameraStreamManager for ScaleType constant values.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>mediaFile</name>
                <type>com.biswajit.dji.MediaDataCenter.MediaFileWrapper</type>
            </parameter>
            <parameter>
                <name>panel</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>scaleType</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addVideoPlayStateListener</name>
            <comment>Set the listener of media file playing status. Through this listener, status of media file playing can be monitored.
 Return the listener object which can be used to call removeVideoPlayStateListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addMediaFileListStateListener</name>
            <comment>Set media file list status listener. Through this listener, the status of media file list can be monitored.
 Return the listener object which can be used to call removeMediaFileListStateListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>enable</name>
            <comment>Enter the media file management module. Calling this interface, camera will enter media file management module. In this mode, you can pull media file list and playback the video in camera. At this time , camera will no be able to take photo and record, image transmission can not be display normally. It is suggested that you call this interface when you enter the album.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>disable</name>
            <comment>Exit the media file management module. Calling this interface, camera will exit media file management module. Camera can take photo and record normally and the image transmission will diaplay normally. It is suggested that you call this interface when you exit the album.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setMediaFileXMPCustomInfo</name>
            <comment>Set the XMP custom information. After the setting is successful, each time a photo file is generated, the XMP custom information will be stored in the XMP metadata of the photo file. You can call the pullXMPCustomInfoFromCamera in the MdeiaFile class to pull the XMP custom information of the specified photo file from the camera.
 Notice:
 1. One setting is valid for multiple times. After the camera is reboot, the custom information will be cleared, and it needs to be set again.
 2. Currently only supports Zenmuse H20 series cameras, Zenmuse L1 camera, and Zenmuse P1 camera.
information: XMP custom information that needs to be set. Use UTF-8 encoding and be less than or equal to 31 characters in length.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>information</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getMediaFileXMPCustomInfo</name>
            <comment>Get the XMP custom information.
 Notice:
 Currently only supports Zenmuse H20 series cameras, Zenmuse L1 camera, and Zenmuse P1 camera.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeMediaFileListStateListener</name>
            <comment>Remove the listener of media file list status.
 Send the listener object received from addMediaFileListStateListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>stopPullMediaFileListFromCamera</name>
            <comment>Stop pulling the media file list from camera.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>stopVideo</name>
            <comment>Stop playing the media file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>pullMediaFileListFromCamera</name>
            <comment>Pull the media file list from camera. When the media file list status MediaFileListState is IDLE, this method should be called to pull full data. When new media files are generated, MSDK will automatically pull the latest media file list from the camera. When the media file list status MediaFileListState changes to UP_TO_DATE, it means that the process of pulling media file list is finished. Please call the getMediaFileListData to get media file list data.
param: Parameters of media file list.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>com.biswajit.dji.MediaDataCenter.PullMediaFileListParamWrapper</type>
            </parameter>
        </method>
        <method>
            <name>removeVideoPlayStateListener</name>
            <comment>Remove listener of media file playing status.
 Send the listener object received from addVideoPlayStateListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>MediaFileListState</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the media file list status. This is an synchronous interface.
 Return MediaFileListState constant.</comment>
        </property>
        <property>
            <name>MediaFileListData</name>
            <returntype>com.biswajit.dji.MediaDataCenter.MediaFileListDataWrapper</returntype>
            <comment>Get parameters of media file list. When the media file list status MediaFileListState is monitored to change to UP_TO_DATE, it means media file list have updated. This interface should be called again to update the media file list data.</comment>
        </property>
        <property>
            <name>MediaFileDataSource</name>
            <parameter>
                <name>source</name>
                <type>com.biswajit.dji.MediaDataCenter.MediaFileListDataSourceWrapper</type>
            </parameter>
            <comment>Set the data source of media file that needed. You can choose media file from selected storage location and selected loads.</comment>
        </property>
        <field>
            <name>MediaFileFilter_VIDEO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VideoPlayState_STOPPED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MediaFileListState_UP_TO_DATE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VideoPlayState_ENDED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MediaFileFilter_ALL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MediaFileListState_IDLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VideoPlayState_IDLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MediaFileFilter_PHOTO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MediaFileListState_UPDATING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VideoPlayState_PLAYING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.PullMediaFileListParamWrapper</name>
        <shortname>PullMediaFileListParam</shortname>
        <owner>process</owner>
        <property>
            <name>MediaFileIndex</name>
            <returntype>int</returntype>
            <comment>Gets the media file index. Indicates that the media file is pulled from the media file index, if this value is set to "-1" or no parameter is set, it means that the first media file in the storage location is pulled. You can set the count of files to be pulled through "Count", if "Count" is set to "-1" or no parameter is set, it means that all media files are pulled.</comment>
        </property>
        <property>
            <name>Filter</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get filter of pulling media file list.
 Rerturns MediaFileFilter. Check MediaManager for MediaFileFilter constant values.</comment>
        </property>
        <property>
            <name>Count</name>
            <returntype>int</returntype>
            <comment>Gets the count of media files. Indicates the count of files to be pulled. If the value is set to "-1" or no parameter is set, it means that all media files are pulled.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.RtmpSettingsWrapper</name>
        <shortname>RtmpSettings</shortname>
        <owner>process</owner>
        <property>
            <name>Url</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.RtspSettingsWrapper</name>
        <shortname>RtspSettings</shortname>
        <owner>process</owner>
        <property>
            <name>UserName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Port</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Password</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.StreamInfoWrapper</name>
        <shortname>StreamInfo</shortname>
        <owner>process</owner>
        <method>
            <name>isKeyFrame</name>
            <comment>Gets if the current frame of video stream data is key frame.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>FrameRate</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PresentationTimeMs</name>
            <returntype>long</returntype>
            <comment>Gets the presentation time stamp of the video stream. Unit: milliseconds.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MimeType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the mime type of the video stream.
 Check CameraStreamManager for MimeType constants.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.VideoPlayStatusWrapper</name>
        <shortname>VideoPlayStatus</shortname>
        <owner>process</owner>
        <property>
            <name>FileIndex</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>State</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get currently playing status.
 Check MediaManager for VideoPlayState constant values.</comment>
        </property>
        <property>
            <name>PlayingPosition</name>
            <returntype>double</returntype>
            <comment>Get current playing location. Unit: second.</comment>
        </property>
        <property>
            <name>TotalDuration</name>
            <returntype>double</returntype>
            <comment>Get the total duration of currently playing media file. Unit: second.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MediaDataCenter.VideoResolutionWrapper</name>
        <shortname>VideoResolution</shortname>
        <owner>process</owner>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.MegaphoneManager.FileInfoWrapper</name>
        <shortname>FileInfo</shortname>
        <owner>process</owner>
        <property>
            <name>Data</name>
            <returntype>byte[]</returntype>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
            <comment>To set/get the TTS binary data that needs to be transmitted to the megaphone.</comment>
        </property>
        <property>
            <name>File</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>filePath</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>To get/set the path of the audio file that needs to be transferred to the megaphone.</comment>
        </property>
        <property>
            <name>UploadType</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>uploadType</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>To get the file type transferred.</comment>
        </property>
        <field>
            <name>UploadType_VOICE_FILE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>UploadType_TTS_DATA</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.MegaphoneManager.MegaphoneInfoWrapper</name>
        <shortname>MegaphoneInfo</shortname>
        <owner>process</owner>
        <property>
            <name>Status</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Volume</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PlayMode</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>WorkMode</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <field>
            <name>MegaphoneStatus_IN_EXCEPTION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MegaphoneStatus_PLAYING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MegaphoneStatus_IN_TRANSMISSION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MegaphoneStatus_TTS_IN_CONVERSION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WorkMode_VOICE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PlayMode_LOOP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PlayMode_SINGLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WorkMode_TTS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MegaphoneStatus_IDEL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.MegaphoneManager.MegaphoneManagerWrapper</name>
        <shortname>MegaphoneManager</shortname>
        <owner>process</owner>
        <event>OnMegaphoneInfoUpdate(info as MegaphoneInfo)</event>
        <event>SetVolume(success as boolean, error as DJIError)</event>
        <event>GetVolume(volume as Int, success as boolean, error as DJIError)</event>
        <event>SetPlayMode(success as boolean, error as DJIError)</event>
        <event>GetPlayMode(playMode as Object, success as boolean, error as DJIError)</event>
        <event>SetWorkMode(success as boolean, error as DJIError)</event>
        <event>GetWorkMode(workMode as Object, success as boolean, error as DJIError)</event>
        <event>GetStatus(status as Object, success as boolean, error as DJIError)</event>
        <event>StartPlay(success as boolean, error as DJIError)</event>
        <event>StopPlay(success as boolean, error as DJIError)</event>
        <event>CancelPushing(success as boolean, error as DJIError)</event>
        <event>StartRealTimeTransfer(success as boolean, error as DJIError)</event>
        <event>SendRealTimeData(success as boolean, error as DJIError)</event>
        <event>AppendEOF(success as boolean, error as DJIError)</event>
        <event>CancelRealTimeTransfer(success as boolean, error as DJIError)</event>
        <event>RealTimeTransferProgress(sentBytes as Long,totalBytes as Long)</event>
        <event>RealTimeTransferState(state as Object)</event>
        <event>PushingStarted</event>
        <event>PushingProgress(progress as Int)</event>
        <event>PushingError(error as DJIError)</event>
        <method>
            <name>getWorkMode</name>
            <comment>To set the megaphone play mode, including single play and loop play.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addRealTimeTransmissionStateListener</name>
            <comment>To set the status listener for streaming transferring mode.
 Return the listener object which can be used to call removeRealTimeTransmissionStateListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>stopPlay</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>startPlay</name>
            <comment>The megaphone starts playing. Before calling the start play interface, you need to call the file transfer method startPushingFileToMegaphone or the streaming transfer method startRealTimeTransmission to transmit the data to be played to the megaphone.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>appendEOFToRealTimeData</name>
            <comment>Add the EOF flag to indicate that the data is sent. You can call the startPlay interface to play.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setVolume</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>volume</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getStatus</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllRealTimeTransmissionStateListener</name>
            <comment>Remove every status listener for streaming transferring mode.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeMegaphoneInfoListener</name>
            <comment>Remove the listener of megaphone information.
 Send the listener object received from addMegaphoneInfoListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getVolume</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setPlayMode</name>
            <comment>To set the megaphone play mode, including single play and loop play.
playMode: Check PlayMode constant values.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>playMode</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>sendRealTimeDataToMegaphone</name>
            <comment>Send the data to be played to the megaphone. You can call this interface multiple times to send data to be played.
data: The data to be transmitted must be audio data in OPUS encoding format.
length: Data length.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>cancelRealTimeTransmission</name>
            <comment>Cancel this transfer and clear the uploaded data.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeRealTimeTransmissionStateListener</name>
            <comment>Remove the status listener for streaming transferring mode.
 Send the listener object received from addRealTimeTransmissionStateListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>clearAllMegaphoneInfoListener</name>
            <comment>Clean all the listener of the megaphone info.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setWorkMode</name>
            <comment>To set the megaphone play mode, including single play and loop play.
playMode: Check PlayMode constant values.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>workMode</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addMegaphoneInfoListener</name>
            <comment>Sets the listener of megaphone information.
 Return the listener object which can be used to call removeMegaphoneInfoListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>cancelPushingFileToMegaphone</name>
            <comment>Stop transferring TTS data or audio files to the megaphone.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>startPushingFileToMegaphone</name>
            <comment>Transfer TTS data or audio files to the megaphone. When the data transfer is complete, you can call the startPlay interface to play.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>fileInfo</name>
                <type>com.biswajit.dji.MegaphoneManager.FileInfoWrapper</type>
            </parameter>
        </method>
        <method>
            <name>startRealTimeTransmission</name>
            <comment>Turn on streaming transferring mode. You can call sendRealTimeDataToMegaphone to send the data to be played to the megaphone, and call appendEOFToRealTimeData to add the EOF flag, indicating that the data is sent. Then call the startPlay interface to play.
 Notice: The data in streaming transferring mode must be audio data in OPUS encoded format.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getPlayMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <field>
            <name>MegaphoneStatus_IN_EXCEPTION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MegaphoneStatus_PLAYING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MegaphoneStatus_IN_TRANSMISSION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MegaphoneStatus_TTS_IN_CONVERSION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WorkMode_VOICE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PlayMode_LOOP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PlayMode_SINGLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WorkMode_TTS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MegaphoneStatus_IDEL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.CustomizeRcButtonConfigWrapper</name>
        <shortname>CustomizeRcButtonConfig</shortname>
        <owner>process</owner>
        <property>
            <name>IsEnable</name>
            <returntype>boolean</returntype>
            <comment>Gets whether the function is enabled.</comment>
        </property>
        <property>
            <name>ButtonValueStepLength</name>
            <returntype>int</returntype>
            <comment>Gets the button value step length.</comment>
        </property>
        <property>
            <name>MappingConfigDisplayOrder</name>
            <returntype>int</returntype>
            <comment>Gets the mapping configuration display order.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.FloatingWindowWidgetWrapper</name>
        <shortname>FloatingWindowWidget</shortname>
        <owner>process</owner>
        <method>
            <name>isEnabled</name>
            <comment>Gets whether the floating window widget is supported.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>HintMessage</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the hint message of the floating window widget.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.IconFilePathWrapper</name>
        <shortname>IconFilePath</shortname>
        <owner>process</owner>
        <property>
            <name>UnSelectedIconPath</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the icon path when the paylaod widget is unselected</comment>
        </property>
        <property>
            <name>SelectedIconPath</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the icon path when the paylaod widget is selected.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.PayloadBasicInfoWrapper</name>
        <shortname>PayloadBasicInfo</shortname>
        <owner>process</owner>
        <method>
            <name>isFeatureOpened</name>
            <comment>Get the paylaod product feature open status. If the feature of the product is not fully turned on, the following are the possible reasons.
 1. The PSDK is not bound.
 2. The payload status is abnormal, please check the application LOG of the payload.
 3. The encryption chip is abnormal, please contact the technical support.
 4. The aircraft does not support this payload.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isConnected</name>
            <comment>Gets whether the payload is connected.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>SerialNumber</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the payload serial number.</comment>
        </property>
        <property>
            <name>PayloadProductName</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the current payload product phase.</comment>
        </property>
        <property>
            <name>PayloadType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the paylaod type.</comment>
        </property>
        <property>
            <name>FirmwareVersion</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the payload Firmware version.</comment>
        </property>
        <field>
            <name>PayloadType_X_PORT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PayloadProductPhaseType_PHASE_RELEAS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PayloadProductPhaseType_PHASE_DEVELOPMENT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PayloadType_SKYPORT_2</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PayloadType_SKYPORT_1</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.PayloadCenterWrapper</name>
        <shortname>PayloadCenter</shortname>
        <owner>process</owner>
        <property>
            <name>PayloadManager</name>
            <returntype>com.biswajit.dji.PayloadCenter.PayloadManagerWrapper[]</returntype>
            <comment>Gets the PayloadManager instance list of the payload supported by the aircraft, which supports portside(main) payload, starboard payload, upper payload and extend(OSDK) payload.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.PayloadManagerWrapper</name>
        <shortname>PayloadManager</shortname>
        <owner>process</owner>
        <event>OnPayloadBasicInfoUpdate(info as PayloadBasicInfo)</event>
        <event>OnPayloadWidgetInfoUpdate(info as PayloadWidgetInfo)</event>
        <event>OnDataFromPayloadUpdate(data[] as byte)</event>
        <event>PullWidgetInfo(success as boolean, error as DJIError)</event>
        <event>SetWidgetValue(success as boolean, error as DJIError)</event>
        <event>SendDataToPayload(success as boolean, error as DJIError)</event>
        <method>
            <name>addPayloadDataListener</name>
            <comment>Sets the listener of paylaod data.
 Return the listener object which can be used to call removePayloadDataListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendDataToPayload</name>
            <comment>Send command data to the payload. The maximum bandwidth of this channel is 3KBytes/s.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>removePayloadDataListener</name>
            <comment>Remove the listener of paylaod data.
 Send the listener object received from addPayloadDataListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addPayloadWidgetInfoListener</name>
            <comment>Sets the listener of paylaod widget information.
 Return the listener object which can be used to call removePayloadWidgetInfoListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllPayloadDataListener</name>
            <comment>Remove all the listeners of paylaod data.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removePayloadBasicInfoListener</name>
            <comment>Remove the listener of paylaod basic information.
 Send the listener object received from addPayloadBasicInfoListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>clearAllPayloadWidgetInfoListener</name>
            <comment>Remove all the listeners of paylaod widget information.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearAllPayloadBasicInfoListener</name>
            <comment>Remove all the listeners of paylaod basic information.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>pullWidgetInfoFromPayload</name>
            <comment>Pull widget information from the payload. After the aircraft is successfully connected to the payload, the MSDK will pull the widget information from the payload once by default. You can call the addPayloadWidgetInfoListener to get the widget information. If the listener does not have any callback information, you can try to call this interface to retrieve the widget information from the payload.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addPayloadBasicInfoListener</name>
            <comment>Sets the listener of paylaod basic information.
 Return the listener object which can be used to call removePayloadBasicInfoListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removePayloadWidgetInfoListener</name>
            <comment>Remove the listener of paylaod widget information.
 Send the listener object received from addPayloadWidgetInfoListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>Type</name>
            <returntype EnumType="true">dji.v5.manager.aircraft.payload.PayloadIndexType</returntype>
            <parameter>
                <name>type</name>
                <type EnumType="true">dji.v5.manager.aircraft.payload.PayloadIndexType</type>
            </parameter>
            <comment>Return PayloadIndexType;</comment>
        </property>
        <field>
            <name>PayloadIndexType_RIGHT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PayloadIndexType_UP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PayloadIndexType_EXTERNAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PayloadIndexType_LEFT_OR_MAIN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.PayloadWidgetInfoWrapper</name>
        <shortname>PayloadWidgetInfo</shortname>
        <owner>process</owner>
        <property>
            <name>SpeakerWidget</name>
            <returntype>com.biswajit.dji.PayloadCenter.SpeakerWidgetWrapper</returntype>
            <comment>Gets the speaker widget on the payload device.</comment>
        </property>
        <property>
            <name>ConfigInterfaceWidgetList</name>
            <returntype>com.biswajit.dji.PayloadCenter.PayloadWidgetWrapper[]</returntype>
            <comment>Gets the list of config interface widget on the payload device.</comment>
        </property>
        <property>
            <name>TextInputBoxWidget</name>
            <returntype>com.biswajit.dji.PayloadCenter.TextInputBoxWidgetWrapper</returntype>
            <comment>Gets the text input box widget on the payload device.</comment>
        </property>
        <property>
            <name>FloatingWindowWidget</name>
            <returntype>com.biswajit.dji.PayloadCenter.FloatingWindowWidgetWrapper</returntype>
            <comment>Gets the floating window widget on the payload device.</comment>
        </property>
        <property>
            <name>MainInterfaceWidgetList</name>
            <returntype>com.biswajit.dji.PayloadCenter.PayloadWidgetWrapper[]</returntype>
            <comment>Gets the list of main interface widget on the payload device.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.PayloadWidgetWrapper</name>
        <shortname>PayloadWidget</shortname>
        <owner>process</owner>
        <property>
            <name>WidgetName</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the name of the payload widget.</comment>
        </property>
        <property>
            <name>WidgetValue</name>
            <returntype>int</returntype>
            <comment>Gets the value of the payload widget.</comment>
        </property>
        <property>
            <name>IconFilePath</name>
            <returntype>com.biswajit.dji.PayloadCenter.IconFilePathWrapper</returntype>
            <comment>Gets the payload icon file path.</comment>
        </property>
        <property>
            <name>WidgetIndex</name>
            <returntype>int</returntype>
            <comment>Gets the index of the payload widget.</comment>
        </property>
        <property>
            <name>HintMessage</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the payload widget hint message.</comment>
        </property>
        <property>
            <name>SubItemsList</name>
            <returntype>com.biswajit.dji.PayloadCenter.SubItemsWrapper[]</returntype>
            <comment>Gets the sub items list of payload widget.</comment>
        </property>
        <property>
            <name>WidgetType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the type of the payload widget.</comment>
        </property>
        <field>
            <name>WidgetType_SWITCH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WidgetType_RANGE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WidgetType_LIST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WidgetType_INPUT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WidgetType_BUTTON</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.SpeakerWidgetWrapper</name>
        <shortname>SpeakerWidget</shortname>
        <owner>process</owner>
        <method>
            <name>isVoiceEnabled</name>
            <comment>Gets whether the voice function is enabled for the speaker widget.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isTTSEnabled</name>
            <comment>Gets whether the TTS function is enabled for the speaker widget.</comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.SubItemsWrapper</name>
        <shortname>SubItems</shortname>
        <owner>process</owner>
        <property>
            <name>SubItemsIconFilePath</name>
            <returntype>com.biswajit.dji.PayloadCenter.IconFilePathWrapper</returntype>
            <comment>Gets the icon file path of the payload subitems.</comment>
        </property>
        <property>
            <name>SubItemsName</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the name of the payload subitems.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.TextInputBoxWidgetWrapper</name>
        <shortname>TextInputBoxWidget</shortname>
        <owner>process</owner>
        <method>
            <name>isEnabled</name>
            <comment>Gets whether the text input box widget is supported.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>WidgetName</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the name of the text input box widget.</comment>
        </property>
        <property>
            <name>PlaceholderText</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets place holder text of the text input box widget.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.PayloadCenter.WidgetValueWrapper</name>
        <shortname>WidgetValue</shortname>
        <owner>process</owner>
        <property>
            <name>Type</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>type</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Value</name>
            <returntype>int</returntype>
            <parameter>
                <name>val</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Index</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>WidgetType_SWITCH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WidgetType_RANGE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WidgetType_LIST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WidgetType_INPUT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WidgetType_BUTTON</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.PerceptionManager.ObstacleDataWrapper</name>
        <shortname>ObstacleData</shortname>
        <owner>process</owner>
        <property>
            <name>UpwardObstacleDistance</name>
            <returntype>int</returntype>
            <comment>Gets the distance measurement data of upward obstacles. Unit: millimeter. Indicates the distance between the aircraft and the upward obstacle.</comment>
        </property>
        <property>
            <name>DownwardObstacleDistance</name>
            <returntype>int</returntype>
            <comment>Gets the distance measurement data of downward obstacles. Unit: millimeter. Indicates the distance between the aircraft and the downward obstacle.</comment>
        </property>
        <property>
            <name>HorizontalObstacleDistance</name>
            <returntype>int[]</returntype>
            <comment>Gets horizontal obstacle ranging data. Unit: millimeter. The angular interval of the horizontal obstacle ranging data can be obtained through getHorizontalAngleInterval.</comment>
        </property>
        <property>
            <name>HorizontalAngleInterval</name>
            <returntype>int</returntype>
            <comment>Gets the angular interval of horizontal obstacle ranging data, which is an angular interval around the aircraft at 360 degrees in the horizontal direction. for example:
 If the value is 1, it means that getHorizontalObstacleDistance has 360 data (360/1) of horizontal obstacle ranging data obtained.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.PerceptionManager.PerceptionInfoWrapper</name>
        <shortname>PerceptionInfo</shortname>
        <owner>process</owner>
        <method>
            <name>isDownwardObstacleAvoidanceEnabled</name>
            <comment>Get whether the downward vision switch of obstacle avoidance is turned on.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isPrecisionLandingEnabled</name>
            <comment>Get whether the precise positioning is opened.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isVisionPositioningEnabled</name>
            <comment>Get whether the vision positioning is opened.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isUpwardObstacleAvoidanceEnabled</name>
            <comment>Get whether the upward vision switch of obstacle avoidance is turned on.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isHorizontalObstacleAvoidanceEnabled</name>
            <comment>Get whether the horizontal vision switch of obstacle avoidance is turned on.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>DownwardObstacleAvoidanceWarningDistance</name>
            <returntype>double</returntype>
            <comment>Get downward vision warning distance of obstacle avoidance. Unit: meter.</comment>
        </property>
        <property>
            <name>HorizontalObstacleAvoidanceBrakingDistance</name>
            <returntype>double</returntype>
            <comment>Get horizontal vision warning distance of braking avoidance. Unit: meter.</comment>
        </property>
        <property>
            <name>RightSideObstacleAvoidanceWorking</name>
            <returntype>boolean</returntype>
            <comment>Get whether the right side vision obstacle avoidance sensor is working.</comment>
        </property>
        <property>
            <name>LeftSideObstacleAvoidanceWorking</name>
            <returntype>boolean</returntype>
            <comment>Get whether the left side vision obstacle avoidance sensor is working.</comment>
        </property>
        <property>
            <name>DownwardObstacleAvoidanceWorking</name>
            <returntype>boolean</returntype>
            <comment>Get whether the downward vision obstacle avoidance sensor is working.</comment>
        </property>
        <property>
            <name>HorizontalObstacleAvoidanceWarningDistance</name>
            <returntype>double</returntype>
            <comment>Get horizontal vision warning distance of obstacle avoidance. Unit: meter.</comment>
        </property>
        <property>
            <name>ForwardObstacleAvoidanceWorking</name>
            <returntype>boolean</returntype>
            <comment>Get whether the forward vision obstacle avoidance sensor is working.</comment>
        </property>
        <property>
            <name>BackwardObstacleAvoidanceWorking</name>
            <returntype>boolean</returntype>
            <comment>Get whether the backward vision obstacle avoidance sensor is working.</comment>
        </property>
        <property>
            <name>UpwardObstacleAvoidanceWarningDistance</name>
            <returntype>double</returntype>
            <comment>Get upward vision warning distance of obstacle avoidance. Unit: meter.</comment>
        </property>
        <property>
            <name>DownwardObstacleAvoidanceBrakingDistance</name>
            <returntype>double</returntype>
            <comment>Get downward vision warning distance of braking avoidance. Unit: meter.</comment>
        </property>
        <property>
            <name>UpwardObstacleAvoidanceBrakingDistance</name>
            <returntype>double</returntype>
            <comment>Get upward vision warning distance of braking avoidance. Unit: meter.</comment>
        </property>
        <property>
            <name>UpwardObstacleAvoidanceWorking</name>
            <returntype>boolean</returntype>
            <comment>Get whether the upward vision obstacle avoidance sensor is working.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.PerceptionManager.PerceptionManagerWrapper</name>
        <shortname>PerceptionManager</shortname>
        <owner>process</owner>
        <event>SetObstacleAvoidanceType(success as boolean, error as DJIError)</event>
        <event>GetObstacleAvoidanceType(type as Object, success as boolean, error as DJIError)</event>
        <event>SetObstacleAvoidanceEnabled(success as boolean, error as DJIError)</event>
        <event>GetObstacleAvoidanceEnabled(isEnable as boolean, success as boolean, error as DJIError)</event>
        <event>SetObstacleAvoidanceWarningDistance(success as boolean, error as DJIError)</event>
        <event>GetObstacleAvoidanceWarningDistance(distance as double, success as boolean, error as DJIError)</event>
        <event>SetObstacleAvoidanceBrakingDistance(success as boolean, error as DJIError)</event>
        <event>GetObstacleAvoidanceBrakingDistance(distance as double, success as boolean, error as DJIError)</event>
        <event>SetVisionPositioningEnabled(success as boolean, error as DJIError)</event>
        <event>GetVisionPositioningEnabled(isEnable as boolean, success as boolean, error as DJIError)</event>
        <event>SetPrecisionLandingEnabled(success as boolean, error as DJIError)</event>
        <event>GetPrecisionLandingEnabled(isEnable as boolean, success as boolean, error as DJIError)</event>
        <event>PerceptionInformationUpdate(into as PerceptionInfo)</event>
        <event>ObstacleDataUpdate(data as ObstacleData)</event>
        <method>
            <name>setObstacleAvoidanceWarningDistance</name>
            <comment>Set distance of obstacle avoidance. Unit: meter.
 Take the M30 Series as an example: (For other Aircraft, please refer to the range of DJI Pilot 2)
 Horizontal warning distance range: [1.1, 33.0].
 Upward warning distance range: [1.1, 33.0].
 Downward warning distance range: [0.6, 33.0].
distance: Warning distance of obstacle avoidance.
direction: Direction of obstacle avoidance.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>distance</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>clearAllObstacleDataListener</name>
            <comment>Remove all the listeners of obstacle data.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getObstacleAvoidanceEnabled</name>
            <comment>Return whether to turn on the sub switch of radar obstacle avoidance.
direction: Direction of the sub switch of radar obstacle avoidance. Check PerceptionDirection constant.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getObstacleAvoidanceType</name>
            <comment>Get the set obstacle avoidance type.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getObstacleAvoidanceWarningDistance</name>
            <comment>Get the warning distance of obstacle avoidance.
direction: Direction of obstacle avoidance.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getVisionPositioningEnabled</name>
            <comment>Return whether the vision positioning is opened.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setPrecisionLandingEnabled</name>
            <comment>Open or close the precise landing. When the aircraft takes off vertically to a height of at least 7 m, it will automatically collect information for the area around the takeoff point. When the aircraft finishes collecting information, precise landing will be available during RTH.
isEnabled: true means that precise landing is opened.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>isEnabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getPrecisionLandingEnabled</name>
            <comment>Return whether the precise landing is opened.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addPerceptionInformationListener</name>
            <comment>Set the listener of perception information.
 Return the listener object which can be used to call removePerceptionInformationListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removePerceptionInformationListener</name>
            <comment>Remove the listener of perception information.
 Send the listener object received from addPerceptionInformationListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addObstacleDataListener</name>
            <comment>Sets the listener of obstacle data to obtain obstacle ranging data.
 Return the listener object which can be used to call removeObstacleDataListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getObstacleAvoidanceBrakingDistance</name>
            <comment>Get the warning distance of obstacle avoidance.
direction: Direction of obstacle avoidance.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>clearAllPerceptionInformationListener</name>
            <comment>Remove all the listeners of perception information.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setObstacleAvoidanceBrakingDistance</name>
            <comment>Set the braking distance of obstacle avoidance. Unit:meter.
 Take the M30 Series as an example: (For other Aircraft, please refer to the range of DJI Pilot 2)
 Horizontal braking distance range:[1.0, 10.0].
 Upward braking distance range:[1.0, 10.0].
 Downward braking distance range:[0.5, 3.0].
distance: Braking distance of obstacle avoidance.
direction: Direction of obstacle avoidance.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>distance</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>setVisionPositioningEnabled</name>
            <comment>Open or close the vision positioning. Vision positioning system help aircraft hover and support landing protection when GPS signal is weak. Disable downward vision system will disable landing protection.
isEnabled: true means vision positioning is opened.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>isEnabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setObstacleAvoidanceEnabled</name>
            <comment>Turn on or turn off the sub switch of radar obstacle avoidance. Only when the main switch setOverallObstacleAvoidanceEnabled is enabled, the sub switch can be enabled. Millimeter-wave radar does not support downward obstacle avoidance.
isEnabled: true means that turn on the sub switch of radar obstacle avoidance.
direction: Direction of the sub switch of radar obstacle avoidance. Check PerceptionDirection constant.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>isEnabled</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>removeObstacleDataListener</name>
            <comment>Remove the listener of obstacle data.
 Send the listener object received from addObstacleDataListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>setObstacleAvoidanceType</name>
            <comment>Set obstacle avoidance type.
type: ObstacleAvoidanceType constant value</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>RadarManager</name>
            <returntype>com.biswajit.dji.PerceptionManager.RadarManagerWrapper</returntype>
            <comment>Get an instance of RadarRTKManager. This instance is only available with the mmWave radar accessory installed.</comment>
        </property>
        <field>
            <name>PerceptionDirection_UPWARD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ObstacleAvoidanceType_CLOSE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ObstacleAvoidanceType_BYPASS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PerceptionDirection_DOWNWARD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PerceptionDirection_HORIZONTAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ObstacleAvoidanceType_BRAKE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.PerceptionManager.RadarInformationWrapper</name>
        <shortname>RadarInformation</shortname>
        <owner>process</owner>
        <method>
            <name>isConnected</name>
            <comment>Gets whether the radar is connected.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isUpwardObstacleAvoidanceEnabled</name>
            <comment>Gets whether to turn on the radar obstacle avoidance upward switch.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isHorizontalObstacleAvoidanceEnabled</name>
            <comment>Gets whether the horizontal switch of radar obstacle avoidance is turned on.</comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.biswajit.dji.PerceptionManager.RadarManagerWrapper</name>
        <shortname>RadarManager</shortname>
        <owner>process</owner>
        <event>SetObstacleAvoidanceEnabled(success as boolean, error as DJIError)</event>
        <event>GetObstacleAvoidanceEnabled(isEnabled as boolean, success as boolean, error as DJIError)</event>
        <event>RadarInformationUpdate(info as RadarInformation)</event>
        <method>
            <name>getObstacleAvoidanceEnabled</name>
            <comment>Return whether to turn on the sub switch of radar obstacle avoidance.
direction: Direction of the sub switch of radar obstacle avoidance. Check PerceptionDirection constant.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>clearAllRadarInformationListener</name>
            <comment>Remove all the listeners of radar information.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeRadarInformationListener</name>
            <comment>Remove the listener of radar information.
 Send the listener object received from addRadarInformationListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addRadarInformationListener</name>
            <comment>Set the listener of radar information.
 Return the listener object which can be used to call removeRadarInformationListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setObstacleAvoidanceEnabled</name>
            <comment>Turn on or turn off the sub switch of radar obstacle avoidance. Only when the main switch setOverallObstacleAvoidanceEnabled is enabled, the sub switch can be enabled. Millimeter-wave radar does not support downward obstacle avoidance.
isEnabled: true means that turn on the sub switch of radar obstacle avoidance.
direction: Direction of the sub switch of radar obstacle avoidance. Check PerceptionDirection constant.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>isEnabled</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <field>
            <name>PerceptionDirection_UPWARD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PerceptionDirection_DOWNWARD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PerceptionDirection_HORIZONTAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.PipelineManager.DataResultWrapper</name>
        <shortname>DataResult</shortname>
        <owner>process</owner>
        <property>
            <name>Length</name>
            <returntype>int</returntype>
            <comment>Gets the length of data read and written by the pipeline.</comment>
        </property>
        <property>
            <name>Error</name>
            <returntype>com.biswajit.dji.DJIErrorWrapper</returntype>
            <comment>Gets the result of pipeline reads and writes. If the read and write are successful, NULL will be returned, otherwise an error code will be returned.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.PipelineManager.PipelineManagerWrapper</name>
        <shortname>PipelineManager</shortname>
        <owner>process</owner>
        <event>PipelineConnectionUpdate(pipelines[] as Pipeline)</event>
        <method>
            <name>addPipelineConnectionListener</name>
            <comment>Sets the pipeline connection listener. You need to call connectPipeline to connect the pipeline. When the pipeline is successfully connected, the connection event can be obtained through this listener.
 Return the listener object which can be used to call removePipelineConnectionListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removePipelineConnectionListener</name>
            <comment>Remove the listener of the pipline connection.
 Send the listener object received from addPipelineConnectionListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>disconnectPipeline</name>
            <comment>Disconnect from the PSDK device through the pipeline ID, and clear the cached data in the pipeline list. If the connection is successfully disconnected, the pipe instance will be deleted from the pipe mapping table, otherwise an error message will be returned.
pipelineId: Pipeline ID, obtained from the connected pipeline instance.
deviceType: Device type, obtained from the connected pipelne instance.
transmissionControlType: Transport control type, obtained from the connected pipeline instance.</comment>
            <returntype>com.biswajit.dji.DJIErrorWrapper</returntype>
            <parameter>
                <name>pipelineId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>deviceType</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>transmissionControlType</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>connectPipeline</name>
            <comment>Establishes the pipeline connection with the pipeline's ID. Returns an instance of the pipeline when it is connected successfully, otherwise, error information will be returned. After a successful connection, the pipeline instance can be obtained by adding the addPipelineConnectionListener listener. You can also call getPipelines to get a list of all connected pipelines synchronously.
pipelineId: Pipeline ID, this ID needs to be negotiated with the PSDK payload developer.
deviceType: Device type, you can set ONBOARD or PAYLOAD type.
transmissionControlType: Transmission control type, you can set reliable transmission type or unreliable transmission type.</comment>
            <returntype>com.biswajit.dji.DJIErrorWrapper</returntype>
            <parameter>
                <name>pipelineId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>deviceType</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>transmissionControlType</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>clearAllPipelineConnectionListener</name>
            <comment>Remove all the listener of the pipline connection.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Pipelines</name>
            <returntype>com.biswajit.dji.PipelineManager.PipelineWrapper[]</returntype>
            <comment>Retrieves instances of the products's pipelines. The key of the map table refers to the pipeline ID that connected with the payload device, and the value refers to the pipeline instance object. When the pipeline connection is established successfully, a pipeline object is created and placed in the map table. When disconnectPipeline is invoked, the expired pipeline will be removed from the pipelins map table.</comment>
        </property>
        <field>
            <name>PipelineDeviceType_ONBOARD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PipelineDeviceType_PAYLOAD</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>TransmissionControlType_STABLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PipelineState_DISCONNECTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>TransmissionControlType_UNRELIABLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>PipelineState_CONNECTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.PipelineManager.PipelineWrapper</name>
        <shortname>Pipeline</shortname>
        <owner>process</owner>
        <method>
            <name>readData</name>
            <comment>Read data from PSDK device through pipeline.</comment>
            <returntype>com.biswajit.dji.PipelineManager.DataResultWrapper</returntype>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>writeData</name>
            <comment>Send data to the PSDK device through the pipeline.</comment>
            <returntype>com.biswajit.dji.PipelineManager.DataResultWrapper</returntype>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <property>
            <name>PipelineState</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the connection state of the pipeline</comment>
        </property>
        <property>
            <name>TransmissionControlType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the transmission control type of pipeline.</comment>
        </property>
        <property>
            <name>PipelineDeviceType</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the device type of pipeline.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>int</returntype>
            <comment>Gets the pipeline ID, MSDK and PSDK need to use the agreed pipeline ID to read and write data.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.ConnectedRTKStationInfoWrapper</name>
        <shortname>ConnectedRTKStationInfo</shortname>
        <owner>process</owner>
        <property>
            <name>StationName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BatteryTemperature</name>
            <returntype>double</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BatteryCurrent</name>
            <returntype>double</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BatteryCapacityPercent</name>
            <returntype>double</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SignalLevel</name>
            <returntype>double</returntype>
            <comment></comment>
        </property>
        <property>
            <name>StationId</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BatteryVoltage</name>
            <returntype>double</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.NetworkRTKManagerWrapper</name>
        <shortname>NetworkRTKManager</shortname>
        <owner>process</owner>
        <event>StartNetworkRTKService(success as boolean, error as DJIError)</event>
        <event>StopNetworkRTKService(success as boolean, error as DJIError)</event>
        <event>GetNetworkRTKCoordinateSystem(system as Object,success as boolean, error as DJIError)</event>
        <event>OnNetworkRTKServiceStateUpdate(state as Object)</event>
        <event>OnNetworkRTKServiceError(error as DJIError)</event>
        <method>
            <name>getCustomNetworkRTKSettings</name>
            <comment>Get the settings of custom network RTK.</comment>
            <returntype>com.biswajit.dji.RTKCenter.RTKCustomNetworkSettingWrapper</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addNetworkRTKServiceInfoListener</name>
            <comment>Add the listener of a network RTK service information.
 Return the listener object which can be used to call removeNetworkRTKServiceInfoListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>startNetworkRTKService</name>
            <comment>Start network RTK service.
coordinateSystem: Network RTK coordinate system. This parameter only needs to be set when using Chihiro network RTK and CMCC network RTK. If it is not set, the default coordinate system of Chihiro network RTK is CGCS2000, and CMCC network RTK must set the coordinate system.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>coordinateSystem</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>clearAllNetworkRTKServiceInfoListener</name>
            <comment>Remove all listeners of RTK base station information.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>stopNetworkRTKService</name>
            <comment>Stop network RTK service.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeNetworkRTKServiceInfoListener</name>
            <comment>Remove the listener of a network RTK service information.
 Send the listener object received from addNetworkRTKServiceInfoListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getNetworkRTKCoordinateSystem</name>
            <comment>Get the coordinate system of the network RTK.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setCustomNetworkRTKSettings</name>
            <comment>Configure the settings of custom network RTK.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>customNetworkSetting</name>
                <type>com.biswajit.dji.RTKCenter.RTKCustomNetworkSettingWrapper</type>
            </parameter>
        </method>
        <field>
            <name>RTKServiceState_ACCOUNT_ERROR</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_ILLEGAL_UTC_TIME</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_USER_HAS_ACTIVATE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_SET_COORDINATE_FAILURE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_USE_DEFAULT_MOUNT_POINT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_USER_NOT_ACTIVATED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_DISCONNECTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_READY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_SERVER_NOT_REACHABLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_TRANSMITTING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_AUTH_FAILED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_CONNECTING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_USER_ACCOUNT_EXPIRES_SOON</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTK_START_PROCESSING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_INVALID_REQUEST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_CONNECTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_ACCOUNT_EXPIRED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CoordinateSystem_CGCS2000</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_SEND_GGA_NO_VALID_BASE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_LOGIN_FAILURE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_NORMAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>CoordinateSystem_WGS84</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_CONNECTING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_SERVICE_SUSPENSION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_NETWORK_NOT_REACHABLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_ACTIVATED_FAILED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_RTCM_USER_NOT_BOUNDED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_DISABLED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKServiceState_AIRCRAFT_DISCONNECTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.RTKCenterWrapper</name>
        <shortname>RTKCenter</shortname>
        <owner>process</owner>
        <event>SetAircraftRTKModuleEnabled(success as boolean, error as DJIError)</event>
        <event>GetAircraftRTKModuleEnabled(enable as boolean,success as boolean, error as DJIError)</event>
        <event>SetRTKReferenceStationSource(success as boolean, error as DJIError)</event>
        <event>GetRTKReferenceStationSource(source as Object,success as boolean, error as DJIError)</event>
        <event>SetRTKMaintainAccuracyEnabled(success as boolean, error as DJIError)</event>
        <event>GetRTKMaintainAccuracyEnabled(enable as boolean,success as boolean, error as DJIError)</event>
        <event>OnRTKLocationInfoUpdate(newValue as RTKLocationInfo)</event>
        <event>OnRTKSystemStateUpdate(newValue as RTKSystemState)</event>
        <method>
            <name>clearAllRTKSystemStateListener</name>
            <comment>Remove all listener of RTK system information.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>addRTKLocationInfoListener</name>
            <comment>Add the listener of RTK location information.
 Return the listener object which can be used to call removeRTKLocationInfoListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setRTKMaintainAccuracyEnabled</name>
            <comment>enabled or disabled maintain positioning accuracy mode. In case of an RTK module communication error, the aircraft will automatic maintain the current RTK status with gradually decreasing accurcy. The aircraft will exit RTK if the connection is not re-established within 10 minutes.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>isEnabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getAircraftRTKModuleEnabled</name>
            <comment>Get whether the RTK module of an aircraft is enabled or disabled.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeRTKLocationInfoListener</name>
            <comment>Remove the listener of RTK location information.
 Send the listener object received from addRTKLocationInfoListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>clearAllRTKLocationInfoListener</name>
            <comment>Remove all listener of RTK location information.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeRTKSystemStateListener</name>
            <comment>Remove the listener of RTK system information.
 Send the listener object received from addRTKSystemStateListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getRTKMaintainAccuracyEnabled</name>
            <comment>Get if the maintain positioning accuracy mode is enabled.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setAircraftRTKModuleEnabled</name>
            <comment>Enable or disable the RTK module of an aircraft. You must set this method before starting the motor, otherwise, this method is ineffective. Passtruein means to enable the RTK module. The aircraft has to read RTK data to take off. Also, the flight controller must use the accurate location data given by the RTK module. Passfalsemeans to disable the RTK module, the flight controller will no longer use the location data from the RTK module.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>isEnabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setRTKReferenceStationSource</name>
            <comment>Set the RTK reference station source of an aircraft. The RTK module of an aircraft provides chihiro network RTK, CMCC network RTK, custom network RTK and DJI's D-RTK 2 base station to select.
 Note: After setting the RTK reference station source, you should restart the aircraft.
source: Check RTKReferenceStationSource constant values.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>source</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getRTKReferenceStationSource</name>
            <comment>Get the RTK reference station source of an aircraft.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addRTKSystemStateListener</name>
            <comment>Add the listener of RTK system information.
 Return the listener object which can be used to call removeRTKSystemStateListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>CustomRTKManager</name>
            <returntype>com.biswajit.dji.RTKCenter.NetworkRTKManagerWrapper</returntype>
            <comment>Get an instance of custom NetworkRTKManager. It is used to initialize and enable custom network RTK service.</comment>
        </property>
        <property>
            <name>RTKStationManager</name>
            <returntype>com.biswajit.dji.RTKCenter.RTKStationManagerWrapper</returntype>
            <comment>Get an instance of RTKStationManager. It is used to connect and configure the RTK base station.</comment>
        </property>
        <property>
            <name>QXRTKManager</name>
            <returntype>com.biswajit.dji.RTKCenter.NetworkRTKManagerWrapper</returntype>
            <comment>Get an instance of chihiro NetworkRTKManager. It is used to initialize and enable chihiro network RTK service.</comment>
        </property>
        <property>
            <name>CMCCRTKManager</name>
            <returntype>com.biswajit.dji.RTKCenter.NetworkRTKManagerWrapper</returntype>
            <comment>Get an instance of CMCC NetworkRTKManager. It is used to initialize and enable CMCC network RTK service.</comment>
        </property>
        <field>
            <name>RTKReferenceStationSource_NTRIP_NETWORK_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKReferenceStationSource_QX_NETWORK_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKReferenceStationSource_CUSTOM_NETWORK_SERVICE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKReferenceStationSource_BASE_STATION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.RTKCustomNetworkSettingWrapper</name>
        <shortname>RTKCustomNetworkSetting</shortname>
        <owner>process</owner>
        <property>
            <name>MountPoint</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>mountPoint</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>UserName</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>userName</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Port</name>
            <returntype>int</returntype>
            <parameter>
                <name>port</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ServerAddress</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>serverAddress</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Password</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.RTKHeadingWrapper</name>
        <shortname>RTKHeading</shortname>
        <owner>process</owner>
        <method>
            <name>serializedLength</name>
            <comment></comment>
            <returntype>double</returntype>
        </method>
        <property>
            <name>Heading</name>
            <returntype>double</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DirectionEnabled</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.RTKLocationInfoWrapper</name>
        <shortname>RTKLocationInfo</shortname>
        <owner>process</owner>
        <property>
            <name>RtkLocation</name>
            <returntype>com.biswajit.dji.RTKCenter.RTKLocationWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>RealHeading</name>
            <returntype>double</returntype>
            <comment>Get the fusion heading of flight controller readings and RTK module readings.</comment>
        </property>
        <property>
            <name>Real3DLocation</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate3DWrapper</returntype>
            <comment>Get the fusion location of flight controller readings and RTK module readings.</comment>
        </property>
        <property>
            <name>RtkHeading</name>
            <returntype>com.biswajit.dji.RTKCenter.RTKHeadingWrapper</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.RTKLocationWrapper</name>
        <shortname>RTKLocation</shortname>
        <owner>process</owner>
        <property>
            <name>StdLatitude</name>
            <returntype>double</returntype>
            <comment>Get the standard deviation of Latitude. Unit: meter.</comment>
        </property>
        <property>
            <name>StdAltitude</name>
            <returntype>double</returntype>
            <comment>Get the standard deviation of Altitude. Unit: meter.</comment>
        </property>
        <property>
            <name>PositioningSolution</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the positioning solution of an RTK module. Check RTKPositioningSolution constant</comment>
        </property>
        <property>
            <name>BaseStationLocation</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate3DWrapper</returntype>
            <comment>Get the location of an RTK base station.</comment>
        </property>
        <property>
            <name>MobileStationLocation</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate3DWrapper</returntype>
            <comment>Get the location of an RTK module on an aircraft.</comment>
        </property>
        <property>
            <name>StdLongitude</name>
            <returntype>double</returntype>
            <comment>Get the standard deviation of Longitude. Unit: meter.</comment>
        </property>
        <field>
            <name>ORTKPositioningSolution_NONE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ORTKPositioningSolution_SINGLE_POINT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ORTKPositioningSolution_FIXED_POINT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ORTKPositioningSolution_FLOAT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.RTKReceiverInfoWrapper</name>
        <shortname>RTKReceiverInfo</shortname>
        <owner>process</owner>
        <property>
            <name>Type</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the type of GNSS system.</comment>
        </property>
        <property>
            <name>Count</name>
            <returntype>int</returntype>
            <comment>Get the received satellite count.</comment>
        </property>
        <field>
            <name>GNSSType_GLONASS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GNSSType_BEIDOU</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GNSSType_GALILEO</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>GNSSType_GPS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.RTKSatelliteInfoWrapper</name>
        <shortname>RTKSatelliteInfo</shortname>
        <owner>process</owner>
        <property>
            <name>MobileStationReceiver1Info</name>
            <returntype>com.biswajit.dji.RTKCenter.RTKReceiverInfoWrapper[]</returntype>
            <comment>Get the receiver 1's information of the RTK module on the aircraft.</comment>
        </property>
        <property>
            <name>MobileStationReceiver2Info</name>
            <returntype>com.biswajit.dji.RTKCenter.RTKReceiverInfoWrapper[]</returntype>
            <comment>Get the receiver 2's information of the RTK module on the aircraft.</comment>
        </property>
        <property>
            <name>BaseStationReceiverInfo</name>
            <returntype>com.biswajit.dji.RTKCenter.RTKReceiverInfoWrapper[]</returntype>
            <comment>Get the receivers' information of the RTK base station.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.RTKStationInfoWrapper</name>
        <shortname>RTKStationInfo</shortname>
        <owner>process</owner>
        <property>
            <name>StationName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SignalLevel</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>StationId</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.RTKStationManagerWrapper</name>
        <shortname>RTKStationManager</shortname>
        <owner>process</owner>
        <event>StartRTKStationSearch(success as boolean, error as DJIError)</event>
        <event>StopRTKStationSearch(success as boolean, error as DJIError)</event>
        <event>ConnectToRTKStation(stationId as int,success as boolean, error as DJIError)</event>
        <event>OnRTKStationSearchUpdate(info() as RTKStationInfo)</event>
        <event>OnRTKStationConnectionUpdate(state as Object)</event>
        <event>OnConnectedRTKStationInfoUpdate(newValue as ConnectedRTKStationInfo)</event>
        <event>RTKStationLogin(success as boolean, error as DJIError)</event>
        <event>SetRTKStationReferencePosition(success as boolean, error as DJIError)</event>
        <event>GetRTKStationReferencePosition(location as LocationCoordinate3D,success as boolean, error as DJIError)</event>
        <event>ResetRTKStationReferencePosition(success as boolean, error as DJIError)</event>
        <event>ResetRTKStationPassword(success as boolean, error as DJIError)</event>
        <event>SetRTKStationName(success as boolean, error as DJIError)</event>
        <method>
            <name>startConnectToRTKStation</name>
            <comment>Connect to the RTK station through base station id. You can get base station id fromRTKStationInfoby calling SearchRTKStationListener. After connecting to the RTk base station, you can monitor the connection status by callingaddRTKStationConnectStatusListener and monitor the base station information by callingaddConnectedRTKStationInfoListener.
stationId: RTK bse station id.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>stationId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRTKStationReferencePosition</name>
            <comment>Get the RTK base station reference position.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>resetRTKStationReferencePosition</name>
            <comment>Reset the RTK base station reference position to {1,1,1}.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeConnectedRTKStationInfoListener</name>
            <comment>Remove the listener of the RTK base station information.
 Send the listener object received from addConnectedRTKStationInfoListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addSearchRTKStationListener</name>
            <comment>Add the listener of RTK base station search result.
 Return the listener object which can be used to call removeSearchRTKStationListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setRTKStationReferencePosition</name>
            <comment>Get the RTK base station reference position.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>locationCoordinate3D</name>
                <type>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate3DWrapper</type>
            </parameter>
        </method>
        <method>
            <name>startSearchRTKStation</name>
            <comment>Start searching the RTK base station. You can use addSearchRTKStationListenerto add a listener to monitor this process.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllRTKStationConnectStatusListener</name>
            <comment>Remove all listeners of RTK base station connection status.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>addConnectedRTKStationInfoListener</name>
            <comment>Add the listener of RTK base station information.
 Return the listener object which can be used to call removeConnectedRTKStationInfoListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setRTKStationName</name>
            <comment>Reset the password of the RTK base station. Note: The password has to be starting from 0 to 9 with 6 digits. The default password is "123456".</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>currPassword</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addRTKStationConnectStatusListener</name>
            <comment>Add the listener of RTK base station connection status.
 Return the listener object which can be used to call removeRTKStationConnectStatusListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllConnectedRTKStationInfoListener</name>
            <comment>Remove all listeners of RTK base station information.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeSearchRTKStationListener</name>
            <comment>Remove the listener of the RTK base station search result.
 Send the listener object received from addSearchRTKStationListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>resetRTKStationPassword</name>
            <comment>Reset the password of the RTK base station. Note: The password has to be starting from 0 to 9 with 6 digits. The default password is "123456".</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>currPassword</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>newPassword</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeRTKStationConnectStatusListener</name>
            <comment>Remove the listener of the RTK base station connection status.
 Send the listener object received from addRTKStationConnectStatusListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>stopSearchRTKStation</name>
            <comment>Stop searching the RTK base station.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllSearchRTKStationListener</name>
            <comment>Remove all listeners of RTK base station search results.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>loginRTKStation</name>
            <comment>Login to the RTK base station. You can configure the advanced settings of the RTK base station after successful login. The password has to be starting from 0 to 9 with 6 digits. The default password is "123456".</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <field>
            <name>RTKStationConnetState_DISCONNECTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKStationConnetState_CONNECTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKStationConnetState_IDLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKStationConnetState_SCANNING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RTKStationConnetState_CONNECTING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.RTKCenter.RTKSystemStateWrapper</name>
        <shortname>RTKSystemState</shortname>
        <owner>process</owner>
        <property>
            <name>RTKConnected</name>
            <returntype>boolean</returntype>
            <comment>Get the connection status of the RTK module on the aircraft between the flight system. The default value is true, it will only become false when the RTK module on the aircraft has a circuit fault.</comment>
        </property>
        <property>
            <name>RTKHealthy</name>
            <returntype>boolean</returntype>
            <comment>Get the working status of the RTK module on the aircraft.</comment>
        </property>
        <property>
            <name>SatelliteInfo</name>
            <returntype>com.biswajit.dji.RTKCenter.RTKSatelliteInfoWrapper</returntype>
            <comment>Get the satellite information of the RTK module on the aircraft.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.SimulatorManager.SimulatorManagerWrapper</name>
        <shortname>SimulatorManager</shortname>
        <owner>process</owner>
        <event>EnableComplete(success as boolean, error as DJIError)</event>
        <event>DisableComplete(success as boolean, error as DJIError)</event>
        <method>
            <name>enableSimulator</name>
            <comment>Turn on the simulator.
Latitude: The initial coordinates of the aircraft in the simulator.
Longitude: The initial coordinates of the aircraft in the simulator.
satelliteCount: The initial number of satellites of the aircraft in the simulator. The range of satellite numbers is [0, 20].</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Latitude</name>
                <type>java.lang.Double</type>
            </parameter>
            <parameter>
                <name>Longitude</name>
                <type>java.lang.Double</type>
            </parameter>
            <parameter>
                <name>satelliteCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearAllSimulatorStateListener</name>
            <comment>Clear all listeners of the simulator status.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>disableSimulator</name>
            <comment>Turn off the simulator.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addSimulatorStateListener</name>
            <comment>To set the listener of the simulator status.
 Return the listener object which can be used to call removeSimulatorStateListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isSimulatorEnabled</name>
            <comment>To get whether the simulator is turned on.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>removeSimulatorStateListener</name>
            <comment>Remove the listener of the simulator status.
 Send the listener object received from addSimulatorStateListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.biswajit.dji.SimulatorManager.SimulatorStateWrapper</name>
        <shortname>SimulatorState</shortname>
        <owner>process</owner>
        <method>
            <name>areMotorsOn</name>
            <comment>Return whether the aircraft motor in the simulator has started to spin.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isFlying</name>
            <comment>Return whether the aircraft in the simulator is in flight.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>PositionY</name>
            <returntype>float</returntype>
            <comment>To get the north-south distance from the aircraft's current position in the
 simulator to the aircraft's initial position. Unit: meter. North is positive.
 The North East coordinate system is used.</comment>
        </property>
        <property>
            <name>PositionZ</name>
            <returntype>float</returntype>
            <comment>To get the vertical distance from the aircraft's current position in the
 simulator to the aircraft's initial position. Unit: meter. If the altitude of
 the aircraft is higher than the altitude of the initial position, the value
 should be negative.</comment>
        </property>
        <property>
            <name>Pitch</name>
            <returntype>float</returntype>
            <comment>To get the pitch angle of the aircraft in the simulator. Unit: degree.</comment>
        </property>
        <property>
            <name>Roll</name>
            <returntype>float</returntype>
            <comment>To get the roll angle of the aircraft in the simulator. Unit: degree.</comment>
        </property>
        <property>
            <name>PositionX</name>
            <returntype>float</returntype>
            <comment>To get the east-west distance from the aircraft's current position in the
 simulator to the aircraft's initial position. Unit: meter. East is positive.
 The North East coordinate system is used.</comment>
        </property>
        <property>
            <name>Yaw</name>
            <returntype>float</returntype>
            <comment>To get the yaw angle of the aircraft in the simulator. Unit: degree.</comment>
        </property>
        <property>
            <name>Location</name>
            <returntype>com.biswajit.dji.KeyManager.DJIValueWrapper.LocationCoordinate2DWrapper</returntype>
            <comment>To get the coordinates of the current position of the aircraft in the
 simulator.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.UASRemoteIDManager.ElectronicIDStatusWrapper</name>
        <shortname>ElectronicIDStatus</shortname>
        <owner>process</owner>
        <method>
            <name>isElectronicIDEnabled</name>
            <comment>Get whether the EID switch is turned on.</comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.biswajit.dji.UASRemoteIDManager.OperatorRegistrationNumberStatusWrapper</name>
        <shortname>OperatorRegistrationNumberStatus</shortname>
        <owner>process</owner>
        <method>
            <name>isOperatorRegistrationNumberImport</name>
            <comment>Get whether the registration number of the opeartor is imported.</comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.biswajit.dji.UASRemoteIDManager.RealNameRegistrationStatusWrapper</name>
        <shortname>RealNameRegistrationStatus</shortname>
        <owner>process</owner>
        <property>
            <name>RealNameRegistrationStateFromAircraft</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the real name registration status from aircraft.
 Check UASRemoteIDManager for RealNameRegistrationState constant values.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.UASRemoteIDManager.UARegistrationNumberStatusWrapper</name>
        <shortname>UARegistrationNumberStatus</shortname>
        <owner>process</owner>
        <method>
            <name>isUARegistrationNumberImport</name>
            <comment>Get whether the registration number of the drone is imported.</comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.biswajit.dji.UASRemoteIDManager.UASRemoteIDManagerWrapper</name>
        <shortname>UASRemoteIDManager</shortname>
        <owner>process</owner>
        <event>UASRemoteIDStatusUpdate(status as UASRemoteIDStatus)</event>
        <event>SetElectronicIDEnable(success as Boolean, error as DJIError)</event>
        <event>GetElectronicIDEnable(enable as Boolean, success as Boolean, error as DJIError)</event>
        <event>ElectronicIDStatusUpdate(status as ElectronicIDStatus)</event>
        <event>SetUARegNumber(success as Boolean, error as DJIError)</event>
        <event>GetUARegNumber(number as String, success as Boolean, error as DJIError)</event>
        <event>UARegNumberStatusUpdate(status as UARegistrationNumberStatus)</event>
        <event>SetOPRegNumber(success as Boolean, error as DJIError)</event>
        <event>GetOPRegNumber(number as String, success as Boolean, error as DJIError)</event>
        <event>OPRegNumberStatusUpdate(status as UARegistrationNumberStatus)</event>
        <event>RealNameStatusUpdate(status as UARegistrationNumberStatus)</event>
        <event>RealNameRegStateUpdate(success as Boolean, error as DJIError)</event>
        <method>
            <name>setUARegistrationNumber</name>
            <comment>Set the registration number based on the drone management policies and regulations of different countries.
 The drone registration number application entrance of Japan: https://www.dips.mlit.go.jp, Format of drone registration code:{"registration_code":"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx","key_info":"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx","nonce_info":"xxxxxxxxxxxx"}, After setting the drone registration code, isBroadcastRemoteIdEnabled will be enabled.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>number</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addRealNameRegistrationStatusListener</name>
            <comment>Add the real name status listener.
 Return the listener object which can be used to call removeRealNameRegistrationStatusListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getOperatorRegistrationNumber</name>
            <comment>Get the set operator registration number.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setElectronicIDEnabled</name>
            <comment>Enable or disable the EID function. After this function is enabled, the drone will broadcast the EID.
 EID is an electronic ID standard dedined by Frence. The value is the flight control SN of the drone. The prefix 1581F means it is a droen produced by DJI. For DJI flight control SN that is not starting with 1581F, 1581F should be added to the flight control SN. For example:
 
 For M300 RTK, this value is 1581F + the flight control SN(KeySerialNumber)+ 0
 for M350 RTK, M30 and M3E Series, this value is the flight control SN(KeySerialNumber)</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>isEnabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>clearAllElectronicIDStatusListener</name>
            <comment>Remove all the listeners of EID status.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearAllUARegistrationNumberStatusListener</name>
            <comment>Remove all the registration number status listeners of the drone.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>updateRealNameRegistrationStateFromUOM</name>
            <comment>Update the real name system status to the aircraft from the China UOM system. In accordance with the requirements of mainland China's unmanned aircraft flight management regulations, starting from January 1, 2024, any flying drone purchased and activated after this date to fly in mainland China will need to register with a real name on the UOM system, and You need to be connected to the Internet to update the real name registration information to the aircraft, otherwise the aircraft will not be able to take off normally.
 Real name registration portal: https://uom.caac.gov.cn/#/login, After the real name registration is implemented, you can call this interface to update the real name status to the aircraft.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllRealNameRegistrationStatusListener</name>
            <comment>Remove all the real name status listener.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeUASRemoteIDStatusListener</name>
            <comment>Remove the remote identification broadcast status listener of the drone system.
 Send the listener object received from addUASRemoteIDStatusListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>clearUASRemoteIDStatusListener</name>
            <comment>Remove all the remote identification broadcast status listeners of the drone system.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeRealNameRegistrationStatusListener</name>
            <comment>Remove the real name status listener.
 Send the listener object received from addRealNameRegistrationStatusListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>removeElectronicIDStatusListener</name>
            <comment>Remove the listener of EID status.
 Send the listener object received from addElectronicIDStatusListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>removeOperatorRegistrationNumberStatusListener</name>
            <comment>Remove the registration number status listener of the operator.
 Send the listener object received from addOperatorRegistrationNumberStatusListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addElectronicIDStatusListener</name>
            <comment>Add the listener of EID status.
 Return the listener object which can be used to call removeElectronicIDStatusListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeUARegistrationNumberStatusListener</name>
            <comment>Remove the registration number status listener of the drone.
 Send the listener object received from addUARegistrationNumberStatusListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addUARegistrationNumberStatusListener</name>
            <comment>Add the registration number status listener of the drone.
 Return the listener object which can be used to call removeUARegistrationNumberStatusListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getElectronicIDEnabled</name>
            <comment>Get whether the EID is enabled.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setUASRemoteIDAreaStrategy</name>
            <comment>Set the area strategy, and the UAS remote identification function supported by the country or area can be used only after the corresponding area strategy is set. After MSDK obtains the area code of the current area, it will set the corresponding area strategy by default. If you need to set other area strategy for development, you can call this interface to set the corresponding area strategy to make it take effect.
 Currently the supported country or area list and the supported function list is as follows:
 
 USA: remote identification broadcast of drone
 Japan: remote identification broadcast of drone, registration number of drone.
 European: remote identification broadcast of drone, registration number of operator.
 China: real name.
 Frence: EID Switch
strategy: One of AreaStrategy constant.</comment>
            <returntype>com.biswajit.dji.DJIErrorWrapper</returntype>
            <parameter>
                <name>strategy</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>setOperatorRegistrationNumber</name>
            <comment>Set operator registration code. It needs to be applied and set up according to the drone control policies and regulations of each country.
 EU operator registration code application portal: https://www.easa.europa.eu /en/domains/civil-drones/naa, after setting the operator registration code, isBroadcastRemoteIdEnabled will be enabled.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>number</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addOperatorRegistrationNumberStatusListener</name>
            <comment>Add the registration number status listener of the operator.
 Return the listener object which can be used to call removeOperatorRegistrationNumberStatusListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllOperatorRegistrationNumberStatusListener</name>
            <comment>Remove all the registration number status listeners of the operator.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>addUASRemoteIDStatusListener</name>
            <comment>Add the remote identification broadcast status listener of the drone system.
 Return the listener object which can be used to call removeUASRemoteIDStatusListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getUARegistrationNumber</name>
            <comment>Get the set drone registration number.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>UASRemoteIDStatus</name>
            <returntype>com.biswajit.dji.UASRemoteIDManager.UASRemoteIDStatusWrapper</returntype>
            <comment>Get the remote identification broadcast status of the drone system.</comment>
        </property>
        <field>
            <name>RealNameRegistrationState_NOT_AUTH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaStrategy_JAPAN_STRATEGY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteIdWorkingState_IDLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RealNameRegistrationState_VAILD_AUTH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteIdWorkingState_UNKNOWN_ERROR</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RealNameRegistrationState_DONT_IN_CHINA_MAINLAND</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteIdWorkingState_NOT_SUPPORTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RealNameRegistrationState_VERIFIED_AND_CANCLLED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RealNameRegistrationState_NOT_ACTIVE_YET</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaStrategy_FRANCE_STRATEGY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteIdWorkingState_NO_BROADCAST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaStrategy_US_STRATEGY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteIdWorkingState_FIRMWARE_ERROR</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteIdWorkingState_OPERATOR_LOCATION_LOST_ERROR</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RealNameRegistrationState_NETWORK_ERROR</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RealNameRegistrationState_UNSUPPORTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RealNameRegistrationState_DONT_NEED_CHECK_REALNAME</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>AreaStrategy_EUROPEAN_STRATEGY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RemoteIdWorkingState_WORKING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>RealNameRegistrationState_CANCELLED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.UASRemoteIDManager.UASRemoteIDStatusWrapper</name>
        <shortname>UASRemoteIDStatus</shortname>
        <owner>process</owner>
        <method>
            <name>isBroadcastRemoteIdEnabled</name>
            <comment>Get whether the RID broadcast function of the drone is enabled.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>RemoteIdWorkingState</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get the broadcast state of UAS remote identification(RID) .
 Check UASRemoteIDManager for RemoteIdWorkingState constant values.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.UpgradeManager.FirmwareInformationWrapper</name>
        <shortname>FirmwareInformation</shortname>
        <owner>process</owner>
        <property>
            <name>Version</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ReleaseNote</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.UpgradeManager.UpgradeableComponentWrapper</name>
        <shortname>UpgradeableComponent</shortname>
        <owner>process</owner>
        <property>
            <name>ComponentType</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FirmwareInformation</name>
            <returntype>com.biswajit.dji.UpgradeManager.FirmwareInformationWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LatestFirmwareInformation</name>
            <returntype>com.biswajit.dji.UpgradeManager.FirmwareInformationWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>State</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <field>
            <name>UpgradeableComponentState_CHECKING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>UpgradeableComponentState_IDLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ComponentType_REMOTE_CONTROLLER</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>UpgradeableComponentState_UP_TO_DATE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>UpgradeableComponentState_UPGRADE_AVAILABLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ComponentType_AIRCRAFT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.UpgradeManager.UpgradeInfoWrapper</name>
        <shortname>UpgradeInfo</shortname>
        <owner>process</owner>
        <property>
            <name>Progress</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UpgradeState</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Error</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <field>
            <name>UpgradeProgressState_TRANSFERRING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>UpgradeProgressState_TRANSFER_SUCCESS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>UpgradeProgressState_UPGRADE_SUCCESS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>UpgradeProgressState_UPGRADE_FAILED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>UpgradeProgressState_UPGRADING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>UpgradeProgressState_TRANSFER_FAILED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>UpgradeProgressState_INITIALIZING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.UpgradeManager.UpgradeManagerWrapper</name>
        <shortname>UpgradeManager</shortname>
        <owner>process</owner>
        <event>ComponentUpdated(component as UpgradeableComponent)</event>
        <event>UpgradeableCheckComplete(componentType as Object, success as boolean, error as DJIError)</event>
        <event>OfflineUpgradeStart(success as boolean, error as DJIError)</event>
        <event>UpgradeProgress(progress as UpgradeInfo)</event>
        <method>
            <name>startOfflineUpgrade</name>
            <comment>Start offline upgrade. The offline upgrade package can be obtained from the download page of the corresponding product on the DJI official website.
componentType: The type of component that needs to be upgraded. Check ComponentType constant value
offlineFirmwareFilePath: The offline upgrade package path corresponding to the upgrade component. The offline upgrade package can be obtained from the download page of the corresponding product on the DJI official website.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>componentType</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>offlineFirmwareFilePath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeAllUpgradeInfoListener</name>
            <comment>Remove all listeners for upgrade progress information.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeUpgradeableComponentListener</name>
            <comment>Remove listeners for upgradeable components.
 Send the listener object received from addUpgradeableComponentListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>checkUpgradeableComponents</name>
            <comment>Refresh upgradeable component information. Calling this interface will update the latest upgradeable information from the server.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeAllUpgradeableComponentListener</name>
            <comment>Remove all the listeners of upgradeable components.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeUpgradeInfoListener</name>
            <comment>Remove the listener for upgrade progress information.
 Send the listener object received from addUpgradeInfoListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addUpgradeableComponentListener</name>
            <comment>Add a listener for upgradeable components. After obtaining the upgradeable component information, you can call getUpgradeableComponents to obtain the types of all upgradeable components, whether they are upgradeable or not, the current firmware information, and the latest firmware information.
 Return the listener object which can be used to call removeUpgradeableComponentListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addUpgradeInfoListener</name>
            <comment>Add a listener for upgrade progress information.
 Return the listener object which can be used to call removeUpgradeInfoListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>UpgradeableComponents</name>
            <returntype>com.biswajit.dji.UpgradeManager.UpgradeableComponentWrapper[]</returntype>
            <comment>Gets a list of upgradeable components.</comment>
        </property>
        <field>
            <name>ComponentType_REMOTE_CONTROLLER</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ComponentType_AIRCRAFT</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.UserAccountManager.LoginInfoWrapper</name>
        <shortname>LoginInfo</shortname>
        <owner>process</owner>
        <property>
            <name>Account</name>
            <returntype>java.lang.String</returntype>
            <comment>Get login account. When the LoginState is LOGGED_IN, the login account can be got.</comment>
        </property>
        <property>
            <name>LoginState</name>
            <returntype>java.lang.Object</returntype>
            <comment>Get login status.</comment>
        </property>
        <field>
            <name>State_NOT_LOGGED_IN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>State_LOGGED_IN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>State_TOKEN_OUT_OF_DATE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.UserAccountManager.UserAccountManagerWrapper</name>
        <shortname>UserAccountManager</shortname>
        <owner>process</owner>
        <event>LoginComplete(success as boolean, error as DJIError)</event>
        <event>LogoutComplete(success as boolean, error as DJIError)</event>
        <event>LoginInfoUpdate(info as LoginInfo)</event>
        <method>
            <name>addLoginInfoUpdateListener</name>
            <comment>Add the listener of login information.
 Return the listener object which can be used to call removeLoginInfoUpdateListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>logOutDJIUserAccount</name>
            <comment>Logout the DJI account. If the asynchronous operation is done without any errors, Success event will be raised.
 Else an error object will be send to Failure event sub.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>logInDJIUserAccount</name>
            <comment>Login the DJI account by calling interface. This interface can be used in unmanned scenarios, such as nest applications. When the LoginState is NOT_LOGGED_IN or TOKEN_OUT_OF_DATE, this interface should be called to login account.
 Note:
 After the login fails, if the callback of this interface returns an error of Login, it means that the verification code needs to be entered when you login again. Please call getVerificationCodeImageURL to get the image verification code.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>userName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>verificationCode</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllLoginInfoUpdateListener</name>
            <comment>Remove all the listener of login information.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>logInDJIUserAccountUI</name>
            <comment>Login the DJI account by calling the login UI. When the LoginState is NOT_LOGGED_IN or TOKEN_OUT_OF_DATE, this interface should be called to login account.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>fragmentActivity</name>
                <type>androidx.fragment.app.FragmentActivity</type>
            </parameter>
            <parameter>
                <name>isFullScreen</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>removeLoginInfoUpdateListener</name>
            <comment>Remove the listener of login information.
 Send the listener object received from addLoginInfoUpdateListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>LoginInfo</name>
            <returntype>com.biswajit.dji.UserAccountManager.LoginInfoWrapper</returntype>
            <comment>Get current login information, including login status and login account.</comment>
        </property>
        <property>
            <name>VerificationCodeImageURL</name>
            <returntype>java.lang.String</returntype>
            <comment>Get the webpage link of the image verification code, you can visit this link to get the image verification code.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.VirtualStickManager.StickWrapper</name>
        <shortname>Stick</shortname>
        <owner>process</owner>
        <property>
            <name>HorizontalPosition</name>
            <returntype>int</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <comment>To get/set the movement amount of the control stick in the horizontal position (horizontalPosition). The range is [-660,660]. When the control stick move horizontally to extreme left, the value of verticalPosition is -660. When the control stick move horizontally to extreme right, the value of horizontalPosition is 660.</comment>
        </property>
        <property>
            <name>VerticalPosition</name>
            <returntype>int</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <comment>To get/set the movement amount of the control stick in the vertical position (verticalPosition). The range is [-660,660]. When the control stick moves vertically to extreme left, the value of verticalPosition is -660. When the control stick moves vertically to extreme right, the value of verticalPosition is 660.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.VirtualStickManager.VirtualStickFlightControlParamWrapper</name>
        <shortname>VirtualStickFlightControlParam</shortname>
        <owner>process</owner>
        <property>
            <name>RollPitchControlMode</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>rollPitchControlMode</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RollPitchCoordinateSystem</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>rollPitchCoordinateSystem</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>VerticalControlMode</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>verticalControlMode</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Pitch</name>
            <returntype>double</returntype>
            <parameter>
                <name>pitch</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>VerticalThrottle</name>
            <returntype>double</returntype>
            <parameter>
                <name>verticalThrottle</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Roll</name>
            <returntype>double</returntype>
            <parameter>
                <name>roll</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Yaw</name>
            <returntype>double</returntype>
            <parameter>
                <name>yaw</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>YawControlMode</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>yawControlMode</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>VirtualStickRange_YAW_CONTROL_MAX_ANGLE</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>VirtualStickRange_VERTICAL_CONTROL_MAX_HEIGHT</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>YawControlMode_ANGULAR_VELOCITY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VirtualStickRange_VERTICAL_CONTROL_MIN_HEIGHT</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>RollPitchControlMode_VELOCITY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VirtualStickRange_YAW_CONTROL_MIN_ANGLE</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>VirtualStickRange_ROLL_PITCH_CONTROL_MAX_ANGLE</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>VirtualStickRange_ROLL_PITCH_CONTROL_MIN_ANGLE</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>RollPitchControlMode_ANGLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VerticalControlMode_POSITION</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VirtualStickRange_YAW_CONTROL_MIN_ANGULAR_VELOCITY</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>VirtualStickRange_ROLL_PITCH_CONTROL_MIN_VELOCITY</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>VirtualStickRange_VERTICAL_CONTROL_MAX_VELOCITY</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>VirtualStickRange_ROLL_PITCH_CONTROL_MAX_VELOCITY</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>VerticalControlMode_VELOCITY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>YawControlMode_ANGLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>VirtualStickRange_VERTICAL_CONTROL_MIN_VELOCITY</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>VirtualStickRange_YAW_CONTROL_MAX_ANGULAR_VELOCITY</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.VirtualStickManager.VirtualStickManagerWrapper</name>
        <shortname>VirtualStickManager</shortname>
        <owner>process</owner>
        <event>VirtualStickEnable(success as boolean, error as DJIError)</event>
        <event>VirtualStickDisable(success as boolean, error as DJIError)</event>
        <event>FCAChangeReason(flightControlAuthorityChangeReason as Object)</event>
        <event>OnVirtualStickStateUpdate(state as VirtualStickState)</event>
        <method>
            <name>enableVirtualStick</name>
            <comment>Open the virtual stick mode.
 Note:
 1. For flight safety, when the aircraft is close(about 30 meters) to the restricted flight zone or restricted distance, the remote controller will get the control of the aircraft, and the virtual stick cannot be used.
 2. Currently, only M300 RTK, M350 RTK and M30 series aircraft support obstacle avoidance in virtual joystick mode.
 3. The virtual stick normal mode supports obstacle avoidance by default.
 4. In the virtual stick advanced mode, obstacle avoidance is supported only when the vertical control Mode is velocity mode, the yaw control mode is angular velocity mode, and the roll pitch control mode is velocity mode.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeVirtualStickStateListener</name>
            <comment>Remove the listener of the virtual stick status.
 Send the listener object received from setVirtualStickStateListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>setVirtualStickStateListener</name>
            <comment>To set the listener of the virtual stick status.
 Return the listener object which can be used to call removeVirtualStickStateListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>sendVirtualStickAdvancedParam</name>
            <comment>Send virtual stick advanced control parameters.
 
 Please call setVirtualStickAdvancedModeEnabled to enable advanced mode before using this interface.
 Developers can send control parameters at a specific frequency according to their own needs. The recommended sending frequency is between 5Hz and 25Hz.
 For detailed usage of advanced control parameters, please refer to Virtual stick
 For advanced control parameter ranges, please refer to: VirtualStickRange.
param: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>param</name>
                <type>com.biswajit.dji.VirtualStickManager.VirtualStickFlightControlParamWrapper</type>
            </parameter>
        </method>
        <method>
            <name>disableVirtualStick</name>
            <comment>Close the virtual stick mode.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllVirtualStickStateListener</name>
            <comment>Clean all the listener of the virtual stick status.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>VirtualStickAdvancedModeEnabled</name>
            <parameter>
                <name>isEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Enable virtual stick advanced mode. In advanced mode, the control data of left stick getLeftStick and right stick getLeftStick will no longer take effect, you can call sendVirtualStickAdvancedParam to set more advanced control parameters for use with more complex application scenarios, such as using a virtual stick to implement waypoint-related functions.</comment>
        </property>
        <property>
            <name>LeftStick</name>
            <returntype>com.biswajit.dji.VirtualStickManager.StickWrapper</returntype>
            <comment>To get the left stick instance of the virtual stick. Left stick controls the yaw axis and throttle of the aircraft.
 
 When the stick moves left, the horizontalPosition is negative. The aircraft will rotate counterclockwise when looking down at the aircraft.
 When the stick moves right, the horizontalPosition is positive. The aircraft will rotate clockwise when looking down at the aircraft.
 When the stick moves upward, the verticalPosition is positive. The aircraft will increase its altitude.
 When the stick moves downward, the verticalPosition is negative. The aircraft will lower its altitude.</comment>
        </property>
        <property>
            <name>RightStick</name>
            <returntype>com.biswajit.dji.VirtualStickManager.StickWrapper</returntype>
            <comment>To get the right stick instance of the virtual stick. Right stick controls the roll axis and pitch axis of the aircraft.
 
 When the stick moves left, the horizontalPosition is negative. The aircraft will fly left when looking down at the aircraft.
 When the stick moves right, the horizontalPosition is positive. The aircraft will fly right when looking down at the aircraft.
 When the stick moves upward, the verticalPosition is positive. The aircraft will fly forward when looking down at the aircraft.
 When the stick moves downward, the verticalPosition is negative. The aircraft will fly backward when looking down at the aircraft.</comment>
        </property>
        <field>
            <name>FlightControlAuthorityChangeReason_OSDK_LOST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthorityChangeReason_MSDK_REQUEST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthorityChangeReason_RC_LOST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthorityChangeReason_RC_PAUSE_STOP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthorityChangeReason_OSDK_REQUEST</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthorityChangeReason_RC_SWITCH</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthorityChangeReason_NEAR_BOUNDARY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthorityChangeReason_BATTERY_SUPER_LOW_LANDING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthorityChangeReason_RC_ONE_KEY_GO_HOME</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthorityChangeReason_BATTERY_LOW_GO_HOME</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthorityChangeReason_RC_NOT_P_MODE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.VirtualStickManager.VirtualStickStateWrapper</name>
        <shortname>VirtualStickState</shortname>
        <owner>process</owner>
        <method>
            <name>isVirtualStickAdvancedModeEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isVirtualStickEnable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>CurrentFlightControlAuthorityOwner</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <field>
            <name>FlightControlAuthority_OSDK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthority_MSDK</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>FlightControlAuthority_RC</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.WaypointMissionManager.BreakPointInfoWrapper</name>
        <shortname>BreakPointInfo</shortname>
        <owner>process</owner>
        <method>
            <name>getSegmentProgress</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>progress</name>
                <type>double</type>
            </parameter>
        </method>
        <property>
            <name>WaylineID</name>
            <returntype>int</returntype>
            <parameter>
                <name>waylineID</name>
                <type>int</type>
            </parameter>
            <comment>Get/Set the wayline ID of the breakpoint.</comment>
        </property>
        <property>
            <name>SegmentProgress</name>
            <returntype>double</returntype>
            <comment>Get/Set the waypoint ID of the breakpoint.
 Range: (0, 1). For example: If you want to start flying at 25% of the segment from waypoint 1 to waypoint 2, you can set the waypointID to 1 and set this parameter to 0.25.</comment>
        </property>
        <property>
            <name>WaypointID</name>
            <returntype>int</returntype>
            <parameter>
                <name>waypointID</name>
                <type>int</type>
            </parameter>
            <comment>Get/Set the waypoint ID of the breakpoint.</comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.WaypointMissionManager.WaylineExecutingInfoWrapper</name>
        <shortname>WaylineExecutingInfo</shortname>
        <owner>process</owner>
        <property>
            <name>CurrentWaypointIndex</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>WaylineID</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MissionFileName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.biswajit.dji.WaypointMissionManager.WaypointMissionManagerWrapper</name>
        <shortname>WaypointMissionManager</shortname>
        <owner>process</owner>
        <event>MissionStateUpdate(state as Object)</event>
        <event>WaylineExecutingError(error as DJIError)</event>
        <event>WaylineExecutingUpdate(info as WaylineExecutingInfo)</event>
        <event>WaypointActionStart(actionGroup as Int, actionId as Int)</event>
        <event>WaypointActionFinish(actionGroup as Int, actionId as Int, error as DJIError)</event>
        <event>PushKMZComplete(success as Boolean, error as DJIError)</event>
        <event>PushKMZProgress(progress as Double)</event>
        <event>MissionError(error as DJIError)</event>
        <event>MissionStarted</event>
        <event>MissionPaused</event>
        <event>MissionResumed</event>
        <event>MissionStopped</event>
        <event>QueryBreakPointComplete(info as BreakPointInfo, success as Boolean, error as DJIError)</event>
        <method>
            <name>clearAllWaypointActionListener</name>
            <comment>Remove all listeners of waypoint action execution.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>stopMission</name>
            <comment>Stop the waypoint mission.
missionFileName: The file name of the Mission to be stopped.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>missionFileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>startMission1</name>
            <comment>Start the waypoint mission.
missionFileName: The file name of the Mission to be executed.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>missionFileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addWaylineExecutingInfoListener</name>
            <comment>Add a listener of waylines execution information. The wayline information includes the currently executed wayline ID and the currently executed waypoint index.
 Return the listener object which can be used to call removeWaylineExecutingInfoListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeWaylineExecutingInfoListener</name>
            <comment>Remove a listener of waylines execution information.
 Send the listener object received from addWaylineExecutingInfoListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>removeWaypointActionListener</name>
            <comment>Remove a listener of waypoint action execution.
 Send the listener object received from addWaypointActionListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>queryBreakPointInfoFromAircraft</name>
            <comment>Query the breakpoint information when the waypoint mission is paused. The breakpoint information includes the position of the aircraft where the waypoint mission is paused. After the breakpoint information is obtained, it can be passed as a parameter to startMission or resumeMission to execute the waypoint mission. The aircraft will fly to the incoming breakpoint position, and then execute the waypoint mission in sequence according to the waypoint order.
 Note:
 The M300 RTK and M350 RTK do not support the breakpoint function.
 The breakpoint information can only be queried after calling the pause waypoint mission interface pauseMission.
missionFileName: The file name of the Mission to be executed.
 Return the execution result in QueryBreakPoint events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>missionFileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearAllWaylineExecutingInfoListener</name>
            <comment>Remove all listeners of the waylines execution state.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>startMission2</name>
            <comment>Start executing the waypoint mission of the specified Wayline IDs list. A list of available wayline IDs can be obtained through getAvailableWaylineIDs, after obtaining this wayline IDs list, you can select the wayline ID to be executed as a parameter and pass it to this interface, the aircraft will execute the waypoint mission in sequence in the order of the wayline IDs list. If the wayline IDs list parameter is empty or the length of the wayline IDs list is 0, the aircraft will execute all waylines in the waypoint mission.
 Note: M300 RTK and M350 RTK only support 1 wayline ID.
missionFileName: The file name of the Mission to be executed.
waylineIDs: The wayline IDs list to be executed.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>missionFileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>waylineIDs</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>clearAllWaypointMissionExecuteStateListener</name>
            <comment>Remove all listeners of the waypoint mission execution state.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>addWaypointMissionExecuteStateListener</name>
            <comment>Add a listener of waypoint mission execution state. It can be used to listen the execution status of waypoint mission, such as uploading waypoint mission KMZ file, enter wayline flying, and wwaypoint mission finished, etc.
 Return the listener object which can be used to call removeWaypointMissionExecuteStateListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getAvailableWaylineIDs</name>
            <comment>Returns a list of wayline IDs available in the specified mission file. After obtaining this wayline ID list, you can select the wayline ID to be executed and pass it as a parameter to startMission to execute the waypoint mission.
 Note: M300 RTK and M350 RTK only support 1 wayline ID.
missionFileName: The specified mission filename.
Return type: @return:Get a list of wayline IDs available in the specified mission file.</comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>missionFileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addWaypointActionListener</name>
            <comment>Add a listener of waypoint action execution. Including waypoint action start execution information and finish execution information.
 Return the listener object which can be used to call removeWaypointActionListener;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>pushKMZFileToAircraft</name>
            <comment>Upload a waypoint mission.
 The waypoint mission is defined in a KMZ file, KMZ file is defined according to the DJI standard WPML. The WPML is defined according to XML and KML. For more details, please see: DJI WPML
 Users can generate a KMZ file according to the template provided by DJI Pilot 2. You can also define custom waylines.wpml according to DJI WPML standard and upload it after compressing it into a KMZ file.
 The newly uploaded KMZ file will override the previously uploaded KMZ file if they have the same mission KMZ file name.
 You can call this interface multiple times to upload multiple waypoint mission KMZ files. You can set mission KMZ file name to select the mission to startstartMission or stopstopMission.
 One KMZ file includes one waypoint mission. One waypoint mission can contain multiple waylines.
 
 Return the upload status of the KMZ file including uploading progress and errors in PushKMZFailed,PushKMZProgress and PushKMZSuccess event.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>missionFilePath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>removeWaypointMissionExecuteStateListener</name>
            <comment>Remove a listener of waypoint mission execution state.
 Send the listener object received from addWaypointMissionExecuteStateListener method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <field>
            <name>WaypointMissionExecuteState_EXECUTING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WaypointMissionExecuteState_PREPARING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WaypointMissionExecuteState_RECOVERING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WaypointMissionExecuteState_UPLOADING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WaypointMissionExecuteState_ENTER_WAYLINE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WaypointMissionExecuteState_READY</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WaypointMissionExecuteState_INTERRUPTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WaypointMissionExecuteState_NOT_SUPPORTED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WaypointMissionExecuteState_FINISHED</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>WaypointMissionExecuteState_IDLE</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>com.biswajit.dji.WaypointMissionManager.WPMZManagerWrapper</name>
        <shortname>WPMZManager</shortname>
        <owner>process</owner>
        <method>
            <name>generateKMZFile</name>
            <comment>Generate waypoint mission KMZ files by setting waypoint mission information, and the generated KMZ files will be stored in kmzPath path. The KMZ file generated by this interface contains a Template file, which is compatible with DJI Pilot.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>kmzPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>waylineMission</name>
                <type>dji.sdk.wpmz.value.mission.WaylineMission</type>
            </parameter>
            <parameter>
                <name>config</name>
                <type>dji.sdk.wpmz.value.mission.WaylineMissionConfig</type>
            </parameter>
            <parameter>
                <name>waylineTemplate</name>
                <type>com.dji.wpmzsdk.common.data.Template</type>
            </parameter>
        </method>
        <method>
            <name>getKMZInfo</name>
            <comment>Load the KMZ file and get the waypoint mission information in the KMZ file.</comment>
            <returntype>com.dji.wpmzsdk.common.data.KMZInfo</returntype>
            <parameter>
                <name>kmzPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>transKMLtoKMZ</name>
            <comment>Convert KML files to KMZ files. The historical KML files generated by the DJI App can be converted into KMZ files.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>kmlImportPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>kmzOutPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>checkValidation</name>
            <comment>Check some fields in the KMZ file.</comment>
            <returntype>dji.sdk.wpmz.value.mission.WaylineCheckErrorMsg</returntype>
            <parameter>
                <name>kmzPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <version>1.0</version>
    <author>Biswajit Sarkar</author>
    <dependsOn>dji-sdk-v5-aircraft-5.8.0.aar</dependsOn>
    <dependsOn>dji-sdk-v5-networkImp-5.8.0.aar</dependsOn>
    <dependsOn>room-runtime-2.4.1.aar</dependsOn>
    <dependsOn>room-common-2.4.1.jar</dependsOn>
    <dependsOn>sqlite-2.2.0.aar</dependsOn>
    <dependsOn>sqlite-framework-2.2.0.aar</dependsOn>
    <dependsOn>room-rxjava3-2.4.1.aar</dependsOn>
    <dependsOn>rxjava-2.2.4.jar</dependsOn>
    <dependsOn>rxjava-3.0.0.jar</dependsOn>
    <dependsOn>reactive-streams-1.0.3.jar</dependsOn>
    <dependsOn>okhttp-4.9.0.jar</dependsOn>
    <dependsOn>wpmzsdk-1.0.1.1.aar</dependsOn>
    <dependsOn>gson-2.8.5.jar</dependsOn>
    <dependsOn>xcrash-android-lib-3.1.0.aar</dependsOn>
    <dependsOn>okio-2.8.0.jar</dependsOn>
    <dependsOn>wire-runtime-2.2.0.jar</dependsOn>
    <dependsOn>kotlin-stdlib-1.6.10.jar</dependsOn>
    <dependsOn>rxandroid-3.0.0.aar</dependsOn>
    <dependsOn>android-database-sqlcipher-4.5.0.aar</dependsOn>
    <dependsOn>aspectjrt-1.9.6.jar</dependsOn>
    <dependsOn>androidx.annotation:annotation</dependsOn>
    <dependsOn>androidx.fragment:fragment</dependsOn>
    <dependsOn>androidx.appcompat:appcompat</dependsOn>
    <dependsOn>androidx.arch.core:core-runtime</dependsOn>
</root>
