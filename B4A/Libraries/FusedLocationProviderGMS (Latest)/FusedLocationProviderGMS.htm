<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title>FusedLocationProviderGMS</title>
	<style type="text/css">
		body{
			background-color:#E1DEE6;
			color:#222;
			font-family:Arial,Helvetica,sans-serif;
			font-size:14px;
			margin:0;
			padding:0;
		}
		h3{
			background-color:#869BBF;
			margin:0;
			padding:5px;
		}
		ul{
			list-style:none;
			margin:5px;
			padding:0;
		}
		ul li{
			background-color:#FFF;
			border:1px solid #666;
			margin:0;
			padding:5px;
		}
		ul li:first-child, h3{
			border-top-left-radius:5px;
			border-top-right-radius:5px;
		}
		ul li:last-child, h3{
			border-bottom-left-radius:5px;
			border-bottom-right-radius:5px;
		}
		ul h3:first-child{
			background-color:#869BDF;
			margin-bottom:5px;
		}
	</style>
</head>
<body><h3>FusedLocationProviderGMS</h3>
<ul><i></i></ul>
<ul><li><h3>Classes</h3>
<ul><li><A href="#0">FusedLocationProviderClient</A></li>
<li><A href="#1">Granularity</A></li>
<li><A href="#2">LocationF</A></li>
<li><A href="#3">LocationF</A></li>
<li><A href="#4">LocationRequest</A></li>
<li><A href="#5">LocationRequest</A></li>
<li><A href="#6">LocationResult</A></li>
<li><A href="#7">LocationResult</A></li>
<li><A href="#8">Priority</A></li>
</ul></li></ul>
<ul><A id="0"/>
<li><h3>FusedLocationProviderClient</h3>
<ul><i></i></ul>
<h3>Events:</h3>
<ul><li><b>LocationAvailabilityChanged</b> (Available <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>)</li>
<li><b>LocationAvailabilityRequestCompleted</b> (Available <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>)</li>
<li><b>LocationChanged</b> (mLocation <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationF</span>)</li>
<li><b>LocationEnabledInSettingsChanged</b> (Enabled <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>)</li>
<li><b>LocationRequestCompleted</b> (Result <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationResult</span>)</li>
</ul>
<h3>Functions:</h3>
<ul><li><b>FlushLocations</b>  
<br/><i>Flushes any locations currently being batched.</i>
</li><li><b>GetCurrentLocation</b> (Priority <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Returns a single location fix representing the best estimate of the current location of the device. This may return a cached location if a recent enough location fix exists, or may compute a fresh location. If unable to retrieve a current location fix, null will be returned.<BR/>
 Priority - Priority used to obtain location.<BR/>
 This method is asynchronous. When the process is complete, an event "LocationRequestCompleted" will be triggered.</i>
</li><li><b>GetCurrentLocation2</b> (DurationMillis <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>, Granularity <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>, Priority <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>, MaxUpdateAgeMillis <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Returns a single location fix representing the best estimate of the current location of the device. This may return a historical location if a recent enough location fix exists, or may compute a fresh location. If unable to retrieve a current location fix, null will be returned.<BR/>
 DurationMillis - Sets the duration in milliseconds of the location request used to derive the current location if no historical location satisfies the current location request. If this duration expires with no location, the current location request will return a null location. The current location request may fail and return a null location after a shorter duration, but never a longer duration. The default value is LocationRequest_Constants.MAX_VALUE.<BR/>
 Granularity - Sets the Granularity of locations returned for this request. This controls whether fine or coarse locations may be returned.<BR/>
 Priority - Sets the Priority of the location request used to derive the current location if no historical location satisfies the current location request.<BR/>
 MaxUpdateAgeMillis - Sets the maximum age of any location returned for this request. A value of 0 indicates that only freshly derived locations will be returned, and no historical locations will ever be returned. A value LocationRequest_Constants.MAX_VALUE represents an effectively unbounded maximum age.<BR/>
 This method is asynchronous. When the process is complete, an event "LocationRequestCompleted" will be triggered.</i>
</li><li><b>GetLastLocation</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Returns the most recent historical location currently available. Will return null if no historical location is available. The historical location may be of an arbitrary age, so clients should check how old the location is to see if it suits their purposes.<BR/>
 This method is asynchronous. When the process is complete, an event "LocationRequestCompleted" will be triggered.</i>
</li><li><b>GetLastLocation2</b> (Granularity <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>, MaxUpdateAgeMillis <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Returns the most recent historical location currently available according to the given request. Will return null if no matching historical location is available.<BR/>
 Granularity - The Granularity of locations returned for this request. This controls whether fine or coarse locations may be returned.<BR/>
 MaxUpdateAgeMillis - The maximum age of any location returned for this request. A value of LocationRequest_Constants.MAX_VALUE represents an effectively unbounded maximum age.<BR/>
 This method is asynchronous. When the process is complete, an event "LocationRequestCompleted" will be triggered.</i>
</li><li><b>GetLocationAvailability</b>  
<br/><i>Returns true if the device location is generally available.<BR/>
 This method is asynchronous. When the process is complete, an event "LocationAvailabilityRequestCompleted" will be triggered.</i>
</li><li><b>Initialize</b> (EventName <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>FusedLocationProviderClient</span>
<br/><i></i>
</li><li><b>IsInitialized</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i></i>
</li><li><b>RemoveLocationUpdates</b>  
<br/><i>Removes all location updates and stops listener for the future locations updates.</i>
</li><li><b>RequestLocationUpdates</b> (Request <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>) 
<br/><i>Requests location updates with the given request.<BR/>
 Use RemoveLocationUpdates to stop location updates once no longer needed.</i>
</li><li><b>SetMockLocation</b> (mLocation <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationF</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>FusedLocationProviderClient</span>
<br/><i>Sets the mock location of the Fused Location Provider.</i>
</li><li><b>SetMockMode</b> (MockMode <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>FusedLocationProviderClient</span>
<br/><i>Sets whether or not the Fused Location Provider is in mock mode.</i>
</li></ul>
<h3>Properties:</h3>
<ul><li><b>IsLocationEnabledInSettings</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span> [read only]
<br/><i>Check if Location is enabled in device's settings.</i>
</li><li><b>LocationSettingsIntent</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Intent</span> [read only]
<br/><i>Returns the intent that is used to show the global locations settings.</i>
</li></ul>
</li>
</ul><ul><A id="1"/>
<li><h3>Granularity</h3>
<ul><i></i></ul>
<h3>Fields:</h3>
<ul><li><b>GRANULARITY_COARSE</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>The desired location granularity is always coarse, regardless of the client permission level. The client will be delivered coarse locations while it has the Manifest.permission.ACCESS_FINE_LOCATION or Manifest.permission.ACCESS_COARSE_LOCATION permission, and no location if it lacks either.<BR/>
 Constant Value: 1</i>
</li><li><b>GRANULARITY_FINE</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>The desired location granularity is always fine, regardless of the client permission level. The client will be delivered fine locations while it has the Manifest.permission.ACCESS_FINE_LOCATION, and no location if it lacks that permission.<BR/>
 Constant Value: 2</i>
</li><li><b>GRANULARITY_PERMISSION_LEVEL</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>The desired location granularity should correspond to the client permission level. The client will be delivered fine locations while it has the Manifest.permission.ACCESS_FINE_LOCATION permission, coarse locations while it has only the Manifest.permission.ACCESS_COARSE_LOCATION permission, and no location if it lacks either.<BR/>
 Constant Value: 0</i>
</li></ul>
</li>
</ul><ul><A id="2"/>
<li><h3>LocationF</h3>
<ul><i></i></ul>
<h3>Functions:</h3>
<ul><li><b>BearingTo</b> (Dest <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationF</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Float</span>
<br/><i>Returns the approximate initial bearing in degrees east of true north when traveling along the shortest path between this location and the given location. The shortest path is defined using the WGS84 ellipsoid. Locations that are (nearly) antipodal may produce meaningless results.</i>
</li><li><b>DistanceTo</b> (Dest <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationF</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Float</span>
<br/><i>Returns the approximate distance in meters between this location and the given location. Distance is defined using the WGS84 ellipsoid.</i>
</li><li><b>HasAccuracy</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Returns true if this location has a horizontal accuracy, false otherwise.</i>
</li><li><b>HasAltitude</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Returns true if this location has an altitude, false otherwise.</i>
</li><li><b>HasBearing</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>True if this location has a bearing, false otherwise.</i>
</li><li><b>HasBearingAccuracy</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Returns true if this location has a bearing accuracy, false otherwise.</i>
</li><li><b>HasSpeed</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>True if this location has a speed, false otherwise.</i>
</li><li><b>HasSpeedAccuracy</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Returns true if this location has a speed accuracy, false otherwise.</i>
</li><li><b>HasVerticalAccuracy</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Returns true if this location has a vertical accuracy, false otherwise.</i>
</li><li><b>Initialize</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationF</span>
<br/><i></i>
</li><li><b>Initialize2</b> (mLocationF <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationF</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationF</span>
<br/><i></i>
</li><li><b>IsInitialized</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i></i>
</li><li><b>Reset</b>  
<br/><i>Sets the provider to null, removes all optional fields, and sets the values of all other fields to zero.</i>
</li><li><b>ToString</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>
<br/><i></i>
</li></ul>
<h3>Properties:</h3>
<ul><li><b>Accuracy</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Float</span>
<br/><i>Gets or sets the horizontal accuracy in meters of this location.</i>
</li><li><b>Altitude</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Double</span>
<br/><i>Gets or sets the altitude of this location in meters above the WGS84 reference ellipsoid.</i>
</li><li><b>Bearing</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Float</span>
<br/><i>Gets or sets the bearing at the time of this location, in degrees. The given bearing will be converted into the range (0, 360).</i>
</li><li><b>BearingAccuracyDegrees</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Float</span>
<br/><i>Gets or sets the bearing accuracy in degrees of this location. Bearing accuracy in degrees Value is 0.0 or greater.</i>
</li><li><b>Latitude</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Double</span>
<br/><i>Gets or set the latitude of this location.</i>
</li><li><b>Longitude</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Double</span>
<br/><i>Gets or sets the longitude of this location.</i>
</li><li><b>Provider</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>
<br/><i>Gets or sets the name of the provider associated with this location</i>
</li><li><b>Speed</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Float</span>
<br/><i>Gets or sets the speed at the time of this location, in meters per second.</i>
</li><li><b>SpeedAccuracyMetersPerSecond</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Float</span>
<br/><i>Set the speed accuracy of this location in meters per second.</i>
</li><li><b>Time</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>
<br/><i>Gets or sets the Unix epoch time of this location fix, in milliseconds since the start of the Unix epoch (00:00:00 January 1 1970 UTC).</i>
</li><li><b>VerticalAccuracyMeters</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Float</span>
<br/><i>Gets or sets the altitude accuracy of this location in meters.</i>
</li></ul>
</li>
</ul><ul><A id="3"/>
<li><h3>LocationF</h3>
<ul><i></i></ul>
<h3>Fields:</h3>
<ul><li><b>FORMAT_DEGREES</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Constant used to specify formatting of a latitude or longitude in the form "[+-]DDD.DDDDD" where D indicates degrees.<BR/>
 Constant Value: 0</i>
</li><li><b>FORMAT_MINUTES</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Constant used to specify formatting of a latitude or longitude in the form "[+-]DDD:MM.MMMMM" where D indicates degrees and M indicates minutes of arc (1 minute = 1/60th of a degree).<BR/>
 Constant Value: 1</i>
</li><li><b>FORMAT_SECONDS</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Constant used to specify formatting of a latitude or longitude in the form "DDD:MM:SS.SSSSS" where D indicates degrees, M indicates minutes of arc, and S indicates seconds of arc (1 minute = 1/60th of a degree, 1 second = 1/3600th of a degree).<BR/>
 Constant Value: 2</i>
</li></ul>
<h3>Functions:</h3>
<ul><li><b>ConvertToDouble</b> (Coordinate <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Double</span>
<br/><i>Converts a String in one of the formats described by FORMAT_DEGREES, FORMAT_MINUTES, or FORMAT_SECONDS into a double.</i>
</li><li><b>ConvertToString</b> (Coordinate <span style='color:blue'>As</span> <span style='color:#008B8B'>Double</span>, OutputType <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>
<br/><i>Converts a latitude/longitude coordinate to a String representation. The outputType must be one of FORMAT_DEGREES, FORMAT_MINUTES, or FORMAT_SECONDS. The coordinate must be a number between -180.0 and 180.0, inclusive. This conversion is performed in a method that is dependent on the default locale.</i>
</li><li><b>DistanceBetween</b> (startLatitude <span style='color:blue'>As</span> <span style='color:#008B8B'>Double</span>, startLongitude <span style='color:blue'>As</span> <span style='color:#008B8B'>Double</span>, endLatitude <span style='color:blue'>As</span> <span style='color:#008B8B'>Double</span>, endLongitude <span style='color:blue'>As</span> <span style='color:#008B8B'>Double</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Float()</span>
<br/><i>Computes the approximate distance in meters between two locations, and optionally the initial and final bearings of the shortest path between them. Distance and bearing are defined using the WGS84 ellipsoid and stored in result().<BR/>
 The computed distance is stored in results(0). If results has length 2 or greater, the initial bearing is stored in results(1). If results has length 3 or greater, the final bearing is stored in results(2).</i>
</li></ul>
</li>
</ul><ul><A id="4"/>
<li><h3>LocationRequest</h3>
<ul><i></i></ul>
<h3>Functions:</h3>
<ul><li><b>Equals</b> (mObject <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i></i>
</li><li><b>GetDurationMillis</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>
<br/><i>The duration of this request. A location request will not receive any locations after it has expired, and will be removed shortly thereafter. A value of LocationRequest_Constants.MAX_VALUE_FLOAT implies an infinite duration.</i>
</li><li><b>GetGranularity</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>The Granularity of locations returned for this request. This controls whether fine or coarse locations may be returned.</i>
</li><li><b>GetIntervalMillis</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>
<br/><i>The desired interval of location updates. Location updates may arrive faster than this interval (but no faster than specified by getMinUpdateIntervalMillis()) or slower than this interval (if the request is being throttled for example).</i>
</li><li><b>GetMaxUpdateAgeMillis</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>
<br/><i>The maximum age of an initial historical location delivered for this request. A value of 0 indicates that no initial historical location will be delivered, only freshly derived locations. A value LocationRequest_Constants.MAX_VALUE_FLOAT represents an effectively unbounded maximum age.</i>
</li><li><b>GetMaxUpdateDelayMillis</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>
<br/><i>The longest a location update may be delayed. This parameter controls location batching behavior. If this is set to a value at least 2x larger than the interval specified by getIntervalMillis(), then a device may (but is not required to) save power by delivering locations in batches. If clients do not require immediate delivery, consider setting this value as high as is reasonable to allow for additional power savings.<BR/>
 For example, if a request is made with a 2s interval and a 10s maximum update delay, this implies that the device may choose to deliver batches of 5 locations every 10s (where each location should represent a point in time ~2s after the previous).<BR/>
 Support for batching may vary by device type, so simply allowing batching via this parameter does not imply a client will receive batched results on all devices.<BR/>
 FusedLocationProviderClient.flushLocations() may be used to flush locations that have been batched, but not delivered yet.</i>
</li><li><b>GetMaxUpdates</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>The maximum number of updates delivered to this request. A location request will not receive any locations after the maximum number of updates has been reached, and will be removed shortly thereafter. A value of LocationRequest_Constants.MAX_VALUE_INT implies an unlimited number of updates.</i>
</li><li><b>GetMinUpdateDistanceMeters</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Float</span>
<br/><i>The minimum distance required between consecutive location updates. If a derived location update is not at least the specified distance away from the previous location update delivered to the client, it will not be delivered. This may also allow additional power savings under some circumstances.</i>
</li><li><b>GetMinUpdateIntervalMillis</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>
<br/><i>The fastest allowed interval of location updates. Location updates may arrive faster than the desired interval (getIntervalMillis()), but will never arrive faster than specified here. FLP APIs make some allowance for jitter with the minimum update interval, so clients need not worry about location updates that arrive a couple milliseconds too early being rejected.</i>
</li><li><b>GetPriority</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>The Priority of the location request.</i>
</li><li><b>GetWaitForAccurateLocation</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>If this request is Priority.PRIORITY_HIGH_ACCURACY, this will delay delivery of initial low accuracy locations for a small amount of time in case a high accuracy location can be delivered instead.</i>
</li><li><b>Initialize</b> (IntervalMillis <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Constructs a LocationRequest with the given interval, and default values for all other fields.</i>
</li><li><b>Initialize2</b> (Priority <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>, IntervalMillis <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Constructs a LocationRequest with the given priority and interval, and default values for all other fields.</i>
</li><li><b>Initialize3</b> (Request <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Constructs a LocationRequest with values copied from the given LocationRequest.</i>
</li><li><b>IsBatched</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>True if this request allows batching (i.e. getMaxUpdateDelayMillis() is at least 2x getIntervalMillis()).</i>
</li><li><b>IsInitialized</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i></i>
</li><li><b>IsPassive</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>True if the priority is Priority.PRIORITY_PASSIVE.</i>
</li><li><b>SetDurationMillis</b> (DurationMillis <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Sets the duration of this request. A location request will not receive any locations after it has expired, and will be removed shortly thereafter. A value of LocationRequest_Constants.MAX_VALUE implies an infinite duration.<BR/>
 The default value is LocationRequest_Constants.MAX_VALUE (unlimited).</i>
</li><li><b>SetGranularity</b> (Granularity <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Sets the Granularity of locations returned for this request. This controls whether fine or coarse locations may be returned.<BR/>
 The default value is Granularity.GRANULARITY_PERMISSION_LEVEL.</i>
</li><li><b>SetIntervalMillis</b> (IntervalMillis <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Sets the desired interval of location updates. Location updates may arrive faster than this interval (but no faster than specified by SetMinUpdateIntervalMillis(Long)) or slower than this interval (if the request is being throttled for example).</i>
</li><li><b>SetMaxUpdateAgeMillis</b> (MaxUpdateAgeMillis <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Sets the maximum age of an initial historical location delivered for this request. A value of 0 indicates that no initial historical location will be delivered, only freshly derived locations. A value LocationRequest_Constants.MAX_VALUE represents an effectively unbounded maximum age.<BR/>
 This may be set to the special value LocationRequest_Constants.IMPLICIT_MAX_UPDATE_AGE in which case the maximum update age will always be the same as the interval.<BR/>
 The default value is LocationRequest_Constants.IMPLICIT_MAX_UPDATE_AGE.</i>
</li><li><b>SetMaxUpdateDelayMillis</b> (MaxUpdateDelayMillis <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Sets the longest a location update may be delayed. This parameter controls location batching behavior. If this is set to a value at least 2x larger than the interval specified by setIntervalMillis(long), then a device may (but is not required to) save power by delivering locations in batches. If clients do not require immediate delivery, consider setting this value as high as is reasonable to allow for additional power savings. When the LocationRequest is built, the maximum update delay will be set to the max of the provided maximum update delay and the interval. This normalizes requests without batching to have the maximum update delay equal to the interval.<BR/>
 For example, if a request is made with a 2s interval and a 10s maximum update delay, this implies that the device may choose to deliver batches of 5 locations every 10s (where each location in a batch represents a point in time ~2s after the previous).<BR/>
 Support for batching may vary by device hardware, so simply allowing batching via this parameter does not imply a client will receive batched results on all devices.<BR/>
 FusedLocationProviderClient.FlushLocations() may be used to flush locations that have been batched, but not delivered yet.<BR/>
 The default value is 0.</i>
</li><li><b>SetMaxUpdates</b> (MaxUpdates <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Sets the maximum number of updates delivered to this request. A location request will not receive any locations after the maximum number of updates has been reached, and will be removed shortly thereafter. A value of Integer.MAX_VALUE implies an unlimited number of updates.<BR/>
 The default value is Integer.MAX_VALUE.</i>
</li><li><b>SetMinUpdateDistanceMeters</b> (MinUpdateDistanceMeters <span style='color:blue'>As</span> <span style='color:#008B8B'>Float</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Sets the minimum distance required between consecutive location updates. If a derived location update is not at least the specified distance away from the previous location update delivered to the client, it will not be delivered. This may also allow additional power savings under some circumstances.<BR/>
 The default value is 0.</i>
</li><li><b>SetMinUpdateIntervalMillis</b> (MinUpdateIntervalMillis <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Sets the fastest allowed interval of location updates. Location updates may arrive faster than the desired interval (setIntervalMillis(long)), but will never arrive faster than specified here.<BR/>
 This may be set to the special value LocationRequest_Constants.IMPLICIT_MIN_UPDATE_INTERVAL in which case the minimum update interval will be the same as the interval. FusedLocationProviderClient APIs make some allowance for jitter with the minimum update interval, so clients need not worry about location updates that arrive a couple milliseconds too early being rejected.<BR/>
 The default value is LocationRequest_Constants.IMPLICIT_MIN_UPDATE_INTERVAL.</i>
</li><li><b>SetPriority</b> (Priority <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>Sets the Priority of the location request.<BR/>
 The default value is Priority.PRIORITY_BALANCED_POWER_ACCURACY.</i>
</li><li><b>SetWaitForAccurateLocation</b> (WaitForAccurateLocation <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationRequest</span>
<br/><i>If set to true and this request is Priority.PRIORITY_HIGH_ACCURACY, this will delay delivery of initial low accuracy locations for a small amount of time in case a high accuracy location can be delivered instead.<BR/>
 The default value is true.</i>
</li><li><b>ToString</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>
<br/><i></i>
</li></ul>
</li>
</ul><ul><A id="5"/>
<li><h3>LocationRequest</h3>
<ul><i></i></ul>
<h3>Fields:</h3>
<ul><li><b>IMPLICIT_MAX_UPDATE_AGE</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>
<br/><i>Represents a maximum update age that is the same as the interval.<BR/>
 Constant Value: -1</i>
</li><li><b>IMPLICIT_MIN_UPDATE_INTERVAL</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>
<br/><i>Represents a minimum update interval that is the same as the interval.<BR/>
 Constant Value: -1</i>
</li><li><b>MAX_VALUE_FLOAT</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Long</span>
<br/><i>A constant holding the maximum value a long can have.</i>
</li><li><b>MAX_VALUE_INT</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>A constant holding the maximum value an int can have.</i>
</li></ul>
</li>
</ul><ul><A id="6"/>
<li><h3>LocationResult</h3>
<ul><i></i></ul>
<h3>Properties:</h3>
<ul><li><b>ErrorMessage</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span> [read only]
<br/><i></i>
</li><li><b>Location</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>LocationF</span> [read only]
<br/><i></i>
</li><li><b>ResponseID</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i></i>
</li><li><b>Status</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i></i>
</li><li><b>StatusString</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span> [read only]
<br/><i></i>
</li></ul>
</li>
</ul><ul><A id="7"/>
<li><h3>LocationResult</h3>
<ul><i></i></ul>
<h3>Fields:</h3>
<ul><li><b>STATUS_CANCELED</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i></i>
</li><li><b>STATUS_FAILED</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i></i>
</li><li><b>STATUS_SUCCESSFUL</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i></i>
</li></ul>
</li>
</ul><ul><A id="8"/>
<li><h3>Priority</h3>
<ul><i></i></ul>
<h3>Fields:</h3>
<ul><li><b>PRIORITY_BALANCED_POWER_ACCURACY</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Requests a tradeoff that is balanced between location accuracy and power usage.<BR/>
 Constant Value: 102</i>
</li><li><b>PRIORITY_HIGH_ACCURACY</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Requests a tradeoff that favors highly accurate locations at the possible expense of additional power usage.<BR/>
 Constant Value: 100</i>
</li><li><b>PRIORITY_LOW_POWER</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Requests a tradeoff that favors low power usage at the possible expense of location accuracy.<BR/>
 Constant Value: 104</i>
</li><li><b>PRIORITY_PASSIVE</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Ensures that no extra power will be used to derive locations. This enforces that the request will act as a passive listener that will only receive "free" locations calculated on behalf of other clients, and no locations will be calculated on behalf of only this request.<BR/>
 Constant Value: 105</i>
</li></ul>
</li>
</ul>
<ul><li><h3>Author: Ivica Golubovic</h3></li></ul>
<ul><li><h3>Version: 1.2</h3></li></ul>
</body>
</html>