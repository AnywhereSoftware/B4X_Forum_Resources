<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>anywheresoftware.b4a.objects.BlePeripheral2Enhanced</name>
        <shortname>BlePeripheral2Enhanced</shortname>
        <comment>Allows to configure the device as a BLE peripheral device. Other central devices can connect to this device.
 Only supported by some devices running Android 5+. Make sure to check IsPeripheralSupported property.</comment>
        <owner>process</owner>
        <event>Start (Success As Boolean)</event>
        <event>Subscribe (CentralId As String)</event>
        <event>Unsubscribe (CentralId As String)</event>
        <event>NewData (DeviceId As String, Data() As Byte)</event>
        <event>NewData2 (DeviceId As String, Data() As Byte, CharacteristicUUID As String, DataAsStr As String, DataAsHex As String, DataAsBin As String)</event>
        <event>ConnectionStatus (DeviceId As String, ConnectionState As String)</event>
        <method>
            <name>Write</name>
            <comment>Writes data to subscribed devices.
Centrals - Target devices. Pass Null to send to all subscribed devices.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Centrals</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
            <parameter>
                <name>Data</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>Start2</name>
            <comment>Similar to Start. Allows overriding the default settings.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Settings</name>
                <type>android.bluetooth.le.AdvertiseSettings</type>
            </parameter>
        </method>
        <method>
            <name>Start</name>
            <comment>Starts advertising. The name will be set as the device Bluetooth name. Pass an empty string to keep the current name.
The Start event will be raised.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetDataAsHexadecimal</name>
            <comment>Returns the characteristic data that was sent.
 Converts the data from bytes to hexadecimal.
 CommaSeparated: True includes commas, False removes commas.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>CommaSeparated</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Ble</name>
                <type>anywheresoftware.b4a.objects.BleManager2</type>
            </parameter>
        </method>
        <property>
            <name>ManufacturerData</name>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>Map</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
            <comment>Gets or sets the manufacturer specific data that will be advertised.
Each item in the map should have a positive int number as the key and an array of bytes as the value.</comment>
        </property>
        <property>
            <name>IsPeripheralSupported</name>
            <returntype>boolean</returntype>
            <comment>Checks whether peripheral mode is supported.</comment>
        </property>
        <field>
            <name>MultipleConnections</name>
            <comment>Enable or disable multiple central devices to connect simultaneously.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>GetDataAsBinary</name>
            <comment>Returns the characteristic data that was sent.
 Converts the data from bytes to binary.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CreateCharacteristicUUIDs</name>
            <comment>Create a list of custom characteristic UUIDs with Read/Write permissions and Notify.
 Usage: CharacteristicUUID As String, Read As Boolean, Write As Boolean, Notify As Boolean.
 Example: CreateCharacteristicUUIDs("CharacteristicUUID,Read,Write,Notify", "CharacteristicUUID,Read,Write,Notify", ...)</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </field>
        <field>
            <name>GetCharacteristicUUID</name>
            <comment>Returns the characteristic UUID that sent the data.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CreatePrimaryServiceUUID</name>
            <comment>Create the primary service UUID.
 The primary service UUID must be created before adding your custom characteristic UUIDs.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>GetDataAsString</name>
            <comment>Returns the characteristic data that was sent.
 Converts the data from bytes to string.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>SetCharacteristicReadValues</name>
            <comment>Set the default read value for characteristics via the characteristic UUIDs.
 Usage: CharacteristicUUID As String, ReadValue As String.
 Example: SetCharacteristicReadValues("CharacteristicUUID,ReadValue", "CharacteristicUUID,ReadValue", ...)</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </field>
    </class>
    <version>1.53</version>
</root>
