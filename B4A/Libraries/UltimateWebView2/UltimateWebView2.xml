<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>igolub.android.net.http.SslErrorWrapper</name>
        <shortname>SslError</shortname>
        <comment>This class represents a set of one or more SSL errors and the associated SSL certificate.
 This class cannot be initialized by the user.</comment>
        <objectwrapper>android.net.http.SslError</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>HasError</name>
            <comment>Determines whether this object includes the supplied error.
Error: the SSL error to check for
Returns True if this object includes the error, otherwise false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Error</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>PrimaryError</name>
            <returntype>int</returntype>
            <comment>Gets the most severe SSL error in this object's set of errors. Returns -1 if the set is empty.</comment>
        </property>
        <property>
            <name>Url</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the URL associated with this object.</comment>
        </property>
        <property>
            <name>Certificate</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the SSL certificate as Object which is associated with this object.</comment>
        </property>
        <field>
            <name>SSL_UNTRUSTED</name>
            <comment>The certificate authority is not trusted.
Constant Value: 3</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_IDMISMATCH</name>
            <comment>Host name mismatch.
Constant Value: 2</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_DATE_INVALID</name>
            <comment>The date of the certificate is invalid
Constant Value: 4</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_INVALID</name>
            <comment>A generic error occurred.
Constant Value: 5</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_NOTYETVALID</name>
            <comment>The certificate is not yet valid.
Constant Value: 0</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_EXPIRED</name>
            <comment>The certificate has expired.
Constant Value: 1</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>igolub.android.webkit.WebViewDatabaseWrapper</name>
        <shortname>WebViewDatabase</shortname>
        <objectwrapper>android.webkit.WebViewDatabase</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ClearHttpAuthUsernamePassword</name>
            <comment>Clears any saved credentials for HTTP authentication. This method only clears the username and password stored in WebViewDatabase instance. The username and password are not read from the WebViewDatabase during WebViewClient's "ReceivedHttpAuthRequest" event. It is up to the app to do this or not.
The username and password used for http authentication might be cached in the network stack itself, and are not cleared when this method is called. WebView does not provide a special mechanism to clear HTTP authentication for implementing client logout. The client logout mechanism should be implemented by the Web site designer (such as server sending a HTTP 401 for invalidating credentials).</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClearFormData</name>
            <comment>Clears any saved data for web forms.
In Android O, the platform has implemented a fully functional Autofill feature to store form data. Therefore, the Webview form data save and clear feature are disabled. Note that the feature will continue to be supported on older versions of Android as before.
Deprecated in API level 26</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetHttpAuthUsernamePassword</name>
            <comment>Stores HTTP authentication credentials for a given host and realm to the WebViewDatabase instance.
Host: the host to which the credentials apply
Realm: the realm to which the credentials apply
Username: the username
Password: the password</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Host</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Realm</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Username</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetHttpAuthUsernamePassword</name>
            <comment>Retrieves HTTP authentication credentials for a given host and realm from the WebViewDatabase instance.
Host: the host to which the credentials apply
Realm: the realm to which the credentials apply
Returns map with Usernames as keys and Passwords as value. If there are no values ​​saved for the specified Host and Realm, it returns an empty map.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>Host</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Realm</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes new class instance.
If UltimateWebView is used, variable declaration and initialization of this class is not required. In that case, the WebViewDatabase can be found in the UltimateWebView1.WebViewDatabase property.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>HasHttpAuthUsernamePassword</name>
            <comment>Gets whether there are any saved credentials for HTTP authentication.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>HasFormData</name>
            <comment>Gets whether there is any saved data for web forms.
In Android O, the platform has implemented a fully functional Autofill feature to store form data. Therefore, the Webview form data save and clear feature are disabled. Note that the feature will continue to be supported on older versions of Android as before.
Deprecated in API level 26</comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.WebViewAssetLoaderWrapper</name>
        <shortname>WebViewAssetLoader</shortname>
        <objectwrapper>androidx.webkit.WebViewAssetLoader</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ShouldInterceptRequest</name>
            <comment>Call this method after ShouldInterceptRequest event from IGWebViewClient is fired. Return result of this method is WebResourceResponse. Pass this WebResourceResponse as return value for ShouldInterceptRequest event.
Url: string from WebResourceRequest passed from ShouldInterceptRequest event.
Use this method when you use IGWebViewClient from this library.</comment>
            <returntype>igolub.android.webkit.WebResourceResponseWrapper</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the new instance of WebViewAssetLoader.
Domain: set the domain for the WebViewAssetLoader. The domain can be of your choice or use e.g. Application.PackageName. The domain must be unique so that it does not match the domain of an already existing website. Pass Null or empty string to use default domain (appassets.androidplatform.net).
Important: The WebViewAssetLoader will not work in DEBUG mode, work's only in RELEASE mode.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Domain</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ShouldInterceptRequest2</name>
            <comment>Call this method after shouldInterceptRequest event from custom WebViewClient is fired. Return result of this method is Object as android.webkit.WebResourceResponse. Pass this Object as return value for shouldInterceptRequest event.
Url: string from android.webkit.WebResourceRequest or url only passed from shouldInterceptRequest event.
Use this method when you use custom WebViewClient.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <field>
            <name>AssetPathUrl</name>
            <comment>URL prefix for load file from DirAsset.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ResourcesPathUrl</name>
            <comment>URL prefix for load file from #AdditionalRes.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>InternalPathUrl</name>
            <comment>URL prefix for load file from DirInternal.</comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>igolub.android.webkit.WebSettingsWrapper</name>
        <shortname>WebSettings</shortname>
        <objectwrapper>android.webkit.WebSettings</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes new class instance.
If UltimateWebView is used, variable declaration and initialization of this class is not required. In that case, the WebViewSettings can be found in the UltimateWebView1.Settings property.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>AllowUniversalAccessFromFileURLs</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether JavaScript running in the context of a file scheme URL can access content from any origin. This includes access to content from other file scheme URLs.
Added in API level 16
Deprecated in API level 30</comment>
        </property>
        <property>
            <name>BuiltInZoomControls</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the zoom mechanisms built into WebView are being used.</comment>
        </property>
        <property>
            <name>DisplayZoomControls</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the WebView displays on-screen zoom controls when using the built-in zoom mechanisms. The default is true.</comment>
        </property>
        <property>
            <name>LoadWithOverviewMode</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the WebView loads pages in overview mode, that is, zooms out the content to fit on screen by width. This setting is taken into account when the content width is greater than the width of the WebView control, for example, when UseWideViewPort is enabled. The default is false.</comment>
        </property>
        <property>
            <name>DefaultFontSize</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the default font size. The default is 16. Values between 1 and 72.</comment>
        </property>
        <property>
            <name>GeolocationDatabasePath</name>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the path where the Geolocation databases should be saved. In order for Geolocation permissions and cached positions to be persisted, this method must be called with a path to which the application can write.
Added in API level 5
Deprecated in API level 24</comment>
        </property>
        <property>
            <name>DefaultFixedFontSize</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the default fixed font size. The default is 16. Values between 1 and 72.</comment>
        </property>
        <property>
            <name>CacheMode</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the current setting for overriding the cache mode.
Values: LOAD_DEFAULT, LOAD_CACHE_ELSE_NETWORK, LOAD_NO_CACHE, or LOAD_CACHE_ONLY</comment>
        </property>
        <property>
            <name>TextZoom</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the text zoom of the page in percent. The default is 100.</comment>
        </property>
        <property>
            <name>AttributionRegistrationBehavior</name>
            <returntype>int</returntype>
            <parameter>
                <name>Behavior</name>
                <type>int</type>
            </parameter>
            <comment>Control how WebView interacts with Attribution Reporting.
WebView supports Attribution Reporting across apps and web pages by enabling the web content to register sources and triggers.
By default, attribution sources will be registered as attributed to the app, while triggers are attributed to the loaded web content (ATTRIBUTION_BEHAVIOR_APP_SOURCE_AND_WEB_TRIGGER). Apps should only need to change this default if they have a specific semantic for how they use WebView. In particular, in-app browsers should follow the steps to apply to the allowlist for registering web sources and then set the ATTRIBUTION_BEHAVIOR_WEB_SOURCE_AND_WEB_TRIGGER behavior.
If this setting is not supported by device, -1 will be returned.
Property implemented from webkit Compat package.</comment>
        </property>
        <property>
            <name>StandardFontFamily</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the standard font family name. The default is "sans-serif".</comment>
        </property>
        <property>
            <name>SafeBrowsingEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether Safe Browsing is enabled. Safe Browsing allows WebView to protect against malware and phishing attacks by verifying the links. Safe Browsing is enabled by default for devices which support it.
If this setting is not supported by device, False will be returned.
Property implemented from webkit Compat package.</comment>
        </property>
        <property>
            <name>OffscreenPreRaster</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether this WebView should raster tiles when it is offscreen but attached to a window.
If this setting is not supported by device, False will be returned.
Property implemented from webkit Compat package.</comment>
        </property>
        <property>
            <name>LoadsImagesAutomatically</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the WebView should load image resources. Note that this method controls loading of all images, including those embedded using the data URI scheme. Use BlockNetworkImage to control loading only of images specified using network URI schemes. Note that if the value of this setting is changed from false to true, all images resources referenced by content currently displayed by the WebView are loaded automatically. The default is true.</comment>
        </property>
        <property>
            <name>EnterpriseAuthenticationAppLinkPolicyEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether EnterpriseAuthenticationAppLinkPolicy if set by admin is allowed to have any effect on WebView.
EnterpriseAuthenticationAppLinkPolicy in WebView allows admins to specify authentication urls. When WebView is redirected to authentication url, and an app on the device has registered as the default handler for the url, that app is launched.
EnterpriseAuthenticationAppLinkPolicy is enabled by default.
If this setting is not supported by device, False will be returned.
Property implemented from webkit Compat package.</comment>
        </property>
        <property>
            <name>LayoutAlgorithm</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>LayoutAlgorithm</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the underlying layout algorithm. This will cause a re-layout of the WebView. The default is LAYOUT_ALGORITHM_NARROW_COLUMNS.
Values: LAYOUT_ALGORITHM_NARROW_COLUMNS, LAYOUT_ALGORITHM_SINGLE_COLUMN, LAYOUT_ALGORITHM_NORMAL and LAYOUT_ALGORITHM_TEXT_AUTOSIZING.</comment>
        </property>
        <property>
            <name>BlockNetworkLoads</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the WebView does not load any resources from the network.</comment>
        </property>
        <property>
            <name>ForceDarkStrategy</name>
            <returntype>int</returntype>
            <parameter>
                <name>Value</name>
                <type>int</type>
            </parameter>
            <comment>Set how WebView content should be darkened.
The specified strategy is only used if force dark mode is on.
If this setting is not supported by device, -1 will be returned.
Property implemented from webkit Compat package.</comment>
        </property>
        <property>
            <name>DatabaseEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the database storage API is enabled. The default value is false.</comment>
        </property>
        <property>
            <name>SerifFontFamily</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the serif font family name. The default is "sans-serif".</comment>
        </property>
        <property>
            <name>GeolocationEnabled</name>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether Geolocation is enabled. The default is true.</comment>
        </property>
        <property>
            <name>ForceDark</name>
            <returntype>int</returntype>
            <parameter>
                <name>Mode</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the force dark mode for this WebView.
Values: FORCE_DARK_OFF, FORCE_DARK_AUTO, or FORCE_DARK_ON
If this setting is not supported by device, -1 will be returned.
Property implemented from webkit Compat package.</comment>
        </property>
        <property>
            <name>SaveFormData</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the WebView should save form data. In Android O, the platform has implemented a fully functional Autofill feature to store form data. Therefore, the Webview form data save feature is disabled. Note that the feature will continue to be supported on older versions of Android as before.
Deprecated in API level 26</comment>
        </property>
        <property>
            <name>AllowContentAccess</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Enables or disables content URL access within WebView. Content URL access allows WebView to load content from a content provider installed in the system. The default is enabled.
Added in API level 11</comment>
        </property>
        <property>
            <name>AllowFileAccess</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Enables or disables file access within WebView. Note that this enables or disables file system access only. Assets and resources are still accessible using file:///android_asset and file:///android_res.</comment>
        </property>
        <property>
            <name>DomStorageEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the DOM storage API is enabled. The default value is false.</comment>
        </property>
        <property>
            <name>MinimumLogicalFontSize</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the minimum logical font size. The default is 8.</comment>
        </property>
        <property>
            <name>FantasyFontFamily</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the fantasy font family name. The default is "fantasy".</comment>
        </property>
        <property>
            <name>JavaScriptEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether JavaScript is enabled. The default is false.</comment>
        </property>
        <property>
            <name>FixedFontFamily</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the fixed font family name. The default is "monospace".</comment>
        </property>
        <property>
            <name>MinimumFontSize</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the minimum font size. The default is 8.</comment>
        </property>
        <property>
            <name>UseWideViewPort</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the WebView should enable support for the "viewport" HTML meta tag or should use a wide viewport. When the value of the setting is false, the layout width is always set to the width of the WebView control in device-independent (CSS) pixels. When the value is true and the page contains the viewport meta tag, the value of the width specified in the tag is used. If the page does not contain the tag or does not provide a width, then a wide viewport will be used.</comment>
        </property>
        <property>
            <name>SupportMultipleWindows</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the WebView whether supports multiple windows. If set to true, IGWebChromeClient must be implemented by the host application. The default is false.</comment>
        </property>
        <property>
            <name>SansSerifFontFamily</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the sans-serif font family name. The default is "sans-serif".</comment>
        </property>
        <property>
            <name>MediaPlaybackRequiresUserGesture</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the WebView requires a user gesture to play media. The default is true.</comment>
        </property>
        <property>
            <name>AlgorithmicDarkeningAllowed</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>allow</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether algorithmic darkening is allowed. Algorithmic darkening is disallowed by default.
Added in API level 33</comment>
        </property>
        <property>
            <name>BlockNetworkImage</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the WebView does not load image resources from the network.</comment>
        </property>
        <property>
            <name>SupportZoom</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the WebView should support zooming using its on-screen zoom controls and gestures. The particular zoom mechanisms that should be used can be set with BuiltInZoomControls. The default is true.</comment>
        </property>
        <property>
            <name>DefaultTextEncodingName</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the default text encoding name to use when decoding html pages. The default is "UTF-8".</comment>
        </property>
        <property>
            <name>JavaScriptCanOpenWindowsAutomatically</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether JavaScript can open windows automatically. This applies to the JavaScript function window.open(). The default is false.</comment>
        </property>
        <property>
            <name>AllowFileAccessFromFileURLs</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether JavaScript running in the context of a file scheme URL can access content from other file scheme URLs.
Added in API level 16
Deprecated in API level 30</comment>
        </property>
        <property>
            <name>CursiveFontFamily</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the cursive font family name. The default is "cursive".</comment>
        </property>
        <property>
            <name>NeedInitialFocus</name>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>The default value is true.</comment>
        </property>
        <property>
            <name>DisabledActionModeMenuItems</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the action mode menu items that are disabled, expressed in an integer field flag. The default value is MENU_ITEM_NONE.
Values: MENU_ITEM_NONE, MENU_ITEM_SHARE, MENU_ITEM_WEB_SEARCH, and MENU_ITEM_PROCESS_TEXT.
If this setting is not supported by device, -1 will be returned.
Property implemented from webkit Compat package.</comment>
        </property>
        <property>
            <name>MixedContentMode</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the current behavior of the WebView with regard to loading insecure content from a secure origin.
Values: MIXED_CONTENT_NEVER_ALLOW, MIXED_CONTENT_ALWAYS_ALLOW or MIXED_CONTENT_COMPATIBILITY_MODE.
Added in API level 21</comment>
        </property>
        <property>
            <name>UserAgentString</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the WebView's user-agent string. If the string is null or empty, the system default value will be used.</comment>
        </property>
        <field>
            <name>MENU_ITEM_SHARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_ALGORITHM_SINGLE_COLUMN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ATTRIBUTION_BEHAVIOR_APP_SOURCE_AND_APP_TRIGGER</name>
            <comment>AttributionRegistrationBehavior that allows apps to register app sources and app triggers from WebView.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MENU_ITEM_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORCE_DARK_ON</name>
            <comment>Unconditionally enable force dark. In this mode WebView content will always be rendered so as to emulate a dark theme.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_ALGORITHM_TEXT_AUTOSIZING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LAYOUT_ALGORITHM_NORMAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MIXED_CONTENT_NEVER_ALLOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DARK_STRATEGY_WEB_THEME_DARKENING_ONLY</name>
            <comment>In this mode WebView content will always be darkened using dark theme provided by web page. If web page does not provide dark theme support WebView content will be rendered with a default theme.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_CACHE_ELSE_NETWORK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MIXED_CONTENT_ALWAYS_ALLOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MENU_ITEM_PROCESS_TEXT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_DEFAULT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DARK_STRATEGY_PREFER_WEB_THEME_OVER_USER_AGENT_DARKENING</name>
            <comment>In this mode WebView content will be darkened by a user agent unless web page supports dark theme. WebView determines whether web pages supports dark theme by the presence of color-scheme metadata containing "dark" value. If the metadata is not presented WebView content will be darkened by a user agent and prefers-color-scheme media query will evaluate to light.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORCE_DARK_AUTO</name>
            <comment>Enable force dark dependent on the state of the WebView parent view. If the WebView parent view is being automatically force darkened, then WebView content will be rendered so as to emulate a dark theme. WebViews that are not attached to the view hierarchy will not be inverted.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_NO_CACHE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ATTRIBUTION_BEHAVIOR_APP_SOURCE_AND_WEB_TRIGGER</name>
            <comment>AttributionRegistrationBehavior that allows apps to register app sources (sources associated with the app package name) and web triggers (triggers associated with the eTLD+1) from WebView.
This is the default behavior.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MIXED_CONTENT_COMPATIBILITY_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MENU_ITEM_WEB_SEARCH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_CACHE_ONLY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ATTRIBUTION_BEHAVIOR_WEB_SOURCE_AND_WEB_TRIGGER</name>
            <comment>AttributionRegistrationBehavior that allows apps to register web sources and web triggers from WebView.
This option should only be used after applying to use web sources.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_ALGORITHM_NARROW_COLUMNS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ATTRIBUTION_BEHAVIOR_DISABLED</name>
            <comment>AttributionRegistrationBehavior that disables source and trigger registration from WebView.
Note that the initial network call to the Attribution Source or Trigger URIs may still happen depending on the installed version of WebView, but any response is discarded and nothing will be stored on the device.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORCE_DARK_OFF</name>
            <comment>Disable force dark, irrespective of the force dark mode of the WebView parent. In this mode, WebView content will always be rendered as-is, regardless of whether native views are being automatically darkened.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DARK_STRATEGY_USER_AGENT_DARKENING_ONLY</name>
            <comment>In this mode WebView content will be darkened by a user agent and it will ignore the web page's dark theme if it exists. To avoid mixing two different darkening strategies, the prefers-color-scheme media query will evaluate to light.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>igolub.android.webkit.WebResourceResponseWrapper</name>
        <shortname>WebResourceResponse</shortname>
        <objectwrapper>android.webkit.WebResourceResponse</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize2</name>
            <comment>Initializes a resource response with the given parameters.
MimeType: the resource response's MIME type, for example "text/html".
Encoding: the resource response's character encoding, for example "utf-8".
StatusCode: the status code needs to be in the ranges [100, 299], [400, 599]. Causing a redirect by specifying a 3xx code is not supported.
ReasonPhrase: the phrase describing the status code, for example "OK". Must be non-empty. This value cannot be Null.
ResponseHeaders: the resource response's headers represented as a mapping of header name -&gt; header value.
Data: the input stream that provides the resource response's data.
Added in API level 21</comment>
            <returntype>void</returntype>
            <parameter>
                <name>MimeType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Encoding</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>StatusCode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ReasonPhrase</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ResponseHeaders</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
            <parameter>
                <name>Data</name>
                <type>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes a resource response with the given MIME type, character encoding, and input stream.
MimeType: the resource response's MIME type, for example "text/html".
Encoding: the resource response's character encoding, for example "utf-8".
Data: the input stream that provides the resource response's data.
Added in API level 11.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>MimeType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Encoding</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Data</name>
                <type>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</type>
            </parameter>
        </method>
        <method>
            <name>SetStatusCodeAndReasonPhrase</name>
            <comment>Sets the resource response's status code and reason phrase.
StatusCode: the status code needs to be in the ranges [100, 299], [400, 599]. Causing a redirect by specifying a 3xx code is not supported.
ReasonPharse: the phrase describing the status code, for example "OK". Must be non-empty. This value cannot be Null.
Added in API level 21.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>StatusCode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ReasonPharse</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>ReasonPhrase</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the description of the resource response's status code.
Added in API level 21.</comment>
        </property>
        <property>
            <name>Data</name>
            <returntype>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</returntype>
            <parameter>
                <name>Data</name>
                <type>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</type>
            </parameter>
            <comment>Gets or sets the input stream that provides the resource response's data.
Added in API level 11.</comment>
        </property>
        <property>
            <name>Encoding</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Encoding</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the resource response's encoding.
Added in API level 11.</comment>
        </property>
        <property>
            <name>ResponseHeaders</name>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>ResponseHeaders</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
            <comment>Gets or sets the headers for the resource response.
Added in API level 21.</comment>
        </property>
        <property>
            <name>StatusCode</name>
            <returntype>int</returntype>
            <comment>Gets the resource response's status code.
Added in API level 21.</comment>
        </property>
        <property>
            <name>MimeType</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>MimeType</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the resource response's MIME type.
Added in API level 11.</comment>
        </property>
    </class>
    <class>
        <name>igolub.android.webkit.WebResourceRequestWrapper</name>
        <shortname>WebResourceRequest</shortname>
        <comment>This class cannot be initialized by the user.</comment>
        <owner>process</owner>
        <method>
            <name>IsRedirect</name>
            <comment>Gets whether the request was a result of a server-side redirect.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>HasMethod</name>
            <comment>Returns True if has Method. Otherwise False.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsForMainFrame</name>
            <comment>Gets whether the request was made in order to fetch the main frame's document.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>HasGesture</name>
            <comment>Gets whether a gesture (such as a click) was associated with the request.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>HasRequestHeaders</name>
            <comment>Returns True if has RequestHeaders. Otherwise False.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>HasUrl</name>
            <comment>Returns True if has Url. Otherwise False.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>HasExternalAppIntent</name>
            <comment>Returns True if this request contains intent to launch an external application, otherwise False.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>UrlAsUri</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the URL as object of android.net.Uri for which the resource request was made.</comment>
        </property>
        <property>
            <name>ExternalAppIntent</name>
            <returntype>anywheresoftware.b4a.objects.IntentWrapper</returntype>
            <comment>Returns intent if this request is intended to launch an external application, otherwise returns not initialized intent.</comment>
        </property>
        <property>
            <name>Method</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the method associated with the request, for example "GET".</comment>
        </property>
        <property>
            <name>RequestHeaders</name>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <comment>Gets the headers associated with the request.</comment>
        </property>
        <property>
            <name>Url</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the URL string for which the resource request was made.</comment>
        </property>
    </class>
    <class>
        <name>igolub.android.webkit.WebHistoryItemWrapper</name>
        <shortname>WebHistoryItem</shortname>
        <comment>This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.WebHistoryItem</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>OriginalUrl</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the original url of this history item. This was the requested url, the final url may be different as there might have been redirects while loading the site.</comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the document title of this history item.</comment>
        </property>
        <property>
            <name>Favicon</name>
            <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
            <comment>Gets the favicon of this history item or not initialized bitmap if no favicon was found.</comment>
        </property>
        <property>
            <name>Url</name>
            <returntype>java.lang.String</returntype>
            <comment>Return the url of this history item. The url is the base url of this history item.</comment>
        </property>
    </class>
    <class>
        <name>igolub.android.webkit.WebBackForwardListWrapper</name>
        <shortname>WebBackForwardList</shortname>
        <comment>This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.WebBackForwardList</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetItemAtIndex</name>
            <comment>Get the history item at the given index.</comment>
            <returntype>igolub.android.webkit.WebHistoryItemWrapper</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>CurrentItem</name>
            <returntype>igolub.android.webkit.WebHistoryItemWrapper</returntype>
            <comment>Get the current history item. This method returns not initialized WebHistoryItem if the list is empty.</comment>
        </property>
        <property>
            <name>Size</name>
            <returntype>int</returntype>
            <comment>Get the total size of the back/forward list.</comment>
        </property>
        <property>
            <name>CurrentIndex</name>
            <returntype>int</returntype>
            <comment>Get the index of the current history item. This index can be used to directly index into the array list.</comment>
        </property>
    </class>
    <class>
        <name>igolub.android.webkit.ValueCallbackUriWrapper</name>
        <shortname>ValueCallbackUri</shortname>
        <comment>This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.ValueCallback</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>OnReceiveValue</name>
            <comment>Pass the value that you get when the OnActivityResult event is fired and that is processed through the FileChooserParams1.ParseResult method.
Value: must be an object of single android.net.Uri or android.net.Uri array.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.UltimateWebViewClient</name>
        <shortname>UltimateWebViewClient</shortname>
        <comment>This class is a customized version of WebViewClient and adapted to work in the B4A environment.</comment>
        <objectwrapper>igolub.android.webkit.wrappers.MyWebViewClient</objectwrapper>
        <owner>process</owner>
        <event>LoadResource (Url As String) 'Works from API level 1 and above.</event>
        <event>ShouldOverrideKeyEvent (KeyCode As Int, AndroidViewKeyEvent As Object) As Boolean 'Works from API level 1 and above.</event>
        <event>UnhandledKeyEvent (KeyCode As Int, AndroidViewKeyEvent As Object) 'Works from API level 1 to API level 21.</event>
        <event>OverrideUrl (Request As WebResourceRequest) As Boolean 'Works from API level 1 and above.</event>
        <event>PageCommitVisible (Url As String) 'Works from API level 23 and above.</event>
        <event>PageFinished (Url As String) 'Works from API level 1 and above.</event>
        <event>PageStarted (Url As String, FavIcon As Bitmap) 'Works from API level 1 and above.</event>
        <event>ReceivedHttpAuthRequest (Handler As HttpAuthHandler, Host As String, Realm As String) 'Works from API level 1 and above.</event>
        <event>ReceivedHttpError (Request As WebResourceRequest, Response As WebResourceResponse) 'Works from API level 23 and above.</event>
        <event>ReceivedError (ErrorCode As Int, Description As String, FailingRequest As WebResourceRequest) 'Works from API level 1 and above. From Api level 1 to 23, passed WebResourceRequest contains only Url.</event>
        <event>ReceivedLoginRequest (Realm As String, Account As String, Args As String) 'Works from API level 12 and above.</event>
        <event>RenderProcessGone (DidCrash As Boolean, RendererPriorityAtExit As Int) As Boolean 'Works from API level 26 and above.</event>
        <event>SafeBrowsingHit (Request As WebResourceRequest, SafeBrowsingThreatType As Int, Response As SafeBrowsingResponse) 'Works from API level 27 and above.</event>
        <event>ScaleChanged (OldScale As Float, NewScale As Float) 'Works from API level 1 and above.</event>
        <event>ShouldInterceptRequest (Request As WebResourceRequest) As WebResourceResponse 'Works from API level 11 and above. From Api level 11 to 20, passed WebResourceRequest contains only Url.</event>
        <event>UpdateVisitedHistory (Url As String, IsReload As Boolean) 'Works from API level 1 and above.</event>
        <event>ReceivedSslError (Handler As SslErrorHandler, Error As SslError) 'Works from API level 8 and above.</event>
        <event>ReceivedClientCertRequest (Request As ClientCertRequest) 'Works from API level 21 and above.</event>
        <method>
            <name>ImplementInWebView</name>
            <comment>Implement this UltimateWebViewClient into WebView object.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object in which UltimateWebViewClient should be implemented.
Returns this UltimateWebViewClient.</comment>
            <returntype>igolub.android.webkit.UltimateWebViewClient</returntype>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Initializes new class instance. Use this method to initialize and implement UltimateWebViewClient into a WebView object.
EventName: to be used for events.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object in which UltimateWebViewClient should be implemented.
Returns initialized UltimateWebViewClient.</comment>
            <returntype>igolub.android.webkit.UltimateWebViewClient</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes new class instance. Use this method to initialize UltimateWebViewClient and later implement it in WebView manually.
EventName: to be used for events.
Returns initialized UltimateWebViewClient.</comment>
            <returntype>igolub.android.webkit.UltimateWebViewClient</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveFromWebView</name>
            <comment>Remove this UltimateWebViewClient or any other WebViewClient from a WebView object. Default webkit's WebViewClient will be set.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object from which UltimateWebViewClient should be removed.
Returns this UltimateWebViewClient.</comment>
            <returntype>igolub.android.webkit.UltimateWebViewClient</returntype>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <field>
            <name>ERROR_IO</name>
            <comment>Failed to read or write to the server.
Constant Value: -7</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SAFE_BROWSING_THREAT_PHISHING</name>
            <comment>The resource was blocked because it contains deceptive content.
Constant Value: 2
Added in API level 27</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_AUTHENTICATION</name>
            <comment>User authentication failed on server.
Constant Value: -4</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_UNSUPPORTED_AUTH_SCHEME</name>
            <comment>Unsupported authentication scheme (not basic or digest).
Constant Value: -3</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_CONNECT</name>
            <comment>Failed to connect to the server.
Constant Value: -6</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SAFE_BROWSING_THREAT_UNWANTED_SOFTWARE</name>
            <comment>The resource was blocked because it contains unwanted software.
Constant Value: 3
Added in API level 27</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_BAD_URL</name>
            <comment>Malformed URL.
Constant Value: -12</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_PROXY_AUTHENTICATION</name>
            <comment>User authentication failed on proxy.
Constant Value: -5</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_TOO_MANY_REQUESTS</name>
            <comment>Too many requests during this load.
Constant Value: -15</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_TIMEOUT</name>
            <comment>Connection timed out.
Constant Value: -8</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_UNSAFE_RESOURCE</name>
            <comment>Resource load was canceled by Safe Browsing.
Constant Value: -16
Added in API level 26</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SAFE_BROWSING_THREAT_MALWARE</name>
            <comment>The resource was blocked because it contains malware.
Constant Value: 1
Added in API level 27</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_FAILED_SSL_HANDSHAKE</name>
            <comment>Failed to perform SSL handshake.
Constant Value: -11</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_FILE_NOT_FOUND</name>
            <comment>File not found.
Constant Value: -14</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_UNSUPPORTED_SCHEME</name>
            <comment>Unsupported URI scheme.
Constant Value: -10</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_HOST_LOOKUP</name>
            <comment>Server or proxy hostname lookup failed.
Constant Value: -2</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_REDIRECT_LOOP</name>
            <comment>Too many redirects.
Constant Value: -9</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SAFE_BROWSING_THREAT_UNKNOWN</name>
            <comment>The resource was blocked for an unknown reason.
Constant Value: 0
Added in API level 27</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_UNKNOWN</name>
            <comment>Generic error.
Constant Value: -1</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SAFE_BROWSING_THREAT_BILLING</name>
            <comment>The resource was blocked because it may trick the user into a billing agreement.
This constant is only used when targetSdkVersion is at least Build.VERSION_CODES.Q. Otherwise, SAFE_BROWSING_THREAT_UNKNOWN is used instead.
Constant Value: 4
Added in API level 29</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_FILE</name>
            <comment>Generic file error.
Constant Value: -13</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>igolub.android.webkit.UltimateWebView</name>
        <shortname>UltimateWebView</shortname>
        <objectwrapper>android.webkit.WebView</objectwrapper>
        <owner>activity</owner>
        <event>FindResultReceived (ActiveMatchOrdinal As Int, NumberOfMatches As Int, IsDoneCounting As Boolean)</event>
        <event>EvaluateJavascriptResult (Result As String) 'Works from API level 19 and above. JavascriptEnabled must be True.</event>
        <event>Touch As Boolean</event>
        <event>LayoutChange (Left As Int,Top As Int,Width As Int,Height As Int,OldLeft As Int,OldTop As Int,OldWidth As Int,OldHeight As Int)</event>
        <event>Click</event>
        <event>FocusChange (Focused As Boolean)</event>
        <event>LongClick As Boolean</event>
        <event>ScrollChange (ScrollX As Int, ScrollY As Int, OldScrollX As Int, OldScrollY As Int)</event>
        <event>KeyPressed (KeyCode As Int, KeyEvent As Object) As Boolean</event>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>Lbl</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>Props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>LoadData</name>
            <comment>Loads the given data into this WebView using a 'data' scheme URL.
Note that JavaScript's same origin policy means that script running in a page loaded using this method will be unable to access content loaded using any scheme other than 'data', including 'http(s)'. To avoid this restriction, use LoadDataWithBaseURL with an appropriate base URL.
The encoding parameter specifies whether the data is base64 or URL encoded. If the data is base64 encoded, the value of the encoding parameter must be "base64".
Data: a String of data in the given encoding This value cannot be null.
MimeType: the MIME type of the data, e.g. 'text/html'. This value may be null.
Encoding: the encoding of the data This value may be null.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Data</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>MimeType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Encoding</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ClearSslPreferences</name>
            <comment>Clears the SSL preferences table stored in response to proceeding with SSL certificate errors.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ComputeScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClearFormData</name>
            <comment>Removes the autocomplete popup from the currently focused form field, if present. Note this only affects the display of the autocomplete popup, it does not remove any saved form data from this WebView's store.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Print</name>
            <comment>This method is used to print actual WebView content.
DocumentName: name of document to be displayed.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>DocumentName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GoBackOrForward</name>
            <comment>Goes to the history item that is the number of steps away from the current item. Steps is negative if backward and positive if forward.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Steps</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>LoadHTMLString</name>
            <comment>Use this method to load HTML string into WebView.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>HTMLString</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>LoadUrl2</name>
            <comment>Loads the given URL with additional HTTP headers, specified as a map from name to value. Note that if this map contains any of the headers that are set by default by this WebView, such as those controlling caching, accept types or the User-Agent, their values may be overridden by this WebView's defaults.
Url: the URL of the resource to load This value cannot be null.
AdditionalHttpHeaders: map with additional headers This value cannot be null.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>AdditionalHttpHeaders</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>SetLayout</name>
            <comment>Changes the view position and size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>Reload</name>
            <comment>Reloads the current URL.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ResumeTimers</name>
            <comment>Resumes all layout, parsing, and JavaScript timers for all WebViews. This will resume dispatching all timers previously paused with PauseTimers.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ZoomIn</name>
            <comment>Performs zoom in in this WebView.
Returns true if zoom in succeeds, false if no zoom changes.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>PageUp</name>
            <comment>Scrolls the contents of this WebView up by half the view size.
Top: True to jump to the top of the page
Returns True if the page was scrolled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Top</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>HasFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>PauseTimers</name>
            <comment>Pauses all layout, parsing, and JavaScript timers for all WebViews. This is a global requests, not restricted to just this WebView. This can be useful if the application has been paused.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RemoveView</name>
            <comment>Removes this view from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Image</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
            </parameter>
        </method>
        <method>
            <name>LoadDataWithBaseURL</name>
            <comment>Loads the given data into this WebView.
BaseUrl: the URL to use as the page's base URL. If null defaults to 'about:blank'.
Data: a String of data in the given encoding This value cannot be null.
MimeType: the MIME type of the data, e.g. 'text/html'. This value may be null.
Encoding: the encoding of the data This value may be null.
HistoryUrl: the URL to use as the history entry. If null defaults to 'about:blank'. If non-null, this must be a valid URL.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>BaseUrl</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Data</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>MimeType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Encoding</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>HistoryUrl</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CanGoBack</name>
            <comment>Gets whether this WebView has a back history item.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClearAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FindNext</name>
            <comment>Highlights and scrolls to the next match found by FindAllAsync(Find As String), wrapping around page boundaries as necessary.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Forward</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>ClearHistory</name>
            <comment>Tells this WebView to clear its internal back/forward list.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClearMatches</name>
            <comment>Clears the highlighting surrounding text matches created by FindAllAsync method.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Tries to set the focus to this view.
Returns True if the focus was set.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SaveWebArchive</name>
            <comment>Saves the current view as a web archive.
Filename: the filename where the archive should be placed This value cannot be null.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>LoadUrl</name>
            <comment>Loads the given URL.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CanGoForward</name>
            <comment>Gets whether this WebView has a forward history item.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>EvaluateJavascript</name>
            <comment>Evaluate Javascript in UltimateWebView and got asynchronius backward Result.
Event "EvaluateJavascriptResult (Result as String)" will be fired when result is available. Result can be "null".
JavaScriptString: the JavaScript to execute. This value cannot be Null or empty string.
Added in API level 19
Important: UltimateWebView1.Settings.JavaScriptEnabled = True. Must be set to True somewhere in code</comment>
            <returntype>void</returntype>
            <parameter>
                <name>JavaScriptString</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Pause</name>
            <comment>Does a best-effort attempt to pause any processing that can be paused safely, such as animations and geolocation. Note that this call does not pause JavaScript. To pause JavaScript globally, use PauseTimers. To resume WebView, call Resume.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClearCache</name>
            <comment>Clears the resource cache. Note that the cache is per-application, so this will clear the cache for all WebViews used.
IncludeDiskFiles: if false, only the RAM cache is cleared.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>IncludeDiskFiles</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>AddJavascriptInterface</name>
            <comment>Injects the supplied JavascriptInterface As Object into this UltimateWebView. The object is injected into all frames of the web page, including all the iframes, using the supplied name. This allows the Java object's methods to be accessed from JavaScript.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>JavascriptInterface</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>EnableSlowWholeDocumentDraw</name>
            <comment>For apps targeting the L release, UltimateWebView has a new default behavior that reduces memory footprint and increases performance by intelligently choosing the portion of the HTML document that needs to be drawn. These optimizations are transparent to the developers.
Added in API level 21</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ZoomBy</name>
            <comment>Performs a zoom operation in this WebView.
ZoomFactor: the zoom factor to apply. The zoom factor will be clamped to the WebView's zoom limits. This value must be in the range 0.01 to 100.0 inclusive.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ZoomFactor</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Destroy</name>
            <comment>Destroys the internal state of this WebView. This method should be called after this WebView has been removed from the view system. No other methods may be called on this WebView after destroy.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SendToBack</name>
            <comment>Changes the Z order of this view and sends it to the back.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FindAllAsync</name>
            <comment>Finds all instances of find on the page and highlights them, asynchronously. Event "FindResultReceived" will be fired at process end. Successive calls to this will cancel any pending searches.
Find: the string to find. This value cannot be Null.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Find</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CanGoBackOrForward</name>
            <comment>Gets whether the page can go back or forward the given number of steps.
Steps: the negative or positive number of steps to move the history</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Steps</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CreatePrintDocumentAdapter</name>
            <comment>Creates a PrintDocumentAdapter as Object that provides the content of this WebView for printing. The adapter works by converting the WebView contents to a PDF stream.
DocumentName: the user-facing name of the printed document. Cannot be null
For API levels 19 and 20, the DocumentName has no function and will not be used.
Added in API level 19</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>DocumentName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>StopLoading</name>
            <comment>Stops the current load.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>InvalidateOutline</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment>Changes the view visibility with a fade-in or fade-out animation.
You must 
Note that the animation will only be applied when running on Android 3+ devices.
Duration - Animation duration measured in milliseconds.
Visible - New visibility state.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Visible</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveJavascriptInterface</name>
            <comment>Removes a previously injected Javascript object from this WebView. Note that the removal will not be reflected in JavaScript until the page is next (re)loaded.
Name: the name used to expose the object in JavaScript. This value cannot be Null.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GoForward</name>
            <comment>Goes forward in the history of this WebView.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetRendererPriorityPolicy</name>
            <comment>Set the renderer priority policy for this WebView. The priority policy will be used to determine whether an out of process renderer should be considered to be a target for OOM killing. Because a renderer can be associated with more than one WebView, the final priority it is computed as the maximum of any attached WebViews. When a WebView is destroyed it will cease to be considerered when calculating the renderer priority. Once no WebViews remain associated with the renderer, the priority of the renderer will be reduced to RENDERER_PRIORITY_WAIVED. The default policy is to set the priority to RENDERER_PRIORITY_IMPORTANT regardless of visibility, and this should not be changed unless the caller also handles renderer crashes. Any other setting will result in WebView renderers being killed by the system more aggressively than the application.
RendererRequestedPriority: the minimum priority at which this WebView desires the renderer process to be bound. Value is RENDERER_PRIORITY_WAIVED, RENDERER_PRIORITY_BOUND, or RENDERER_PRIORITY_IMPORTANT.
WaivedWhenNotVisible: if true, this flag specifies that when this WebView is not visible, it will be treated as if it had requested a priority of RENDERER_PRIORITY_WAIVED.
Added in API level 26</comment>
            <returntype>void</returntype>
            <parameter>
                <name>RendererRequestedPriority</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>WaivedWhenNotVisible</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>PostUrl</name>
            <comment>Loads the URL with postData using "POST" method into this WebView. If url is not a network URL, it will be loaded with LoadUrl instead, ignoring the PostData param.
Url: the URL of the resource to load This value cannot be null.
PostData: the data will be passed to "POST" request, which must be be "application/x-www-form-urlencoded" encoded. This value cannot be null.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>PostData</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>ClearFocus</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GoBack</name>
            <comment>Goes back in the history of this WebView.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FlingScroll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddChildWindow</name>
            <comment>Use this method to add child WebView object to UltimateWebView. Once added, UltimateWebView will handle this child WebView. This child WebView will be destroyed when user call GoBack and child cannot go back. 
You can use this method when WebkiWebChromeClient's event "CreateWindow" has been fired.
ChildWebViewObject: native B4A WebView or some other custom WebView (UltimateWebView). Must not be Null or not initialized object.
IsDialog: pass true if the new window should be a dialog size, rather than a full-size window.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ChildWebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>IsDialog</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Bottom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ZoomOut</name>
            <comment>Performs zoom out in this WebView.
Returns true if zoom out succeeds, false if no zoom changes.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>B4AWebView</name>
                <type>anywheresoftware.b4a.objects.WebViewWrapper</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>PageDown</name>
            <comment>Scrolls the contents of this WebView down by half the page size.
Bottom: True to jump to bottom of page
Returns True if the page was scrolled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Bottom</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment>Similar to SetLayout. Animates the change. Note that the animation will only be applied when running on Android 3+ devices.
Duration - Animation duration measured in milliseconds.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>InvokeZoomPicker</name>
            <comment>Invokes the graphical zoom picker widget for this WebView. This will result in the zoom widget appearing on the screen to control the zoom level of this WebView.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Resume</name>
            <comment>Resumes a WebView after a previous call to Pause.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsFocused</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SafeBrowsingPrivacyPolicyUrl</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets a URL pointing to the privacy policy for Safe Browsing reporting.
Added in API level 27</comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>int</returntype>
            <parameter>
                <name>Right</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackForwardList</name>
            <returntype>igolub.android.webkit.WebBackForwardListWrapper</returntype>
            <comment>Gets the WebBackForwardList for this WebView. This contains the back/forward list for use in querying each item in the history stack.</comment>
        </property>
        <property>
            <name>Url</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the URL for the current page. This is not always the same as the URL passed to WebViewClient PageStarted event because although the load for that URL has begun, the current page may not have changed. Null if no page has been loaded</comment>
        </property>
        <property>
            <name>PaddingBottom</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>WebViewDatabase</name>
            <returntype>igolub.android.webkit.WebViewDatabaseWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsPrivateBrowsingEnabled</name>
            <returntype>boolean</returntype>
            <comment>Gets whether private browsing is enabled in this WebView.</comment>
        </property>
        <property>
            <name>PaddingTop</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>WebChromeClient</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Client</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the chrome handler.
Set Null to remove chrome handler</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Visible</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ID</name>
            <returntype>int</returntype>
            <parameter>
                <name>ID</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CookieManager</name>
            <returntype>igolub.android.webkit.CookieManagerWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Settings</name>
            <returntype>igolub.android.webkit.WebSettingsWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Favicon</name>
            <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
            <comment>Gets the favicon for the current page. This is the favicon of the current page until IGWebViewClient's "ReceivedIcon" event is called.</comment>
        </property>
        <property>
            <name>WebViewClient</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Client</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the WebViewClient.
Set Null any time you want to return to default android's WebViewClient.</comment>
        </property>
        <property>
            <name>OriginalUrl</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the original URL for the current page. This is not always the same as the URL passed to WebViewClient's PageStarted event because although the load for that URL has begun, the current page may not have changed. Also, there may have been redirects resulting in a different URL to that originally requested.</comment>
        </property>
        <property>
            <name>Progress</name>
            <returntype>int</returntype>
            <comment>Gets the progress for the current page.</comment>
        </property>
        <property>
            <name>OverScrollMode</name>
            <returntype>int</returntype>
            <parameter>
                <name>Mode</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the over-scroll mode for this WebView. Valid over-scroll modes are OVER_SCROLL_ALWAYS, OVER_SCROLL_IF_CONTENT_SCROLLS (allow over-scrolling only if the WebView content is larger than the container), or OVER_SCROLL_NEVER. Setting the over-scroll mode of a WebView will have an effect only if the view is capable of scrolling.</comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>Drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScrollBarStyle</name>
            <returntype>int</returntype>
            <parameter>
                <name>Style</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the style of the scrollbars.</comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the title for the current page. This is the title of the current page until WebViewClient ReceivedTitle event is called.</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ContentHeight</name>
            <returntype>int</returntype>
            <comment>Gets the height of the HTML content.</comment>
        </property>
        <property>
            <name>RootView</name>
            <returntype>android.view.View</returntype>
            <comment></comment>
        </property>
        <property>
            <name>RendererRequestedPriority</name>
            <returntype>int</returntype>
            <comment>Get the requested renderer priority for this WebView.
Value is RENDERER_PRIORITY_WAIVED, RENDERER_PRIORITY_BOUND, or RENDERER_PRIORITY_IMPORTANT.
Added in API level 26</comment>
        </property>
        <property>
            <name>KeepScreenOn</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>KeepScreenOn</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>InitialScale</name>
            <parameter>
                <name>ScaleInPercent</name>
                <type>int</type>
            </parameter>
            <comment>Sets the initial scale for this WebView. 0 means default.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DownloadListener</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Listener</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the DownloadListener.
Set Null to remove DownloadListener</comment>
        </property>
        <property>
            <name>NetworkAvailable</name>
            <parameter>
                <name>NetworkUp</name>
                <type>boolean</type>
            </parameter>
            <comment>Informs WebView of the network state.</comment>
        </property>
        <property>
            <name>PaddingLeft</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Alpha</name>
            <returntype>float</returntype>
            <parameter>
                <name>Alpha</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Bottom</name>
            <returntype>int</returntype>
            <parameter>
                <name>Bottom</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Foreground</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>Foreground</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PaddingRight</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>RendererPriorityWaivedWhenNotVisible</name>
            <returntype>boolean</returntype>
            <comment>Gets whether this WebView requests a priority of RENDERER_PRIORITY_WAIVED when not visible.
Added in API level 26</comment>
        </property>
        <property>
            <name>Certificate</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the SSL certificate as Object for the main top-level page or null if there is no certificate (the site is not secure).</comment>
        </property>
        <property>
            <name>HitTestResult</name>
            <returntype>igolub.android.webkit.HitTestResultWrapper</returntype>
            <comment>Gets a HitTestResult based on the current cursor node. If a HTML::a tag is found and the anchor has a non-JavaScript URL, the HitTestResult type is set to SRC_ANCHOR_TYPE and the URL is set in the "extra" field. If the anchor does not have a URL or if it is a JavaScript URL, the type will be UNKNOWN_TYPE and the URL has to be retrieved through requestFocusNodeHref(Message) asynchronously. If a HTML::img tag is found, the HitTestResult type is set to IMAGE_TYPE and the URL is set in the "extra" field. A type of SRC_IMAGE_ANCHOR_TYPE indicates an anchor with a URL that has an image as a child node. If a phone number is found, the HitTestResult type is set to PHONE_TYPE and the phone number is set in the "extra" field of HitTestResult. If a map address is found, the HitTestResult type is set to GEO_TYPE and the address is set in the "extra" field of HitTestResult. If an email address is found, the HitTestResult type is set to EMAIL_TYPE and the email is set in the "extra" field of HitTestResult. Otherwise, HitTestResult type is set to UNKNOWN_TYPE.</comment>
        </property>
        <field>
            <name>RENDERER_PRIORITY_BOUND</name>
            <comment>The renderer associated with this WebView is bound with the default priority for services.
Constant Value: 1
Added in API level 26</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_NEVER</name>
            <comment>Never allow a user to over-scroll this view.
Constant Value: 2</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_INSET</name>
            <comment>The scrollbar style to display the scrollbars at the edge of the view, increasing the padding of the view. The scrollbars will only overlap the background, if any.
Constant Value: 50331648</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_ALWAYS</name>
            <comment>Always allow a user to over-scroll this view, provided it is a view that can scroll.
Constant Value: 0</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_IF_CONTENT_SCROLLS</name>
            <comment>Allow a user to over-scroll this view only if the content is large enough to meaningfully scroll, provided it is a view that can scroll.
Constant Value: 1</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_INSIDE_INSET</name>
            <comment>The scrollbar style to display the scrollbars inside the padded area, increasing the padding of the view. The scrollbars will not overlap the content area of the view.
Constant Value: 16777216</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RENDERER_PRIORITY_WAIVED</name>
            <comment>The renderer associated with this WebView is bound with Context.BIND_WAIVE_PRIORITY. At this priority level WebView renderers will be strong targets for out of memory killing.
Constant Value: 0
Added in API level 26</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RENDERER_PRIORITY_IMPORTANT</name>
            <comment>The renderer associated with this WebView is bound with Context.BIND_IMPORTANT.
Constant Value: 2
Added in API level 26</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_INSIDE_OVERLAY</name>
            <comment>The scrollbar style to display the scrollbars inside the content area, without increasing the padding. The scrollbars will be overlaid with translucency on the view's content.
Constant Value: 0</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_OVERLAY</name>
            <comment>The scrollbar style to display the scrollbars at the edge of the view, without increasing the padding. The scrollbars will be overlaid with translucency.
Constant Value: 33554432</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>igolub.android.webkit.UltimateWebChromeClient</name>
        <shortname>UltimateWebChromeClient</shortname>
        <comment>This class is a customized version of WebChromeClient and adapted to work in the B4A environment.</comment>
        <objectwrapper>igolub.android.webkit.wrappers.MyWebChromeClient</objectwrapper>
        <owner>process</owner>
        <event>PermissionsRequest (RequestedRuntimePermissions As List, Request As PermissionRequest) 'Works from API level 21 and above.</event>
        <event>PermissionsRequestCanceled (Request As PermissionRequest) 'Works from API level 21 and above.</event>
        <event>GeolocationPermissionRequest (Origin As String, Callback As GeolocationPermissionCallback) 'Works from API level 5 and above.</event>
        <event>GeolocationPermissionRequestCanceled 'Works from API level 5 and above.</event>
        <event>ShowFileChooser (FilePathCallback As ValueCallbackUri, Params As FileChooserParams) 'Works from API level 21 and above. FilePathCallback.OnReceiveValue must be executed with value from file chooser, or null to abort.</event>
        <event>ConsoleMessage (Message As ConsoleMessage) As Boolean 'Works from API level 8 and above.</event>
        <event>CreateWindow (OverridenRequest As WebResourceRequest, ChildWebView As WebView, IsDialog As Boolean, IsUserGesture As Boolean) As Boolean 'Works from API level 1 and above. Return True if you want to consume ChildWebView, False to destroy. SupportMultipleWindows option must be enabled. You can add the newly created WebViewObject to Layout manualy, or use UltimateWebView's AddChildWindow method.</event>
        <event>JsAlert (Url As String, Message As String, Result As JsResult) As Boolean 'Works from API level 1 and above. Return true if the request is handled or ignored, false if WebView needs to show the default dialog.</event>
        <event>JsBeforeUnload (Url As String, Message As String, Result As JsResult) As Boolean 'Works from API level 1 and above. Return true if the request is handled or ignored, false if WebView needs to show the default dialog.</event>
        <event>JsConfirm (Url As String, Message As String, Result As JsResult) As Boolean 'Works from API level 1 and above. Return true if the request is handled or ignored, false if WebView needs to show the default dialog.</event>
        <event>JsPrompt (Url As String, Message As String, DefaultValue As String, Result As JsPromptResult) As Boolean 'Works from API level 1 and above. Return true if the request is handled or ignored, false if WebView needs to show the default dialog.</event>
        <event>ProgressChanged(NewProgress As Int) 'Works from API level 1 and above.</event>
        <event>ReceivedIcon (Icon As Bitmap) 'Works from API level 1 and above.</event>
        <event>ReceivedTitle (Title As String) 'Works from API level 1 and above.</event>
        <event>ReceivedTouchIconUrl (Url As String, Precomposed As Boolean) 'Works from API level 7 and above.</event>
        <event>RequestFocus 'Works from API level 1 and above.</event>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes new class instance. Use this method to initialize UltimateWebChromeClient and later implement it in WebView manually.
EventName: to be used for events.
Returns initialized UltimateWebChromeClient.</comment>
            <returntype>igolub.android.webkit.UltimateWebChromeClient</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ImplementInWebView</name>
            <comment>Implement this UltimateWebChromeClient into WebView object.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object in which UltimateWebChromeClient should be implemented.
Returns this UltimateWebChromeClient.</comment>
            <returntype>igolub.android.webkit.UltimateWebChromeClient</returntype>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Initializes new class instance. Use this method to initialize and implement UltimateWebChromeClient into a WebView object.
EventName: to be used for events.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object in which UltimateWebChromeClient should be implemented.
Returns initialized UltimateWebChromeClient.</comment>
            <returntype>igolub.android.webkit.UltimateWebChromeClient</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>AllowFullScreenVideo</name>
            <comment>This method enables or disables WebView's ability to play online video in full screen.
Allowed: True to allow, otherwise False. Default value is False
ForceLandscape: True to force full screen video to play in landscape screen orientation. Default value is False.
IMPORTANT: SoftOrientation library or other methods are required to prevent the Activity to redraw on the orientation change!!!
Returns this UltimateWebChromeClient.</comment>
            <returntype>igolub.android.webkit.UltimateWebChromeClient</returntype>
            <parameter>
                <name>Allowed</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>ForceLandscape</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveFromWebView</name>
            <comment>Remove this UltimateWebChromeClient or any other WebChromeClient from a WebView object. Null will be set.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object from which UltimateWebChromeClient should be removed.
Returns this UltimateWebChromeClient.</comment>
            <returntype>igolub.android.webkit.UltimateWebChromeClient</returntype>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>ShowDefaultAppChooser</name>
            <comment>Call this method after ShowFileChooser event is fired. This method will launch an application chooser which contains applications that meets the criteria for uploading the requested file or multiple files.
FilePathCallback: pass FilePathCallback received from ShowFileChooser event.
FileChooserParams: pass FileChooserParams received from ShowFileChooser event.
ForceCaptureEnabled: to True, an option for the camera will be offered as the file upload source (if web source request image, video or all file types). To False, value of IsCaptureEnabled from FileChooserParams will be used to determine if camera option is available (in most cases is not available).
FileProvidersSharedFolder: Default or custom FileProvider library is required. FileProvider's shared folder is necessary for temporary saving pictures and videos from the Camera which will be uploaded to the desired web service (file upload directly from the camera). If you pass Null or an empty string, Camera app will not be offered in application chooser for file upload.
If you pass ForceCaptureEnabled as True or if FileChooserParams.IsCaptureEnabled is True, and you have added permissions for CAMERA or RECORD_AUDIO in manifest, you must request them with RuntimePermissions before you call this method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FilePathCallback</name>
                <type>igolub.android.webkit.ValueCallbackUriWrapper</type>
            </parameter>
            <parameter>
                <name>FileChooserParams</name>
                <type>igolub.android.webkit.FileChooserParamsWrapper</type>
            </parameter>
            <parameter>
                <name>ForceCaptureEnabled</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>FileProvidersSharedFolder</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.UltimateJavascriptInterface</name>
        <shortname>UltimateJavascriptInterface</shortname>
        <comment>This class is a customized version of JavascriptInterface and adapted to work in the B4A environment.
Associated JavascriptInterface methods:
ShowToast(String message, boolean lengthLong)
Log(String logMessage)
CallSub(String SubName, boolean CallUIThread)
CallSub(String SubName, boolean CallUIThread, String parameter1)
CallSub(String SubName, boolean CallUIThread, String parameter1, String parameter2)
CallSub(String SubName, boolean CallUIThread, String parameter1, String parameter2, String parameter3)
CallSub(String SubName, boolean CallUIThread, String parameter1, String parameter2, String parameter3, String parameter4)</comment>
        <owner CheckForReinitialize="true">process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes new class instance.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.UltimateDownloadListener</name>
        <shortname>UltimateDownloadListener</shortname>
        <comment>This class is a customized version of DownloadListener and adapted to work in the B4A environment.</comment>
        <objectwrapper>igolub.android.webkit.wrappers.MyDownloadListener</objectwrapper>
        <owner>process</owner>
        <event>FileDownloadInitialized (Properties As DownloadProperties) 'Works from API level 1 and above.</event>
        <event>FileDownloadStarted (Properties As DownloadProperties) 'Works from API level 9 and above.</event>
        <event>FileDownloadCompleted (Success As Boolean, Properties As DownloadProperties) 'Works from API level 9 and above.</event>
        <method>
            <name RaisesSynchronousEvents="true">StartFileDownload</name>
            <comment>Use this method to start the file download. This method can only be used in the FileDownloadInitialized event. To download the file, the Android DownloadManager will be used and the downloaded file will be placed in the Download folder.
Properties: the DownloadProperties received from the FileDownloadInitialized event.
DownloadManagerTitle: Set the title of this download, to be displayed in notifications (if enabled). If Null or empty string is given, a default one will be assigned based on the download filename, once the download starts.
DownloadManagerDescription: Set a description of this download, to be displayed in notifications (if enabled).
AllowScanningByMediaScanner: scanning the file after the file download is complete. For API 29 and above it has no function because the system decides by itself.
DownloadManagerNotification: True to show DownloadManager in notifications bar. In case of False, it is necessary to copy next line in manifest:
&lt;code&gt;AddPermission(android.permission.DOWNLOAD_WITHOUT_NOTIFICATION)&lt;/code&gt;.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Properties</name>
                <type>igolub.android.webkit.DownloadProperties</type>
            </parameter>
            <parameter>
                <name>DownloadManagerTitle</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>DownloadManagerDescription</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>AllowScanningByMediaScanner</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>DownloadManagerNotification</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes new class instance. Use this method to initialize UltimateDownloadListener and later implement it in WebView manually.
EventName: to be used for events.
Returns initialized UltimateDownloadListener.</comment>
            <returntype>igolub.android.webkit.UltimateDownloadListener</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ImplementInWebView</name>
            <comment>Implement this UltimateDownloadListener into WebView object.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object in which UltimateDownloadListener should be implemented.
Returns this UltimateDownloadListener.</comment>
            <returntype>igolub.android.webkit.UltimateDownloadListener</returntype>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Initializes new class instance. Use this method to initialize and implement UltimateDownloadListener into a WebView object.
EventName: to be used for events.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object in which UltimateDownloadListener should be implemented.
Returns initialized UltimateDownloadListener.</comment>
            <returntype>igolub.android.webkit.UltimateDownloadListener</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name RaisesSynchronousEvents="true">StartFileDownload2</name>
            <comment>Use this method to start the file download. This method can only be used in the FileDownloadInitialized event. To download the file, the Android DownloadManager will be used and the downloaded file will be placed in the specified Folder path with original file name.
Properties: the DownloadProperties received from the FileDownloadInitialized event.
Folder: where you want the downloaded file to be saved. From API 29 and above it is recommended to use RuntimePermission.GetSafeDirDefaultExternal (FileProvider.SharedFolder will throw exception). For API below 29 you must request "WRITE_EXTERNAL_STORAGE" permission. This value can not be Null or empty string.
DownloadManagerTitle: Set the title of this download, to be displayed in notifications (if enabled). If Null or empty string is given, a default one will be assigned based on the download filename, once the download starts.
DownloadManagerDescription: Set a description of this download, to be displayed in notifications (if enabled).
AllowScanningByMediaScanner: scanning the file after the file download is complete. For API 29 and above it has no function because the system decides by itself.
DownloadManagerNotification: True to show DownloadManager in notifications bar. In case of False, it is necessary to copy next line in manifest:
&lt;code&gt;AddPermission(android.permission.DOWNLOAD_WITHOUT_NOTIFICATION)&lt;/code&gt;.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Properties</name>
                <type>igolub.android.webkit.DownloadProperties</type>
            </parameter>
            <parameter>
                <name>Folder</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>DownloadManagerTitle</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>DownloadManagerDescription</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>AllowScanningByMediaScanner</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>DownloadManagerNotification</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name RaisesSynchronousEvents="true">StartFileDownload3</name>
            <comment>Use this method to start the file download. This method can only be used in the FileDownloadInitialized event. To download the file, the Android DownloadManager will be used and the downloaded file will be placed in the specified Folder with specified FileName.
Properties: the DownloadProperties received from the FileDownloadInitialized event.
Folder: where you want the downloaded file to be saved. From API 29 and above it is recommended to use RuntimePermission.GetSafeDirDefaultExternal (FileProvider.SharedFolder will throw exception). For API below 29 you must request "WRITE_EXTERNAL_STORAGE" permission. This value can not be Null or empty string.
FileName: the desired name of the downloaded file after the download is complete. This value can not be Null or empty string.
DownloadManagerTitle: Set the title of this download, to be displayed in notifications (if enabled). If Null or empty string is given, a default one will be assigned based on the download filename, once the download starts.
DownloadManagerDescription: Set a description of this download, to be displayed in notifications (if enabled).
AllowScanningByMediaScanner: scanning the file after the file download is complete. For API 29 and above it has no function because the system decides by itself.
DownloadManagerNotification: True to show DownloadManager in notifications bar. In case of False, it is necessary to copy next line in manifest:
&lt;code&gt;AddPermission(android.permission.DOWNLOAD_WITHOUT_NOTIFICATION)&lt;/code&gt;.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Properties</name>
                <type>igolub.android.webkit.DownloadProperties</type>
            </parameter>
            <parameter>
                <name>Folder</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>DownloadManagerTitle</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>DownloadManagerDescription</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>AllowScanningByMediaScanner</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>DownloadManagerNotification</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveFromWebView</name>
            <comment>Remove this UltimateDownloadListener or any other DownloadListener from a WebView object. Null will be set.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object from which UltimateDownloadListener should be removed.
Returns this UltimateDownloadListener.</comment>
            <returntype>igolub.android.webkit.UltimateDownloadListener</returntype>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.SslErrorHandlerWrapper</name>
        <shortname>SslErrorHandler</shortname>
        <comment>This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.SslErrorHandler</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Cancel</name>
            <comment>Cancel this request and all pending requests for the WebView that had the error.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Proceed</name>
            <comment>Proceed with the SSL certificate.
It is not recommended to proceed past SSL errors and this method should generally not be used.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.SafeBrowsingResponseWrapper</name>
        <shortname>SafeBrowsingResponse</shortname>
        <comment>This class cannot be initialized by the user.</comment>
        <objectwrapper>androidx.webkit.SafeBrowsingResponseCompat</objectwrapper>
        <owner>process</owner>
        <method>
            <name>BackToSafety</name>
            <comment>Act as if the user clicked the "back to safety" button.
ParamBoolean: true to enable Safe Browsing reporting.
Added in API level 27.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ParamBoolean</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Proceed</name>
            <comment>Act as if the user clicked the "visit this unsafe site" button.
ParamBoolean: true to enable Safe Browsing reporting.
Added in API level 27.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ParamBoolean</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ShowInterstitial</name>
            <comment>Display the default interstitial.
ParamBoolean: true if the interstitial should show a reporting checkbox.
Added in API level 27.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ParamBoolean</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.PermissionRequestWrapper</name>
        <shortname>PermissionRequest</shortname>
        <comment>This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.PermissionRequest</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Grant</name>
            <comment>Call this method to grant origin the permission to access the given resources. The granted permission is only valid for this WebView.
Resources: the resources granted to be accessed by origin, to grant request, the requested resources returned by Resources property must be equals or a subset of granted resources. This parameter is designed to avoid granting permission by accident especially when new resources are requested by web content.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Resources</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Deny</name>
            <comment>Call this method to deny the request.
Added in API level 21</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Origin</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the origin of the web page which is trying to access the restricted resources.
Added in API level 21</comment>
        </property>
        <property>
            <name>OriginAsUri</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the origin as Uri object of the web page which is trying to access the restricted resources.
Added in API level 21</comment>
        </property>
        <property>
            <name>Resources</name>
            <returntype>java.lang.String[]</returntype>
            <comment>Gets the resources the web page is trying to access.
Returns: RESOURCE_AUDIO_CAPTURE, RESOURCE_MIDI_SYSEX, RESOURCE_PROTECTED_MEDIA_ID or RESOURCE_VIDEO_CAPTURE.
Added in API level 21</comment>
        </property>
        <field>
            <name>RESOURCE_AUDIO_CAPTURE</name>
            <comment>Resource belongs to audio capture device, like microphone.
Constant Value: "android.webkit.resource.AUDIO_CAPTURE"
Added in API level 21</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>RESOURCE_PROTECTED_MEDIA_ID</name>
            <comment>Resource belongs to protected media identifier. After the user grants this resource, the origin can use EME APIs to generate the license requests.
Constant Value: "android.webkit.resource.PROTECTED_MEDIA_ID"
Added in API level 21</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>RESOURCE_VIDEO_CAPTURE</name>
            <comment>Resource belongs to video capture device, like camera.
Constant Value: "android.webkit.resource.VIDEO_CAPTURE"
Added in API level 21</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>RESOURCE_MIDI_SYSEX</name>
            <comment>Resource will allow sysex messages to be sent to or received from MIDI devices. These messages are privileged operations, e.g. modifying sound libraries and sampling data, or even updating the MIDI device's firmware. Permission may be requested for this resource in API levels 21 and above, if the Android device has been updated to WebView 45 or above.
Constant Value: "android.webkit.resource.MIDI_SYSEX"
Added in API level 23</comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>igolub.android.webkit.JsResultWrapper</name>
        <shortname>JsResult</shortname>
        <comment>This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.JsResult</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Cancel</name>
            <comment>Handle the result if the user cancelled the dialog.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Confirm</name>
            <comment>Handle a confirmation response from the user.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.JsPromptResultWrapper</name>
        <shortname>JsPromptResult</shortname>
        <comment>This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.JsResult</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Confirm2</name>
            <comment>Handle a confirmation response from the user.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Result</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Cancel</name>
            <comment>Handle the result if the user cancelled the dialog.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Confirm</name>
            <comment>Handle a confirmation response from the user.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.HttpAuthHandlerWrapper</name>
        <shortname>HttpAuthHandler</shortname>
        <comment>Represents a request for HTTP authentication. Instances of this class are created by the WebView and passed to UltimateWebViewClient's ReceivedHttpAuthRequest event. The host application must call either Proceed or Cancel to set the WebView's response to the request.
This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.HttpAuthHandler</objectwrapper>
        <owner>process</owner>
        <method>
            <name>UseHttpAuthUsernamePassword</name>
            <comment>Gets whether the credentials stored for the current host (i.e. the host for which UltimateWebViewClient's ReceivedHttpAuthRequest event was called) are suitable for use. Credentials are not suitable if they have previously been rejected by the server for the current request.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Cancel</name>
            <comment>Instructs the WebView to cancel the authentication request.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Proceed</name>
            <comment>Instructs the WebView to proceed with the authentication with the given credentials.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>UserName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.HitTestResultWrapper</name>
        <shortname>HitTestResult</shortname>
        <comment>This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.WebView.HitTestResult</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Type</name>
            <returntype>int</returntype>
            <comment>Gets the type of the hit test result. See the XXX_TYPE constants defined in this class.</comment>
        </property>
        <property>
            <name>Extra</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets additional type-dependant information about the result. May either be null or contain extra information about this result.</comment>
        </property>
        <field>
            <name>IMAGE_TYPE</name>
            <comment>HitTestResult for hitting an HTML::img tag.
Constant Value: 5</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>UNKNOWN_TYPE</name>
            <comment>Default HitTestResult, where the target is unknown.
Constant Value: 0</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMAGE_ANCHOR_TYPE</name>
            <comment>Constant Value: 6</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SRC_ANCHOR_TYPE</name>
            <comment>HitTestResult for hitting a HTML::a tag with src=http.
Constant Value: 7</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GEO_TYPE</name>
            <comment>HitTestResult for hitting a map address.
Constant Value: 3</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EDIT_TEXT_TYPE</name>
            <comment>HitTestResult for hitting an edit text area.
Constant Value: 9</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EMAIL_TYPE</name>
            <comment>HitTestResult for hitting an email address.
Constant Value: 4</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PHONE_TYPE</name>
            <comment>HitTestResult for hitting a phone number.
Constant Value: 2</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ANCHOR_TYPE</name>
            <comment>Constant Value: 1</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SRC_IMAGE_ANCHOR_TYPE</name>
            <comment>HitTestResult for hitting a HTML::a tag with src=http + HTML::img.
Constant Value: 8</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>igolub.android.webkit.GeolocationPermissionWrapper</name>
        <shortname>GeolocationPermission</shortname>
        <comment>This class is used to manage permissions for the WebView's Geolocation JavaScript API. Geolocation permissions are applied to an origin, which consists of the host, scheme and port of a URI. In order for web content to use the Geolocation API, permission must be granted for that content's origin. This class stores Geolocation permissions. An origin's permission state can be either allowed or denied. This class uses Strings to represent an origin. When an origin attempts to use the Geolocation API, but no permission state is currently set for that origin, UltimateWebChromeClient's GeolocationPermissionsRequest event is called. This allows the permission state to be set for that origin. The methods of this class can be used to modify and interrogate the stored Geolocation permissions at any time.</comment>
        <objectwrapper>android.webkit.GeolocationPermissions</objectwrapper>
        <owner>process</owner>
        <event>IsAllowedResult (Allowed As Boolean)</event>
        <event>GetOriginsResult (Origins As List)</event>
        <method>
            <name>ClearAll</name>
            <comment>Clears the Geolocation permission state for all origins.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetOrigins</name>
            <comment>Gets the list of origins for which Geolocation permissions are stored.
This method is asynchronized. When result become available, event "GetOriginsResult" will be fired. Use WaitFor for synchronized result.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Allow</name>
            <comment>Allows the specified origin to use the Geolocation API.
Origin: the origin for which Geolocation API use is allowed</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Origin</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Clear</name>
            <comment>Clears the Geolocation permission state for the specified origin.
Origin: the origin for which Geolocation permissions are cleared</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Origin</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsAllowed</name>
            <comment>Gets the Geolocation permission state for the specified origin.
Origin: the origin for which Geolocation permission is requested
This method is asynchronized. When result become available, event "IsAllowedResult" will be fired. Use WaitFor for synchronized result.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Origin</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.GeolocationPermissionCallbackWrapper</name>
        <shortname>GeolocationPermissionCallback</shortname>
        <comment>A callback class used by the host application to set the Geolocation permission state for an origin.
This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.GeolocationPermissions.Callback</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Invoke</name>
            <comment>Sets the Geolocation permission state for the supplied origin.
Origin: the origin for which permissions are set.
Allow: whether or not the origin should be allowed to use the Geolocation API.
Retain: whether the permission should be retained beyond the lifetime of a page currently being displayed by a WebView.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Origin</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Allow</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Retain</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>igolub.android.webkit.FileChooserParamsWrapper</name>
        <shortname>FileChooserParams</shortname>
        <comment>Parameters used in the UltimateWebChromeClient's ShowFileChooser event.
This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.WebChromeClient.FileChooserParams</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ParseResult</name>
            <comment>Parse the result returned by the file picker activity.
ResultCode: the integer result code returned by the file picker activity.
Data: the intent returned by the file picker activity.
Returns the array of Uri's as Object of selected file(s) or null if the resultCode indicates activity cancelled or any other error.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ResultCode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Data</name>
                <type>anywheresoftware.b4a.objects.IntentWrapper</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>FilenameHint</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the file name of a default selection if specified, or empty string.
Added in API level 21</comment>
        </property>
        <property>
            <name>Mode</name>
            <returntype>int</returntype>
            <comment>Gets file chooser mode.
Values: MODE_OPEN, MODE_OPEN_MULTIPLE or MODE_SAVE. Values can be found on FileChooserParams module (example: FileChooserParams.MODE_OPEN).
Added in API level 21</comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the title to use for this file selector. If is an empty string a default title should be used.
Added in API level 21</comment>
        </property>
        <property>
            <name>IsCaptureEnabled</name>
            <returntype>boolean</returntype>
            <comment>Gets preference for a live media captured value (e.g. Camera, Microphone). True indicates capture is enabled, false disabled. Use AcceptTypes to determine suitable capture devices.
Added in API level 21</comment>
        </property>
        <property>
            <name>Intent</name>
            <returntype>anywheresoftware.b4a.objects.IntentWrapper</returntype>
            <comment>Gets an intent that would start a file picker for file selection. The Intent supports choosing files from simple file sources available on the device. Some advanced sources (for example, live media capture) may not be supported and applications wishing to support these sources or more advanced file operations should build their own Intent.
Added in API level 21</comment>
        </property>
        <property>
            <name>AcceptTypes</name>
            <returntype>java.lang.String[]</returntype>
            <comment>Gets an array of acceptable MIME types. The returned MIME type could be partial such as audio/*. The array will be empty if no acceptable types are specified.
Added in API level 21</comment>
        </property>
        <field>
            <name>MODE_SAVE</name>
            <comment>Allows picking a nonexistent file and saving it.
Added in API level 21</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MODE_OPEN_MULTIPLE</name>
            <comment>Like Open but allows multiple files to be selected.
Added in API level 21</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MODE_OPEN</name>
            <comment>Open single file. Requires that the file exists before allowing the user to pick it.
Added in API level 21</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>igolub.android.webkit.DownloadProperties</name>
        <shortname>DownloadProperties</shortname>
        <comment>This class is custom class and is not part of android.webkit package.</comment>
        <owner>process</owner>
        <field>
            <name>ContentDisposition</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>Cookies</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>FileName</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>FileExtension</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>UserAgent</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ContentLength</name>
            <comment></comment>
            <returntype>long</returntype>
        </field>
        <field>
            <name>Url</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MimeType</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DownloadID</name>
            <comment></comment>
            <returntype>long</returntype>
        </field>
    </class>
    <class>
        <name>igolub.android.webkit.CookieManagerWrapper</name>
        <shortname>CookieManager</shortname>
        <comment>Manages the cookies used by an application's WebView instances.
CookieManager represents cookies as strings in the same format as the HTTP Cookie and Set-Cookie header fields (defined in RFC6265bis).</comment>
        <objectwrapper>android.webkit.CookieManager</objectwrapper>
        <owner>process</owner>
        <method>
            <name>HasCookies</name>
            <comment>Gets whether there are stored cookies.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetCookieInfo</name>
            <comment>Gets all the cookies for the given URL along with their set attributes. The cookies are returned in the format of the HTTP 'Set-Cookie' header as defined in the RFC6265 spec. eg. "name=value; domain=.example.com; path=/"
Url: the URL for which the API retrieves all available cookies.
Returns the cookies as a List of strings.
Method implemented from webkit Compat package.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Flush</name>
            <comment>Ensures all cookies currently accessible through the getCookie API are written to persistent storage. This call will block the caller until it is done and may perform I/O.
Added in API level 21</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes new class instance.
If UltimateWebView is used, variable declaration and initialization of this class is not required. In that case, the cookies manager can be found in the UltimateWebView1.CookieManager property.
WebViewObject: native B4A WebView or UltimateWebView or any other wrapped WebView object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>WebViewObject</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>RemoveAllCookies</name>
            <comment>Removes all cookies.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetCookie</name>
            <comment>Gets all the cookies for the given URL. This may return multiple key-value pairs if multiple cookies are associated with this URL, in which case each cookie will be delimited by "; " characters (semicolon followed by a space). Each key-value pair will be of the form "key=value".
Url: the URL for which the cookies are requested
Returns value the cookies as a string, using the format of the 'Cookie' HTTP request header.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveSessionCookies</name>
            <comment>Removes all session cookies, which are cookies without an expiration date.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetCookie</name>
            <comment>Sets a single cookie (key-value pair) for the given URL. Any existing cookie with the same host, path and name will be replaced with the new cookie. The cookie being set will be ignored if it is expired. To set multiple cookies, your application should invoke this method multiple times.
Url: the URL for which the cookie is to be set.
Value: the cookie as a string, using the format of the 'Set-Cookie' HTTP response header.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveExpiredCookie</name>
            <comment>Removes all expired cookies.
This method was deprecated in API level 21. The WebView handles removing expired cookies automatically.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>AcceptCookies</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the application's WebView instances should send and accept cookies. By default this is set to true and the WebView accepts cookies.
When this is true AcceptThirdPartyCookies and AcceptFileSchemeCookies can be used to control the policy for those specific types of cookie.</comment>
        </property>
        <property>
            <name>AcceptThirdPartyCookies</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the WebView should allow third party cookies to be set. Allowing third party cookies is a per WebView policy and can be set differently on different WebView instances.
Apps that target Api level 20 or below default to allowing third party cookies. Apps targeting Api level 21 or later default to disallowing third party cookies.
Added in API level 21</comment>
        </property>
        <property>
            <name>AcceptFileSchemeCookies</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>accept</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the application's WebView instances should send and accept cookies for file scheme URLs.
Deprecated in API level 30</comment>
        </property>
    </class>
    <class>
        <name>igolub.android.webkit.ConsoleMessageWrapper</name>
        <shortname>ConsoleMessage</shortname>
        <comment>Public class representing a JavaScript console message from WebCore. This could be a issued by a call to one of the console logging functions or a JavaScript error on the page. To receive notifications of these messages, override the UltimateWebChromeClient's ConsoleMessage event.</comment>
        <objectwrapper>android.webkit.ConsoleMessage</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Message</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>SourceId</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>LineNumber</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>MessageLevel</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>Message</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SourceId</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MessageLevel</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LineNumber</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <field>
            <name>MESSAGE_LEVEL_WARNING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MESSAGE_LEVEL_LOG</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MESSAGE_LEVEL_DEBUG</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MESSAGE_LEVEL_ERROR</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MESSAGE_LEVEL_TIP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <class>
        <name>igolub.android.webkit.ClientCertRequestWrapper</name>
        <shortname>ClientCertRequest</shortname>
        <comment>The user receives an instance of this class as a parameter of UltimateWebViewClient's ReceivedClientCertRequest event. The request includes the parameters to choose the client certificate, such as the host name and the port number requesting the cert, the acceptable key types and the principals names. The user should call one of the class methods to indicate how to deal with the client certificate request.
This class cannot be initialized by the user.</comment>
        <objectwrapper>android.webkit.ClientCertRequest</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Ignore</name>
            <comment>Ignore the request for now. Do not remember user's choice.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Cancel</name>
            <comment>Cancel this request. Remember the user's choice and use it for future requests.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Proceed</name>
            <comment>Proceed with certificate. Remember the user's positive choice and use it for future requests.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>PrincipalsNames</name>
            <returntype>java.lang.String[]</returntype>
            <comment>Gets the acceptable certificate issuers names for the certificate matching the private key.</comment>
        </property>
        <property>
            <name>Port</name>
            <returntype>int</returntype>
            <comment>Gets the port number of the server requesting the certificate.</comment>
        </property>
        <property>
            <name>Host</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the host name of the server requesting the certificate.</comment>
        </property>
        <property>
            <name>KeyTypes</name>
            <returntype>java.lang.String[]</returntype>
            <comment>Gets the acceptable types of asymmetric keys.</comment>
        </property>
    </class>
    <class b4a_type="StaticCode">
        <name>igolub.android.webkit.modules.WebSettingsModule</name>
        <shortname>WebSettings</shortname>
        <comment>This module contains only static methods and fields.</comment>
        <objectwrapper>android.webkit.WebSettings</objectwrapper>
        <owner>process</owner>
        <field>
            <name>MENU_ITEM_SHARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_ALGORITHM_SINGLE_COLUMN</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ATTRIBUTION_BEHAVIOR_APP_SOURCE_AND_APP_TRIGGER</name>
            <comment>AttributionRegistrationBehavior that allows apps to register app sources and app triggers from WebView.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MENU_ITEM_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORCE_DARK_ON</name>
            <comment>Unconditionally enable force dark. In this mode WebView content will always be rendered so as to emulate a dark theme.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_ALGORITHM_TEXT_AUTOSIZING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>LAYOUT_ALGORITHM_NORMAL</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MIXED_CONTENT_NEVER_ALLOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DARK_STRATEGY_WEB_THEME_DARKENING_ONLY</name>
            <comment>In this mode WebView content will always be darkened using dark theme provided by web page. If web page does not provide dark theme support WebView content will be rendered with a default theme.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_CACHE_ELSE_NETWORK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MIXED_CONTENT_ALWAYS_ALLOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MENU_ITEM_PROCESS_TEXT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_DEFAULT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DARK_STRATEGY_PREFER_WEB_THEME_OVER_USER_AGENT_DARKENING</name>
            <comment>In this mode WebView content will be darkened by a user agent unless web page supports dark theme. WebView determines whether web pages supports dark theme by the presence of color-scheme metadata containing "dark" value. If the metadata is not presented WebView content will be darkened by a user agent and prefers-color-scheme media query will evaluate to light.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORCE_DARK_AUTO</name>
            <comment>Enable force dark dependent on the state of the WebView parent view. If the WebView parent view is being automatically force darkened, then WebView content will be rendered so as to emulate a dark theme. WebViews that are not attached to the view hierarchy will not be inverted.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_NO_CACHE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ATTRIBUTION_BEHAVIOR_APP_SOURCE_AND_WEB_TRIGGER</name>
            <comment>AttributionRegistrationBehavior that allows apps to register app sources (sources associated with the app package name) and web triggers (triggers associated with the eTLD+1) from WebView.
This is the default behavior.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MIXED_CONTENT_COMPATIBILITY_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MENU_ITEM_WEB_SEARCH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_CACHE_ONLY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ATTRIBUTION_BEHAVIOR_WEB_SOURCE_AND_WEB_TRIGGER</name>
            <comment>AttributionRegistrationBehavior that allows apps to register web sources and web triggers from WebView.
This option should only be used after applying to use web sources.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_ALGORITHM_NARROW_COLUMNS</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>ATTRIBUTION_BEHAVIOR_DISABLED</name>
            <comment>AttributionRegistrationBehavior that disables source and trigger registration from WebView.
Note that the initial network call to the Attribution Source or Trigger URIs may still happen depending on the installed version of WebView, but any response is discarded and nothing will be stored on the device.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORCE_DARK_OFF</name>
            <comment>Disable force dark, irrespective of the force dark mode of the WebView parent. In this mode, WebView content will always be rendered as-is, regardless of whether native views are being automatically darkened.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DARK_STRATEGY_USER_AGENT_DARKENING_ONLY</name>
            <comment>In this mode WebView content will be darkened by a user agent and it will ignore the web page's dark theme if it exists. To avoid mixing two different darkening strategies, the prefers-color-scheme media query will evaluate to light.
Field implemented from webkit Compat package.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>igolub.android.webkit.modules.URLUtilModule</name>
        <shortname>URLUtil</shortname>
        <comment>This module contains only static methods and fields.</comment>
        <owner>process</owner>
        <method>
            <name>IsJavaScriptUrl</name>
            <comment>Returns True if the url is a javascript: url.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsAboutUrl</name>
            <comment>Returns True if the url is an about: url.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GuessFileName</name>
            <comment>Guesses canonical filename that a download would have, using the URL and contentDisposition. File extension, if not defined, is added based on the mimetype.
Url: to the content
ContentDisposition: Content-Disposition HTTP header or null
MimeType: Mime-type of the content or null</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ContentDisposition</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>MimeType</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsAssetUrl</name>
            <comment>Returns True if the url is an asset: file.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsFileUrl</name>
            <comment>Returns True if the url is an file: url.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsHttpsUrl</name>
            <comment>Returns True if the url is an https: url.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ComposeSearchUrl</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>InQuery</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Template</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>QueryPlaceHolder</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GuessUrl</name>
            <comment>Cleans up (if possible) user-entered web addresses</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>InUrl</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Decode</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>Url</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>IsHttpUrl</name>
            <comment>Returns True if the url is an http: url.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>StripAnchor</name>
            <comment>Strips the url of the anchor.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsValidUrl</name>
            <comment>Returns True if the url is valid.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsDataUrl</name>
            <comment>Returns True if the url is a data: url.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsContentUrl</name>
            <comment>Returns True if the url is a content: url.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsNetworkUrl</name>
            <comment>Returns True if the Url is a network url.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class b4a_type="StaticCode">
        <name>igolub.android.webkit.modules.UltimateWebViewClientModule</name>
        <shortname>UltimateWebViewClient</shortname>
        <comment>This module contains only static methods and fields.</comment>
        <objectwrapper>igolub.android.webkit.wrappers.MyWebViewClient</objectwrapper>
        <owner>process</owner>
        <field>
            <name>ERROR_IO</name>
            <comment>Failed to read or write to the server.
Constant Value: -7</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SAFE_BROWSING_THREAT_PHISHING</name>
            <comment>The resource was blocked because it contains deceptive content.
Constant Value: 2
Added in API level 27</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_AUTHENTICATION</name>
            <comment>User authentication failed on server.
Constant Value: -4</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_UNSUPPORTED_AUTH_SCHEME</name>
            <comment>Unsupported authentication scheme (not basic or digest).
Constant Value: -3</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_CONNECT</name>
            <comment>Failed to connect to the server.
Constant Value: -6</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SAFE_BROWSING_THREAT_UNWANTED_SOFTWARE</name>
            <comment>The resource was blocked because it contains unwanted software.
Constant Value: 3
Added in API level 27</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_BAD_URL</name>
            <comment>Malformed URL.
Constant Value: -12</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_PROXY_AUTHENTICATION</name>
            <comment>User authentication failed on proxy.
Constant Value: -5</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_TOO_MANY_REQUESTS</name>
            <comment>Too many requests during this load.
Constant Value: -15</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_TIMEOUT</name>
            <comment>Connection timed out.
Constant Value: -8</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_UNSAFE_RESOURCE</name>
            <comment>Resource load was canceled by Safe Browsing.
Constant Value: -16
Added in API level 26</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SAFE_BROWSING_THREAT_MALWARE</name>
            <comment>The resource was blocked because it contains malware.
Constant Value: 1
Added in API level 27</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_FAILED_SSL_HANDSHAKE</name>
            <comment>Failed to perform SSL handshake.
Constant Value: -11</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_FILE_NOT_FOUND</name>
            <comment>File not found.
Constant Value: -14</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_UNSUPPORTED_SCHEME</name>
            <comment>Unsupported URI scheme.
Constant Value: -10</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_HOST_LOOKUP</name>
            <comment>Server or proxy hostname lookup failed.
Constant Value: -2</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_REDIRECT_LOOP</name>
            <comment>Too many redirects.
Constant Value: -9</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SAFE_BROWSING_THREAT_UNKNOWN</name>
            <comment>The resource was blocked for an unknown reason.
Constant Value: 0
Added in API level 27</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_UNKNOWN</name>
            <comment>Generic error.
Constant Value: -1</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SAFE_BROWSING_THREAT_BILLING</name>
            <comment>The resource was blocked because it may trick the user into a billing agreement.
This constant is only used when targetSdkVersion is at least Build.VERSION_CODES.Q. Otherwise, SAFE_BROWSING_THREAT_UNKNOWN is used instead.
Constant Value: 4
Added in API level 29</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_FILE</name>
            <comment>Generic file error.
Constant Value: -13</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>igolub.android.webkit.modules.SslErrorModule</name>
        <shortname>SslError</shortname>
        <comment>This module contains only static methods and fields.</comment>
        <objectwrapper>android.net.http.SslError</objectwrapper>
        <owner>process</owner>
        <field>
            <name>SSL_UNTRUSTED</name>
            <comment>The certificate authority is not trusted.
Constant Value: 3</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_IDMISMATCH</name>
            <comment>Host name mismatch.
Constant Value: 2</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_DATE_INVALID</name>
            <comment>The date of the certificate is invalid
Constant Value: 4</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_INVALID</name>
            <comment>A generic error occurred.
Constant Value: 5</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_NOTYETVALID</name>
            <comment>The certificate is not yet valid.
Constant Value: 0</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_EXPIRED</name>
            <comment>The certificate has expired.
Constant Value: 1</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>igolub.android.webkit.modules.PermissionRequestModule</name>
        <shortname>PermissionRequest</shortname>
        <comment>This module contains only static methods and fields.</comment>
        <objectwrapper>android.webkit.PermissionRequest</objectwrapper>
        <owner>process</owner>
        <field>
            <name>RESOURCE_AUDIO_CAPTURE</name>
            <comment>Resource belongs to audio capture device, like microphone.
Constant Value: "android.webkit.resource.AUDIO_CAPTURE"
Added in API level 21</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>RESOURCE_PROTECTED_MEDIA_ID</name>
            <comment>Resource belongs to protected media identifier. After the user grants this resource, the origin can use EME APIs to generate the license requests.
Constant Value: "android.webkit.resource.PROTECTED_MEDIA_ID"
Added in API level 21</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>RESOURCE_VIDEO_CAPTURE</name>
            <comment>Resource belongs to video capture device, like camera.
Constant Value: "android.webkit.resource.VIDEO_CAPTURE"
Added in API level 21</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>RESOURCE_MIDI_SYSEX</name>
            <comment>Resource will allow sysex messages to be sent to or received from MIDI devices. These messages are privileged operations, e.g. modifying sound libraries and sampling data, or even updating the MIDI device's firmware. Permission may be requested for this resource in API levels 21 and above, if the Android device has been updated to WebView 45 or above.
Constant Value: "android.webkit.resource.MIDI_SYSEX"
Added in API level 23</comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>igolub.android.webkit.modules.MimeTypeMapModule</name>
        <shortname>MimeTypeMap</shortname>
        <comment>This module contains only static methods and fields.</comment>
        <owner>process</owner>
        <method>
            <name>GetMimeTypeFromExtension</name>
            <comment>Return the MIME type for the given extension.
Extension: A file extension without the leading '.'</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Extension</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetExtensionFromMimeType</name>
            <comment>Return the registered extension for the given MIME type. Note that some MIME types map to multiple extensions. This call will return the most common extension for the given MIME type.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>MimeType</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetFileExtensionFromUrl</name>
            <comment>Returns the file extension or an empty string if there is no extension. This method is a convenience method for obtaining the extension of a url and has undefined results for other Strings.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>HasMimeType</name>
            <comment>Return true if the given MIME type has an entry in the map.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>MimeType</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>HasExtension</name>
            <comment>Return True if the given extension has a registered MIME type.
Extension: A file extension without the leading '.'</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Extension</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class b4a_type="StaticCode">
        <name>igolub.android.webkit.modules.HitTestResultModule</name>
        <shortname>HitTestResult</shortname>
        <comment>This module contains only static methods and fields.</comment>
        <objectwrapper>android.webkit.WebView.HitTestResult</objectwrapper>
        <owner>process</owner>
        <field>
            <name>IMAGE_TYPE</name>
            <comment>HitTestResult for hitting an HTML::img tag.
Constant Value: 5</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>UNKNOWN_TYPE</name>
            <comment>Default HitTestResult, where the target is unknown.
Constant Value: 0</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMAGE_ANCHOR_TYPE</name>
            <comment>Constant Value: 6</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SRC_ANCHOR_TYPE</name>
            <comment>HitTestResult for hitting a HTML::a tag with src=http.
Constant Value: 7</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GEO_TYPE</name>
            <comment>HitTestResult for hitting a map address.
Constant Value: 3</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EDIT_TEXT_TYPE</name>
            <comment>HitTestResult for hitting an edit text area.
Constant Value: 9</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EMAIL_TYPE</name>
            <comment>HitTestResult for hitting an email address.
Constant Value: 4</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PHONE_TYPE</name>
            <comment>HitTestResult for hitting a phone number.
Constant Value: 2</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ANCHOR_TYPE</name>
            <comment>Constant Value: 1</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SRC_IMAGE_ANCHOR_TYPE</name>
            <comment>HitTestResult for hitting a HTML::a tag with src=http + HTML::img.
Constant Value: 8</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>igolub.android.webkit.modules.FileChooserParamsModule</name>
        <shortname>FileChooserParams</shortname>
        <comment>This module contains only static methods and fields.</comment>
        <objectwrapper>android.webkit.WebChromeClient.FileChooserParams</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ParseResult</name>
            <comment>Parse the result returned by the file picker activity.
ResultCode: the integer result code returned by the file picker activity.
Data: the intent returned by the file picker activity.
Returns the array of Uri's as Object of selected file(s) or null if the resultCode indicates activity cancelled or any other error.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>ResultCode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Data</name>
                <type>anywheresoftware.b4a.objects.IntentWrapper</type>
            </parameter>
        </method>
        <field>
            <name>MODE_SAVE</name>
            <comment>Allows picking a nonexistent file and saving it.
Added in API level 21</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MODE_OPEN_MULTIPLE</name>
            <comment>Like Open but allows multiple files to be selected.
Added in API level 21</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MODE_OPEN</name>
            <comment>Open single file. Requires that the file exists before allowing the user to pick it.
Added in API level 21</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>igolub.android.webkit.modules.ConsoleMessageModule</name>
        <shortname>ConsoleMessage</shortname>
        <comment>This module contains only static methods and fields.</comment>
        <objectwrapper>android.webkit.ConsoleMessage</objectwrapper>
        <owner>process</owner>
        <field>
            <name>MESSAGE_LEVEL_WARNING</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MESSAGE_LEVEL_LOG</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MESSAGE_LEVEL_DEBUG</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MESSAGE_LEVEL_ERROR</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
        <field>
            <name>MESSAGE_LEVEL_TIP</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <version>1.0</version>
    <author>Ivica Golubovic</author>
</root>
