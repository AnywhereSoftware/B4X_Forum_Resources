<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.tummosoft.B4A.TummoImageViewWrapper</name>
        <shortname>TUMMOImageView</shortname>
        <objectwrapper>com.tummosoft.control.xImageView</objectwrapper>
        <owner>activity</owner>
        <event>Click ()</event>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>clickEffect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetBackgroundImage">SetBackgroundImageNew</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.drawable.BitmapDrawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>PaddingImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bototm</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setTouchSelectModeEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BorderColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BorderWidth</name>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Oval</name>
            <parameter>
                <name>isOval</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Padding</name>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Selected</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>isSelected</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Circle</name>
            <parameter>
                <name>isCircle</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SelectedBorderColor</name>
            <parameter>
                <name>selectedBorderColor</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ImageURI</name>
            <parameter>
                <name>value</name>
                <type>android.net.Uri</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ImageDrawable</name>
            <parameter>
                <name>drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CornerRadius</name>
            <parameter>
                <name>radius</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SelectedBorderWidth</name>
            <parameter>
                <name>selectedBorderWidth</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ImageBitmap</name>
            <parameter>
                <name>bm</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <comment></comment>
        </property>
        <designerProperty>key:wBorder, displayname:Border Width, defaultvalue:0, fieldtype:int</designerProperty>
        <designerProperty>key:cBorderColor, displayname:Border Color, defaultvalue:Null, fieldtype:Color</designerProperty>
        <designerProperty>key:iRadius, displayname:Radius, defaultvalue:0, fieldtype:int</designerProperty>
    </class>
    <class>
        <name>com.tummosoft.layout.LayoutLoader</name>
        <comment>&lt;code&gt;LayoutLoader&lt;/code&gt; helps you load compiled layouts from any source.

 &lt;p&gt;
     The layout can be loaded from either an {@link InputStream} or raw bytes.
 &lt;/p&gt;

 &lt;p&gt;
     A typical application using {@link LayoutLoader} will have code similar to that given below:
 &lt;/p&gt;

 &lt;pre&gt;
 class MyApplication extends Application {
     private LayoutLoader layoutLoader;
     private LayoutCache layoutCache;

     protected void onCreate() {
         layoutLoader = new LayoutLoader().initialize();
         layoutCache = new LayoutCache();
     }

     public LayoutLoader getLayoutLoader() {
         return layoutLoader;
     }

     public LayoutCache getLayoutCache() {
         return layoutCache;
     }
 }

 class LayoutCache {
     private LruCache&amp;lt;String, byte[]&amp;gt; cache = new LruCache&amp;lt;&amp;gt;();
     private Map&amp;lt;String, Boolean&amp;gt; fetchedURLs = new HashMap&amp;lt;&amp;gt;();

     public void load(String url) {
         //load from network
         //validate signature
         //add to cache
         if(data != null) {
             cache.put(ur, data);
         }
         fetchedURLs.put(url, data != null);
     }

     public boolean shouldFetch(String url) {
         return !fetchedURLs.containsKey(url);
     }

     public boolean hasLayout(String url) {
         Boolean isDataValid = fetchedURLs.get(url);
         if(isDataValid == null) {
             return false;
         }
         return isDataValid;
     }

     public byte[] get(String url) {
         return cache.get(url);
     }
 }

 class SomeActivity extends Activity {
     protected void onCreate(Bundle savedInstanceState) {
         MyApplication app = (MyApplication) getApplicationContext();
         LayoutCache cache = app.getLayoutCache();
         String url = getFromSomeConfig(this); //load app config, a/b test config etc

         View root = null;
         if(cache.shouldFetch(url)) {
             cache.load(url);
         } else if(cache.hasLayout(url) {
             root = app.getLayoutLoader().load(cache.get(url), this, null, false);
         }

         //If the layout was loaded dynamically, great!
         // else, use the bundled layout.
         if(root != null) {
             setContentView(root);
         } else {
             setContentView(R.layout.activity_some);
         }
     }
 }

 &lt;/pre&gt;</comment>
        <owner>process</owner>
        <method>
            <name>load</name>
            <comment>Loads the template from the given {@link InputStream}.

 &lt;p&gt;
     It returns the {@link View} if it can be inflated, &lt;code&gt;null&lt;/code&gt; otherwise.
 &lt;/p&gt;

 &lt;p&gt;
     It internally uses {@link LayoutInflater#inflate(int, ViewGroup, boolean)}.
     All semantics of the corresponding method apply.
 &lt;/p&gt;
input: {@link InputStream} from where the contents of the compiled layout can be read
context: {@link Context} to load the resources from
root: Optional view to be the parent of the generated hierarchy (if
        &lt;em&gt;attachToRoot&lt;/em&gt; is true), or else simply an object that
        provides a set of LayoutParams values for root of the returned
        hierarchy (if &lt;em&gt;attachToRoot&lt;/em&gt; is false.)
attachToRoot: Whether the inflated hierarchy should be attached to
        the root parameter? If &lt;code&gt;false&lt;/code&gt;, root is only used to create the
        correct subclass of LayoutParams for the root view in the XML.
Return type: @return:The root View of the inflated hierarchy. If root was supplied and
         attachToRoot is true, this is root; otherwise it is the root of
         the inflated XML file.</comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>input</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>attachToRoot</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>cleanup</name>
            <comment>Clears up the internal state of the loader.

 &lt;p&gt;
     After the cleanup, the loader must be {@link #initialize()}d again before reuse.
 &lt;/p&gt;

 &lt;p&gt;
     The method is reentrant (can be called multiple times) and thread-safe.
 &lt;/p&gt;
Return type: @return:{@link LayoutLoader} instance for chaining.</comment>
            <returntype>com.tummosoft.layout.LayoutLoader</returntype>
        </method>
        <method>
            <name>initialize</name>
            <comment>Initializes the loader.

 &lt;p&gt;
     This method must be called before {@link #load(byte[], Context, ViewGroup, boolean)}
     or {@link #load(InputStream, Context, ViewGroup, boolean)} can be used.
 &lt;/p&gt;

 &lt;p&gt;
     The method is reentrant (can be called multiple times) and thread-safe.
 &lt;/p&gt;

 &lt;p&gt;
     This method has been provided for lazy initialization.
 &lt;/p&gt;
Return type: @return:{@link LayoutLoader} instance for chaining.</comment>
            <returntype>com.tummosoft.layout.LayoutLoader</returntype>
        </method>
        <method>
            <name>initializeImpl</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <field>
            <name>TAG</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>com.tummosoft.styles.StyleManager</name>
        <shortname>TUMMOStyleManager</shortname>
        <owner>process</owner>
        <method>
            <name>isIsRadiusAdjustBounds</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Radius</name>
            <returntype>int</returntype>
            <parameter>
                <name>mRadius</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RightBottomRadius</name>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RadiusTopRight</name>
            <returntype>int</returntype>
            <parameter>
                <name>mRadiusTopRight</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ColorBorder</name>
            <returntype>android.content.res.ColorStateList</returntype>
            <parameter>
                <name>colorBorder</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RadiusTopLeft</name>
            <returntype>int</returntype>
            <parameter>
                <name>mRadiusTopLeft</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LeftTopRadius</name>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>IsRadiusAdjustBounds</name>
            <parameter>
                <name>isRadiusAdjustBounds</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SelectedTextColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RadiusBottomLeft</name>
            <returntype>int</returntype>
            <parameter>
                <name>mRadiusBottomLeft</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BorderWidth</name>
            <returntype>int</returntype>
            <parameter>
                <name>borderWidth</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RadiusBottomRight</name>
            <returntype>int</returntype>
            <parameter>
                <name>mRadiusBottomRight</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>StrokeWidth</name>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ColorBg</name>
            <returntype>android.content.res.ColorStateList</returntype>
            <parameter>
                <name>colorBg</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>NormalTextColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RightTopRadius</name>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SelectedSolidColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.Utils.ColorsHelper</name>
        <shortname>ColorsHelper</shortname>
        <owner>process</owner>
        <method>
            <name>computeColor</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>fromColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>toColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fraction</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>colorToString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ColorStringToINT</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>hexcolor</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>darker</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setColorAlpha</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isColorDark</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>lighter</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <property>
            <name>RandomColor</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.Utils.ResourcesHelper</name>
        <shortname>ResourcesHelper</shortname>
        <owner>process</owner>
        <method>
            <name>getDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getColorStateListAttrRes</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
            <parameter>
                <name>typedArray</name>
                <type>android.content.res.TypedArray</type>
            </parameter>
            <parameter>
                <name>styleableResId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDimensionPixelOffset</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getColor</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDimens</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getColors</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getResourceId</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>pVariableName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pResourcename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getDrawableAttrRes</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>typedArray</name>
                <type>android.content.res.TypedArray</type>
            </parameter>
            <parameter>
                <name>styleableResId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getVectorDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getStringArray</name>
            <comment></comment>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getAnim</name>
            <comment></comment>
            <returntype>android.view.animation.Animation</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>getDimensionPixelSize</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getStringList</name>
            <comment></comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getIntArray</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDrawableArray</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable[]</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.vector.AndroidVector</name>
        <owner>process</owner>
        <property>
            <name>ViewportWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>_viewportWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ViewportHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>_viewportHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PathData</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>_pathData</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>_height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>_width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SelectedSolidColor</name>
            <returntype>float</returntype>
            <parameter>
                <name>_width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.vector.DrawableHelper</name>
        <shortname>DrawableHelper</shortname>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>ViewportWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>_viewportWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ViewportHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>_viewportHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Drawable</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>_height</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>StrokeColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>_width</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.vector.VectorDrawableCreator</name>
        <owner>process</owner>
        <method>
            <name>getVectorDrawable</name>
            <comment>Create a vector drawable from a list of paths and colors
width: drawable width
height: drawable height
viewportWidth: vector image width
viewportHeight: vector image height
paths: list of path data and colors
Return type: @return:the vector drawable or null it couldn't be created.</comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>viewportWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>viewportHeight</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>paths</name>
                <type>java.util.List</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.vector.VectorDrawableCreator.PathData</name>
        <owner>process</owner>
        <field>
            <name>data</name>
            <comment></comment>
            <returntype>byte[]</returntype>
        </field>
        <field>
            <name>color</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.tummosoft.vector.VectorXMLParser</name>
        <owner>process</owner>
        <method>
            <name>endPrefixMapping</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>startElement</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>localName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>qName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>attributes</name>
                <type>org.xml.sax.Attributes</type>
            </parameter>
        </method>
        <method>
            <name>fatalError</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>org.xml.sax.SAXParseException</type>
            </parameter>
        </method>
        <method>
            <name>resolveEntity</name>
            <comment></comment>
            <returntype>org.xml.sax.InputSource</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>error</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>org.xml.sax.SAXParseException</type>
            </parameter>
        </method>
        <method>
            <name>startDocument</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>endDocument</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notationDecl</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>characters</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ch</name>
                <type>char[]</type>
            </parameter>
            <parameter>
                <name>start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>endElement</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>localName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>qName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>startPrefixMapping</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>skippedEntity</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>unparsedEntityDecl</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>warning</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>org.xml.sax.SAXParseException</type>
            </parameter>
        </method>
        <method>
            <name>ignorableWhitespace</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>char[]</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>processingInstruction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>VectorPath</name>
            <returntype>java.util.List</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DocumentLocator</name>
            <parameter>
                <name>arg0</name>
                <type>org.xml.sax.Locator</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <version>1.02</version>
</root>
