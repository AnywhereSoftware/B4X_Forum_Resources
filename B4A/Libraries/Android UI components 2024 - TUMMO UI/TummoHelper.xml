<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.tummosoft.android.utils.AnimationHelper</name>
        <shortname>AnimationHelper</shortname>
        <owner>process</owner>
        <event>applyTransformation(interpolatedTime as float, t as Transformation)</event>
        <event>onAnimationUpdate(angle as float),onAnimationStart(),onAnimationEnd(),onAnimationRepeat(),onAnimationCancel(),startTransition(view as Object),endTransition(view as Object)</event>
        <method>
            <name>cancel</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getTransformation</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.animation.Transformation</type>
            </parameter>
        </method>
        <method>
            <name>restrictDuration</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>startAccelerateDecelerateInterpolator</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>effects</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>startAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>endAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>RepeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>RepeatCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>hasStarted</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>applyTransformation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>interpolatedTime</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>t</name>
                <type>android.view.animation.Transformation</type>
            </parameter>
        </method>
        <method>
            <name>startExpansion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>TranslationY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>CreateObjectAnimator</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>view</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>PropertyName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>getAnimatedStateListDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.AnimatedStateListDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startFyling</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>LayoutAnimator_initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>linearLayoutContainer</name>
                <type>android.widget.LinearLayout</type>
            </parameter>
        </method>
        <method>
            <name>LayoutAnimator_initialize4</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>layout</name>
                <type>android.widget.GridView</type>
            </parameter>
        </method>
        <method>
            <name>GetAnimationDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>LayoutAnimator_initialize5</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>layout</name>
                <type>androidx.constraintlayout.widget.ConstraintLayout</type>
            </parameter>
        </method>
        <method>
            <name>LayoutAnimator_initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>layout</name>
                <type>android.widget.TableLayout</type>
            </parameter>
        </method>
        <method>
            <name>LayoutAnimator_initialize3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>layout</name>
                <type>android.widget.RelativeLayout</type>
            </parameter>
        </method>
        <method>
            <name>ValueAnimatorOfInt</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>values</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>slideIn</name>
            <comment></comment>
            <returntype>android.view.animation.TranslateAnimation</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>RepeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>RepeatCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startAccelerateInterpolator</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>effects</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>startAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>endAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>RepeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>RepeatCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startAnticipateOvershootInterpolator</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>effects</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>startAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>endAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>RepeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>RepeatCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AnimationSet_Start</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>AnimatorSet_Start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isPlaying</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>LayoutAnimatorIn</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ObjAnimIn</name>
                <type>android.animation.ObjectAnimator</type>
            </parameter>
            <parameter>
                <name>TransitionMethod</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getDrawableAnimation</name>
            <comment></comment>
            <returntype>android.graphics.drawable.AnimationDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ensureInterpolator</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AnimationSet_addAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>item</name>
                <type>android.view.animation.Animation</type>
            </parameter>
        </method>
        <method>
            <name>AnimatorSet_addAnimator</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>items</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>AnimationDrawable_addFrame</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>frame</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setRotation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>degree</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hasEnded</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>AnimationDrawable_initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>oneShot</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>computeDurationHint</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>LayoutAnimatorOut</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ObjAnimOut</name>
                <type>android.animation.ObjectAnimator</type>
            </parameter>
            <parameter>
                <name>TransitionMethod</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>reset</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>startDecelerateInterpolator</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>effects</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>startAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>endAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>RepeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>RepeatCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CreateObjectAnimatorOfFloat</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>propertyName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>scaleCurrentDuration</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>willChangeTransformationMatrix</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>startTranslateAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>deltaX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>deltaY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>keepPosition</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>RepeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>RepeatCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AnimatorSet_initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>startCollapse</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>TranslationY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>AnimationDrawable_Start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AnimationDrawable_Stop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>CreateTranslateAnimation</name>
            <comment></comment>
            <returntype>android.view.animation.TranslateAnimation</returntype>
            <parameter>
                <name>position</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>Polator</name>
                <type>android.view.animation.Interpolator</type>
            </parameter>
            <parameter>
                <name>FillAfter</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>CreateScaleAnimation</name>
            <comment></comment>
            <returntype>android.view.animation.ScaleAnimation</returntype>
            <parameter>
                <name>position</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>centerX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>centerY</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>Polator</name>
                <type>com.tummosoft.android.utils.xInterpolator</type>
            </parameter>
            <parameter>
                <name>FillAfter</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SimpleSlide</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>animID</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CreateRotateAnimation</name>
            <comment></comment>
            <returntype>android.view.animation.RotateAnimation</returntype>
            <parameter>
                <name>degress</name>
                <type>com.tummosoft.android.utils.xDegrees</type>
            </parameter>
            <parameter>
                <name>Polator</name>
                <type>com.tummosoft.android.utils.xInterpolator</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>FillAfter</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>repeatCount</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>repeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>FillBefore</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>CreateObjectAnimatorOfInt</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>propertyName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>willChangeBounds</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>AnimationSet_Reset</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>startFlip</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>rolation</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>RepeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>RepeatCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>stopRotate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AnimationSet_initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>startCycleInterpolator</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>effects</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>startAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>endAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>RepeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>RepeatCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setInterpolator</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AnimationFromResID</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewObject</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>resourceID</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>startNow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>resolveSize</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startAnticipateInterpolator</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>effects</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>startAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>endAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>RepeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>RepeatCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isFillEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ValueAnimatorOfInt_Start</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>restart</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>repeatCount</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startBounceInterpolator</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>effects</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>startAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>endAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>RepeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>RepeatCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>slideOut</name>
            <comment></comment>
            <returntype>android.view.animation.TranslateAnimation</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>android.view.animation.Animation</returntype>
        </method>
        <method>
            <name>CreateAlphaAnimation</name>
            <comment></comment>
            <returntype>android.view.animation.AlphaAnimation</returntype>
            <parameter>
                <name>fromAlpha</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>toAlpha</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>Polator</name>
                <type>com.tummosoft.android.utils.xInterpolator</type>
            </parameter>
            <parameter>
                <name>FillAfter</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>repeatCount</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>repeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>FillBefore</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getAnim</name>
            <comment></comment>
            <returntype>android.view.animation.Animation</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startLinearInterpolator</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>effects</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>startAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>endAt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>RepeatMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>RepeatCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetAnimationEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>_event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>anim</name>
                <type>com.tummosoft.android.utils.AnimationHelper</type>
            </parameter>
            <parameter>
                <name>Duration</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>FillAfter</name>
                <type>boolean</type>
            </parameter>
        </method>
        <property>
            <name>RepeatCount</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Degree</name>
            <parameter>
                <name>degree</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>StartOffset</name>
            <returntype>long</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ShowBackdrop</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillBefore</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>StartTime</name>
            <returntype>long</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>long</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillEnabled</name>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RepeatMode</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ZAdjustment</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DetachWallpaper</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Interpolator</name>
            <returntype>android.view.animation.Interpolator</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Interpolator</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillAfter</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AnimationListener</name>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation.AnimationListener</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleFactor</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BackgroundColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackdropColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ANIMATION_INFINITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RELATIVE_TO_PARENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MODE_RESTART</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ANIMATION_REVERSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ANIMATION_ABSOLUTE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ZORDER_TOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INFINITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>START_ON_FIRST_FRAME</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ABSOLUTE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ZORDER_NORMAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MODE_INFINITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MODE_DURATION_INFINITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ANIMATION_RELATIVE_TO_SELF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MODE_REVERSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RESTART</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ANIMATION_RELATIVE_TO_PARENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>REVERSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ANIMATION_RESTART</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ZORDER_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RELATIVE_TO_SELF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.tummosoft.android.utils.BitmapHelper</name>
        <shortname>BitmapHelper</shortname>
        <owner>process</owner>
        <method>
            <name>rotate</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>degrees</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>px</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>py</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>renderScriptBlur</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>baContext</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toAlpha2</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>scale</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>scaleWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleHeight</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>toGray</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>compressByQuality</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>maxByteSize</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>fastBlur</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>toRoundCorner</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>compressByQuality1</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>maxByteSize</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>toRoundCorner2</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addFrame2</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>borderWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>compressByQuality3</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>quality</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>compressByQuality2</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>quality</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>compressBySampleSize1</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>sampleSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>toAlpha</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>java.lang.Boolean</type>
            </parameter>
        </method>
        <method>
            <name>compressByScale3</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>newWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>newHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>drawable2Bitmap</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>compressByScale1</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>scaleWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleHeight</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>compressBySampleSize</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>sampleSize</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>toRound2</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>compressByScale2</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>newWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>newHeight</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>compressByScale</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>scaleWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleHeight</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>fastBlur2</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toRound</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>bytes2Bitmap</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>addReflection</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>reflectionHeight</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>toGray2</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>skew2</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>kx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ky</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>skew3</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>kx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ky</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>px</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>py</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>OpenImage</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addReflection2</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>reflectionHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getBitmap</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rotate2</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>degrees</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>px</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>py</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addFrame</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>borderWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>stackBlur</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>bitmap2Bytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type EnumType="true">android.graphics.Bitmap.CompressFormat</type>
            </parameter>
        </method>
        <method>
            <name>clip</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>skew</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>src</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>kx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ky</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>px</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>py</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>recycle</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.android.utils.CameraHelper</name>
        <shortname>CameraHelper</shortname>
        <objectwrapper>android.graphics.Camera</objectwrapper>
        <owner>process</owner>
        <method>
            <name>rotate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>restoreZ</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>restore</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>restoreY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>restoreX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getMatrix</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>android.graphics.Matrix</type>
            </parameter>
        </method>
        <method>
            <name>Save</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>rotateX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>rotateY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>rotateZ</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>LocationY</name>
            <returntype>void</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocationZ</name>
            <returntype>void</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocationX</name>
            <returntype>void</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.android.utils.CardFlipAnimation</name>
        <owner>process</owner>
        <method>
            <name>cancel</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getTransformation</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.animation.Transformation</type>
            </parameter>
        </method>
        <method>
            <name>setInterpolator</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>restrictDuration</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>isInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>startNow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasStarted</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>resolveSize</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ensureInterpolator</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>applyTransformation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>interpolatedTime</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>t</name>
                <type>android.view.animation.Transformation</type>
            </parameter>
        </method>
        <method>
            <name>isFillEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>hasEnded</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>android.view.animation.Animation</returntype>
        </method>
        <method>
            <name>computeDurationHint</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>reset</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>scaleCurrentDuration</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>willChangeTransformationMatrix</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>willChangeBounds</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>RepeatCount</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>StartOffset</name>
            <returntype>long</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ShowBackdrop</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillBefore</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>StartTime</name>
            <returntype>long</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>long</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillEnabled</name>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RepeatMode</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ZAdjustment</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DetachWallpaper</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Interpolator</name>
            <returntype>android.view.animation.Interpolator</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Interpolator</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillAfter</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AnimationListener</name>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation.AnimationListener</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleFactor</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BackgroundColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackdropColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ABSOLUTE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ZORDER_NORMAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RELATIVE_TO_PARENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RESTART</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>REVERSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INFINITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ZORDER_TOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>START_ON_FIRST_FRAME</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RELATIVE_TO_SELF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ZORDER_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.tummosoft.android.utils.ColorsHelper</name>
        <shortname>ColorsHelper</shortname>
        <owner>process</owner>
        <method>
            <name>computeColor</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>fromColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>toColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fraction</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>colorToString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ColorStringToINT</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>hexcolor</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>darker</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setColorAlpha</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>textSelector</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
            <parameter>
                <name>normalColor</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pressedColor</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isColorDark</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>lighter</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <property>
            <name>RandomColor</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.android.utils.DrawableHelper</name>
        <shortname>DrawableHelper</shortname>
        <owner>process</owner>
        <method>
            <name>getLayerDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.LayerDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTransitionDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.TransitionDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getClipDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.ClipDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getInsetDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.InsetDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getNinePatchDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.NinePatchDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getStateListDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.StateListDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Bitmap2Drawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getColorStateListAttrRes</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
            <parameter>
                <name>typedArray</name>
                <type>android.content.res.TypedArray</type>
            </parameter>
            <parameter>
                <name>styleableResId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRippleDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.RippleDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDrawableAttrRes</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>typedArray</name>
                <type>android.content.res.TypedArray</type>
            </parameter>
            <parameter>
                <name>styleableResId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getVectorDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.VectorDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>createRectangleDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.GradientDrawable</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>cornerRadius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>createOvalDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.GradientDrawable</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getScaleDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.ScaleDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getLevelListDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.LevelListDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRotateDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.RotateDrawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.android.utils.GestureHelper</name>
        <shortname>GestureHelper</shortname>
        <owner>process</owner>
        <event>onTouch(Action As Int, X As Float, Y As Float, MotionEvent As Object) As Boolean</event>
        <event>onPointerDown(ptrIndex As Int, PID As Int, MotionEvent As Object)</event>
        <event>onPointerUp(ptrIndex As Int, PID As Int, MotionEvent As Object)</event>
        <event>onDown(X As Float, Y As Float, MotionEvent As Object)</event>
        <event>onSingleTapUp(X As Float, Y As Float, MotionEvent As Object)</event>
        <event>onSingleTapConfirmed(X As Float, Y As Float, MotionEvent As Object)</event>
        <event>onDoubleTap(X As Float, Y As Float, MotionEvent As Object)</event>
        <event>onShowPress(X As Float, Y As Float, MotionEvent As Object)</event>
        <event>onLongPress(X As Float, Y As Float, MotionEvent As Object)</event>
        <event>onDrag(deltaX As Float, deltaY As Float, MotionEvent As Object)</event>
        <event>onScroll(distanceX As Float, distanceY As Float, MotionEvent1 As Object, MotionEvent2 As Object)</event>
        <event>onFling(velocityX As Float, velocityY As Float, MotionEvent1 As Object, MotionEvent2 As Object)</event>
        <event>onPinchOpen(NewDistance As Float, PreviousDistance As Float, MotionEvent As Object)</event>
        <event>onPinchClose(NewDistance As Float, PreviousDistance As Float, MotionEvent As Object)</event>
        <event>onRotation(Degrees As Double, MotionEvent As Object)</event>
        <method>
            <name>getTouchMinor</name>
            <comment>Returns the length of the minor axis of an ellipse that describes the touch area at the point of contact for the given pointer index.
minSDK = 9</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>ptrIndex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getXPrecision</name>
            <comment>Returns the precision of the X coordinates being reported. You can multiply this number with getX to find the actual hardware value of the X coordinate.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>EnableLongPress</name>
            <comment>Sets whether longpress is enabled. If this is enabled, when a user presses and holds down, you get a longpress event and nothing further. If it's disabled, the user can press and hold down and then later move their finger and you will get scroll events. By default longpress is enabled.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IgnoreHeightForPinch</name>
            <comment>Sets whether the height is ignored when the distance is computed to detect a pinch gesture.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Ignored</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IgnoreWidthForPinch</name>
            <comment>Sets whether the width is ignored when the distance is computed to detect a pinch gesture.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Ignored</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getAction</name>
            <comment>Returns the Action value from the given MotionEvent.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>CreateMotionEvent</name>
            <comment>Creates a MotionEvent to be used with PassTouchEventTo.
downTime: The time (in ms) when the user originally pressed down to start a stream of position events.
eventTime: The time (in ms) when this specific event was generated.
Action: The kind of action being performed. One of the ACTION constants.
X: The X coordinate of this event.
Y: The Y coordinate of this event.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>downTime</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>eventTime</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>Action</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getPointerCount</name>
            <comment>Returns the number of pointers contained in the given event.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getHistorySize</name>
            <comment>Returns the number of historical points in the given event. These are movements that have occurred between this event and the previous event.
This only applies to ACTION_MOVE events. All other actions will have a size of 0.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getHistoricalX</name>
            <comment>Returns a historical X coordinate that occurred between this event and the previous event for the given pointer.
Only applies to ACTION_MOVE events.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>ptrIndex</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pos</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getHistoricalPressure</name>
            <comment>Returns a historical pressure coordinate that occurred between this event and the previous event for the given pointer.
Only applies to ACTION_MOVE events.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>ptrIndex</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pos</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getHistoricalY</name>
            <comment>Returns a historical Y coordinate that occurred between this event and the previous event for the given pointer.
Only applies to ACTION_MOVE events.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>ptrIndex</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pos</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPointerIndex</name>
            <comment>Returns the pointer index for the given PID
The PID (Pointer ID) is the pointer unique identifier sent back by the onPointerUp/Down functions.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>PID</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getSize</name>
            <comment>Returns the Size value from the given MotionEvent.
Set ptrIndex to 0 for the first pointer, to 1 for the second pointer, and so on.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>ptrIndex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getX</name>
            <comment>Returns the X value from the given MotionEvent.
Set ptrIndex to 0 for the first pointer, to 1 for the second pointer, and so on.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>ptrIndex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPressure</name>
            <comment>Returns the Pressure value from the given MotionEvent.
Set ptrIndex to 0 for the first pointer, to 1 for the second pointer, and so on.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>ptrIndex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getY</name>
            <comment>Returns the Y value from the given MotionEvent.
Set ptrIndex to 0 for the first pointer, to 1 for the second pointer, and so on.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>ptrIndex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getHistoricalSize</name>
            <comment>Returns a historical size coordinate that occurred between this event and the previous event for the given pointer.
Only applies to ACTION_MOVE events.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>ptrIndex</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pos</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetOnGestureListener</name>
            <comment>Sets the listeners for the following events:
&lt;U&gt;onTouch&lt;/U&gt;: notified whenever a MotionEvent occurs.
  Handler: Sub MyView_onTouch(Action As Int, X As Float, Y As Float, MotionEvent As Object) As Boolean
&lt;U&gt;onPointerDown&lt;/U&gt;: notified when a non-primary pointer has gone down.
  Handler: Sub MyView_onPointerDown(ptrIndex As Int, PID As Int, MotionEvent As Object)
&lt;U&gt;onPointerUp&lt;/U&gt;: notified when a non-primary pointer has gone up.
  Handler: Sub MyView_onPointerUp(ptrIndex As Int, PID As Int, MotionEvent As Object)
&lt;U&gt;onDown&lt;/U&gt;: notified when a tap occurs with the down MotionEvent that triggered it. This will be triggered immediately for every down event. All other events should be preceded by this.
  Handler: Sub MyView_onDown(X As Float, Y As Float, MotionEvent As Object)
&lt;U&gt;onSingleTapUp&lt;/U&gt;: notified when a tap occurs with the up MotionEvent that triggered it.
  Handler: Sub MyView_onSingleTapUp(X As Float, Y As Float, MotionEvent As Object)
&lt;U&gt;onSingleTapConfirmed&lt;/U&gt;: notified when a single-tap occurs. Unlike onSingleTapUp, this will only be called after the detector is confident that the user's first tap is not followed by a second tap leading to a double-tap gesture.
  Handler: Sub MyView_onSingleTapConfirmed(X As Float, Y As Float, MotionEvent As Object)
&lt;U&gt;onDoubleTap&lt;/U&gt;: notified when a double-tap occurs.
  Handler: Sub MyView_onDoubleTap(X As Float, Y As Float, MotionEvent As Object)
&lt;U&gt;onShowPress&lt;/U&gt;: the user has performed a down MotionEvent and not performed a move or up yet. This event is commonly used to provide visual feedback to the user to let them know that their action has been recognized i.e. highlight an element.
  Handler: Sub MyView_onShowPress(X As Float, Y As Float, MotionEvent As Object)
&lt;U&gt;onLongPress&lt;/U&gt;: notified when a long press occurs with the initial on down MotionEvent that triggered it.
  Handler: Sub MyView_onLongPress(X As Float, Y As Float, MotionEvent As Object)
&lt;U&gt;onDrag&lt;/U&gt;: notified when a drag occurs with the move MotionEvent that triggered it. To move the dragged view, add deltaX to its Left and deltaY to its Top.
  Handler: Sub MyView_onDrag(deltaX As Float, deltaY As Float, MotionEvent As Object)
&lt;U&gt;onScroll&lt;/U&gt;: notified when a scroll occurs with the initial on down MotionEvent and the current move MotionEvent. The distance in x and y is also supplied.
  Handler: Sub MyView_onScroll(distanceX As Float, distanceY As Float, MotionEvent1 As Object, MotionEvent2 As Object)
&lt;U&gt;onFling&lt;/U&gt;: notified when a fling occurs with the initial on down MotionEvent and the matching up MotionEvent. The calculated velocity is supplied along the x and y axis in pixels per second.
  Handler: Sub MyView_onFling(velocityX As Float, velocityY As Float, MotionEvent1 As Object, MotionEvent2 As Object)
&lt;U&gt;onPinchOpen&lt;/U&gt;: notified when the distance increases between two pointers.
  Handler: Sub MyView_onPinchOpen(NewDistance As Float, PreviousDistance As Float, MotionEvent As Object)
&lt;U&gt;onPinchClose&lt;/U&gt;: notified when the distance decreases between two pointers.
  Handler: Sub MyView_onPinchClose(NewDistance As Float, PreviousDistance As Float, MotionEvent As Object)
&lt;U&gt;onRotation&lt;/U&gt;: notified when the angle varies between two pointers. The returned angle ranges from -180 to +180 degrees.
  Handler: Sub MyView_onRotation(Degrees As Double, MotionEvent As Object)</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>eventPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getTouchMajor</name>
            <comment>Returns the length of the major axis of an ellipse that describes the touch area at the point of contact for the given pointer index.
minSDK = 9</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>ptrIndex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getYPrecision</name>
            <comment>Returns the precision of the Y coordinates being reported. You can multiply this number with getY to find the actual hardware value of the Y coordinate.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>RemoveGestureListener</name>
            <comment>Removes all gesture listeners for the currently bound view.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getPID</name>
            <comment>Returns the PID for the given pointer index.
0 is the first pointer index.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>ptrIndex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>PassTouchEventTo</name>
            <comment>Passes the given motion event down to the target view.
Returns True if the event was handled by the view, False otherwise.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ev</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>Target</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <field>
            <name>ACTION_MOVE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACTION_CANCEL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACTION_DOWN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACTION_UP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.tummosoft.android.utils.GradientHelper</name>
        <shortname>GradientHelper</shortname>
        <objectwrapper>android.graphics.drawable.GradientDrawable</objectwrapper>
        <owner>process</owner>
        <method>
            <name>setGradientCenter</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>gradientType</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setStroke</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>strokeWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>strokeColor</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Radius</name>
            <parameter>
                <name>radius</name>
                <type>float[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Colors</name>
            <parameter>
                <name>arrayColors</name>
                <type>java.lang.String[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>android.graphics.drawable.GradientDrawable</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Alpha</name>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Orientation</name>
            <parameter>
                <name>orient</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>Orientation_TR_BL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_RECTANGLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_LINEAR_GRADIENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_RADIAL_GRADIENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Orientation_TOP_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Orientation_BOTTOM_TOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Orientation_TL_BR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_LINE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_SWEEP_GRADIENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Orientation_BR_TL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_RING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_OVAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Orientation_BL_TR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Orientation_RIGHT_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Orientation_LEFT_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.tummosoft.android.utils.GradientHelper.xLayerDrawable</name>
        <shortname>xLayerDrawable</shortname>
        <objectwrapper>android.graphics.drawable.LayerDrawable</objectwrapper>
        <owner>process</owner>
        <method>
            <name>setDrawableByLayerId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getLayerInseWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLayerInsetLeft</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>padding</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>layers</name>
                <type>android.graphics.drawable.Drawable[]</type>
            </parameter>
        </method>
        <method>
            <name>setLayerSize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLayerGravity</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Gravity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLayerInseRight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.android.utils.LayoutHelper</name>
        <shortname>LayoutHelper</shortname>
        <owner>process</owner>
        <method>
            <name>CustomLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddConstraintLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>root</name>
                <type>androidx.constraintlayout.widget.ConstraintLayout</type>
            </parameter>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.android.utils.NotificationHelper</name>
        <shortname>NotificationHelper</shortname>
        <objectwrapper>java.lang.Object</objectwrapper>
        <owner>process</owner>
        <permission>android.permission.VIBRATE</permission>
        <permission>android.permission.POST_NOTIFICATIONS</permission>
        <method>
            <name DesignerName="SetInfo2">SetInfo2New</name>
            <comment>Similar to SetInfo. Also sets a string that can be later extracted in
 Activity_Resume. Title - The message title. Body - The message body. Tag
 - An arbitrary string that can be later extract when the user clicks on
 the notification. Activity - The activity to start when the user presses
 on the notification. Pass an empty string to start the current activity
 (when calling from an activity module). Example of extracting the tag:&lt;code&gt;
Sub Activity_Resume
	Dim in As Intent
	in = Activity.GetStartingIntent
	If in.HasExtra("Notification_Tag") Then
		Log(in.GetExtra("Notification_Tag")) 'Will log the tag
	End If
End Sub&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Title</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>Body</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>Tag</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>Activity</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Notify</name>
            <comment>Displays the notification. Id - The notification id. This id can be used
 to later update this notification (by calling Notify again with the same
 Id), or to cancel the notification.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Id</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Cancel</name>
            <comment>Cancels the notification with the given Id.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Id</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>openNotifyPermissionSetting</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>NotificationChannel</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>chanelID</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>importance</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetInfo">SetInfoNew</name>
            <comment>Sets the message text and action. Title - The message title. Body - The
 message body. Activity - The activity to start when the user presses on
 the notification. Pass an empty string to start the current activity
 (when calling from an activity module).      Example:&lt;code&gt;
n.SetInfo("Some title", "Some text", Main)&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Title</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>Body</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>Activity</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>showDownloadNotification</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>iconRes</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>title</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>content</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>progress</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>remoteViews</name>
                <type>com.tummosoft.android.utils.xRemoteView</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Initializes the notification and sets the notification channel importance
 level. Note that the importance level only affect Android 8+ devices.      &lt;code&gt;
Dim no As Notification
no.Initialize2(no.IMPORTANCE_DEFAULT)&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>ImportanceLevel</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetInfo3New">SetInfo3New</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Title</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>Body</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>Tag</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>Activity</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>remoteViews</name>
                <type>com.tummosoft.android.utils.xRemoteView</type>
            </parameter>
        </method>
        <method>
            <name>enableLights</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
        </method>
        <property>
            <name>Insistent</name>
            <parameter>
                <name>v</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the sound will play repeatedly until the user opens the
 notifications screen.</comment>
        </property>
        <property>
            <name>Sound</name>
            <parameter>
                <name>v</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the notification will play a sound.      Example:&lt;code&gt;
n.Sound = False&lt;/code&gt;</comment>
        </property>
        <property>
            <name>AutoCancel</name>
            <parameter>
                <name>v</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the notification will be canceled automatically when the
 user clicks on it.</comment>
        </property>
        <property>
            <name>BypassDnd</name>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OnGoingEvent</name>
            <parameter>
                <name>v</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether this notification is an "ongoing event". The notification
 will be displayed in the ongoing section and it will not be cleared.</comment>
        </property>
        <property>
            <name>Vibrate</name>
            <parameter>
                <name>v</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the notification will vibrate.      Example:&lt;code&gt;
n.Vibrate = False&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Number</name>
            <returntype>int</returntype>
            <parameter>
                <name>v</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets a number that will be displayed on the icon. This is useful
 to represent multiple events in a single notification.</comment>
        </property>
        <property>
            <name>ChannelDescription</name>
            <parameter>
                <name>description</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Light</name>
            <parameter>
                <name>v</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the notification will show a light.      Example:&lt;code&gt;
n.Light = False&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Icon</name>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Sets the icon displayed. The icon value is the name of the image file
 without the extension. &lt;b&gt;The name is case sensitive. The image file
 should be manually copied to the following folder: source
 folder\Objects\res\drawable.&lt;/b&gt;
 You can use "icon" to use the application icon (which is also located in
 this folder):&lt;code&gt;
n.Icon = "icon"&lt;/code&gt;</comment>
        </property>
        <property>
            <name>LightColor</name>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>IMPORTANCE_HIGH</name>
            <comment>Higher notification importance: shows everywhere, makes noise and peeks.
 May use full screen intents.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANCE_LOW</name>
            <comment>Low notification importance: shows everywhere, but is not intrusive.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANCE_DEFAULT</name>
            <comment>Default notification importance: shows everywhere, makes noise, but does
 not visually intrude.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANCE_MIN</name>
            <comment>Minimum notification importance: only shows in the shade, below the fold.
 Cannot be used with foreground services.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.tummosoft.android.utils.ResourcesHelper</name>
        <shortname>ResourcesHelper</shortname>
        <owner>process</owner>
        <method>
            <name>pxToSp</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>px</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>OpenString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getBottomNavigationView</name>
            <comment></comment>
            <returntype>com.google.android.material.bottomnavigation.BottomNavigationView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getNavigationView</name>
            <comment></comment>
            <returntype>com.google.android.material.navigation.NavigationView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getSurfaceView</name>
            <comment></comment>
            <returntype>android.view.SurfaceView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getTabHost</name>
            <comment></comment>
            <returntype>android.widget.TabHost</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getSearchView</name>
            <comment></comment>
            <returntype>androidx.appcompat.widget.SearchView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getSeekBar</name>
            <comment></comment>
            <returntype>android.widget.SeekBar</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getCardView</name>
            <comment></comment>
            <returntype>android.support.v7.widget.CardView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getCalendarView</name>
            <comment></comment>
            <returntype>android.widget.CalendarView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getEditText</name>
            <comment></comment>
            <returntype>android.widget.EditText</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getTextInputLayout</name>
            <comment></comment>
            <returntype>com.google.android.material.textfield.TextInputLayout</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>BAevent</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getTextureView</name>
            <comment></comment>
            <returntype>android.view.TextureView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getTextClock</name>
            <comment></comment>
            <returntype>android.widget.TextClock</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getSpinner</name>
            <comment></comment>
            <returntype>android.widget.Spinner</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getColors</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getResourceId</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>pVariableName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pResourcename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ConvertToDP</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getProgressBar</name>
            <comment></comment>
            <returntype>android.widget.ProgressBar</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getSwitch</name>
            <comment></comment>
            <returntype>android.widget.Switch</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFont</name>
            <comment></comment>
            <returntype>android.graphics.Typeface</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getStringArray</name>
            <comment></comment>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getImageButton</name>
            <comment></comment>
            <returntype>android.widget.ImageButton</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getStringList</name>
            <comment></comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getHorizontalScrollView</name>
            <comment></comment>
            <returntype>android.widget.HorizontalScrollView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getScrollView</name>
            <comment></comment>
            <returntype>android.widget.ScrollView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getChip</name>
            <comment></comment>
            <returntype>com.google.android.material.chip.Chip</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getDimensionPixelOffset</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getViewStub</name>
            <comment></comment>
            <returntype>android.view.ViewStub</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getListView</name>
            <comment></comment>
            <returntype>android.widget.ListView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getButton</name>
            <comment></comment>
            <returntype>android.widget.Button</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getChipGroup</name>
            <comment></comment>
            <returntype>com.google.android.material.chip.ChipGroup</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>findFont</name>
            <comment></comment>
            <returntype>android.graphics.Typeface</returntype>
            <parameter>
                <name>fontPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>defaultFontPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getToggleButton</name>
            <comment></comment>
            <returntype>android.widget.ToggleButton</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getDimensionPixelSize</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getAutoCompleteTextView</name>
            <comment></comment>
            <returntype>android.widget.AutoCompleteTextView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getTextView</name>
            <comment></comment>
            <returntype>android.widget.TextView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getBitmapResources</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRadioButton</name>
            <comment></comment>
            <returntype>android.widget.RadioButton</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getColor</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getMultiAutoCompleteTextView</name>
            <comment></comment>
            <returntype>android.widget.MultiAutoCompleteTextView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getVideoView</name>
            <comment></comment>
            <returntype>android.widget.VideoView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getCheckBox</name>
            <comment></comment>
            <returntype>android.widget.CheckBox</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getDimens</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>spToPx</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>sp</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getRadioGroup</name>
            <comment></comment>
            <returntype>android.widget.RadioGroup</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getSpace</name>
            <comment></comment>
            <returntype>android.widget.Space</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getRatingBar</name>
            <comment></comment>
            <returntype>android.widget.RatingBar</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>getImageView</name>
            <comment></comment>
            <returntype>android.widget.ImageView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getIntArray</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRecyclerView</name>
            <comment></comment>
            <returntype>androidx.recyclerview.widget.RecyclerView</returntype>
            <parameter>
                <name>resId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>root</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.tummosoft.android.utils.UIConsts</name>
        <owner>process</owner>
    </class>
    <class>
        <name>com.tummosoft.android.utils.UIConsts.ScreenType</name>
        <owner>process</owner>
        <field>
            <name>SMALL_TABLET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BIG_TABLET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PHONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.tummosoft.android.utils.ViewHelper</name>
        <shortname>ViewHelper</shortname>
        <owner>process</owner>
        <method>
            <name>getActivityRoot</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>activity</name>
                <type>android.app.Activity</type>
            </parameter>
        </method>
        <method>
            <name>getBottomNavigationView</name>
            <comment></comment>
            <returntype>com.google.android.material.bottomnavigation.BottomNavigationView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getSurfaceView</name>
            <comment></comment>
            <returntype>android.view.SurfaceView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getNavigationView</name>
            <comment></comment>
            <returntype>com.google.android.material.navigation.NavigationView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>findButton</name>
            <comment></comment>
            <returntype>android.widget.ImageButton</returntype>
            <parameter>
                <name>parentView</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>viewStubId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>inflatedViewId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPaddingStart</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundColorKeepPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getSearchView</name>
            <comment></comment>
            <returntype>android.widget.SearchView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getCheckedTextView</name>
            <comment></comment>
            <returntype>android.widget.CheckedTextView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>findViewFromViewStub</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>parentView</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>viewStubId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>inflatedViewId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setOutlineAmbientShadowColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setVisibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>isShow</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>expendTouchArea</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>expendSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearAllViewLongClick</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getSeekBar</name>
            <comment></comment>
            <returntype>android.widget.SeekBar</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setImageResource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.widget.ImageView</type>
            </parameter>
            <parameter>
                <name>imageId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getCardView</name>
            <comment></comment>
            <returntype>android.support.v7.widget.CardView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isListViewAlreadyAtBottom</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listView</name>
                <type>android.widget.ListView</type>
            </parameter>
        </method>
        <method>
            <name>getCalendarView</name>
            <comment></comment>
            <returntype>android.widget.CalendarView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setChecked</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.widget.CompoundButton</type>
            </parameter>
            <parameter>
                <name>isCheck</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setViewsFont</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>assetFont</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>views</name>
                <type>android.view.View[]</type>
            </parameter>
        </method>
        <method>
            <name>getEditText</name>
            <comment></comment>
            <returntype>android.widget.EditText</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getTextInputLayout</name>
            <comment></comment>
            <returntype>com.google.android.material.textfield.TextInputLayout</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getView</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setPaddingBottom</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetInfaltedId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getListViewHeightBasedOnChildren</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>view</name>
                <type>android.widget.ListView</type>
            </parameter>
        </method>
        <method>
            <name>setEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>BAevent</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getTextClock</name>
            <comment></comment>
            <returntype>android.widget.TextClock</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getTextureView</name>
            <comment></comment>
            <returntype>android.view.TextureView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setCheckedSilent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.widget.CompoundButton</type>
            </parameter>
            <parameter>
                <name>isCheck</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>checkedChangeListener</name>
                <type>android.widget.CompoundButton.OnCheckedChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>getSpinner</name>
            <comment></comment>
            <returntype>android.widget.Spinner</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setImageDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.widget.ImageView</type>
            </parameter>
            <parameter>
                <name>drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>ConvertToDP</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
        </method>
        <method>
            <name>setPaddingLeft</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearViewLongClick</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>rootView</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>ids</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getProgressBar</name>
            <comment></comment>
            <returntype>android.widget.ProgressBar</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setImageLevel</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.widget.ImageView</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getSwitch</name>
            <comment></comment>
            <returntype>android.widget.Switch</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getImageButton</name>
            <comment></comment>
            <returntype>android.widget.ImageButton</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getScrollView</name>
            <comment></comment>
            <returntype>android.widget.ScrollView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getHorizontalScrollView</name>
            <comment></comment>
            <returntype>android.widget.HorizontalScrollView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>requestApplyInsets</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>window</name>
                <type>android.view.Window</type>
            </parameter>
        </method>
        <method>
            <name>calculateViewScreenLocation</name>
            <comment></comment>
            <returntype>android.graphics.Rect</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getChip</name>
            <comment></comment>
            <returntype>com.google.android.material.chip.Chip</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>generateViewId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>findViewFromViewStub3</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>parentView</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>viewStubId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>inflatedViewId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPaddingTop</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPaddingRight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getAbsListViewHeightBasedOnChildren</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>view</name>
                <type>android.widget.AbsListView</type>
            </parameter>
        </method>
        <method>
            <name>setPaddingEnd</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getViewStub</name>
            <comment></comment>
            <returntype>android.view.ViewStub</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getListView</name>
            <comment></comment>
            <returntype>android.widget.ListView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setBackground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>getWitch</name>
            <comment></comment>
            <returntype>android.widget.Switch</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>findViewFromViewStub2</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>parentView</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>viewStubId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>inflatedViewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>inflateLayoutResId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getButton</name>
            <comment></comment>
            <returntype>android.widget.Button</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getChipGroup</name>
            <comment></comment>
            <returntype>com.google.android.material.chip.ChipGroup</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setViewTextFont</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>assetFont</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getToggleButton</name>
            <comment></comment>
            <returntype>android.widget.ToggleButton</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundKeepingPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>getAutoCompleteTextView</name>
            <comment></comment>
            <returntype>android.widget.AutoCompleteTextView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setImageTint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.widget.ImageView</type>
            </parameter>
            <parameter>
                <name>tint</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
        </method>
        <method>
            <name>getTextView</name>
            <comment></comment>
            <returntype>android.widget.TextView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>padding</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRadioButton</name>
            <comment></comment>
            <returntype>android.widget.RadioButton</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getMultiAutoCompleteTextView</name>
            <comment></comment>
            <returntype>android.widget.MultiAutoCompleteTextView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>safeSetImageViewSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>imageView</name>
                <type>android.widget.ImageView</type>
            </parameter>
            <parameter>
                <name>selected</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getVideoView</name>
            <comment></comment>
            <returntype>android.widget.VideoView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getCheckBox</name>
            <comment></comment>
            <returntype>android.widget.CheckBox</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setViewPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>padding</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getRadioGroup</name>
            <comment></comment>
            <returntype>android.widget.RadioGroup</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getRatingBar</name>
            <comment></comment>
            <returntype>android.widget.RatingBar</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getSpace</name>
            <comment></comment>
            <returntype>android.widget.Space</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setOnCheckedChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.widget.CompoundButton</type>
            </parameter>
            <parameter>
                <name>checkedChangeListener</name>
                <type>android.widget.CompoundButton.OnCheckedChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>textColorId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.widget.TextView</type>
            </parameter>
            <parameter>
                <name>colorId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>setImageViewTintColor</name>
            <comment></comment>
            <returntype>android.graphics.ColorFilter</returntype>
            <parameter>
                <name>imageView</name>
                <type>android.widget.ImageView</type>
            </parameter>
            <parameter>
                <name>tintColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getImageView</name>
            <comment></comment>
            <returntype>android.widget.ImageView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setText</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.widget.TextView</type>
            </parameter>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getRecyclerView</name>
            <comment></comment>
            <returntype>androidx.recyclerview.widget.RecyclerView</returntype>
            <parameter>
                <name>viewID</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>IsLastLineSpacingExtraError</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.android.utils.ViewHelper.Direction</name>
        <owner>process</owner>
        <method>
            <name>valueOf</name>
            <comment></comment>
            <returntype EnumType="true">com.tummosoft.android.utils.ViewHelper.Direction</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype EnumType="true">com.tummosoft.android.utils.ViewHelper.Direction[]</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>name</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>compareTo</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>E</type>
            </parameter>
        </method>
        <method>
            <name>ordinal</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <property>
            <name>DeclaringClass</name>
            <returntype>java.lang.Class</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.android.utils.xAnimation</name>
        <shortname>xAnimation</shortname>
        <objectwrapper>android.view.animation.Animation</objectwrapper>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.tummosoft.android.utils.xAnimator</name>
        <shortname>xAnimator</shortname>
        <objectwrapper>android.animation.Animator</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Interpolator</name>
            <parameter>
                <name>value</name>
                <type>com.tummosoft.android.utils.xInterpolator</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Duration</name>
            <parameter>
                <name>value</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.android.utils.xDegrees</name>
        <shortname>xDegrees</shortname>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>FromDegrees</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>toDegrees</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>centerX1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>centerX2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>centerY1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>centerY2</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>ToDegrees</name>
            <returntype>int</returntype>
            <parameter>
                <name>mtoDegrees</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CenterX2</name>
            <returntype>float</returntype>
            <parameter>
                <name>mcenterX2</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CenterX1</name>
            <returntype>int</returntype>
            <parameter>
                <name>mcenterX1</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CenterY2</name>
            <returntype>float</returntype>
            <parameter>
                <name>mcenterY2</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FromDegrees</name>
            <returntype>int</returntype>
            <parameter>
                <name>mFromDegrees</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CenterY1</name>
            <returntype>int</returntype>
            <parameter>
                <name>mcenterY1</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.android.utils.xInterpolator</name>
        <shortname>xInterpolator</shortname>
        <objectwrapper>android.view.animation.Interpolator</objectwrapper>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>method</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.tummosoft.android.utils.xMatrix</name>
        <shortname>xMatrix</shortname>
        <objectwrapper>android.graphics.Matrix</objectwrapper>
        <owner>process</owner>
        <method>
            <name>mapVectors</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>vecs</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>isIdentity</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isAffine</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>mapRadius</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>values</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setTranslate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>dx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>preSkew</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>dx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSinCos</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>sinValue</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>cosValue</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>preTranslate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>dx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>reset</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setRotate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>sx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>sy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setMatrix</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>matrix1</name>
                <type>android.graphics.Matrix</type>
            </parameter>
            <parameter>
                <name>matrix2</name>
                <type>android.graphics.Matrix</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>postTranslate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>dx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>mapPoints</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>values</name>
                <type>float[]</type>
            </parameter>
        </method>
        <property>
            <name>Matrix</name>
            <parameter>
                <name>matrix</name>
                <type>android.graphics.Matrix</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Rotate</name>
            <parameter>
                <name>degree</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.android.utils.xObjectAnimator</name>
        <shortname>xObjectAnimator</shortname>
        <objectwrapper>android.animation.ObjectAnimator</objectwrapper>
        <owner>process</owner>
        <event>onAnimationStart(anmtr as xAnimator)</event>
        <event>onAnimationEnd(anmtr as xAnimator)</event>
        <event>onAnimationCancel(anmtr as xAnimator)</event>
        <event>onAnimationRepeat(anmtr as xAnimator)</event>
        <method>
            <name>Start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>CurrentPlayTime</name>
            <parameter>
                <name>currentPlayTime</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ObjectAnimator</name>
            <returntype>android.animation.ObjectAnimator</returntype>
            <comment></comment>
        </property>
        <property>
            <name>CurrentFraction</name>
            <parameter>
                <name>fraction</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Interpolator</name>
            <parameter>
                <name>value</name>
                <type>com.tummosoft.android.utils.xInterpolator</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Duration</name>
            <parameter>
                <name>value</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AutoCancel</name>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.android.utils.xRemoteView</name>
        <shortname>xRemoteView</shortname>
        <objectwrapper>android.widget.RemoteViews</objectwrapper>
        <owner>process</owner>
        <method>
            <name>setTextViewText</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>text</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>setRelativeScrollPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setProgressBar</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>maxValue</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>progress</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>indeterminate</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setTextViewCompoundDrawables</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setEmptyView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>emptyViewId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setDouble</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>methodName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>removeAllViews</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewID</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setViewOutlinePreferredRadiusAttr</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>attrId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setCompoundButtonChecked</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>checked</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setViewOutlinePreferredRadius</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>units</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setImageViewResource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setViewLayoutHeight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>units</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setFloat</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>methodName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setViewOutlinePreferredRadiusDimen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>resID</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>apply</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
        </method>
        <method>
            <name>setRadioGroupChecked</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>checkedId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setViewLayoutWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>units</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>addStableView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>nestedView</name>
                <type>android.widget.RemoteViews</type>
            </parameter>
            <parameter>
                <name>stableId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setAccessibilityTraversalBefore</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>nextId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setUri</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>methodName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setTextColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>nestedView</name>
                <type>android.widget.RemoteViews</type>
            </parameter>
        </method>
        <method>
            <name>setViewVisibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>visibility</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setViewLayoutMarginDimen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dimen</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setOnClickPendingIntent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pendingIntent</name>
                <type>android.app.PendingIntent</type>
            </parameter>
        </method>
        <method>
            <name>reapply</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>setString</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>methodName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setRemoteAdapter2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>items</name>
                <type>android.widget.RemoteViews.RemoteCollectionItems</type>
            </parameter>
        </method>
        <method>
            <name>setLong</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>methodName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>setViewPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>methodName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>colorResource</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setTextViewCompoundDrawablesRelative</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>end</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>layoutRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setOnCheckedChangeResponse</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>response</name>
                <type>android.widget.RemoteViews.RemoteResponse</type>
            </parameter>
        </method>
        <method>
            <name>setRemoteAdapter</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>intent</name>
                <type>android.content.Intent</type>
            </parameter>
        </method>
        <method>
            <name>setTextViewTextSize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewId</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>units</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Notify</name>
            <returntype>void</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LayoutId</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Long</name>
            <parameter>
                <name>layoutID</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.android.utils.xRemoteView.xPendingIntent</name>
        <shortname>xPendingIntent</shortname>
        <objectwrapper>android.app.PendingIntent</objectwrapper>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>events</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.tummosoft.android.utils.xTransformation</name>
        <shortname>xTransformation</shortname>
        <objectwrapper>android.view.animation.Transformation</objectwrapper>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Clear</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Matrix</name>
            <returntype>android.graphics.Matrix</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Alpha</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TransformationType</name>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.tummosoft.android.utils.xTranslate</name>
        <owner>process</owner>
    </class>
    <version>1.68</version>
    <author>Fr\u00c3\u00a9d\u00c3\u00a9ric Leneuf-Magaud</author>
</root>
