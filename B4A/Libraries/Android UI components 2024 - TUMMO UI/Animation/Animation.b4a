Build1=Default,b4a.example
File1=Layout.bal
FileGroup1=Default Group
Group=Default Group
Library1=appcompat
Library2=core
Library3=tummohelper
Library4=tummoviews
Library5=xui
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="21" android:targetSdkVersion="33"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
Module1=Starter
NumberOfFiles=1
NumberOfLibraries=5
NumberOfModules=1
Version=12.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4A Example
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

'#CustomBuildAction: 1, c:\windows\system32\cmd.exe, /c copy C:\Users\Admin\Downloads\Examples\Animation\Objects\res\layout\layout.xml res\layout\main_layout.xml
'#CustomBuildAction: 1, c:\windows\system32\cmd.exe, /c copy C:\Users\Admin\Downloads\Examples\Animation\Objects\res\anim\zoom.xml res\anim\zoom.xml
'#CustomBuildAction: 1, c:\windows\system32\cmd.exe, /c copy C:\Users\Admin\Downloads\Examples\Animation\Objects\res\anim\slide.xml res\anim\slide.xml
'#CustomBuildAction: 1, c:\windows\system32\cmd.exe, /c copy C:\Users\Admin\Downloads\Examples\Animation\Objects\res\anim\rolate.xml res\anim\rolate.xml
'#CustomBuildAction: 1, c:\windows\system32\cmd.exe, /c copy C:\Users\Admin\Downloads\Examples\Animation\Objects\res\anim\move.xml res\anim\move.xml
'#CustomBuildAction: 1, c:\windows\system32\cmd.exe, /c copy C:\Users\Admin\Downloads\Examples\Animation\Objects\res\anim\fade.xml res\anim\fade.xml
'#CustomBuildAction: 1, c:\windows\system32\cmd.exe, /c copy C:\Users\Admin\Downloads\Examples\Animation\Objects\res\anim\blink.xml res\anim\blink.xml

#MultiDex: true
#AdditionalJar: constraintlayout-2.1.4.aar
#AdditionalJar: constraintlayout-core-1.0.4

Sub Process_Globals	
	Private xui As XUI
End Sub

Sub Globals
	
	Private Button1 As Button
	Private ball1 As Label
	Private ball2 As Label
	Private ball3 As Label
	
	Dim radius As Float
	Dim centerX As Float
	Dim centerY As Float
	Private xImageView1 As xImageView
	
	Dim anim As AnimationHelper
	
	
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("Layout")
	' ANIMATION EXAMPLE
	' ------------------------------------
	anim.initialize("anim")
	
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub BTNblink_Click
	xui.MsgboxAsync("Hello world!", "B4X")
End Sub

Sub btlink_Click
	
End Sub

Sub btbtrolate_Click
	
End Sub

Sub btBTNfade_Click
	
End Sub

Sub SetAnimal(ball As Label)
	radius = 100dip
	centerX = (100dip + ball.Width) / 2.0
	centerY = (100dip + ball.Height) / 2.0
End Sub

Private Sub Button1_Click
	Dim target As Float = 0
	Dim theend As Float = 360
	SetAnimal(ball1)
	anim.startAccelerateDecelerateInterpolator(ball1,"anim", 1000, "rotation", target, theend)
	
End Sub

Sub anim_onAnimationUpdate(angle As Float)
	Log("rolate:" & angle)
	If ((angle > 160) And (angle < 180)) Then
		Dim target As Float = 0
		Dim theend As Float = 360
		SetAnimal(ball2)
		anim.startAccelerateDecelerateInterpolator(ball2,"anim2", 1000, "rotation", target, theend)
	End If	
End Sub

Sub anim2_onAnimationUpdate(angle As Float)
	
	If ((angle > 160) And (angle < 180)) Then
		Dim target As Float = 0
		Dim theend As Float = 360
		SetAnimal(ball3)
		anim.startAccelerateDecelerateInterpolator(ball3,"anim3", 1000, "rotation", target, theend)
	End If
End Sub

Sub anim3_onAnimationUpdate(angle As Float)
	
	If ((angle > 160) And (angle < 180)) Then
		Dim target As Float = 0
		Dim theend As Float = 360
		SetAnimal(ball1)
		anim.startAccelerateDecelerateInterpolator(ball1,"anim", 1000, "rotation", target, theend)
	End If
	
End Sub