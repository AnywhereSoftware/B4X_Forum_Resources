<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>igolub.alocation.b4a.ALocationWrapper</name>
        <shortname>ALocation</shortname>
        <objectwrapper>android.location.Location</objectwrapper>
        <owner>process</owner>
        <method>
            <name>DistanceTo</name>
            <comment>Returns the approximate distance in meters between this location and the given location. Distance is defined using the WGS84 ellipsoid.
Added in API level 1</comment>
            <returntype>float</returntype>
            <parameter>
                <name>Dest</name>
                <type>igolub.alocation.b4a.ALocationWrapper</type>
            </parameter>
        </method>
        <method>
            <name>ElapsedRealtimeAgeMillis2</name>
            <comment>A convenience method that returns the age of this location with respect to the given reference elapsed realtime.
ReferenceRealtimeMs: reference realtime in milliseconds Value is 0 or greater
Returns age of this location in milliseconds
Added in API level 33. Returns -1 for lover versions.</comment>
            <returntype>long</returntype>
            <parameter>
                <name>ReferenceRealtimeMs</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes a new location with a named provider. By default all values are zero, and no optional values are present.
Provider: choose between PROVIDER_GPS, PROVIDER_FUSED, PROVIDER_NETWORK and PROVIDER_PASSIVE.</comment>
            <returntype>igolub.alocation.b4a.ALocationWrapper</returntype>
            <parameter>
                <name>Provider</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BearingTo</name>
            <comment>Returns the approximate initial bearing in degrees east of true north when traveling along the shortest path between this location and the given location. The shortest path is defined using the WGS84 ellipsoid. Locations that are (nearly) antipodal may produce meaningless results.
Added in API level 1</comment>
            <returntype>float</returntype>
            <parameter>
                <name>Dest</name>
                <type>igolub.alocation.b4a.ALocationWrapper</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Constructs a new ALocation copied from the given ALocation or Location.</comment>
            <returntype>igolub.alocation.b4a.ALocationWrapper</returntype>
            <parameter>
                <name>mALocation</name>
                <type>igolub.alocation.b4a.ALocationWrapper</type>
            </parameter>
        </method>
        <method>
            <name>Reset</name>
            <comment>Sets the provider to null, removes all optional fields, and sets the values of all other fields to zero.
Added in API level 1</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ToString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <property>
            <name>HasBearingAccuracy</name>
            <returntype>boolean</returntype>
            <comment>Returns true if this location has a bearing accuracy, false otherwise.
Added in API level 26. Returns False for lower versions.</comment>
        </property>
        <property>
            <name>Latitude</name>
            <returntype>double</returntype>
            <parameter>
                <name>LatitudeDegrees</name>
                <type>double</type>
            </parameter>
            <comment>Gets or set the latitude of this location.
Added in API level 1</comment>
        </property>
        <property>
            <name>Time</name>
            <returntype>long</returntype>
            <parameter>
                <name>TimeMs</name>
                <type>long</type>
            </parameter>
            <comment>Gets or sets the Unix epoch time of this location fix, in milliseconds since the start of the Unix epoch (00:00:00 January 1 1970 UTC).
Added in API level 1</comment>
        </property>
        <property>
            <name>Extras</name>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <comment>Returns an optional Map of additional information associated with this location. The keys and values within the map are determined by the location provider.
There is no guarantee that these key/value pairs will be present for any location.
Added in API level 1</comment>
        </property>
        <property>
            <name>Bearing</name>
            <returntype>float</returntype>
            <parameter>
                <name>BearingDegrees</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the bearing at the time of this location, in degrees. The given bearing will be converted into the range (0, 360).
Added in API level 1</comment>
        </property>
        <property>
            <name>BearingAccuracyDegrees</name>
            <returntype>float</returntype>
            <parameter>
                <name>BearingAccuracyDegrees</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the bearing accuracy in degrees of this location. Bearing accuracy in degrees Value is 0.0 or greater.
Added in API level 26. Returns -1 for lover versions.</comment>
        </property>
        <property>
            <name>Accuracy</name>
            <returntype>float</returntype>
            <parameter>
                <name>HorizontalAccuracyMeters</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the horizontal accuracy in meters of this location.
Added in API level 1</comment>
        </property>
        <property>
            <name>VerticalAccuracyMeters</name>
            <returntype>float</returntype>
            <parameter>
                <name>AltitudeAccuracyMeters</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the altitude accuracy of this location in meters.
Added in API level 26. Returns -1 for lower versions.</comment>
        </property>
        <property>
            <name>HasAltitude</name>
            <returntype>boolean</returntype>
            <comment>Returns true if this location has an altitude, false otherwise.
Added in API level 1</comment>
        </property>
        <property>
            <name>HasElapsedRealtimeUncertaintyNanos</name>
            <returntype>boolean</returntype>
            <comment>True if this location has an elapsed real time uncertainty, false otherwise.
Added in API level 29. Returns False for lower versions.</comment>
        </property>
        <property>
            <name>Speed</name>
            <returntype>float</returntype>
            <parameter>
                <name>SpeedMetersPerSecond</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the speed at the time of this location, in meters per second.
Added in API level 1</comment>
        </property>
        <property>
            <name>ElapsedRealtimeNanos</name>
            <returntype>long</returntype>
            <parameter>
                <name>ElapsedRealtimeNs</name>
                <type>long</type>
            </parameter>
            <comment>Gets or sets the time of this fix in nanoseconds of elapsed realtime since system boot.
Added in API level 17. Returns -1 for lover versions.</comment>
        </property>
        <property>
            <name>SpeedAccuracyMetersPerSecond</name>
            <returntype>float</returntype>
            <parameter>
                <name>SpeedAccuracyMeterPerSecond</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the speed accuracy of this location in meters per second.
Added in API level 26. Return -1 for lower versions.</comment>
        </property>
        <property>
            <name>ElapsedRealtimeMillis</name>
            <returntype>long</returntype>
            <comment>Return the time of this fix in milliseconds of elapsed realtime since system boot.
Added in API level 33. Returns -1 for lover versions.</comment>
        </property>
        <property>
            <name>HasVerticalAccuracy</name>
            <returntype>boolean</returntype>
            <comment>Returns true if this location has a vertical accuracy, false otherwise.
Added in API level 26. Returns False for lower versions.</comment>
        </property>
        <property>
            <name>HasBearing</name>
            <returntype>boolean</returntype>
            <comment>True if this location has a bearing, false otherwise.
Added in API level 1</comment>
        </property>
        <property>
            <name>Longitude</name>
            <returntype>double</returntype>
            <parameter>
                <name>LongitudeDegrees</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the longitude of this location.
Added in API level 1</comment>
        </property>
        <property>
            <name>IsComplete</name>
            <returntype>boolean</returntype>
            <comment>Return true if this location is considered complete. A location is considered complete if it has a non-null provider, accuracy, and non-zero time and elapsed realtime. The exact definition of completeness may change over time.
Added in API level 33. Returns True for lower versions.</comment>
        </property>
        <property>
            <name>Provider</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Provider</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the name of the provider associated with this location.
Added in API level 1</comment>
        </property>
        <property>
            <name>ElapsedRealtimeUncertaintyNanos</name>
            <returntype>double</returntype>
            <parameter>
                <name>ElapsedRealtimeUncertaintyNs</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the uncertainty in nanoseconds of the precision of ElapsedRealtimeNanos at the 68th percentile confidence level.
Added in API level 29. Returns -1 for lover versions.</comment>
        </property>
        <property>
            <name>HasSpeed</name>
            <returntype>boolean</returntype>
            <comment>True if this location has a speed, false otherwise.
Added in API level 1</comment>
        </property>
        <property>
            <name>ElapsedRealtimeAgeMillis</name>
            <returntype>long</returntype>
            <comment>A convenience methods that returns the age of this location in milliseconds with respect to the current elapsed realtime.
Returns age of this location in milliseconds. Value is 0 or greater.
Added in API level 33. Returns -1 for lover versions.</comment>
        </property>
        <property>
            <name>HasAccuracy</name>
            <returntype>boolean</returntype>
            <comment>Returns true if this location has a horizontal accuracy, false otherwise.
Added in API level 1</comment>
        </property>
        <property>
            <name>Altitude</name>
            <returntype>double</returntype>
            <parameter>
                <name>AltitudeMeters</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the altitude of this location in meters above the WGS84 reference ellipsoid.
Added in API level 1</comment>
        </property>
        <property>
            <name>HasSpeedAccuracy</name>
            <returntype>boolean</returntype>
            <comment>Returns true if this location has a speed accuracy, false otherwise.
Added in API level 26. Returns False for lower versions.</comment>
        </property>
        <property>
            <name>IsMock</name>
            <returntype>boolean</returntype>
            <comment>Returns true if this location is marked as a mock location. If this location comes from the Android framework, this indicates that the location was provided by a test location provider, and thus may not be related to the actual location of the device.
Added in API level 18. Returns False for lower versions.</comment>
        </property>
        <field>
            <name>FORMAT_SECONDS</name>
            <comment>Constant used to specify formatting of a latitude or longitude in the form "DDD:MM:SS.SSSSS" where D indicates degrees, M indicates minutes of arc, and S indicates seconds of arc (1 minute = 1/60th of a degree, 1 second = 1/3600th of a degree).
 Constant Value: 2</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_MINUTES</name>
            <comment>Constant used to specify formatting of a latitude or longitude in the form "[+-]DDD:MM.MMMMM" where D indicates degrees and M indicates minutes of arc (1 minute = 1/60th of a degree).
 Constant Value: 1</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PROVIDER_GPS</name>
            <comment>Standard name of the GNSS location provider.
If present, this provider determines location using GNSS satellites. The responsiveness and accuracy of location fixes may depend on GNSS signal conditions.
Constant Value: "gps".
Added in API level 1</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>FORMAT_DEGREES</name>
            <comment>Constant used to specify formatting of a latitude or longitude in the form "[+-]DDD.DDDDD" where D indicates degrees.
 Constant Value: 0</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PROVIDER_NETWORK</name>
            <comment>Standard name of the network location provider.
If present, this provider determines location based on nearby of cell tower and WiFi access points. Operation of this provider may require a data connection.
Constant Value: "network".
Added in API level 1</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>PROVIDER_PASSIVE</name>
            <comment>A special location provider for receiving locations without actively initiating a location fix. This location provider is always present.
This provider can be used to passively receive location updates when other applications or services request them without actually requesting the locations yourself. This provider will only return locations generated by other providers.
Constant Value: "passive".
Added in API level 8</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>PROVIDER_FUSED</name>
            <comment>Standard name of the fused location provider.
If present, this provider may combine inputs from several other location providers to provide the best possible location fix.
Constant Value: "fused".
Added in API level 31</comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>igolub.alocation.b4a.ALocationUtils</name>
        <shortname>ALocationUtils</shortname>
        <owner>process</owner>
        <method>
            <name>InitialBearingBetween</name>
            <comment>Computes the approximate initial bearing in degrees between two locations.
StartLatitude: the starting latitude Value is between -90.0 and 90.0 inclusive
StartLongitude: the starting longitude Value is between -180.0 and 180.0 inclusive
EndLatitude: the ending latitude Value is between -90.0 and 90.0 inclusive
EndLongitude: the ending longitude Value is between -180.0 and 180.0 inclusive
Returns the computed initial bearing or -1000 if error.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>StartLatitude</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>StartLongitude</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>EndLatitude</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>EndLongitude</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>InitialBearingBetween2</name>
            <comment>Computes the approximate initial bearing in degrees between two locations.
Start: the starting ALocation
End: the ending ALocation
Returns the computed initial bearing or -1000 if error.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>Start</name>
                <type>igolub.alocation.b4a.ALocationWrapper</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>igolub.alocation.b4a.ALocationWrapper</type>
            </parameter>
        </method>
        <method>
            <name>FinalBearingBetween2</name>
            <comment>Computes the approximate final bearing in degrees between two locations.
Start: the starting ALocation
End: the ending ALocation
Returns the computed final bearing or -1000 if error.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>Start</name>
                <type>igolub.alocation.b4a.ALocationWrapper</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>igolub.alocation.b4a.ALocationWrapper</type>
            </parameter>
        </method>
        <method>
            <name>ConvertToDouble</name>
            <comment>Converts a String in one of the formats described by FORMAT_DEGREES, FORMAT_MINUTES, or FORMAT_SECONDS into a double.
Added in API level 1</comment>
            <returntype>double</returntype>
            <parameter>
                <name>Coordinate</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DistanceBetween2</name>
            <comment>Computes the approximate distance in meters between two locations. Distance is defined using the WGS84 ellipsoid.
Start: the starting ALocation
End: the ending ALocation
Returns the computed distance or -1 if error.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>Start</name>
                <type>igolub.alocation.b4a.ALocationWrapper</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>igolub.alocation.b4a.ALocationWrapper</type>
            </parameter>
        </method>
        <method>
            <name>FinalBearingBetween</name>
            <comment>Computes the approximate final bearing in degrees between two locations.
StartLatitude: the starting latitude Value is between -90.0 and 90.0 inclusive
StartLongitude: the starting longitude Value is between -180.0 and 180.0 inclusive
EndLatitude: the ending latitude Value is between -90.0 and 90.0 inclusive
EndLongitude: the ending longitude Value is between -180.0 and 180.0 inclusive
Returns the computed final bearing or -1000 if error.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>StartLatitude</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>StartLongitude</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>EndLatitude</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>EndLongitude</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>ConvertToString</name>
            <comment>Converts a latitude/longitude coordinate to a String representation. The outputType must be one of FORMAT_DEGREES, FORMAT_MINUTES, or FORMAT_SECONDS. The coordinate must be a number between -180.0 and 180.0, inclusive. This conversion is performed in a method that is dependent on the default locale.
Added in API level 1</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Coordinate</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>OutputType</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DistanceBetween</name>
            <comment>Computes the approximate distance in meters between two locations. Distance is defined using the WGS84 ellipsoid.
StartLatitude: the starting latitude Value is between -90.0 and 90.0 inclusive
StartLongitude: the starting longitude Value is between -180.0 and 180.0 inclusive
EndLatitude: the ending latitude Value is between -90.0 and 90.0 inclusive
EndLongitude: the ending longitude Value is between -180.0 and 180.0 inclusive
Returns the computed distance or -1 if error.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>StartLatitude</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>StartLongitude</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>EndLatitude</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>EndLongitude</name>
                <type>double</type>
            </parameter>
        </method>
    </class>
    <version>1.0</version>
    <author>Ivica Golubovic</author>
</root>
