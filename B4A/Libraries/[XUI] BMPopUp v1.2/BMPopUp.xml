<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <b4x_version>12.80</b4x_version>
  <dependsOn>javaobject</dependsOn>
  <dependsOn>reflection</dependsOn>
  <dependsOn>xui</dependsOn>
  <class>
    <name>b4a.insidecode.bmpopup._bmcustomview</name>
    <shortname>BMCustomView</shortname>
    <owner>activity</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>View</name>
      <returntype>anywheresoftware.b4a.objects.ConcreteViewWrapper</returntype>
    </field>
    <field>
      <name>EventName</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>X</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>Y</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>Width</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>Height</name>
      <returntype>int</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bmpopup._point</name>
    <shortname>Point</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>coords</name>
      <returntype>int[]</returntype>
    </field>
    <field>
      <name>n</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>ct</name>
      <returntype>int</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bmpopup._cluster</name>
    <shortname>Cluster</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>points</name>
      <returntype>b4a.insidecode.bmpopup._point[]</returntype>
    </field>
    <field>
      <name>center</name>
      <returntype>b4a.insidecode.bmpopup._point</returntype>
    </field>
    <field>
      <name>n</name>
      <returntype>int</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bmpopup</name>
    <shortname>BMPopUp</shortname>
    <comment>Create a simple PopUp
Template:
&lt;code&gt;
Public PopUp As BMPopUp
PopUp.Initialize(Activity, "PopUp", Me)

PopUp.Title = "Normal PopUp"
PopUp.Message ="Test message!"
PopUp.BackColor = Colors.Black
PopUp.MessageColor = Colors.White
PopUp.TitleColor = Colors.White
PopUp.Icon = Chr(0xF209)
PopUp.IconColor = Colors.White
PopUp.Position = PopUp.H_TOP
PopUp.Duration = 5
PopUp.Close = True
PopUp.Style = PopUp.STYLE_NORMAL
PopUp.Tag = "Helow message!"

PopUp.Show
&lt;/code&gt;
</comment>
    <owner>activity</owner>
    <event>Click (PopUp As BMPopUp)</event>
    <event>Show (PopUp As BMPopUp)</event>
    <event>Hide (PopUp As BMPopUp, Manual as Boolean) As Boolean</event>
    <event>Answer (PopUp As BMPopUp , Answer As Int)</event>
    <event>Ticks (PopUp As BMPopUp, Ticks as Long)</event>
    <event>CustomAnimation (PopUp As BMPopUp, Ticks as Long)</event>
    <event>Expanded (PopUp As BMPopUp)</event>
    <event>Collapsed (PopUp As BMPopUp)</event>
    <event>Click (PopUp As BMPopUp, Btn as Button)</event>
    <event>LongClick (PopUp As BMPopUp, Btn as Button)</event>
    <event>Click (PopUp As BMPopUp, lbl as Label)</event>
    <event>LongClick (PopUp As BMPopUp, lbl as Label)</event>
    <event>TextChanged (PopUp As BMPopUp, Text as String)</event>
    <event>TextChanged (PopUp As BMPopUp, Text as String)</event>
    <event>EnterPressed (PopUp As BMPopUp)</event>
    <event>FocusChanged (PopUp As BMPopUp, HasChanged as Boolean)</event>
    <method>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Add">_add</name>
      <comment>Add PopUp for show Multiples PopUp DropDown effect.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>PopUp</name>
        <type>b4a.insidecode.bmpopup</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="addBottomAnchorView">_addbottomanchorview</name>
      <comment>Only for CustomsPopUp
Attach a view to parent size Top-Bottom, if parent Height change, your view Height will change too.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>oView</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="addBottomPositionViews">_addbottompositionviews</name>
      <comment>Only for CustomsPopUp
Attach a view to Bottom side of a parent, if parent height change, your view top will change too.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>oView</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="addButton">_addbutton</name>
      <comment>Create a Button and add it into the PopUp
Example:
&lt;code&gt;
	Dim CustomButton As Button = PopUp.addButton("CustomButton",50,0)
	CustomButton.Text = "Click!"
	CustomButton.TextColor = Colors.Black
	CustomButton.Width = 150dip
	CustomButton.Height = 50dip
&lt;/code&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.ButtonWrapper</returntype>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="addCentralizeView">_addcentralizeview</name>
      <returntype>String</returntype>
      <parameter>
        <name>oView</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="addCustomView">_addcustomview</name>
      <comment>Create a CustomView and add it into the PopUp
Accept any view.
The view its should be Initialized before call it as the example.
Example Edit Text:
&lt;code&gt;
	Dim Txt As EditText : Txt.Initialize("Txt")
	Txt = PopUp.addCustomView(Txt,"Txt",30%x,5%y)
	Txt.Hint = "Text"
	Txt.TextSize = 12
	Txt.Width = 175dip
	Txt.Height = 35dip
	Txt.TextColor = Colors.White
	Txt.HintColor = Colors.LightGray
	Txt.Color = Colors.ARGB(50,255,255,255)
&lt;/code&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.B4XViewWrapper</returntype>
      <parameter>
        <name>oView</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="addEditText">_addedittext</name>
      <comment>Create a ImageView and add it into the PopUp
Example:
&lt;code&gt;
	Dim Logo As ImageView = PopUp.addImageView("Logo", 40%x,5)
	Dim img As Bitmap
	img.Initialize(File.DirAssets,"logo.png")
	Logo.SetBackgroundImage(img)
	Logo.Gravity = Gravity.FILL
	Logo.Width = 24dip
	Logo.Height = 24dip
&lt;/code&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.EditTextWrapper</returntype>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="addImageView">_addimageview</name>
      <comment>Create a ImageView and add it into the PopUp
Example:
&lt;code&gt;
	Dim Logo As ImageView = PopUp.addImageView("Logo", 40%x,5)
	Dim img As Bitmap
	img.Initialize(File.DirAssets,"logo.png")
	Logo.SetBackgroundImage(img)
	Logo.Gravity = Gravity.FILL
	Logo.Width = 24dip
	Logo.Height = 24dip
&lt;/code&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.ImageViewWrapper</returntype>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="addLabel">_addlabel</name>
      <comment>Create a Label and add it into the PopUp
Example:
&lt;code&gt;
	Dim CustomLabel As Label = PopUp.addLabel("CustomLabel",5%x,35dip)
	CustomLabel.Text = "Custom Title!"
	CustomLabel.Width = 120dip
	CustomLabel.Height = 35dip
	CustomLabel.TextColor = Colors.White
	CustomLabel.TextSize = 12
&lt;/code&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.LabelWrapper</returntype>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="addRightAnchorView">_addrightanchorview</name>
      <comment>Only for CustomsPopUp
Attach a view to parent size Left-Right, if parent width change, your view width will change too.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>oView</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="addRightPositionViews">_addrightpositionviews</name>
      <comment>Only for CustomsPopUp
Attach a view to Right side of a parent, if parent width change, your view left will change too.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>oView</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Border">_border</name>
      <comment>Set Custom PopUp Border
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Radius</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>BorderWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ColorBorder</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="BounceIn">_bouncein</name>
      <returntype>anywheresoftware.b4a.keywords.Common.ResumableSubWrapper</returntype>
      <parameter>
        <name>Duration</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="BounceOut">_bounceout</name>
      <returntype>anywheresoftware.b4a.keywords.Common.ResumableSubWrapper</returntype>
      <parameter>
        <name>Duration</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="changeSize">_changesize</name>
      <comment>Change size of a popup.
May use it after Show
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Collapse">_collapse</name>
      <comment>Collapse the PopUp to original Height Size
</comment>
      <returntype>anywheresoftware.b4a.keywords.Common.ResumableSubWrapper</returntype>
      <parameter>
        <name>Interval</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ConvertTicksToSeconds">_converttickstoseconds</name>
      <comment>Convert Milliseconds to Seconds
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>t</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CustomAnimation" RaisesSynchronousEvents="true">_customanimation</name>
      <comment>Set Custom PopUp Animation Sub
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>SubName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Interval</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Expand">_expand</name>
      <comment>Expand the PopUp to any Height Size
</comment>
      <returntype>anywheresoftware.b4a.keywords.Common.ResumableSubWrapper</returntype>
      <parameter>
        <name>Cant</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Interval</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FillImageToView">_fillimagetoview</name>
      <returntype>anywheresoftware.b4a.objects.B4XViewWrapper</returntype>
      <parameter>
        <name>bmp</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
      <parameter>
        <name>ImageView</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FitImageToView">_fitimagetoview</name>
      <returntype>String</returntype>
      <parameter>
        <name>bmp</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
      <parameter>
        <name>ImageView</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getAppHeader" HideFromIDE="true">_getappheader</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getBackColor" HideFromIDE="true">_getbackcolor</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getBlurEffect" HideFromIDE="true">_getblureffect</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getBlurScale" HideFromIDE="true">_getblurscale</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getClose" HideFromIDE="true">_getclose</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getCustomViewbyEventName">_getcustomviewbyeventname</name>
      <comment>Get a CustomView by EventName
Example:
&lt;code&gt;
Dim txt As EditText = PopUp.getCustomViewbyEventName("Txt")
txt.Color = Colors.Red
&lt;/code&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.B4XViewWrapper</returntype>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getCustomViewbyIndex">_getcustomviewbyindex</name>
      <comment>Get a CustomView by Index
getCustomViewbyEventName(EventName As String) is better recommended
Example:
&lt;code&gt;
Dim txt As EditText = PopUp.getCustomViewbyIndex(0)
txt.Color = Colors.Red
&lt;/code&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.B4XViewWrapper</returntype>
      <parameter>
        <name>Index</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getDuration" HideFromIDE="true">_getduration</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getHeight" HideFromIDE="true">_getheight</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getIsSwipeable" HideFromIDE="true">_getisswipeable</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getLeft" HideFromIDE="true">_getleft</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getMessage" HideFromIDE="true">_getmessage</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getMessageColor" HideFromIDE="true">_getmessagecolor</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getSwipeOrientation" HideFromIDE="true">_getswipeorientation</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getTag" HideFromIDE="true">_gettag</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="getTitle" HideFromIDE="true">_gettitle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTitleColor" HideFromIDE="true">_gettitlecolor</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="getTop" HideFromIDE="true">_gettop</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getWidth" HideFromIDE="true">_getwidth</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="GlassEffect">_glasseffect</name>
      <comment>Set Glass Effect
Glass Scale (0 - 255) Opacity
GlassColor = [LIGTH or DARK]
</comment>
      <returntype>b4a.insidecode.bmpopup</returntype>
      <parameter>
        <name>GlassScale</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Mode</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="GlassEffectDominantGradient">_glasseffectdominantgradient</name>
      <returntype>b4a.insidecode.bmpopup</returntype>
      <parameter>
        <name>GlassScale</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Orientation</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="GlassEffectGradient">_glasseffectgradient</name>
      <comment>Set Glass Effect
Glass Scale (0 - 255) Opacity
ColorList = Array as Int()
Orientation = [TOP_BOTTOM,LEFT_RIGHT, ETC...)
</comment>
      <returntype>b4a.insidecode.bmpopup</returntype>
      <parameter>
        <name>GlassScale</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ColorList</name>
        <type>int[]</type>
      </parameter>
      <parameter>
        <name>Orientation</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Hide" RaisesSynchronousEvents="true">_hide</name>
      <comment>Hide the PopUp.
</comment>
      <returntype>anywheresoftware.b4a.keywords.Common.ResumableSubWrapper</returntype>
      <parameter>
        <name>Manual</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initialize PopUp parameters needed.
Template:
&lt;code&gt;
Public PopUp As BMPopUp
PopUp.Initialize(Activity, "PopUp", Me)
&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>Parent</name>
        <type>anywheresoftware.b4a.objects.ActivityWrapper</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IntToDIP">_inttodip</name>
      <returntype>int</returntype>
      <parameter>
        <name>Integer</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Reset">_reset</name>
      <comment>Reset the PopUp Timer.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Resume">_resume</name>
      <comment>Continuous PopUp Timer at the moment of Stop
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ScaleBitmap">_scalebitmap</name>
      <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
      <parameter>
        <name>Image</name>
        <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filter</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAnimationIn" HideFromIDE="true">_setanimationin</name>
      <comment>Example:
&lt;code&gt;
PopUp.Animation = PopUp.ANIMATION_FLAT&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Animation</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAnimationOut" HideFromIDE="true">_setanimationout</name>
      <comment>Set the PopUpOut Animation.
Options:
-ANIMATION_FLAT = 0
-ANIMATION_FADEIN = 1
-ANIMATION_FADEOUT = 2
-ANIMATION_BOUNCEDOWN  = 3
-ANIMATION_BOUNCEUP = 4
-ANIMATION_SHAKE = 5
-ANIMATION_CARDDOWN = 6
-ANIMATION_CARDUP = 7
-ANIMATION_ALERT = 8
-ANIMATION_CARNIVAL = 9
Example:
&lt;code&gt;
PopUp.Animation = PopUp.ANIMATION_FLAT&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Animation</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAppHeader" HideFromIDE="true">_setappheader</name>
      <comment>Set or Get if you project have header
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Header</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setBackColor" HideFromIDE="true">_setbackcolor</name>
      <comment>Set or Get the PopUp Background Color
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setBackgroundImage" HideFromIDE="true">_setbackgroundimage</name>
      <comment>Set or Get the PopUp Background Image
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Background</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setBlurEffect" HideFromIDE="true">_setblureffect</name>
      <comment>Set or Get Blur Effect
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Blur</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setBlurScale" HideFromIDE="true">_setblurscale</name>
      <comment>Set or Get Blur Scale Effect
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Scale</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClose" HideFromIDE="true">_setclose</name>
      <comment>Set / Get if the PopUp have a close button
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Close</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDuration" HideFromIDE="true">_setduration</name>
      <comment>Set the PopUp Duration (Seconds).
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Seconds</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetGradientBackground">_setgradientbackground</name>
      <returntype>String</returntype>
      <parameter>
        <name>pnl</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
      <parameter>
        <name>Clrs</name>
        <type>int[]</type>
      </parameter>
      <parameter>
        <name>Orientation</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setHeight" HideFromIDE="true">_setheight</name>
      <comment>Set or Get Height of a Custom PopUp
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setIcon" HideFromIDE="true">_seticon</name>
      <comment>Set the PopUp Icon
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Icon</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setIconColor" HideFromIDE="true">_seticoncolor</name>
      <comment>Set the PopUp Icon Color
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setIsSwipeable" HideFromIDE="true">_setisswipeable</name>
      <comment>Set or Get isSwipeable
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ItIs</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLeft" HideFromIDE="true">_setleft</name>
      <comment>Set or Get Left of a Custom PopUp
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Left</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMessage" HideFromIDE="true">_setmessage</name>
      <comment>Set or Get the PopUp Message
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMessageColor" HideFromIDE="true">_setmessagecolor</name>
      <comment>Set or Get the PopUp Message Color
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Color</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setPosition" HideFromIDE="true">_setposition</name>
      <comment>Set the PopUp Position.
Options:
-H_TOP (DEFAULT) = 0 : Top of the Parent
-H_CENTER = 1 : Center of the Parent
-H_BOTTOM = 2 : Bottom of the Parent
Example:
&lt;code&gt;
PopUp.Position = PopUp.H_TOP&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Position</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetShadow">_setshadow</name>
      <returntype>String</returntype>
      <parameter>
        <name>oView</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
      <parameter>
        <name>Offset</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <comment>Set the PopUp Style.
 The Event
-STYLE_NORMAL (DEFAULT) : Normal Style.
-STYLE_ACCEEPT : With accept button.
-STYLE_ACCEEPTCANCEL : With accept and cancel button.
-STYLE_ACCEEPTCANCELNEUTRAL : With accept, cancel and neutral buttton.

Example:
&lt;code&gt;
PopUp.Style = PopUp.STYLE_NORMAL&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSwipeOrientation" HideFromIDE="true">_setswipeorientation</name>
      <comment>Set or Get Swipe Orientation
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Orientation</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTag" HideFromIDE="true">_settag</name>
      <comment>Set / Get the PopUp Tag
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Tag</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTitle" HideFromIDE="true">_settitle</name>
      <comment>Set or Get the PopUp Title
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Title</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTitleColor" HideFromIDE="true">_settitlecolor</name>
      <comment>Set or Get the PopUp Title Color
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Color</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTop" HideFromIDE="true">_settop</name>
      <comment>Set or Get Top of a Custom PopUp
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Top</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setWidth" HideFromIDE="true">_setwidth</name>
      <comment>Set or Get Width of a Custom PopUp
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Show" RaisesSynchronousEvents="true">_show</name>
      <comment>Show the PopUp.
</comment>
      <returntype>void</returntype>
    </method>
    <method>
      <name DesignerName="Show2">_show2</name>
      <comment>Show the Custom PopUp.
</comment>
      <returntype>anywheresoftware.b4a.keywords.Common.ResumableSubWrapper</returntype>
    </method>
    <method>
      <name DesignerName="Show3">_show3</name>
      <comment>Show Multiples Custom PopUp DropDown effect.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>WaitTime</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Size">_size</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="Stop">_stop</name>
      <comment>Stop the PopUp Timer.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="UpdateViews">_updateviews</name>
      <comment>Update all CustomViews positions and anchors
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="View">_view</name>
      <comment>Get the PopUp View
</comment>
      <returntype>anywheresoftware.b4a.objects.B4XViewWrapper</returntype>
    </method>
    <method>
      <name DesignerName="VScreenAdjust">_vscreenadjust</name>
      <comment>Adjust popup to vertical center.
May use it after Show
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="VScreenCentralize">_vscreencentralize</name>
      <comment>Adjust popup to vertical center.
May use it after Show
</comment>
      <returntype>String</returntype>
    </method>
    <property>
      <name DesignerName="AppHeader">_appheader</name>
      <comment>Set or Get if you project have header
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="BackColor">_backcolor</name>
      <comment>Set or Get the PopUp Background Color
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="BlurEffect">_blureffect</name>
      <comment>Set or Get Blur Effect
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="BlurScale">_blurscale</name>
      <comment>Set or Get Blur Scale Effect
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Close">_close</name>
      <comment>Set / Get if the PopUp have a close button
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Duration">_duration</name>
      <comment>Set the PopUp Duration (Seconds).
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Height">_height</name>
      <comment>Set or Get Height of a Custom PopUp
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="isSwipeable">_isswipeable</name>
      <returntype>boolean</returntype>
    </field>
    <property>
      <name DesignerName="Left">_left</name>
      <comment>Set or Get Left of a Custom PopUp
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Message">_message</name>
      <comment>Set or Get the PopUp Message
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MessageColor">_messagecolor</name>
      <comment>Set or Get the PopUp Message Color
</comment>
      <returntype>Object</returntype>
      <parameter>
        <name>Value</name>
        <type>Object</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <comment>Set the PopUp Style.
 The Event
-STYLE_NORMAL (DEFAULT) : Normal Style.
-STYLE_ACCEEPT : With accept button.
-STYLE_ACCEEPTCANCEL : With accept and cancel button.
-STYLE_ACCEEPTCANCELNEUTRAL : With accept, cancel and neutral buttton.

Example:
&lt;code&gt;
PopUp.Style = PopUp.STYLE_NORMAL&lt;/code&gt;
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="SwipeOrientation">_swipeorientation</name>
      <comment>Set or Get Swipe Orientation
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Tag">_tag</name>
      <comment>Set / Get the PopUp Tag
</comment>
      <returntype>Object</returntype>
      <parameter>
        <name>Value</name>
        <type>Object</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Title">_title</name>
      <comment>Set or Get the PopUp Title
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="TitleColor">_titlecolor</name>
      <comment>Set or Get the PopUp Title Color
</comment>
      <returntype>Object</returntype>
      <parameter>
        <name>Value</name>
        <type>Object</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Top">_top</name>
      <comment>Set or Get Top of a Custom PopUp
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Width">_width</name>
      <comment>Set or Get Width of a Custom PopUp
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AnimationIn">_animationin</name>
      <comment>Example:
&lt;code&gt;
PopUp.Animation = PopUp.ANIMATION_FLAT&lt;/code&gt;
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AnimationOut">_animationout</name>
      <comment>Set the PopUpOut Animation.
Options:
-ANIMATION_FLAT = 0
-ANIMATION_FADEIN = 1
-ANIMATION_FADEOUT = 2
-ANIMATION_BOUNCEDOWN  = 3
-ANIMATION_BOUNCEUP = 4
-ANIMATION_SHAKE = 5
-ANIMATION_CARDDOWN = 6
-ANIMATION_CARDUP = 7
-ANIMATION_ALERT = 8
-ANIMATION_CARNIVAL = 9
Example:
&lt;code&gt;
PopUp.Animation = PopUp.ANIMATION_FLAT&lt;/code&gt;
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="BackgroundImage">_backgroundimage</name>
      <comment>Set or Get the PopUp Background Image
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Icon">_icon</name>
      <comment>Set the PopUp Icon
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="IconColor">_iconcolor</name>
      <comment>Set the PopUp Icon Color
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Position">_position</name>
      <comment>Set the PopUp Position.
Options:
-H_TOP (DEFAULT) = 0 : Top of the Parent
-H_CENTER = 1 : Center of the Parent
-H_BOTTOM = 2 : Bottom of the Parent
Example:
&lt;code&gt;
PopUp.Position = PopUp.H_TOP&lt;/code&gt;
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="mView">_mview</name>
      <returntype>anywheresoftware.b4a.objects.B4XViewWrapper</returntype>
    </field>
    <field>
      <name DesignerName="mParent">_mparent</name>
      <returntype>anywheresoftware.b4a.objects.ActivityWrapper</returntype>
    </field>
    <field>
      <name DesignerName="mEventName">_meventname</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="mCallBack">_mcallback</name>
      <returntype>Object</returntype>
    </field>
    <field>
      <name DesignerName="mTag">_mtag</name>
      <returntype>Object</returntype>
    </field>
    <field>
      <name DesignerName="Progress">_progress</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="isCustom">_iscustom</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name DesignerName="isVisible">_isvisible</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name DesignerName="isStop">_isstop</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name DesignerName="lblIcon">_lblicon</name>
      <returntype>anywheresoftware.b4a.objects.LabelWrapper</returntype>
    </field>
    <field>
      <name DesignerName="lblContent">_lblcontent</name>
      <returntype>anywheresoftware.b4a.objects.LabelWrapper</returntype>
    </field>
    <field>
      <name DesignerName="lblTitle">_lbltitle</name>
      <returntype>anywheresoftware.b4a.objects.LabelWrapper</returntype>
    </field>
    <field>
      <name DesignerName="lblClose">_lblclose</name>
      <returntype>anywheresoftware.b4a.objects.LabelWrapper</returntype>
    </field>
    <field>
      <name DesignerName="pnlBackground">_pnlbackground</name>
      <returntype>anywheresoftware.b4a.objects.PanelWrapper</returntype>
    </field>
    <field>
      <name DesignerName="lblAccept">_lblaccept</name>
      <returntype>anywheresoftware.b4a.objects.LabelWrapper</returntype>
    </field>
    <field>
      <name DesignerName="lblCancel">_lblcancel</name>
      <returntype>anywheresoftware.b4a.objects.LabelWrapper</returntype>
    </field>
    <field>
      <name DesignerName="lblNeutral">_lblneutral</name>
      <returntype>anywheresoftware.b4a.objects.LabelWrapper</returntype>
    </field>
    <field>
      <name DesignerName="SWIPEABLE_VERTICAL">_swipeable_vertical</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="SWIPEABLE_HORIZONTAL">_swipeable_horizontal</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="H_TOP">_h_top</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="H_CENTER">_h_center</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="H_BOTTOM">_h_bottom</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANSWER_ACCEPT">_answer_accept</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANSWER_CANCEL">_answer_cancel</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANSWER_NEUTRAL">_answer_neutral</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="STYLE_NORMAL">_style_normal</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="STYLE_ACCEPT">_style_accept</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="STYLE_ACCEPTCANCEL">_style_acceptcancel</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="STYLE_ACCEPTCANCELNEUTRAL">_style_acceptcancelneutral</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="STYLE_CUSTOM">_style_custom</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_FLAT">_animation_flat</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_FADEIN">_animation_fadein</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_FADEOUT">_animation_fadeout</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_BOUNCEDOWN">_animation_bouncedown</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_BOUNCEUP">_animation_bounceup</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_SHAKE">_animation_shake</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_CARDDOWN">_animation_carddown</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_CARDUP">_animation_cardup</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_ALERT">_animation_alert</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_CARNIVAL">_animation_carnival</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_SMOOTHDOWN">_animation_smoothdown</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_SMOOTHUP">_animation_smoothup</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_VERTICAL">_animation_vertical</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_VERTICALCLOSE">_animation_verticalclose</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_BOUNCEIN">_animation_bouncein</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_BOUNCEOUT">_animation_bounceout</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ANIMATION_CUSTOM">_animation_custom</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="CustomViews">_customviews</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </field>
    <field>
      <name DesignerName="isExpanded">_isexpanded</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name DesignerName="Lst">_lst</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bitmapcreator._premultipliedcolor</name>
    <shortname>PremultipliedColor</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>a</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>r</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>g</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>b</name>
      <returntype>int</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bitmapcreator._argbcolor</name>
    <shortname>ARGBColor</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>a</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>r</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>g</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>b</name>
      <returntype>int</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bitmapcreator._drawtask</name>
    <shortname>DrawTask</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>Source</name>
      <returntype>Object</returntype>
    </field>
    <field>
      <name>SrcRect</name>
      <returntype>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</returntype>
    </field>
    <field>
      <name>TargetX</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>TargetY</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>SkipBlending</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>SrcScaleX</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>SrcScaleY</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>Degrees</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>Transform</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>IsCompressedSource</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>TargetBC</name>
      <returntype>b4a.insidecode.bitmapcreator</returntype>
    </field>
    <field>
      <name>IsCanvasTask</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>CanvasTask</name>
      <returntype>b4a.insidecode.bcpath._internalcanvasdrawtask</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bitmapcreator._compressedbc</name>
    <shortname>CompressedBC</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>Rows</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </field>
    <field>
      <name>mBuffer</name>
      <returntype>byte[]</returntype>
    </field>
    <field>
      <name>mWidth</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>mHeight</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>TargetRect</name>
      <returntype>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</returntype>
    </field>
    <field>
      <name>Cache</name>
      <returntype>b4a.insidecode.bitmapcreator._internalcompressedbccache</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bitmapcreator._internalcompressedbccache</name>
    <shortname>InternalCompressedBCCache</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>ColorsMap</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </field>
    <field>
      <name>mBuffer</name>
      <returntype>byte[]</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bitmapcreator._internalantialiasingbuffer</name>
    <shortname>InternalAntiAliasingBuffer</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>IntsArray</name>
      <returntype>int[]</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bitmapcreator._internalbccolumn</name>
    <shortname>InternalBCColumn</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>Values</name>
      <returntype>float[]</returntype>
    </field>
    <field>
      <name>StartY</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>EndY</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>LeftSide</name>
      <returntype>boolean</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bitmapcreator</name>
    <shortname>BitmapCreator</shortname>
    <owner>process</owner>
    <event>BitmapReady (bmp As B4XBitmap)</event>
    <method>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="ARGBToColor">_argbtocolor</name>
      <comment>Converts an ARGB value to a color int value.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>ARGB</name>
        <type>b4a.insidecode.bitmapcreator._argbcolor</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ARGBToPremultipliedColor">_argbtopremultipliedcolor</name>
      <comment>Converts an ARGB color to PremultipliedColor.
The Result parameter will hold the output.
</comment>
      <returntype>b4a.insidecode.bitmapcreator._premultipliedcolor</returntype>
      <parameter>
        <name>ARGB</name>
        <type>b4a.insidecode.bitmapcreator._argbcolor</type>
      </parameter>
      <parameter>
        <name>PM</name>
        <type>b4a.insidecode.bitmapcreator._premultipliedcolor</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AsyncDrawArc">_asyncdrawarc</name>
      <comment>Asynchronously draws an arc. Returns a DrawTask that should be added to the list of drawing tasks.
</comment>
      <returntype>b4a.insidecode.bitmapcreator._drawtask</returntype>
      <parameter>
        <name>X</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Radius</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StartingAngle</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>EndAngle</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AsyncDrawCircle">_asyncdrawcircle</name>
      <comment>Asynchronously draws a circle. Returns a DrawTask that should be added to the list of drawing tasks.
</comment>
      <returntype>b4a.insidecode.bitmapcreator._drawtask</returntype>
      <parameter>
        <name>X</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Radius</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AsyncDrawLine">_asyncdrawline</name>
      <comment>Asynchronously draws a line. Returns a DrawTask that should be added to the list of drawing tasks.
</comment>
      <returntype>b4a.insidecode.bitmapcreator._drawtask</returntype>
      <parameter>
        <name>X0</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y0</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>X1</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y1</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AsyncDrawPath">_asyncdrawpath</name>
      <comment>Asynchronously draws a path. Returns a DrawTask that should be added to the list of drawing tasks.
Note that you shouldn't modify the path while it is being drawn. You can use BCPath.Clone to create a copy.
</comment>
      <returntype>b4a.insidecode.bitmapcreator._drawtask</returntype>
      <parameter>
        <name>Path</name>
        <type>b4a.insidecode.bcpath</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AsyncDrawRect">_asyncdrawrect</name>
      <comment>Asynchronously draws a rectangle. Returns a DrawTask that should be added to the list of drawing tasks.
</comment>
      <returntype>b4a.insidecode.bitmapcreator._drawtask</returntype>
      <parameter>
        <name>Rect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AsyncDrawRectRounded">_asyncdrawrectrounded</name>
      <comment>Asynchronously draws a rectangle with round corners. Returns a DrawTask that should be added to the list of drawing tasks.
</comment>
      <returntype>b4a.insidecode.bitmapcreator._drawtask</returntype>
      <parameter>
        <name>Rect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>CornersRadius</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="BlendPixel">_blendpixel</name>
      <comment>Copies a single pixel from Source to this BC. If the pixel is non-opaque then it will blend with the current pixel.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Source</name>
        <type>b4a.insidecode.bitmapcreator</type>
      </parameter>
      <parameter>
        <name>SrcX</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>SrcY</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>TargetX</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>TargetY</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="BlendPixel2">_blendpixel2</name>
      <returntype>String</returntype>
      <parameter>
        <name>SrcPM</name>
        <type>b4a.insidecode.bitmapcreator._premultipliedcolor</type>
      </parameter>
      <parameter>
        <name>TargetX</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>TargetY</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ColorToARGB">_colortoargb</name>
      <comment>Converts color int to ARGBColor object.
The Result parameter will hold the output.
</comment>
      <returntype>b4a.insidecode.bitmapcreator._argbcolor</returntype>
      <parameter>
        <name>Clr</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Result</name>
        <type>b4a.insidecode.bitmapcreator._argbcolor</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CopyPixel">_copypixel</name>
      <comment>Copies a single pixel from Source to this BC.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Source</name>
        <type>b4a.insidecode.bitmapcreator</type>
      </parameter>
      <parameter>
        <name>SrcX</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>SrcY</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>TargetX</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>TargetY</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CopyPixelIgnoreSemiTransparent">_copypixelignoresemitransparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>Source</name>
        <type>b4a.insidecode.bitmapcreator</type>
      </parameter>
      <parameter>
        <name>SrcX</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>SrcY</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>TargetX</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>TargetY</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>SkipBlending</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CopyPixelsFromBitmap">_copypixelsfrombitmap</name>
      <comment>Extracts the pixels from the SourceBitmap and copies them.
Note that the source bitmap is first resized, if needed, to match the BitmapCreator dimensions.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>SourceBitmap</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CreateBrushFromBitmap">_createbrushfrombitmap</name>
      <comment>Creates a BCBrush from the given bitmap. You can reuse the brush.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>Bmp</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CreateBrushFromBitmapCreator">_createbrushfrombitmapcreator</name>
      <comment>Creates a BCBrush from the given BitmapCreator. You can reuse the brush.
Note that the BitmapCreator is not copied.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>BC</name>
        <type>b4a.insidecode.bitmapcreator</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CreateBrushFromColor">_createbrushfromcolor</name>
      <comment>Creates a BCBrush from the given color. You can reuse the brush.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CreateDrawTask">_createdrawtask</name>
      <comment>Creates a DrawTask object.
</comment>
      <returntype>b4a.insidecode.bitmapcreator._drawtask</returntype>
      <parameter>
        <name>Source</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>SrcRect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>TargetX</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>TargetY</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>SkipBlending</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawArc">_drawarc</name>
      <comment>Draws an arc and returns the created brush.
X / Y - Center position.
Radius - Arc radius.
Color - Drawing color.
Filled - Whether to fill the arc or not.
StrokeWidth - Stroke width (for non-full shapes).
StartingAngle - Measured in degrees, starting from hour 3.
SweepAngle - Measured in degrees. Positive is clockwise.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>X</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Radius</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StartingAngle</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>SweepAngle</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawArc2">_drawarc2</name>
      <comment>Similar to DrawArc. Expects a BCBrush instead of a color value.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>X</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Radius</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StartingAngle</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>SweepAngle</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawBitmap">_drawbitmap</name>
      <comment>Draws a bitmap to the buffer.
SkipBlending - Whether non-opaque pixels in the source bitmap should blend with the background.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Bmp</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
      <parameter>
        <name>TargetRect1</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>SkipBlending</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawBitmapCreator">_drawbitmapcreator</name>
      <comment>Draws the image stored in the Source BitmapCreator to this BitmapCreator.
Source - Source BitmapCreator
SrcRect - Defines the region in the Source BC that will be copied.
TargetX / TargetY - Top left point in the destination BC.
SkipBlending - Whether non-opaque pixels in the source bitmap should blend with the background.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Source</name>
        <type>b4a.insidecode.bitmapcreator</type>
      </parameter>
      <parameter>
        <name>SrcRect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>TargetX</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>TargetY</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>SkipBlending</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawBitmapCreatorsAsync">_drawbitmapcreatorsasync</name>
      <comment>Asynchronously draws all the draw tasks. Note that no other drawings should be made until the BitmapReady event is raised.
The 'bmp' parameter will not be initialized in B4J.
Target must be a class instance.
Example: &lt;code&gt;bc1.DrawBitmapCreatorsAsync(Me, "BC", Tasks)
Wait For BC_BitmapReady (bmp As B4XBitmap)
&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>DrawTasks</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawBitmapCreatorTransformed">_drawbitmapcreatortransformed</name>
      <comment>Draws a scaled and / or rotated BitmapCreator.
Task.TargetX / TargetY define the target center. This is different than the behavior in other methods.
Task.SkipBlending = True will treat all pixels with alpha &gt; 0 as solid colors and other pixels as transparent.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Task</name>
        <type>b4a.insidecode.bitmapcreator._drawtask</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawCircle">_drawcircle</name>
      <comment>Draws a a circle. Returns the color brush.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>X</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Radius</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawCircle2">_drawcircle2</name>
      <comment>Draws a circle.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>X</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Radius</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawCompressedBitmap">_drawcompressedbitmap</name>
      <comment>Draws a CompressedBC object created with BitmapCreator.ExtractCompressBC.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Source</name>
        <type>b4a.insidecode.bitmapcreator._compressedbc</type>
      </parameter>
      <parameter>
        <name>SrcRect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>TargetX</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>TargetY</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawLine">_drawline</name>
      <comment>Draws a line. Returns the color brush.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>X0</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y0</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>X1</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y1</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawLine2">_drawline2</name>
      <comment>Draws a line.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>X0</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y0</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>X1</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y1</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawPath">_drawpath</name>
      <comment>Draws a BCPath. Don't confuse with B4XPath or Path.
Returns the created color brush.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>Path</name>
        <type>b4a.insidecode.bcpath</type>
      </parameter>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawPath2">_drawpath2</name>
      <comment>Draws a BCPath. Don't confuse with B4XPath or Path.
Non-full paths: Connection segments are drawn between each two lines. You can disable it by setting BCPath.DrawConnectionSegments to False.
This will make the drawing twice as fast (in most cases it will be fast enough anyway).
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>Path</name>
        <type>b4a.insidecode.bcpath</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawRect">_drawrect</name>
      <comment>Draws a rectangle. Returns the color brush.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>Rect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawRect2">_drawrect2</name>
      <comment>Draws a rectangle.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>Rect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawRectRounded">_drawrectrounded</name>
      <comment>Draws a rectangle with round corners. Returns the color brush.
Note that CornersRadius is expected to be larger than StrokeWidth for unfilled shapes.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>Rect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>CornersRadius</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawRectRounded2">_drawrectrounded2</name>
      <comment>Draws a rectangle with round corners.
</comment>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
      <parameter>
        <name>Rect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>Brush</name>
        <type>b4a.insidecode.bcpath._bcbrush</type>
      </parameter>
      <parameter>
        <name>Filled</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>CornersRadius</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="DrawRotatedCBC">_drawrotatedcbc</name>
      <comment>Rotates with antialiasing.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>cbc</name>
        <type>b4a.insidecode.bitmapcreator._compressedbc</type>
      </parameter>
      <parameter>
        <name>Degrees</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>AABuffer</name>
        <type>b4a.insidecode.bitmapcreator._internalantialiasingbuffer</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ExtractCompressedBC">_extractcompressedbc</name>
      <returntype>b4a.insidecode.bitmapcreator._compressedbc</returntype>
      <parameter>
        <name>Rect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>Cache</name>
        <type>b4a.insidecode.bitmapcreator._internalcompressedbccache</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FillGradient">_fillgradient</name>
      <comment>Fills the rectangle with a gradient. Skips blending.
GradColors - An array of two or more colors that define the gradient.
Rect - The region that will be filled.
Orientation - One of the following: TL_BR, TOP_BOTTOM, TR_BL, LEFT_RIGHT, RIGHT_LEFT, BL_TR, BOTTOM_TOP, BR_TL and RECTANGLE.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>GradColors</name>
        <type>int[]</type>
      </parameter>
      <parameter>
        <name>Rect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
      <parameter>
        <name>Orientation</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FillRadialGradient">_fillradialgradient</name>
      <comment>Fills the rectangle with a radial gradient. Skips blending.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>GradColors</name>
        <type>int[]</type>
      </parameter>
      <parameter>
        <name>Rect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FillRect">_fillrect</name>
      <comment>DEPRECATED: use DrawRect instead.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Rect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FlipCompressedBitmap">_flipcompressedbitmap</name>
      <returntype>b4a.insidecode.bitmapcreator._compressedbc</returntype>
      <parameter>
        <name>Source</name>
        <type>b4a.insidecode.bitmapcreator._compressedbc</type>
      </parameter>
      <parameter>
        <name>Horizontal</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>Vertical</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="GetARGB">_getargb</name>
      <comment>Gets the color of the given point as an ARGB color.
The Result parameter stores the output.
</comment>
      <returntype>b4a.insidecode.bitmapcreator._argbcolor</returntype>
      <parameter>
        <name>x</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Result</name>
        <type>b4a.insidecode.bitmapcreator._argbcolor</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getBitmap" HideFromIDE="true">_getbitmap</name>
      <comment>Converts the bytes buffer to a bitmap.
</comment>
      <returntype>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</returntype>
    </method>
    <method>
      <name DesignerName="getBuffer" HideFromIDE="true">_getbuffer</name>
      <comment>Gets the internal buffer.
</comment>
      <returntype>byte[]</returntype>
    </method>
    <method>
      <name DesignerName="GetColor">_getcolor</name>
      <comment>Gets the color of the given point as an int value.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>x</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="GetPremultipliedColor">_getpremultipliedcolor</name>
      <comment>Gets the color of the given point as a premultiplied color. No conversion is required for this format.
The Result parameter stores the output.
</comment>
      <returntype>b4a.insidecode.bitmapcreator._premultipliedcolor</returntype>
      <parameter>
        <name>x</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Result</name>
        <type>b4a.insidecode.bitmapcreator._premultipliedcolor</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object and sets the bitmap dimensions.
Note that XUI library must be referenced as well.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsTransparent">_istransparent</name>
      <comment>Tests whether a given point is completely transparent.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>x</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ReplaceSemiTransparentPixels">_replacesemitransparentpixels</name>
      <comment>Replaces all semi-transparent pixels in the Rect with NewColor.
This can be useful to remove antialiasing effects.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>NewColor</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Rect</name>
        <type>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetARGB">_setargb</name>
      <comment>Sets the color of the specified point.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>x</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ARGB</name>
        <type>b4a.insidecode.bitmapcreator._argbcolor</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetBitmapToImageView">_setbitmaptoimageview</name>
      <comment>Similar to B4XView.SetBitmap. The difference is in B4A where the Gravity is set to FILL instead of CENTER.
This is useful when you want to use a scaled down bitmap.
In most cases you should use this method instead of B4XView.SetBitmap.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Bitmap</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
      <parameter>
        <name>ImageView</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetColor">_setcolor</name>
      <comment>Sets the color of the given pixel.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>x</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Clr</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetHSV">_sethsv</name>
      <comment>Sets the color of the specified point.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>x</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>alpha</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>h</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>s</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>v</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetPremultipliedColor">_setpremultipliedcolor</name>
      <comment>Sets the color of the specified point.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>x</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Premultiplied</name>
        <type>b4a.insidecode.bitmapcreator._premultipliedcolor</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Bitmap">_bitmap</name>
      <comment>Converts the bytes buffer to a bitmap.
</comment>
      <returntype>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</returntype>
    </property>
    <property>
      <name DesignerName="Buffer">_buffer</name>
      <comment>Gets the internal buffer.
</comment>
      <returntype>byte[]</returntype>
    </property>
    <field>
      <name DesignerName="mWidth">_mwidth</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="mHeight">_mheight</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="TargetRect">_targetrect</name>
      <returntype>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</returntype>
    </field>
    <field>
      <name DesignerName="SAME_COLOR_LENGTH_FOR_CACHE">_same_color_length_for_cache</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="MAX_SAME_COLOR_SIZE">_max_same_color_size</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="AlphaThresholdForCBCExtraction">_alphathresholdforcbcextraction</name>
      <returntype>int</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bcpath._internalbcpathcolumndata</name>
    <shortname>InternalBCPathColumnData</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>MinY</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>MaxY</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>StartPoint</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>EndPoint</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>SignY</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>LastY</name>
      <returntype>float</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bcpath._internalbcpathpointdata</name>
    <shortname>InternalBCPathPointData</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>X</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>Y</name>
      <returntype>float</returntype>
    </field>
    <field>
      <name>ColumnData</name>
      <returntype>b4a.insidecode.bcpath._internalbcpathcolumndata</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bcpath._bcbrush</name>
    <shortname>BCBrush</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>Source</name>
      <returntype>b4a.insidecode.bitmapcreator</returntype>
    </field>
    <field>
      <name>SrcOffsetX</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>SrcOffsetY</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>IsColorSource</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>BlendAll</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>BlendBorders</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>ColorPM</name>
      <returntype>b4a.insidecode.bitmapcreator._premultipliedcolor</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bcpath._internalcanvasdrawtask</name>
    <shortname>InternalCanvasDrawTask</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>Brush</name>
      <returntype>b4a.insidecode.bcpath._bcbrush</returntype>
    </field>
    <field>
      <name>Code</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>Values</name>
      <returntype>float[]</returntype>
    </field>
    <field>
      <name>Filled</name>
      <returntype>boolean</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.bcpath</name>
    <shortname>BCPath</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Clone">_clone</name>
      <comment>Creates a copy of the path. This is used by BitmapCreator.AsyncDrawPath.
</comment>
      <returntype>b4a.insidecode.bcpath</returntype>
    </method>
    <method>
      <name DesignerName="FindBoundingRect">_findboundingrect</name>
      <comment>Returns the path bounding rectangle.
</comment>
      <returntype>anywheresoftware.b4a.objects.B4XCanvas.B4XRect</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the path and sets the first point.
</comment>
      <returntype>b4a.insidecode.bcpath</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>X</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Invalidate">_invalidate</name>
      <comment>Call Invalidate if you modifed the Points list directly.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="LineTo">_lineto</name>
      <comment>Adds a line to the given point.
</comment>
      <returntype>b4a.insidecode.bcpath</returntype>
      <parameter>
        <name>X</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PrepareForFilling">_prepareforfilling</name>
      <comment>Internal sub.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="RemoveLastPoint">_removelastpoint</name>
      <comment>Removes the last point.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Reset">_reset</name>
      <comment>Resets the path.
</comment>
      <returntype>b4a.insidecode.bcpath</returntype>
      <parameter>
        <name>X</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>float</type>
      </parameter>
    </method>
    <field>
      <name DesignerName="Points">_points</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </field>
    <field>
      <name DesignerName="InternalCounterClockWise">_internalcounterclockwise</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name DesignerName="DrawConnectionSegments">_drawconnectionsegments</name>
      <returntype>boolean</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.blurreddialog</name>
    <shortname>BlurredDialog</shortname>
    <owner>activity</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Close">_close</name>
      <returntype>anywheresoftware.b4a.keywords.Common.ResumableSubWrapper</returntype>
    </method>
    <method>
      <name DesignerName="Close2">_close2</name>
      <returntype>anywheresoftware.b4a.keywords.Common.ResumableSubWrapper</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Show">_show</name>
      <returntype>void</returntype>
      <parameter>
        <name>Parent</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
      <parameter>
        <name>Panel</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
      <parameter>
        <name>BlurScale</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Show2">_show2</name>
      <returntype>void</returntype>
      <parameter>
        <name>Parent</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
      <parameter>
        <name>Panel</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper</type>
      </parameter>
      <parameter>
        <name>BlurScale</name>
        <type>int</type>
      </parameter>
    </method>
  </class>
  <class>
    <name>b4a.insidecode.cmap._countproduct</name>
    <shortname>CountProduct</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Inicializa los campos a sus valores por defecto.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>v</name>
      <returntype>b4a.insidecode.vbox</returntype>
    </field>
    <field>
      <name>cnt</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name>pr</name>
      <returntype>int</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.cmap</name>
    <shortname>CMap</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="color">_color</name>
      <returntype>b4a.insidecode.bitmapcreator._argbcolor</returntype>
      <parameter>
        <name>c</name>
        <type>b4a.insidecode.bitmapcreator._argbcolor</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getColorIndex">_getcolorindex</name>
      <returntype>int</returntype>
      <parameter>
        <name>r</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>g</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>b</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object. You can add parameters to this method if needed.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="nearest">_nearest</name>
      <returntype>b4a.insidecode.bitmapcreator._argbcolor</returntype>
      <parameter>
        <name>clor</name>
        <type>b4a.insidecode.bitmapcreator._argbcolor</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="palette">_palette</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="push">_push</name>
      <returntype>String</returntype>
      <parameter>
        <name>box</name>
        <type>b4a.insidecode.vbox</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="quantize">_quantize</name>
      <returntype>b4a.insidecode.cmap</returntype>
      <parameter>
        <name>pixels</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
      <parameter>
        <name>maxcolors</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="size">_size</name>
      <returntype>int</returntype>
    </method>
    <field>
      <name DesignerName="vboxes">_vboxes</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </field>
  </class>
  <class>
    <name>b4a.insidecode.colourthief</name>
    <shortname>ColourThief</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getColorMap">_getcolormap</name>
      <returntype>b4a.insidecode.cmap</returntype>
      <parameter>
        <name>sourceImage</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
      <parameter>
        <name>colorCount</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getColorMap2">_getcolormap2</name>
      <returntype>b4a.insidecode.cmap</returntype>
      <parameter>
        <name>sourceImage</name>
        <type>b4a.insidecode.bitmapcreator</type>
      </parameter>
      <parameter>
        <name>colorCount</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>quality</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ignoreWhite</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getDominantColor">_getdominantcolor</name>
      <returntype>b4a.insidecode.bitmapcreator._argbcolor</returntype>
      <parameter>
        <name>sourceImage</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getDominantColor2">_getdominantcolor2</name>
      <returntype>b4a.insidecode.bitmapcreator._argbcolor</returntype>
      <parameter>
        <name>sourceImage</name>
        <type>b4a.insidecode.bitmapcreator</type>
      </parameter>
      <parameter>
        <name>quality</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ignoreWhite</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getPalette">_getpalette</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>sourceImage</name>
        <type>anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper</type>
      </parameter>
      <parameter>
        <name>colorCount</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getPalette2">_getpalette2</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>sourceImage</name>
        <type>b4a.insidecode.bitmapcreator</type>
      </parameter>
      <parameter>
        <name>colorCount</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>quality</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ignoreWhite</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object. You can add parameters to this method if needed.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
  </class>
  <class>
    <name>b4a.insidecode.vbox</name>
    <shortname>VBox</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Prueba si acaso el objeto ha sido inicializado.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="avrg">_avrg</name>
      <returntype>b4a.insidecode.bitmapcreator._argbcolor</returntype>
      <parameter>
        <name>recompute</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="clone">_clone</name>
      <returntype>b4a.insidecode.vbox</returntype>
    </method>
    <method>
      <name DesignerName="contains">_contains</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>pixel</name>
        <type>b4a.insidecode.bitmapcreator._argbcolor</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="count">_count</name>
      <returntype>int</returntype>
      <parameter>
        <name>recompute</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getColorIndex">_getcolorindex</name>
      <returntype>int</returntype>
      <parameter>
        <name>r</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>g</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>b</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getVolume">_getvolume</name>
      <returntype>int</returntype>
      <parameter>
        <name>recompute</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>rr1</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>rr2</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>gg1</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>gg2</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>bb1</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>bb2</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>hist</name>
        <type>int[]</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="toString">_tostring</name>
      <returntype>String</returntype>
    </method>
    <field>
      <name DesignerName="r1">_r1</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="r2">_r2</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="g1">_g1</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="g2">_g2</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="b1">_b1</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="b2">_b2</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="avg">_avg</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </field>
    <field>
      <name DesignerName="volume">_volume</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="cnt">_cnt</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="product">_product</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="histo">_histo</name>
      <returntype>int[]</returntype>
    </field>
  </class>
  <version>1</version>
</root>