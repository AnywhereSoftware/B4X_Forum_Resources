Build1=Default,de.donmanfred.cast
File1=1.bal
File2=donmanfred.png
File3=layout1.bal
File4=MediaControl.bal
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
Group=Default Group
IconFile=
Library1=core
Library2=appcompat
Library3=casty
Library4=javaobject
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.basic4ppc.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="7" android:targetSdkVersion="21"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~~\n~SetApplicationAttribute(android:theme, "@style/MyAppTheme")~\n~~\n~CreateResource(values, theme.xml,~\n~<resources>~\n~    <style name="MyAppTheme" parent="Theme.AppCompat.Light.NoActionBar">~\n~        <item name="colorPrimary">#0098FF</item>~\n~        <item name="colorPrimaryDark">#007CF5</item>~\n~        <item name="colorAccent">#AAAA00</item>~\n~        <item name="windowNoTitle">true</item>~\n~        <item name="windowActionBar">false</item>~\n~    </style>~\n~</resources>~\n~)~\n~AddApplicationText(~\n~<meta-data android:value="F5C69F4F" android:name="app_id"></meta-data>  ~\n~)~\n~AddApplicationText(~\n~<activity~\n~  android:name="pl.droidsonroids.casty.ExpandedControlsActivity"~\n~  android:theme="@style/MyAppTheme" />~\n~<meta-data~\n~  android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME"~\n~  android:value="de.donmanfred.CastOptionsProvider" />~\n~<receiver android:name="com.google.android.gms.cast.framework.media.MediaIntentReceiver" />~\n~~\n~<service android:name="com.google.android.gms.cast.framework.media.MediaNotificationService" />~\n~<service android:name="com.google.android.gms.cast.framework.ReconnectionService" />~\n~)~\n~CreateResourceFromFile(Macro, FirebaseAnalytics.GooglePlayBase)
Module1=Starter
NumberOfFiles=4
NumberOfLibraries=4
NumberOfModules=1
Version=8.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Casting
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

#Extends: android.support.v7.app.AppCompatActivity
#AdditionalJar: com.google.android.gms:play-services-cast-framework
#AdditionalJar: casty.aar	
	
Sub Process_Globals

End Sub

Sub Globals
	Private ACToolBarLight1 As ACToolBarLight
	Private ToolbarHelper As ACActionBar
	Dim cast As Casty
	Dim ActiveSession As CastSession
	Dim sessiontimer As Timer
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'optProvider.Initialize("","123")
	cast.Initialize("Casty") '"4F8B3483" ' "E3AAA8CE")
	sessiontimer.Initialize("Session",1000)
	
	Activity.LoadLayout("1")
	Dim bd As BitmapDrawable
	bd.Initialize(LoadBitmap(File.DirAssets, "donmanfred.png"))
	ACToolBarLight1.NavigationIconDrawable = bd
	ToolbarHelper.Initialize
	ToolbarHelper.ShowUpIndicator = False 'set to true to show the up arrow
	ACToolBarLight1.InitMenuListener
End Sub

Sub ACToolBarLight1_NavigationItemClick
	Log("click1")
End Sub

Sub ACToolBarLight1_MenuItemClick (Item As ACMenuItem)
	Log($"ACToolBarLight1_MenuItemClick(${Item.Id})"$)
End Sub

Sub Activity_CreateMenu(Menu As ACMenu)
	Menu.Clear
	cast.addMediaRouteMenuItem(Menu)
	Menu.Add(2, 4, "Overflow2", Null)
	Menu.Add(3, 5, "Overflow3", Null)
End Sub


#Region Casty
Sub Casty_onSessionEnded(session As Object, info As Int)
	Log($"Casty_onSessionEnded()"$)
	Dim sess As CastSession = session
	Log($"Session: ID ${sess.SessionId} ${sess.Category}"$)
End Sub
Sub Casty_onSessionEnding(session As Object)
	Log($"Casty_onSessionEnding(${session})"$)
	Dim sess As CastSession = session
	Log($"Session: ID ${sess.SessionId} ${sess.Category}"$)
End Sub
Sub Casty_onSessionResumed(session As Object, info As Boolean)
	Log($"Casty_onSessionResumed(${session}, ${info})"$)
	Dim sess As CastSession = session
	Log($"Session: ID ${sess.SessionId} ${sess.Category}"$)
End Sub
Sub Casty_onSessionResumeFailed(session As Object, info As Int)
	Log($"Casty_onSessionResumeFailed(${session}, ${info})"$)
	Dim sess As CastSession = session
	Log($"Session: ID ${sess.SessionId} ${sess.Category}"$)
End Sub
Sub Casty_onSessionResuming(session As Object, info As String)
	Log($"Casty_onSessionResuming(${session}, ${info})"$)
	Dim sess As CastSession = session
	Log($"Session: ID ${sess.SessionId} ${sess.Category}"$)
End Sub
Sub Casty_onSessionStarted(session As Object, info As String)
	Log($"Casty_onSessionStarted(${session}, ${info})"$)
	Dim sess As CastSession = session
	Log($"Session: ID ${sess.SessionId} ${sess.Category}"$)
	ActiveSession = sess
	sessiontimer.Enabled = True
End Sub
Sub Casty_onSessionStartFailed(session As Object, info As Int)
	Log($"Casty_onSessionStartFailed(${session}, ${info})"$)
	Dim sess As CastSession = session
	Log($"Session: ID ${sess.SessionId} ${sess.Category}"$)
End Sub
Sub Casty_onSessionStarting(session As Object)
	Log($"Casty_onSessionStarting(${session})"$)
	Dim sess As CastSession = session
	Log($"Session: ID ${sess.SessionId} ${sess.Category}"$)
End Sub
Sub Casty_onSessionSuspended(session As Object, info As Int)
	Log($"Casty_onSessionSuspended(${session}, ${info})"$)
	Dim sess As CastSession = session
	Log($"Session: ID ${sess.SessionId} ${sess.Category}"$)
End Sub
Sub Casty_onCastStateChanged(State As Int)
	Dim value As Int
	value = State
	Dim status As String
	Select value
		Case 1
			status = "No Cast Devices found"
		Case 2
			status = "Not Connected"
		Case 3
			status = "Connecting to Castdevice"
		Case 4
			status = "Connected"
	End Select
	Log($"Casty_onCastStateChanged(${status})"$)
End Sub
Sub Casty_onCastSessionUpdated(session As Object, RemoteMediaClient As Object)
	Log($"Casty_onCastSessionUpdated()"$)
	Dim sess As CastSession = session
End Sub
Sub Casty_onConnected()
	Log($"Casty_onConnected()"$)
	Dim mb As MediaDataBuilder
	mb.Initialize("","http://distribution.bbb3d.renderfarming.net/video/mp4/bbb_sunflower_1080p_30fps_normal.mp4").setAutoPlay(True).setContentType("videos(mp4").setMediaType(1).setStreamType(1).setTitle("DonManfred presents").setSubtitle("B4A Casting Video").addPhotoUrl("https://peach.blender.org/wp-content/uploads/bbb-splash.png?x11217")

	cast.loadMediaAndPlayInBackground(mb.build)
End Sub
Sub Casty_onDisConnected()
	Log($"Casty_onDisConnected()"$)
End Sub
#End Region

Sub Session_Tick
	Log($"${ActiveSession.SessionId}: Time left: ${ConvertMillisecondsToString(ActiveSession.SessionRemainingTimeMs)}"$)
End Sub
Sub ConvertMillisecondsToString(t As Long) As String
	Dim hours, minutes, seconds As Int
	hours = t / DateTime.TicksPerHour
	minutes = (t Mod DateTime.TicksPerHour) / DateTime.TicksPerMinute
	seconds = (t Mod DateTime.TicksPerMinute) / DateTime.TicksPerSecond
	Return $"$1.0{hours}:$2.0{minutes}:$2.0{seconds}"$
End Sub

Sub Activity_Resume
	sessiontimer.Enabled = True
End Sub
Sub Activity_Pause (UserClosed As Boolean)
	sessiontimer.Enabled = False
End Sub

#If Java
public boolean _onCreateOptionsMenu(android.view.Menu menu) {
    if (processBA.subExists("activity_createmenu")) {
        processBA.raiseEvent2(null, true, "activity_createmenu", false, new de.amberhome.objects.appcompat.ACMenuWrapper(menu));
        return true;
    }
    else
        return false;
}
#End If

