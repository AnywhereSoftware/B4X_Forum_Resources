<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.claude.amadu.firebase.FirebaseWrapper</name>
        <shortname>Firebase</shortname>
        <owner>process</owner>
        <event>Ready(Success As Boolean)</event>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>Initialize2</name>
            <comment>Initialize the firestore library eventName - The name to raise events
 projectId - Firebase project ID databaseName - Firestore Database name
 Example: &lt;code&gt;
 Firebase.Initialize2("Firebase","fir-xxxxxxx")
 &lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>projectId</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>databaseURL</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>isFirestore</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isFirestore</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initialize the firestore library eventName - The name to raise events
 projectId - Firebase project ID databaseName - Firestore Database name
 Example: &lt;code&gt;
 Firebase.Initialize("Firebase","fir-xxxxxxx")
 &lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>projectId</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.claude.amadu.firebase.storage.FirebaseStorageWrapper</name>
        <shortname>FirebaseStorage</shortname>
        <owner>process</owner>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>Upload</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>bucket</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.claude.amadu.firestore.FirestoreWrapper</name>
        <shortname>Firestore</shortname>
        <owner>process</owner>
        <event>DocumentChanged(Data As Map)</event>
        <event>CollectionChanged(Data As Map)</event>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>CollectionListen</name>
            <comment>Fetches and listens to changes in a collectionPath</comment>
            <returntype>com.google.cloud.firestore.ListenerRegistration</returntype>
            <parameter>
                <name>collectionPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetCollection</name>
            <comment>Fetches an entire collectionPath</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>collectionPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveListener</name>
            <comment>Removes a listiner</comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>com.google.cloud.firestore.ListenerRegistration</type>
            </parameter>
        </method>
        <method>
            <name>DeleteDocument</name>
            <comment>Deletes a document in a collectionPath</comment>
            <returntype>void</returntype>
            <parameter>
                <name>collectionPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>document</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>UpdateDocument</name>
            <comment>Updates a document in a collectionPath</comment>
            <returntype>void</returntype>
            <parameter>
                <name>collectionPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>document</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initialize the firestore library 
 eventName - The name to raise events
 projectId - Firebase project ID 
 databaseName - Firestore Database name(Optional default is (default))
 Example: &lt;code&gt;
 Firestore.Initialize("Firestore","")
 &lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>databaseName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GenerateDocumentId</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetDocument</name>
            <comment>Gets a single document in a collectionPath</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>collectionPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>document</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CreateDocument</name>
            <comment>Creates a document in a collectionPath</comment>
            <returntype>void</returntype>
            <parameter>
                <name>collectionPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>document</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>DeleteDocumentField</name>
            <comment>Deletes a field in a document in a collectionPath</comment>
            <returntype>void</returntype>
            <parameter>
                <name>collectionPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>document</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DeleteCollection</name>
            <comment>Delete a collectionPath in batches to avoid out-of-memory errors. Batch size may
 be tuned based on document size (atmost 1MB) and application requirements.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>collectionPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>batchSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DocumentListen</name>
            <comment>Fetches and listens to changes in a document</comment>
            <returntype>com.google.cloud.firestore.ListenerRegistration</returntype>
            <parameter>
                <name>collectionPath</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>document</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>Object</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <field>
            <name>TYPE_MODIFIED</name>
            <comment></comment>
            <returntype EnumType="true">com.google.cloud.firestore.DocumentChange.Type</returntype>
        </field>
        <field>
            <name>TYPE_ADDED</name>
            <comment></comment>
            <returntype EnumType="true">com.google.cloud.firestore.DocumentChange.Type</returntype>
        </field>
        <field>
            <name>TYPE_REMOVED</name>
            <comment></comment>
            <returntype EnumType="true">com.google.cloud.firestore.DocumentChange.Type</returntype>
        </field>
    </class>
    <class>
        <name>com.claude.amadu.firestore.PathBuilder</name>
        <shortname>PathBuilder</shortname>
        <owner>process</owner>
        <method>
            <name>Append</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.PathBuilder</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Complete</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.PathBuilder</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.claude.amadu.firestore.filter.FilterWrapper</name>
        <shortname>Filter</shortname>
        <owner>process</owner>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>Or</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.filter.FilterWrapper</returntype>
            <parameter>
                <name>filters</name>
                <type>com.google.cloud.firestore.Filter</type>
            </parameter>
        </method>
        <method>
            <name>Get</name>
            <comment></comment>
            <returntype>com.google.cloud.firestore.Filter</returntype>
        </method>
        <method>
            <name>EqualTo</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.filter.FilterWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>GreaterThanOrEqualTo</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.filter.FilterWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.claude.amadu.firestore.listenerregistration.ListenerRegistrationWrapper</name>
        <shortname>ListenerRegistration</shortname>
        <owner>process</owner>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>Get</name>
            <comment>Gets a Listener object</comment>
            <returntype>com.claude.amadu.firestore.listenerregistration.ListenerRegistrationWrapper</returntype>
            <parameter>
                <name>listener</name>
                <type>com.google.cloud.firestore.ListenerRegistration</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Remove</name>
            <comment>Removes a Listener</comment>
            <returntype>void</returntype>
        </method>
    </class>
    <class>
        <name>com.claude.amadu.firestore.query.QueryWrapper</name>
        <shortname>Query</shortname>
        <owner>process</owner>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>OrderBy</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>whereArrayContainsAny</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>java.util.List</type>
            </parameter>
        </method>
        <method>
            <name>WhereNotEqualTo</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>OrderBy2</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type EnumType="true">com.google.cloud.firestore.Query.Direction</type>
            </parameter>
        </method>
        <method>
            <name>WhereGreaterThan</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>WhereLessThan</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>WhereNotIn</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>java.util.List</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>collectionPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>EndAt</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>fieldvalues</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>WhereArrayContains</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>WhereIn</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>java.util.List</type>
            </parameter>
        </method>
        <method>
            <name>StartAt</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>fieldvalues</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Get</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
        </method>
        <method>
            <name>WhereEqualTo</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>WhereGreaterThanOrEqualTo</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>field</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>StartAfter</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>fieldvalues</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Limit</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>limit</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Where</name>
            <comment></comment>
            <returntype>com.claude.amadu.firestore.query.QueryWrapper</returntype>
            <parameter>
                <name>filter</name>
                <type>com.google.cloud.firestore.Filter</type>
            </parameter>
        </method>
        <field>
            <name>DIRECTION_DESC</name>
            <comment></comment>
            <returntype EnumType="true">com.google.cloud.firestore.Query.Direction</returntype>
        </field>
        <field>
            <name>DIRECTION_ASC</name>
            <comment></comment>
            <returntype EnumType="true">com.google.cloud.firestore.Query.Direction</returntype>
        </field>
    </class>
    <class>
        <name>com.claude.amadu.realtimedatabase.RealtimeDatabaseWrapper</name>
        <shortname>RealtimeDatabase</shortname>
        <owner>process</owner>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Child</name>
            <comment></comment>
            <returntype>com.claude.amadu.realtimedatabase.RealtimeDatabaseWrapper</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetValue</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <version>1.09</version>
    <author>Claude Obiri Amadu</author>
    <dependsOn>animal-sniffer-annotations-1.23</dependsOn>
    <dependsOn>annotations-4.1.1.4</dependsOn>
    <dependsOn>api-common-2.12.0</dependsOn>
    <dependsOn>auto-value-annotations-1.10.1</dependsOn>
    <dependsOn>checker-qual-3.32.0</dependsOn>
    <dependsOn>commons-codec-1.15</dependsOn>
    <dependsOn>commons-logging-1.2</dependsOn>
    <dependsOn>conscrypt-openjdk-uber-2.5.2</dependsOn>
    <dependsOn>error_prone_annotations-2.18.0</dependsOn>
    <dependsOn>failureaccess-1.0.1</dependsOn>
    <dependsOn>firebase-admin-9.2.0</dependsOn>
    <dependsOn>gapic-google-cloud-storage-v2-2.22.4-alpha</dependsOn>
    <dependsOn>gax-2.29.0</dependsOn>
    <dependsOn>gax-grpc-2.29.0</dependsOn>
    <dependsOn>gax-httpjson-0.114.0</dependsOn>
    <dependsOn>google-api-client-2.2.0</dependsOn>
    <dependsOn>google-api-client-gson-2.2.0</dependsOn>
    <dependsOn>google-api-services-storage-v1-rev20230301-2.0.0</dependsOn>
    <dependsOn>google-auth-library-credentials-1.17.0</dependsOn>
    <dependsOn>google-auth-library-oauth2-http-1.17.0</dependsOn>
    <dependsOn>google-cloud-core-2.19.0</dependsOn>
    <dependsOn>google-cloud-core-grpc-2.19.0</dependsOn>
    <dependsOn>google-cloud-core-http-2.19.0</dependsOn>
    <dependsOn>google-cloud-firestore-3.13.0</dependsOn>
    <dependsOn>google-cloud-storage-2.22.4</dependsOn>
    <dependsOn>google-http-client-1.43.1</dependsOn>
    <dependsOn>google-http-client-apache-v2-1.42.3</dependsOn>
    <dependsOn>google-http-client-appengine-1.43.1</dependsOn>
    <dependsOn>google-http-client-gson-1.42.3</dependsOn>
    <dependsOn>google-http-client-jackson2-1.43.1</dependsOn>
    <dependsOn>google-oauth-client-1.34.1</dependsOn>
    <dependsOn>grpc-alts-1.55.1</dependsOn>
    <dependsOn>grpc-api-1.55.1</dependsOn>
    <dependsOn>grpc-auth-1.55.1</dependsOn>
    <dependsOn>grpc-context-1.55.1</dependsOn>
    <dependsOn>grpc-core-1.55.1</dependsOn>
    <dependsOn>grpc-googleapis-1.55.1</dependsOn>
    <dependsOn>grpc-google-cloud-storage-v2-2.22.4-alpha</dependsOn>
    <dependsOn>grpc-grpclb-1.55.1</dependsOn>
    <dependsOn>grpc-netty-shaded-1.55.1</dependsOn>
    <dependsOn>grpc-protobuf-1.55.1</dependsOn>
    <dependsOn>grpc-protobuf-lite-1.55.1</dependsOn>
    <dependsOn>grpc-rls-1.55.1</dependsOn>
    <dependsOn>grpc-services-1.55.1</dependsOn>
    <dependsOn>grpc-stub-1.55.1</dependsOn>
    <dependsOn>grpc-xds-1.55.1</dependsOn>
    <dependsOn>gson-2.10.1</dependsOn>
    <dependsOn>guava-31.1-jre</dependsOn>
    <dependsOn>httpclient-4.5.14</dependsOn>
    <dependsOn>httpcore-4.4.16</dependsOn>
    <dependsOn>j2objc-annotations-1.3</dependsOn>
    <dependsOn>jackson-core-2.14.2</dependsOn>
    <dependsOn>javax.annotation-api-1.3.2</dependsOn>
    <dependsOn>jsr305-3.0.2</dependsOn>
    <dependsOn>listenablefuture-9999.0-empty-to-avoid-conflict-with-guava</dependsOn>
    <dependsOn>netty-buffer-4.1.94.Final</dependsOn>
    <dependsOn>netty-codec-4.1.94.Final</dependsOn>
    <dependsOn>netty-codec-http-4.1.94.Final</dependsOn>
    <dependsOn>netty-common-4.1.94.Final</dependsOn>
    <dependsOn>netty-handler-4.1.94.Final</dependsOn>
    <dependsOn>netty-resolver-4.1.94.Final</dependsOn>
    <dependsOn>netty-transport-4.1.94.Final</dependsOn>
    <dependsOn>netty-transport-native-unix-common-4.1.94.Final</dependsOn>
    <dependsOn>opencensus-api-0.31.1</dependsOn>
    <dependsOn>opencensus-contrib-grpc-util-0.31.1</dependsOn>
    <dependsOn>opencensus-contrib-http-util-0.31.1</dependsOn>
    <dependsOn>opencensus-proto-0.2.0</dependsOn>
    <dependsOn>perfmark-api-0.26.0</dependsOn>
    <dependsOn>protobuf-java-3.23.2</dependsOn>
    <dependsOn>protobuf-java-util-3.23.2</dependsOn>
    <dependsOn>proto-google-cloud-firestore-bundle-v1-3.13.0</dependsOn>
    <dependsOn>proto-google-cloud-firestore-v1-3.13.0</dependsOn>
    <dependsOn>proto-google-cloud-storage-v2-2.22.4-alpha</dependsOn>
    <dependsOn>proto-google-common-protos-2.20.0</dependsOn>
    <dependsOn>proto-google-iam-v1-1.15.0</dependsOn>
    <dependsOn>re2j-1.6</dependsOn>
    <dependsOn>slf4j-api-2.0.7</dependsOn>
    <dependsOn>threetenbp-1.6.8</dependsOn>
    <dependsOn>grpc-okhttp-1.58.0</dependsOn>
</root>
