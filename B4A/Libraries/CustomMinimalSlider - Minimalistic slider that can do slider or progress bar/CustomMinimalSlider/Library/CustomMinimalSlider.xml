<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <dependsOn>animationplus</dependsOn>
  <dependsOn>ahviewpager</dependsOn>
  <dependsOn>animation</dependsOn>
  <dependsOn>android-support-v4</dependsOn>
  <class>
    <name>b4a.example.simplecsb.demo.one.customminimalslider</name>
    <shortname>CustomMinimalSlider</shortname>
    <comment>Class module
</comment>
    <owner>activity</owner>
    <event>Moved(Index As Int, Value As Int)</event>
    <event>Released(Index As Int, Value As Int)</event>
    <method>
      <name>IsInitialized</name>
      <comment>Verifica se l'oggetto sia stato inizializzato.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddFadeTransition">_addfadetransition</name>
      <comment>Creates an alpha animation. This animation affects the view's transparency (fading effect).
The alpha values are between 0 to 1 where 0 is fully transparent and 1 is fully opaque.

NOTE: this animation is automatically added to AnimationSet and can be started from
PlayAlphaTransition for a single animation or PlayAnimationSet for multiple and complex animations.

Duration:                the animation duration in milliseconds.
FromAlpha:            the first frame value
ToAlpha                 the last frame value
RepeatCount:         the number of times the animation will repeat. A value of 0 means that it will play once. Set to -1 or COUNT_INFINITE for a non stopping animation.
RepeatMode:          the repeat mode. Relevant when RepeatCount is larger than 0 (or -1).
default is REPEAT_RESTART which means that the animation will restart each time. REPEAT_REVERSE causes the animation to repeat in reverse each time.
Interpolator:           the acceleration curve for this animation. Defaults to a linear interpolation.  Use one of the INTERPOLATOR constants or number (0-8)
Param :                   Interpolator parameter if needed, Factor, Tension or Cycles. If parameter is not required just pass -1
INTERPOLATOR_LINEAR,  INTERPOLATOR_ACCELERATE_DECELERATE, INTERPOLATOR_BOUNCE have no parameters.

Parameters:

INTERPOLATOR_ACCELERATE :                          Float Factor                     -      The acceleration rate (default is 1.0)
INTERPOLATOR_ANTICIPATE:                             Float Tension                  -      The amount of tension to apply (default is 2.0)
INTERPOLATOR_ANTICIPATE_OVERSHOOT:      Float Tension                 -       The amount of tension to apply (default is 2.0)
INTERPOLATOR_CYCLE:                                      Integer Cycles                 -      The number of cycles (default is 1)
INTERPOLATOR_DECELERATE:                           Float Factor                     -       The deceleration rate (default is 1.0)
INTERPOLATOR_OVERSHOOT:                            Float Tension                  -      The amount of tension to apply (default is 2.0)

Raise event Alpha_Finished
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Duration</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>FromAlpha</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>ToAlpha</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>RepeatCount</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>RepeatMode</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Interpolator</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Param</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRotateCenterTransition">_addrotatecentertransition</name>
      <comment>Similar to AddRotateTransition, but with the pivot set to the given view center.

NOTE: this animation is automatically added to AnimationSet and can be started from
PlayRotateCenterTransition for a single animation or PlayAnimationSet for multiple and complex animations.

Duration:               the animation duration in milliseconds
FromDegrees:       the first frame rotation value
ToDegrees:           the last frame rotation value
View:                      set pivot to the given view center
RepeatCount:        the number of times the animation will repeat. A value of 0 means that it will play once. Set to -1 or COUNT_INFINITE for a non stopping animation
RepeatMode:         the repeat mode. Relevant when RepeatCount is larger than 0 (or -1)
default is REPEAT_RESTART which means that the animation will restart each time. REPEAT_REVERSE causes the animation to repeat in reverse each time
Interpolator:          the acceleration curve for this animation. Defaults to a linear interpolation.  Use one of the INTERPOLATOR constants or number (0-8)
Param :                   Interpolator parameter if needed, Factor, Tension or Cycles. If parameter is not required just pass -1
INTERPOLATOR_LINEAR,  INTERPOLATOR_ACCELERATE_DECELERATE, INTERPOLATOR_BOUNCE have no parameters.

Parameters:

INTERPOLATOR_ACCELERATE :                          Float Factor                     -      The acceleration rate (default is 1.0)
INTERPOLATOR_ANTICIPATE:                             Float Tension                  -      The amount of tension to apply (default is 2.0)
INTERPOLATOR_ANTICIPATE_OVERSHOOT:      Float Tension                 -       The amount of tension to apply (default is 2.0)
INTERPOLATOR_CYCLE:                                      Integer Cycles                 -      The number of cycles (default is 1)
INTERPOLATOR_DECELERATE:                           Float Factor                     -       The deceleration rate (default is 1.0)
INTERPOLATOR_OVERSHOOT:                            Float Tension                  -      The amount of tension to apply (default is 2.0)

Raise event RotateCenter_Finished
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Duration</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>FromDegrees</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>ToDegrees</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>RepeatCount</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>RepeatMode</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Interpolator</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Param</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddRotateTransition">_addrotatetransition</name>
      <comment>Creates a rotation animation. The view will rotate between the given values.
Rotation pivot is set to the top left corner.

NOTE: this animation is automatically added to AnimationSet and can be started from
PlayRotateTransition for a single animation or PlayAnimationSet for multiple and complex animations.

Duration:               the animation duration in milliseconds
FromDegrees:       the first frame rotation value
ToDegrees:            the last frame rotation value
RepeatCount:        the number of times the animation will repeat. A value of 0 means that it will play once. Set to -1 or COUNT_INFINITE for a non stopping animation
RepeatMode:         the repeat mode. Relevant when RepeatCount is larger than 0 (or -1)
 default is REPEAT_RESTART which means that the animation will restart each time. REPEAT_REVERSE causes the animation to repeat in reverse each time
Interpolator:          the acceleration curve for this animation. Defaults to a linear interpolation.  Use one of the INTERPOLATOR constants or number (0-8)
Param :                   Interpolator parameter if needed, Factor, Tension or Cycles. If parameter is not required just pass -1
INTERPOLATOR_LINEAR,  INTERPOLATOR_ACCELERATE_DECELERATE, INTERPOLATOR_BOUNCE have no parameters.

Parameters:

INTERPOLATOR_ACCELERATE :                          Float Factor                     -      The acceleration rate (default is 1.0)
INTERPOLATOR_ANTICIPATE:                             Float Tension                  -      The amount of tension to apply (default is 2.0)
INTERPOLATOR_ANTICIPATE_OVERSHOOT:      Float Tension                 -       The amount of tension to apply (default is 2.0)
INTERPOLATOR_CYCLE:                                      Integer Cycles                 -      The number of cycles (default is 1)
INTERPOLATOR_DECELERATE:                           Float Factor                     -       The deceleration rate (default is 1.0)
INTERPOLATOR_OVERSHOOT:                            Float Tension                  -      The amount of tension to apply (default is 2.0)

Raise event Rotate_Finished
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Duration</name>
        <type>long</type>
      </parameter>
      <parameter>
        <name>FromDegrees</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>ToDegrees</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>RepeatCount</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>RepeatMode</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Interpolator</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Param</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddScaleCenterTransition">_addscalecentertransition</name>
      <comment>Similar to AddScaleTransition with a pivot set to the given view center.

NOTE: this animation is automatically added to AnimationSet and can be started from
PlayScaleCenterTransition for a single animation or PlayAnimationSet for multiple and complex animations.

Duration:        	     the animation duration in milliseconds
FromX:             		   the first frame horizontal scale
ToX:                		  the last frame horizontal scale
FromY:             		   the first frame vertical scale
ToY:                 		  the last frame vertical scale
View:                 		  set pivot to the given view center
RepeatCount:   	    the number of times the animation will repeat. A value of 0 means that it will play once. Set to -1 or COUNT_INFINITE for a non stopping animation
RepeatMode:          the repeat mode. Relevant when RepeatCount is larger than 0 (or -1)
                          	  default is REPEAT_RESTART which means that the animation will restart each time. REPEAT_REVERSE causes the animation to repeat in reverse each time
Interpolator:     		 the acceleration curve for this animation. Defaults to a linear interpolation.  Use one of the INTERPOLATOR constants or number (0-8)
Param :                   Interpolator parameter if needed, Factor, Tension or Cycles. If parameter is not required just pass -1
INTERPOLATOR_LINEAR,  INTERPOLATOR_ACCELERATE_DECELERATE, INTERPOLATOR_BOUNCE have no parameters.

Parameters:

INTERPOLATOR_ACCELERATE :                          Float Factor                     -      The acceleration rate (default is 1.0)
INTERPOLATOR_ANTICIPATE:                             Float Tension                  -      The amount of tension to apply (default is 2.0)
INTERPOLATOR_ANTICIPATE_OVERSHOOT:      Float Tension                 -       The amount of tension to apply (default is 2.0)
INTERPOLATOR_CYCLE:                                      Integer Cycles                 -      The number of cycles (default is 1)
INTERPOLATOR_DECELERATE:                           Float Factor                     -       The deceleration rate (default is 1.0)
INTERPOLATOR_OVERSHOOT:                            Float Tension                  -      The amount of tension to apply (default is 2.0)

Raise event ScaleCenter_Finished
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Duration</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>FromX</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>ToX</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>FromY</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>ToY</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>RepeatCount</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>RepeatMode</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Interpolator</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Param</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddScaleTransition">_addscaletransition</name>
      <comment>Creates a scale animation. The view will be scaled during the animation.
The scaling pivot will be set to the top left corner.

NOTE: this animation is automatically added to AnimationSet and can be started from
PlayScaleTransition for a single animation or PlayAnimationSet for multiple and complex animations.

Duration:               the animation duration in milliseconds
FromX:                   the first frame horizontal scale
ToX:                  		 the last frame horizontal scale
FromY:              	  the first frame vertical scale
ToY:                  		 the last frame vertical scale
RepeatCount:   		the number of times the animation will repeat. A value of 0 means that it will play once. Set to -1 or COUNT_INFINITE for a non stopping animation
RepeatMode:    		the repeat mode. Relevant when RepeatCount is larger than 0 (or -1)
default is REPEAT_RESTART which means that the animation will restart each time. REPEAT_REVERSE causes the animation to repeat in reverse each time
Interpolator:     		the acceleration curve for this animation. Defaults to a linear interpolation.  Use one of the INTERPOLATOR constants or number (0-8)
Param :                   Interpolator parameter if needed, Factor, Tension or Cycles. If parameter is not required just pass -1
INTERPOLATOR_LINEAR,  INTERPOLATOR_ACCELERATE_DECELERATE, INTERPOLATOR_BOUNCE have no parameters.

Parameters:

INTERPOLATOR_ACCELERATE :                          Float Factor                     -      The acceleration rate (default is 1.0)
INTERPOLATOR_ANTICIPATE:                             Float Tension                  -      The amount of tension to apply (default is 2.0)
INTERPOLATOR_ANTICIPATE_OVERSHOOT:      Float Tension                 -       The amount of tension to apply (default is 2.0)
INTERPOLATOR_CYCLE:                                      Integer Cycles                 -      The number of cycles (default is 1)
INTERPOLATOR_DECELERATE:                           Float Factor                     -       The deceleration rate (default is 1.0)
INTERPOLATOR_OVERSHOOT:                            Float Tension                  -      The amount of tension to apply (default is 2.0)

Raise event Scale_Finished
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Duration</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>FromX</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>ToX</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>FromY</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>ToY</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>RepeatCount</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>RepeatMode</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Interpolator</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Param</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddTranslateTransition">_addtranslatetransition</name>
      <comment>Creates  a translation animation. The view will move according to the given values.

NOTE: this animation is automatically added to AnimationSet and can be started from
PlayTranslateTransition a for single animation or PlayAnimationSet for multiple and complex animations.

Duration:         	    the animation duration in milliseconds
FromX:             	     the first frame horizontal scale
ToX:                 	    the last frame horizontal scale
FromY:             	     the first frame vertical scale
ToY:                 	    the last frame vertical scale
RepeatCount:   	   the number of times the animation will repeat. A value of 0 means that it will play once. Set to -1 or COUNT_INFINITE for a non stopping animation
RepeatMode:    	   the repeat mode. Relevant when RepeatCount is larger than 0 (or -1)
default is REPEAT_RESTART which means that the animation will restart each time. REPEAT_REVERSE causes the animation to repeat in reverse each time
Interpolator:    	    the acceleration curve for this animation. Defaults to a linear interpolation.  Use one of the INTERPOLATOR constants or number (0-8)
Param :                   Interpolator parameter if needed, Factor, Tension or Cycles. If parameter is not required just pass -1
INTERPOLATOR_LINEAR,  INTERPOLATOR_ACCELERATE_DECELERATE, INTERPOLATOR_BOUNCE have no parameters.

Parameters:

INTERPOLATOR_ACCELERATE :                          Float Factor                     -      The acceleration rate (default is 1.0)
INTERPOLATOR_ANTICIPATE:                             Float Tension                  -      The amount of tension to apply (default is 2.0)
INTERPOLATOR_ANTICIPATE_OVERSHOOT:      Float Tension                 -       The amount of tension to apply (default is 2.0)
INTERPOLATOR_CYCLE:                                      Integer Cycles                 -      The number of cycles (default is 1)
INTERPOLATOR_DECELERATE:                           Float Factor                     -       The deceleration rate (default is 1.0)
INTERPOLATOR_OVERSHOOT:                            Float Tension                  -      The amount of tension to apply (default is 2.0)

Raise event Translate_Finished
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Duration</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>FromX</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>ToX</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>FromY</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>ToY</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>RepeatCount</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>RepeatMode</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Interpolator</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Param</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AnimateColor">_animatecolor</name>
      <comment>Changes the background color with a transition animation between the FromColor and the ToColor colors.
Note that the animation will only be applied when running on Android 3+ devices.

Duration:   animation duration measured in milliseconds
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Duration</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>FromColor</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ToColor</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AnimateLayout">_animatelayout</name>
      <comment>Changes the control layout with an animation effect.

Duration:    animation duration measured in milliseconds
Left:            new left position after animation
Top:            new top position after animation
Width:         new width size after animation
Height:        new height size after animation
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Duration</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Left</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Top</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AnimatePosition">_animateposition</name>
      <comment>Changes the control Left and Top properties with an animation effect.

Duration:   animation duration in milliseconds
Left:           new left position after animation
Top:           new top position after animation
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Duration</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Left</name>
        <type>double</type>
      </parameter>
      <parameter>
        <name>Top</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Create">_create</name>
      <comment>
Create a CustomMinimalSlider object.

After Initialize, this is a first step to create a CustomMinimalSlider. Other methods can be used after this method.

NOTE: Slider have automatic orientation, if With &gt; Height, it is placed horizontally, otherwise vertically.

Parent:              the parent in witch to initialize the CustomMinimalSlider control, can be Activity or Panel or View
Module:             the module that receive events
EventName:        the name of Sub that receive events
Left:                 the Left property of the slider
Top:                 the Top property of the slider
Width:               the Width of the slider
Height:              the Height of the slider
ColorClear:           the internal background color of the control
ColorFill:               the bar color
ColorBorder:        the border color
StrokeWidth:       the border width
ShowValue:         set label Value visibility
TouchControl:      if True can be used a MultiTouch control to set the slider value and event _Moved is raised
Visible:                set the initial visible state

Example:
&lt;code&gt;
Dim CMS1 As CustomMinimalSlider
CMS1.Initialize
CMS1.Create(Panel1, Me, "CMS1", 10,50,500,300, Colors.Black, Colors.Green, Colors.White, 1, True, True, True)
&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Parent</name>
        <type>anywheresoftware.b4a.objects.PanelWrapper</type>
      </parameter>
      <parameter>
        <name>Module</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Left</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Top</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ColorClear</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ColorFill</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ColorBorder</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>ShowTag</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>ShowValue</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>TouchControl</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>Visible</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CreateBlock">_createblock</name>
      <comment>
Create a block of CustomMinimalSliders.

NOTE: Sliders have automatic orientation, if each slider With &gt; Height, it is placed horizontally, otherwise vertically.

IMPORTANT:    If this method is used, no need to initialize a Class for each CustomMinimalSlider, just Initialize first element
                      in the block and Class is automatically initialized for all CMSs in the block.
                      After Initialize first element in the block, this is a first step to create a CustomMinimalSlider block. Other methods can be used after this method.

Parent:              the parent in witch to initialize the CustomMinimalSlider controls, can be Activity or Panel or View
Module:             the module that receive events
EventName:       the name of Sub that receive events
SliderArray():      the slider array
Left:                 the Left property of the slider
Top:                the Top property of the slider
Width:              the Width of the slider
Height:             the Height of the slider
ColorClear:         the internal background color of the control
ColorFill:             the bar color
ColorBorder:      the border color
StrokeWidth:     the border width
ShowValue:       set label Value visibility
TouchControl:    if True can be used a MultiTouch control to set the slider value and event Moved is returned
Visible:              set the initial visible state

Example:
&lt;code&gt;
Dim CMS(10) As CustomMinimalSlider
CMS(0).Initialize
CMS(0).CreateBlock(Panel1, Me, "CMS", CMS, 10,50,500,300, Colors.Black, Colors.Green, Colors.White, 1, True, True, True)
&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Parent</name>
        <type>anywheresoftware.b4a.objects.PanelWrapper</type>
      </parameter>
      <parameter>
        <name>Module</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>SliderArray</name>
        <type>b4a.example.simplecsb.demo.one.customminimalslider[]</type>
      </parameter>
      <parameter>
        <name>Left</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Top</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ColorClear</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ColorFill</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ColorBorder</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StrokeWidth</name>
        <type>float</type>
      </parameter>
      <parameter>
        <name>ShowTag</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>ShowValue</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>TouchControl</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>Visible</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FireEventMove">_fireeventmove</name>
      <comment>Set if _Move event will be fired when moved the slider.
(By default True)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>val</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FireEventRelease">_fireeventrelease</name>
      <comment>Set if Up event will be fired when released the slider.
(By default True)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>val</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getAlpha" HideFromIDE="true">_getalpha</name>
      <returntype>double</returntype>
    </method>
    <method>
      <name DesignerName="getBottom" HideFromIDE="true">_getbottom</name>
      <comment>Gets the control Bottom.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getCanvas" HideFromIDE="true">_getcanvas</name>
      <comment>Get the Slider Canvas.
</comment>
      <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper</returntype>
    </method>
    <method>
      <name DesignerName="getEnabled" HideFromIDE="true">_getenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getHeight" HideFromIDE="true">_getheight</name>
      <comment>Gets the control Height.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getLeft" HideFromIDE="true">_getleft</name>
      <comment>Gets the control Left.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getMaxValue" HideFromIDE="true">_getmaxvalue</name>
      <comment>Get or Set the Slider MaxValue.
Default MaxValue if no chanded is 100
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getPanel" HideFromIDE="true">_getpanel</name>
      <comment>Get the Slider Panel.
</comment>
      <returntype>anywheresoftware.b4a.objects.PanelWrapper</returntype>
    </method>
    <method>
      <name DesignerName="getRight" HideFromIDE="true">_getright</name>
      <comment>Gets the control Right.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getTag" HideFromIDE="true">_gettag</name>
      <comment>Get or Set the Slider Tag.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTop" HideFromIDE="true">_gettop</name>
      <comment>Gets the control Top.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getTouchControl" HideFromIDE="true">_gettouchcontrol</name>
      <comment>Gets or Sets the control touch property.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getTouchOffset" HideFromIDE="true">_gettouchoffset</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getUserChanged" HideFromIDE="true">_getuserchanged</name>
      <comment>Gets if Moved Action depends from user action, changed with touch (true) or changed at runtime code (false).
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <comment>Get or Set the Slider value.
Call this after Initialize or CreateBlock
Default range if MaxValue no chanded is (0-100)
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getVisible" HideFromIDE="true">_getvisible</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getWidth" HideFromIDE="true">_getwidth</name>
      <comment>Gets the control Width.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initialize a CustomMinimalSlider object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PlayAnimationSet">_playanimationset</name>
      <comment>Plays an AnimationSet that contain all previously added animations.

Duration:                 the animations duration (milliseconds). This overwrite all single animation durations
StartOffset              sets when the animation should begin after this method was called (milliseconds)
ShareInterpolator:  pass True if all the animations in this set should use the interpolator associated with this AnimationSet, pass False if each animation should use its own interpolator
Interpolator:            the AnimationSet Interpolator, pass INTERPOLATOR constants.
NOTE: this is relevant only if ShareInterpolator is True and all the animations in this set should use the same interpolator associated with this AnimationSet
Param :                    Interpolator parameter if needed, Factor, Tension or Cycles
INTERPOLATOR_LINEAR,  INTERPOLATOR_ACCELERATE_DECELERATE, INTERPOLATOR_BOUNCE have no parameters.
NOTE: this is relevant only if ShareInterpolator is True, if not or if parameter is not required just pass -1

Parameters:

INTERPOLATOR_ACCELERATE :                          Float Factor                     -      The acceleration rate (default is 1.0)
INTERPOLATOR_ANTICIPATE:                             Float Tension                  -      The amount of tension to apply (default is 2.0)
INTERPOLATOR_ANTICIPATE_OVERSHOOT:      Float Tension                 -       The amount of tension to apply (default is 2.0)
INTERPOLATOR_CYCLE:                                      Integer Cycles                 -      The number of cycles (default is 1)
INTERPOLATOR_DECELERATE:                           Float Factor                     -       The deceleration rate (default is 1.0)
INTERPOLATOR_OVERSHOOT:                            Float Tension                  -      The amount of tension to apply (default is 2.0)

Raise event AnimationSet_Finished
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Duration</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
      <parameter>
        <name>ShareInterpolator</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>Interpolator</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Param</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PlayFadeTransition">_playfadetransition</name>
      <comment>Plays an Alpha animation previously added with AddFadeTransition method .

StartOffset:     add a delay before animation should begin after this method is called (milliseconds)
Delay:             delay this animation (milliseconds). This is offset for this single element in the FadeTransition
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
      <parameter>
        <name>Delay</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PlayRotateCenterTransition">_playrotatecentertransition</name>
      <comment>Plays a RotateCenter animation previously added with AddRotateCenterTransition method.
NOTE: this method supports only one animation at a time . To use more animations simultaneously use the method PlayAnimationSet instead.

StartOffset:     add a delay before animation should begin after this method was called (milliseconds)
Delay:             delay this animation (milliseconds). This is offset for this single element in the RotateCenterTransition
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
      <parameter>
        <name>Delay</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PlayRotateTransition">_playrotatetransition</name>
      <comment>Plays a Rotate animation previously added with AddRotateTransition method.
NOTE: this method supports only one animation at time . To use more animations simultaneously use the method PlayAnimationSet instead.

StartOffset:     add a delay before animation should begin after this method was called (milliseconds)
Delay:             delay this animation (milliseconds). This is offset for this single element in the RotateTransition
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
      <parameter>
        <name>Delay</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PlayScaleCenterTransition">_playscalecentertransition</name>
      <comment>Plays a ScaleCenter animation previously added with AddScaleCenterTransition method.
NOTE: this method supports only one animation at time . To use more animations simultaneously use the method PlayAnimationSet instead.

StartOffset:     add a delay before animation should begin after this method is called (milliseconds)
Delay:             delay this animation (milliseconds). This is offset for this single element in the ScaleCenterTransition
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
      <parameter>
        <name>Delay</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PlayScaleTransition">_playscaletransition</name>
      <comment>Plays a Scale animation previously added  with AddScaleTransition method.
NOTE: this method supports only one animation at a time . To use more animations simultaneously use the method PlayAnimationSet instead.

StartOffset:     add a delay before animation should begin after this method is called (milliseconds)
Delay:             delay this animation (milliseconds). This is offset for this single element in the ScaleTransition
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
      <parameter>
        <name>Delay</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PlayTranslateTransition">_playtranslatetransition</name>
      <comment>Plays a TranslateTransition previously added with AddTranslateTransition method.
NOTE: this method supports only one animation at time . To use more animations simultaneously use the method PlayAnimationSet instead.

StartOffset:     add a delay before animation should begin after this method is called (milliseconds)
Delay:             delay this animation (milliseconds). This is offset for this single element in the TranslateTransition
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
      <parameter>
        <name>Delay</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <comment>Remove this control and free ram from it's resource.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setAlpha" HideFromIDE="true">_setalpha</name>
      <comment>Gets or Sets the control alpha:  0 is tranparent, 1 (default) is fully.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Alpha</name>
        <type>double</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAnimFade_StartOffset" HideFromIDE="true">_setanimfade_startoffset</name>
      <returntype>String</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAnimRotate_StartOffset" HideFromIDE="true">_setanimrotate_startoffset</name>
      <returntype>String</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAnimRotateCenter_StartOffset" HideFromIDE="true">_setanimrotatecenter_startoffset</name>
      <returntype>String</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAnimScale_StartOffset" HideFromIDE="true">_setanimscale_startoffset</name>
      <returntype>String</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAnimScaleCenter_StartOffset" HideFromIDE="true">_setanimscalecenter_startoffset</name>
      <returntype>String</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAnimTranslate_StartOffset" HideFromIDE="true">_setanimtranslate_startoffset</name>
      <returntype>String</returntype>
      <parameter>
        <name>StartOffset</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnabled" HideFromIDE="true">_setenabled</name>
      <comment>Gets or Sets whether the control is enabled.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMaxValue" HideFromIDE="true">_setmaxvalue</name>
      <returntype>String</returntype>
      <parameter>
        <name>MaxValue</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTag" HideFromIDE="true">_settag</name>
      <returntype>String</returntype>
      <parameter>
        <name>Tag</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTouchControl" HideFromIDE="true">_settouchcontrol</name>
      <returntype>String</returntype>
      <parameter>
        <name>val</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTouchOffset" HideFromIDE="true">_settouchoffset</name>
      <comment>Gets or Sets the touch offset

For example:
by set it to 0.5 when the touch is 50% MaxValue will be reached
by set it to 0.25 when the touch is 25% MaxValue will be reached
by set it to 2.0 when the touch is 100% the 50% will be reached
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Offset</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setVisible" HideFromIDE="true">_setvisible</name>
      <comment>Gets or Sets whether the control is visible.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Visible</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="UseViewPager">_useviewpager</name>
      <comment>Set CustomMinimalSlider object to be used on top of ViewPager.
This avoid touch event conflicts.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ViewPager</name>
        <type>de.amberhome.viewpager.AHViewPager</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Alpha">_alpha</name>
      <comment>Gets or Sets the control alpha:  0 is tranparent, 1 (default) is fully.
</comment>
      <returntype>double</returntype>
      <parameter>
        <name>Value</name>
        <type>double</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Bottom">_bottom</name>
      <comment>Gets the control Bottom.
</comment>
      <returntype>int</returntype>
    </property>
    <property>
      <name DesignerName="Canvas">_canvas</name>
      <comment>Get the Slider Canvas.
</comment>
      <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper</returntype>
    </property>
    <property>
      <name DesignerName="Enabled">_enabled</name>
      <comment>Gets or Sets whether the control is enabled.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Height">_height</name>
      <comment>Gets the control Height.
</comment>
      <returntype>int</returntype>
    </property>
    <property>
      <name DesignerName="Left">_left</name>
      <comment>Gets the control Left.
</comment>
      <returntype>int</returntype>
    </property>
    <property>
      <name DesignerName="MaxValue">_maxvalue</name>
      <comment>Get or Set the Slider MaxValue.
Default MaxValue if no chanded is 100
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Panel">_panel</name>
      <comment>Get the Slider Panel.
</comment>
      <returntype>anywheresoftware.b4a.objects.PanelWrapper</returntype>
    </property>
    <property>
      <name DesignerName="Right">_right</name>
      <comment>Gets the control Right.
</comment>
      <returntype>int</returntype>
    </property>
    <property>
      <name DesignerName="Tag">_tag</name>
      <comment>Get or Set the Slider Tag.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Top">_top</name>
      <comment>Gets the control Top.
</comment>
      <returntype>int</returntype>
    </property>
    <property>
      <name DesignerName="TouchControl">_touchcontrol</name>
      <comment>Gets or Sets the control touch property.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="TouchOffset">_touchoffset</name>
      <comment>Gets or Sets the touch offset

For example:
by set it to 0.5 when the touch is 50% MaxValue will be reached
by set it to 0.25 when the touch is 25% MaxValue will be reached
by set it to 2.0 when the touch is 100% the 50% will be reached
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="UserChanged">_userchanged</name>
      <comment>Gets if Moved Action depends from user action, changed with touch (true) or changed at runtime code (false).
</comment>
      <returntype>boolean</returntype>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <comment>Get or Set the Slider value.
Call this after Initialize or CreateBlock
Default range if MaxValue no chanded is (0-100)
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Visible">_visible</name>
      <comment>Gets or Sets whether the control is visible.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Width">_width</name>
      <comment>Gets the control Width.
</comment>
      <returntype>int</returntype>
    </property>
    <property>
      <name DesignerName="AnimFade_StartOffset">_animfade_startoffset</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AnimRotate_StartOffset">_animrotate_startoffset</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AnimRotateCenter_StartOffset">_animrotatecenter_startoffset</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AnimScale_StartOffset">_animscale_startoffset</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AnimScaleCenter_StartOffset">_animscalecenter_startoffset</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AnimTranslate_StartOffset">_animtranslate_startoffset</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="TagLabel">_taglabel</name>
      <returntype>anywheresoftware.b4a.objects.LabelWrapper</returntype>
    </field>
    <field>
      <name DesignerName="ValueLabel">_valuelabel</name>
      <returntype>anywheresoftware.b4a.objects.LabelWrapper</returntype>
    </field>
    <field>
      <name DesignerName="INTERPOLATOR_LINEAR">_interpolator_linear</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="INTERPOLATOR_BOUNCE">_interpolator_bounce</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="INTERPOLATOR_ACCELERATE">_interpolator_accelerate</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="INTERPOLATOR_ACCELERATE_DECELERATE">_interpolator_accelerate_decelerate</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="INTERPOLATOR_ANTICIPATE">_interpolator_anticipate</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="INTERPOLATOR_ANTICIPATE_OVERSHOOT">_interpolator_anticipate_overshoot</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="INTERPOLATOR_CYCLE">_interpolator_cycle</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="INTERPOLATOR_DECELERATE">_interpolator_decelerate</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="INTERPOLATOR_OVERSHOOT">_interpolator_overshoot</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="COUNT_INFINITE">_count_infinite</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="REPEAT_RESTART">_repeat_restart</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="REPEAT_REVERSE">_repeat_reverse</name>
      <returntype>int</returntype>
    </field>
  </class>
  <version>1.16</version>
  <author>Massimo Meli</author>
</root>