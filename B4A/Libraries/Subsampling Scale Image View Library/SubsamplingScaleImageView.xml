<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.pendrush.wrapper.ssiw.SsivWrap</name>
        <shortname>SubsamplingScaleImageView</shortname>
        <objectwrapper>com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView</objectwrapper>
        <owner>activity</owner>
        <event>Click</event>
        <event>LongClick</event>
        <method>
            <name>ScaleAndCenter</name>
            <comment>Externally change the scale and translation of the source image.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>xPoint</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>yPoint</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>panelWrapper</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>labelWrapper</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>map</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>ResetScaleAndCenter</name>
            <comment>Fully zoom out and return the image to the middle of the screen.
 This might be useful if you have a view pager and want images
 to be reset when the user has moved to another page.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetBackgroundImage">SetBackgroundImageNew</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.drawable.BitmapDrawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Recycle</name>
            <comment>Releases all resources the view is using and resets the state, nulling any fields that use significant memory.
 After you have called this method, the view can be re-used by setting a new image. Settings are remembered
 but state (scale and center) is forgotten. You can restore these yourself if required.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinScale</name>
            <returntype>float</returntype>
            <comment>Returns the minimum allowed scale.
 The minimum scale as a source/view pixels ratio.</comment>
        </property>
        <property>
            <name>CenterPointX</name>
            <returntype>float</returntype>
            <comment>Returns the source point X at the center of the view.
 The source coordinates current at the center of the view.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>CenterPointY</name>
            <returntype>float</returntype>
            <comment>Returns the source point Y at the center of the view.
 The source coordinates current at the center of the view.</comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Image</name>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Set the image source.</comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>rotation</name>
                <type>float</type>
            </parameter>
            <comment>The degrees that the view is rotated around the pivot point.</comment>
        </property>
        <property>
            <name>PanEnabled</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>enabled</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <comment>Returns True if pan gesture detection is enabled.</comment>
        </property>
        <property>
            <name>IsReady</name>
            <returntype>java.lang.Boolean</returntype>
            <comment>Call to find whether the view is initialised, has dimensions, and will display an image on
 the next draw. This is called once the base layer tiles of the full size image are loaded.
 True if the view is ready to display an image and accept touch gestures.</comment>
        </property>
        <property>
            <name>DoubleTapZoomDpi</name>
            <parameter>
                <name>dpi</name>
                <type>int</type>
            </parameter>
            <comment>This allows you to express the scale the image will zoom in to when double
 tapped in terms of the image pixel density. Values lower than the max scale will
 be ignored. A sensible starting point is 160 - the default used by this view.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Padding</name>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxScale</name>
            <returntype>float</returntype>
            <comment>Returns the maximum allowed scale.
 The maximum scale as a source/view pixels ratio.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ZoomEnabled</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>enabled</name>
                <type>java.lang.Boolean</type>
            </parameter>
            <comment>Returns True if zoom gesture detection is enabled.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <version>0.8</version>
    <author>Original author: https://github.com/davemorrissey/subsampling-scale-image-view - B4a Wrapper: Pendrush</author>
    <dependsOn>subsampling-scale-image-view.aar</dependsOn>
</root>
