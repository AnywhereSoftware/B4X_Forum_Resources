Build1=Default,b4a.example
Build2=SphereMapsSrl,sphm.tester
File1=Layout.bal
FileGroup1=Default Group
Group=Default Group
Library1=core
Library2=modbustcp
Library3=reflection
Library4=xui
Library5=javaobject
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="30"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~AddPermission(android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS)~\n~
Module1=Starter
NumberOfFiles=1
NumberOfLibraries=5
NumberOfModules=1
Version=11.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4A TCP
	#VersionCode: 2
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
	Private ModbusClient As ModbusTCP
	Private COMParameters As ConnectionParams
	Private ModbusState As Boolean = False
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("Layout")
	RequestPowerMngt
	ModbusClient.Initialize(Me,"ModbusClient",1)
	COMParameters.Initialize
	COMParameters = ModbusClient.CreateConnection("192.168.178.42",502,3600,200)
	SetQuery
End Sub

Sub SetQuery()
	Dim Myquery1 As ModbusQuery = ModbusClient.CreateQuery(1,0,100)
	Dim Myquery2 As ModbusQuery = ModbusClient.CreateQuery(3,0,100)
	
	ModbusClient.AddToQuery(Myquery1)
	ModbusClient.AddToQuery(Myquery2)
End Sub
Sub ModbusClient_ServiceState(State As Boolean)
	ModbusState = State
End Sub

Sub Activity_Resume
	If ModbusState = False Then
		ModbusClient.StartCOM(COMParameters)
	End If
End Sub

Sub Activity_Pause (UserClosed As Boolean)
	If UserClosed Then
		ModbusClient.StopCOM
	End If
End Sub

Sub Button1_Click
	Dim MyCoils() As Boolean = ModbusClient.GetCoil()
	Dim MyHolds() As Short = ModbusClient.GetHolds()
'	xui.MsgboxAsync($"Coil ID:0 Value:${MyCoils(0)} "$,"REGISTER")
	ModbusClient.SetCoil(0,Not(MyCoils(0)))
	Dim Value(10) As Short
	For i = 0 To Value.Length - 1
		Value(i) = MyHolds(i) + 1
	Next
	ModbusClient.SetMultipleHold(1,Value)
End Sub

Public Sub RequestPowerMngt()
	Private Api As Int
	Private r As Reflector
 
	Api = r.GetStaticField("android.os.Build$VERSION", "SDK_INT")
	Log(Api)
 
	If Api >= 23 Then
		Dim JavaObject1 As JavaObject
		JavaObject1.InitializeContext
		Dim Ignoring As Boolean=JavaObject1.RunMethod("isIgnoringBatteryOptimizations", Null)
		If Ignoring=False Then
			Dim JavaObject1 As JavaObject
			JavaObject1.InitializeContext
			JavaObject1.RunMethod("ShowPermissionDialog", Null)
		End If
		Log(JavaObject1.RunMethod("isIgnoringBatteryOptimizations", Null))
'		Return JavaObject1.RunMethod("isIgnoringBatteryOptimizations", Null)
	Else
'		Return True
	End If
#If JAVA
import android.content.Context;
import android.content.Intent;
import android.os.PowerManager;
import android.provider.Settings;
import android.net.Uri;
import anywheresoftware.b4a.BA;

public boolean isIgnoringBatteryOptimizations(){
Context context=this;
String packageName = context.getPackageName();
PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
return pm.isIgnoringBatteryOptimizations(packageName);
}

public void ShowPermissionDialog(){
    Intent intent = new Intent();
    Context context=this;
    String packageName = context.getPackageName();
    PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
    if (pm.isIgnoringBatteryOptimizations(packageName)){
        BA.LogInfo("isIgnoringBatteryOptimizations TRUE");
        intent.setAction(Settings.ACTION_IGNORE_BATTERY_OPTIMIZATION_SETTINGS);
    } else {
        BA.LogInfo("isIgnoringBatteryOptimizations FALSE");
        intent.setAction(Settings.ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS);
        intent.setData(Uri.parse("package:" + packageName));
    }
    context.startActivity(intent);
}
#End If
End Sub