Build1=Default,b4a.example.iic
File1=1.bal
File2=form.png
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
IconFile=
Library1=core
Library2=stringutils
Library3=okhttputils2
Library4=phone
Library5=webviewsettings
Library6=webviewextras
Library7=webviewextras2
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~~\n~
Module1=ImageInternetChooser
Module2=Starter
NumberOfFiles=2
NumberOfLibraries=7
NumberOfModules=2
Version=9.5
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: ImageInternetChooser B4A example
	#VersionCode: 1
	#VersionName: 0.1
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
End Sub

Sub Globals
	Private iic As ImageInternetChooser
	Private pnl As Panel

End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("1")
	Activity.Title = Application.LabelName
	iic.Initialize(Me, "https://www.google.com/search?tbm=isch&q=", pnl)	''iic.Initialize(Me, "https://yandex.ru/images/search?isize=small&text=", pnl)
	
End Sub

Sub but1_Click
iic.Search_Image("hook")
End Sub

Sub iic_ChosenPicture(bmp As Bitmap)
	Activity.SetBackgroundImage(bmp)
End Sub

Sub FillImageToView(bmp As Bitmap, ImageView As ImageView)
	Dim bmpRatio As Float = bmp.Width / bmp.Height
	Dim viewRatio As Float = ImageView.Width / ImageView.Height
	If viewRatio > bmpRatio Then
		Dim NewHeight As Int = bmp.Width / viewRatio
		bmp = bmp.Crop(0, bmp.Height / 2 - NewHeight / 2, bmp.Width, NewHeight)
	Else if viewRatio < bmpRatio Then
		Dim NewWidth As Int = bmp.Height * viewRatio
		bmp = bmp.Crop(bmp.Width / 2 - NewWidth / 2, 0, NewWidth, bmp.Height)
	End If
	ImageView.Bitmap = bmp.Resize(ImageView.Width, ImageView.Height, True)
End Sub
