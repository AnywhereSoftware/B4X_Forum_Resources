<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.aghajari.tileservice.Amir_Tile</name>
        <shortname>Amir_Tile</shortname>
        <objectwrapper>android.service.quicksettings.Tile</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>CreateIconWithFilePath</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Icon</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Tile</name>
                <type>android.service.quicksettings.Tile</type>
            </parameter>
        </method>
        <method>
            <name>CreateIconWithBitmap</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Icon</returntype>
            <parameter>
                <name>bits</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>UpdateTile</name>
            <comment>Pushes the state of the Tile to Quick Settings to be displayed.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>CreateIconWithAndroidResource</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Icon</returntype>
            <parameter>
                <name>resName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CreateIconWithResource</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Icon</returntype>
            <parameter>
                <name>resID</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CreateIconWithContentUri</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Icon</returntype>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>State</name>
            <returntype>int</returntype>
            <parameter>
                <name>state</name>
                <type>int</type>
            </parameter>
            <comment>Sets the current state for the tile.

 Does not take effect until UpdateTile is called.</comment>
        </property>
        <property>
            <name>Label</name>
            <returntype>java.lang.CharSequence</returntype>
            <parameter>
                <name>label</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <comment>Sets the current label for the tile.

 Does not take effect until UpdateTile() is called.</comment>
        </property>
        <property>
            <name>ContentDescription</name>
            <returntype>java.lang.CharSequence</returntype>
            <parameter>
                <name>contentDescription</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <comment>Sets the current content description for the tile.

 Does not take effect until UpdateTile() is called.</comment>
        </property>
        <property>
            <name>Icon</name>
            <returntype>android.graphics.drawable.Icon</returntype>
            <parameter>
                <name>icon</name>
                <type>android.graphics.drawable.Icon</type>
            </parameter>
            <comment>Sets the current icon for the tile.

 This icon is expected to be white on alpha, and may be
 tinted by the system to match it's theme.

 Does not take effect until UpdateTile() is called.</comment>
        </property>
        <field>
            <name>STATE_UNAVAILABLE</name>
            <comment>An unavailable state indicates that for some reason this tile is not currently
 available to the user for some reason, and will have no click action.  The tile's
 icon will be tinted differently to reflect this state.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>STATE_INACTIVE</name>
            <comment>This represents a tile that is currently in a disabled state but is still interactable.

 A disabled state indicates that the tile is not currently active (e.g. wifi disconnected or
 bluetooth disabled), but is still interactable by the user to modify this state.  Tiles
 that have boolean states should use this to represent one of their states.  The tile's
 icon will be tinted differently to reflect this state, but still be distinct from unavailable.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>STATE_ACTIVE</name>
            <comment>This represents a tile that is currently active. (e.g. wifi is connected, bluetooth is on,
 cast is casting).  This is the default state.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.aghajari.tileservice.Amir_TileService</name>
        <shortname>Amir_TileService</shortname>
        <comment>A TileService provides the user a tile that can be added to Quick Settings.
 Quick Settings is a space provided that allows the user to change settings and
 take quick actions without leaving the context of their current app.</comment>
        <objectwrapper>android.service.quicksettings.TileService</objectwrapper>
        <owner>process</owner>
        <event>Initialize (TileService As Amir_TileService)</event>
        <event>TileService_Clicked (TileService As Amir_TileService)</event>
        <event>TileService_Added (TileService As Amir_TileService)</event>
        <event>TileService_Removed (TileService As Amir_TileService)</event>
        <event>TileService_StartListening (TileService As Amir_TileService)</event>
        <event>TileService_StopListening (TileService As Amir_TileService)</event>
        <method>
            <name>IsSecure</name>
            <comment>Checks if the device is in a secure state.

 TileServices should detect when the device is secure and change their behavior
 accordingly.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>UnlockAndRun</name>
            <comment>Prompts the user to unlock the device before executing the Runnable.
 
 The user will be prompted for their current security method if applicable
 and if successful, runnable will be executed.  The Runnable will not be
 executed if the user fails to unlock the device or cancels the operation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>runnable</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>IsLocked</name>
            <comment>Checks if the lock screen is showing.

 When a device is locked, then ShowDialog will not present a dialog, as it will
 be under the lock screen. If the behavior of the Tile is safe to do while locked,
 then the user should use StartActivity to launch an activity on top of the lock
 screen, otherwise the tile should use UnlockAndRun(Runnable) to give the
 user their security challenge.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>&lt;code&gt;&lt;service
	android:name="com.aghajari.tileservice.TileService"
	android:icon="ICON"
	android:label="LABEL"
	android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"&gt;
	
	&lt;meta-data android:name="com.aghajari.tileservice.TileService"
			   android:value="MyTileService" /&gt;
	
	&lt;intent-filter&gt;
		&lt;action android:name="android.service.quicksettings.action.QS_TILE" /&gt;
	&lt;/intent-filter&gt;
&lt;/service&gt;&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Service</name>
                <type>android.service.quicksettings.TileService</type>
            </parameter>
        </method>
        <method>
            <name>startActivityAndCollapse</name>
            <comment>Start an activity while collapsing the panel.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>intent</name>
                <type>android.content.Intent</type>
            </parameter>
        </method>
        <method>
            <name>RequestListeningState</name>
            <comment>Requests that a tile be put in the listening state so it can send an update.

 This method is only applicable to tiles that have META_DATA_ACTIVE_TILE defined
 as true on their TileService Manifest declaration, and will do nothing otherwise.
 
 &lt;b&gt;META_DATA_ACTIVE_TILE : &lt;/b&gt;
 &lt;code&gt;android.service.quicksettings.ACTIVE_TILE&lt;/code&gt;</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>showDialog</name>
            <comment>Used to show a dialog.

 This will collapse the Quick Settings panel and show the dialog.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dialog</name>
                <type>android.app.Dialog</type>
            </parameter>
        </method>
        <method>
            <name>RequestListeningState2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>QsTile</name>
            <returntype>com.aghajari.tileservice.Amir_Tile</returntype>
            <comment>Gets the Tile for this service.
 
 This tile may be used to get or set the current state for this
 tile. This tile is only valid for updates between onStartListening()
 and onStopListening().</comment>
        </property>
    </class>
    <version>1.0</version>
    <author>AmirHosseinAghajari</author>
</root>
