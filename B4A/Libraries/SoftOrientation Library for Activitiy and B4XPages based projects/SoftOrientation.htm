<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title>SoftOrientation</title>
	<style type="text/css">
		body{
			background-color:#E1DEE6;
			color:#222;
			font-family:Arial,Helvetica,sans-serif;
			font-size:14px;
			margin:0;
			padding:0;
		}
		h3{
			background-color:#869BBF;
			margin:0;
			padding:5px;
		}
		ul{
			list-style:none;
			margin:5px;
			padding:0;
		}
		ul li{
			background-color:#FFF;
			border:1px solid #666;
			margin:0;
			padding:5px;
		}
		ul li:first-child, h3{
			border-top-left-radius:5px;
			border-top-right-radius:5px;
		}
		ul li:last-child, h3{
			border-bottom-left-radius:5px;
			border-bottom-right-radius:5px;
		}
		ul h3:first-child{
			background-color:#869BDF;
			margin-bottom:5px;
		}
	</style>
</head>
<body><h3>SoftOrientation</h3>
<ul><i></i></ul>
<ul><li><h3>Classes</h3>
<ul><li><A href="#0">AndroidContentResConfiguration</A></li>
<li><A href="#1">AndroidContentResConfigurationConstants</A></li>
<li><A href="#2">SoftOrientationB4XPage</A></li>
<li><A href="#3">SoftOrientationForActivities</A></li>
<li><A href="#4">SoftOrientationForB4XPages</A></li>
</ul></li></ul>
<ul><A id="0"/>
<li><h3>AndroidContentResConfiguration</h3>
<ul><i></i></ul>
<h3>Functions:</h3>
<ul><li><b>CompareTo</b> (That <span style='color:blue'>As</span> <span style='color:#008B8B'>AndroidContentResConfiguration</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i></i>
</li><li><b>DescribeContents</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i></i>
</li><li><b>Diff</b> (AndroidContentResConfiguration1 <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Return a bit mask of the differences between this Configuration object and the given one. Does not change the values of either. Any undefined fields in delta are ignored.</i>
</li><li><b>Diff2</b> (Delta <span style='color:blue'>As</span> <span style='color:#008B8B'>AndroidContentResConfiguration</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Return a bit mask of the differences between this Configuration object and the given one. Does not change the values of either. Any undefined fields in delta are ignored.</i>
</li><li><b>Equals</b> (AndroidContentResConfiguration1 <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i></i>
</li><li><b>Equals2</b> (That <span style='color:blue'>As</span> <span style='color:#008B8B'>AndroidContentResConfiguration</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i></i>
</li><li><b>Equals3</b> (That <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i></i>
</li><li><b>GetLayoutDirection</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Return the layout direction.</i>
</li><li><b>HashCode</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Returns a hash code value for the object.</i>
</li><li><b>Initialize</b> (Configuration <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>)
<br/><i>Initializes the class instance.<BR/>
Configuration As Object - Pass Null if you want to initialize new empty instance, or pass android.content.res.Configuration from Java code.</i>
</li><li><b>IsLayoutSizeAtLeast</b> (Size <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Check if the Configuration's current screenLayout is at least the given size.<BR/>
Size As Int - The desired size, either SCREENLAYOUT_SIZE_SMALL, SCREENLAYOUT_SIZE_NORMAL, SCREENLAYOUT_SIZE_LARGE, or SCREENLAYOUT_SIZE_XLARGE.</i>
</li><li><b>IsNightModeActive</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Retuns whether the configuration is in night mode.</i>
</li><li><b>IsScreenHdr</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Return whether the screen has a high dynamic range.</i>
</li><li><b>IsScreenRound</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Return whether the screen has a round shape. Apps may choose to change styling based on this property, such as the alignment or layout of text or informational icons.</i>
</li><li><b>IsScreenWideColorGamut</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Return whether the screen has a wide color gamut and wide color gamut rendering is supported by this device. When true, it implies the screen is colorspace aware but not necessarily color-managed. The final colors may still be changed by the screen depending on user settings.</i>
</li><li><b>NeedNewResources</b> (ConfigChanges <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>, InterestingChanges <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Determines if a new resource needs to be loaded from the bit set of configuration changes returned by updateFrom(android.content.res.Configuration).</i>
</li><li><b>SetTo</b> (AndroidContentResConfiguration1 <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>)
<br/><i>Sets the fields in this object to those in the given Configuration.<BR/>
AndroidContentResConfiguration1 As Object - The Configuration object used to set the values of this Configuration's fields.</i>
</li><li><b>SetTo2</b> (O <span style='color:blue'>As</span> <span style='color:#008B8B'>AndroidContentResConfiguration</span>)
<br/><i>Sets the fields in this object to those in the given Configuration.<BR/>
O As AndroidContentResConfiguration - The Configuration object used to set the values of this Configuration's fields.</i>
</li><li><b>SetToDefaults</b> 
<br/><i>Set this object to the system defaults.</i>
</li><li><b>ToObject</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>
<br/><i>This method converts AndroidContentResConfiguration for B4A to android.content.res.Configuration for Java. The resulting object can be used in java code.</i>
</li><li><b>ToString</b>  <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>
<br/><i>Returns a string representation of the object. In general, the toString method returns a string that "textually represents" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method.</i>
</li><li><b>UpdateFrom</b> (AndroidContentResConfiguration1 <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Copies the fields from delta into this Configuration object, keeping track of which ones have changed. Any undefined fields in delta are ignored and not copied in to the current Configuration.</i>
</li><li><b>UpdateFrom2</b> (Delta <span style='color:blue'>As</span> <span style='color:#008B8B'>AndroidContentResConfiguration</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Copies the fields from delta into this Configuration object, keeping track of which ones have changed. Any undefined fields in delta are ignored and not copied in to the current Configuration.</i>
</li></ul>
<h3>Properties:</h3>
<ul><li><b>ColorMode</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>Bit mask of color capabilities of the screen. Currently there are two fields: The COLOR_MODE_WIDE_COLOR_GAMUT_MASK bits define the color gamut of the screen. They may be one of COLOR_MODE_WIDE_COLOR_GAMUT_NO Or COLOR_MODE_WIDE_COLOR_GAMUT_YES. The COLOR_MODE_HDR_MASK defines the dynamic range of the screen. They may be one of COLOR_MODE_HDR_NO Or COLOR_MODE_HDR_YES.</i>
</li><li><b>Constants</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>AndroidContentResConfigurationConstants</span> [read only]
<br/><i>Get the constants associated with AndroidContentResConfiguration.</i>
</li><li><b>DensityDpi</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>The target screen density being rendered to, corresponding to density resource qualifier. Set to DENSITY_DPI_UNDEFINED if no density is specified.</i>
</li><li><b>FontScale</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Float</span> [read only]
<br/><i>Current user preference for the scaling factor for fonts, relative to the base density scaling.</i>
</li><li><b>HardKeyboardHidden</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>A flag indicating whether the hard keyboard has been hidden. This will be set on a device with a mechanism to hide the keyboard from the user, when that mechanism is closed. One of: HARDKEYBOARDHIDDEN_NO, HARDKEYBOARDHIDDEN_YES.</i>
</li><li><b>Keyboard</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>The kind of keyboard attached to the device. One of: KEYBOARD_NOKEYS, KEYBOARD_QWERTY, KEYBOARD_12KEY.</i>
</li><li><b>KeyboardHidden</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>A flag indicating whether any keyboard is available. Unlike hardKeyboardHidden, this also takes into account a soft keyboard, so if the hard keyboard is hidden but there is soft keyboard available, it will be set to NO. Value is one of: KEYBOARDHIDDEN_NO, KEYBOARDHIDDEN_YES.</i>
</li><li><b>MCC</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>MSI MCC (Mobile Country Code), corresponding to mcc resource qualifier. 0 if undefined.</i>
</li><li><b>MNC</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>IMSI MNC (Mobile Network Code), corresponding to mnc resource qualifier. 0 if undefined. Note that the actual MNC may be 0; in order to check for this use the MNC_ZERO symbol.</i>
</li><li><b>Navigation</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>The kind of navigation method available on the device. One of: NAVIGATION_NONAV, NAVIGATION_DPAD, NAVIGATION_TRACKBALL, NAVIGATION_WHEEL.</i>
</li><li><b>NavigationHidden</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>A flag indicating whether any 5-way or DPAD navigation available. This will be set on a device with a mechanism to hide the navigation controls from the user, when that mechanism is closed. One of: NAVIGATIONHIDDEN_NO, NAVIGATIONHIDDEN_YES.</i>
</li><li><b>Orientation</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>Overall orientation of the screen. May be one of ORIENTATION_LANDSCAPE, ORIENTATION_PORTRAIT. Value Is ORIENTATION_UNDEFINED, ORIENTATION_PORTRAIT, ORIENTATION_LANDSCAPE, Or ORIENTATION_SQUARE.</i>
</li><li><b>ScreenHeightDp</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>The height of the available screen space in dp units excluding the area occupied by window insets, such as the status bar, navigation bar, and cutouts.</i>
</li><li><b>ScreenLayout</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>Bit mask of overall layout of the screen. Currently there are four fields: The SCREENLAYOUT_SIZE_MASK bits define the overall size of the screen. They may be one of SCREENLAYOUT_SIZE_SMALL, SCREENLAYOUT_SIZE_NORMAL, SCREENLAYOUT_SIZE_LARGE, Or SCREENLAYOUT_SIZE_XLARGE. The SCREENLAYOUT_LONG_MASK defines whether the screen Is wider/taller than normal. They may be one of SCREENLAYOUT_LONG_NO Or SCREENLAYOUT_LONG_YES. The SCREENLAYOUT_LAYOUTDIR_MASK defines whether the screen layout Is either LTR Or RTL. They may be one of SCREENLAYOUT_LAYOUTDIR_LTR Or SCREENLAYOUT_LAYOUTDIR_RTL. The SCREENLAYOUT_ROUND_MASK defines whether the screen has a rounded shape. They may be one of SCREENLAYOUT_ROUND_NO Or SCREENLAYOUT_ROUND_YES.</i>
</li><li><b>ScreenWidthDp</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>The width of the available screen space in dp units excluding the area occupied by window insets.</i>
</li><li><b>SmallestScreenWidthDp</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>The smallest screen size an application will see in normal operation. Corresponds to the smallest width resource qualifier. This is the smallest value of screenWidthDp and screenHeightDp in both portrait and landscape orientations. Defaults to SMALLEST_SCREEN_WIDTH_DP_UNDEFINED if no width is specified.</i>
</li><li><b>TouchScreen</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>The kind of touch screen attached to the device. One of: TOUCHSCREEN_NOTOUCH, TOUCHSCREEN_FINGER.</i>
</li><li><b>UiMode</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>Bit mask of the ui mode. Currently there are two fields: The UI_MODE_TYPE_MASK bits define the overall ui mode of the device. They may be one of UI_MODE_TYPE_UNDEFINED, UI_MODE_TYPE_NORMAL, UI_MODE_TYPE_DESK, UI_MODE_TYPE_CAR, UI_MODE_TYPE_TELEVISION, UI_MODE_TYPE_APPLIANCE, UI_MODE_TYPE_WATCH, Or UI_MODE_TYPE_VR_HEADSET. The UI_MODE_NIGHT_MASK defines whether the screen Is in a special mode. They may be one of UI_MODE_NIGHT_UNDEFINED, UI_MODE_NIGHT_NO Or UI_MODE_NIGHT_YES.</i>
</li></ul>
</li>
</ul><ul><A id="1"/>
<li><h3>AndroidContentResConfigurationConstants</h3>
<ul><i></i></ul>
<h3>Functions:</h3>
<ul><li><b>Initialize</b> 
<br/><i>Initializes the object. You can add parameters to this method if needed.</i>
</li></ul>
</li>
</ul><ul><A id="2"/>
<li><h3>SoftOrientationB4XPage</h3>
<ul><i></i></ul>
<h3>Functions:</h3>
<ul><li><b>Initialize</b> (Callback <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>, EventName <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>, PageID <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>, LayoutFile <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>, DefaultOrientation <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>, Root <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>)
<br/><i>Initializes the object. You can add parameters to this method if needed.</i>
</li></ul>
<h3>Properties:</h3>
<ul><li><b>Callback</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span> [read only]
<br/><i></i>
</li><li><b>DefaultOrientation</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i></i>
</li><li><b>EventName</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span> [read only]
<br/><i></i>
</li><li><b>LayoutFile</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span> [read only]
<br/><i></i>
</li><li><b>PageID</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span> [read only]
<br/><i></i>
</li><li><b>Root</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span> [read only]
<br/><i></i>
</li></ul>
</li>
</ul><ul><A id="3"/>
<li><h3>SoftOrientationForActivities</h3>
<ul><i></i></ul>
<h3>Events:</h3>
<ul><li><b>ActivityConfigurationChanged</b> (NewConfiguration <span style='color:blue'>As</span> <span style='color:#008B8B'>AndroidContentResConfiguration</span>)</li>
</ul>
<h3>Functions:</h3>
<ul><li><b>Initialize</b> (Callback <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>, EventName <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>, Activity <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>, LayoutFile <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>)
<br/><i></i>
</li><li><b>OnConfigurationChanged</b> (NewConfig <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>)
<br/><i>This Sub will be called when the onConfigurationChanged event is fired in the main Activity. It is not recommended that you call this Sub by yourself.<BR/>
NewConfig As Object - android.content.res.Configuration from Java code.</i>
</li></ul>
<h3>Properties:</h3>
<ul><li><b>Activity</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Activity</span> [read only]
<br/><i>Gets the Activity which is associated with class instance on class initialization.</i>
</li><li><b>ActivityActualConfiguration</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>AndroidContentResConfiguration</span> [read only]
<br/><i>Get actual android.content.res.Configuration (B4A class name AndroidContentResConfiguration) from Activity. You can also get or set all properties and methods from android.content.res.Configuration.</i>
</li><li><b>Callback</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span> [read only]
<br/><i>Gets the Callback object which is associated with class instance on class initialization.</i>
</li><li><b>EventName</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span> [read only]
<br/><i>Gets the EventName which is associated with class instance on class initialization.</i>
</li><li><b>LayoutFile</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span> [read only]
<br/><i>Gets the LayoutFile which is associated with class instance on class initialization.</i>
</li><li><b>Orientation</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>Gets or sets the screen orientation.<BR/>
Choose one of the constants depending on your needs, for example: SCREEN_ORIENTATION_UNSPECIFIED, SCREEN_ORIENTATION_LANDSCAPE, SCREEN_ORIENTATION_PORTRAIT, SCREEN_ORIENTATION_USER, SCREEN_ORIENTATION_BEHIND, SCREEN_ORIENTATION_SENSOR, SCREEN_ORIENTATION_NOSENSOR, etc...</i>
</li><li><b>OrientationAsString</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span> [read only]
<br/><i>Gets screen orientation value represented as String</i>
</li><li><b>RotationInDegrees</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>Gets actual screen rotation in degrees (Values:0,90,180,270)</i>
</li></ul>
</li>
</ul><ul><A id="4"/>
<li><h3>SoftOrientationForB4XPages</h3>
<ul><i></i></ul>
<h3>Events:</h3>
<ul><li><b>ActivityConfigurationChanged</b> (NewConfiguration <span style='color:blue'>As</span> <span style='color:#008B8B'>AndroidContentResConfiguration</span>)</li>
</ul>
<h3>Functions:</h3>
<ul><li><b>AddB4XPage</b> (Callback <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>, EventName <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>, PageID <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>, LayoutFile <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>, DefaultOrientation <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>, Root <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span>
<br/><i>If you use this library in a B4XPages project, you must add each page used in the project as SoftOrientationB4XPage.<BR/>
This method adds an SoftOrientationB4XPage. The return result is an initialized SoftOrientationB4XPage that you can use further in the project.<BR/>
Callback As Object - Use 'Me'.<BR/>
EventName As String - Your event name.<BR/>
PageID As String - Identification of the selected page.<BR/>
LayoutFile As String - Layout file name for selected page from Designer.<BR/>
DefaultOrientation As Int - Declare default orientation for selected page. Choose one of the constants depending on your needs, for example: SCREEN_ORIENTATION_UNSPECIFIED, SCREEN_ORIENTATION_LANDSCAPE, SCREEN_ORIENTATION_PORTRAIT, SCREEN_ORIENTATION_USER, SCREEN_ORIENTATION_BEHIND, SCREEN_ORIENTATION_SENSOR, SCREEN_ORIENTATION_NOSENSOR, etc...<BR/>
Root As Object - The main Root as Object for selected page.</i>
</li><li><b>AddB4XPage2</b> (Page <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span>)
<br/><i>If you use this library in a B4XPages project, you must add each page used in the project as SoftOrientationB4XPage.<BR/>
This method adds an already initialized SoftOrientationB4XPage.</i>
</li><li><b>ApplyB4XPageDefaultOrientation</b> (PageID <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>)
<br/><i>Call this method when you want to activate the Default Orientation for the selected B4XPage. Be sure to call this method once in Sub B4XPage_Appear.<BR/>
PageID As String - Identification of the selected page.</i>
</li><li><b>ApplyB4XPageDefaultOrientation2</b> (Page <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span>)
<br/><i>Call this method when you want to activate the Default Orientation for the selected B4XPage. Be sure to call this method once in Sub B4XPage_Appear.<BR/>
Page As SoftOrientationB4XPage - SoftOrientationB4XPage variable.</i>
</li><li><b>ContainsPage</b> (PageID <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Check if SoftOrientationB4XPage already exists.<BR/>
PageID As String - Page identification.</i>
</li><li><b>ContainsPage2</b> (Page <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Boolean</span>
<br/><i>Check if SoftOrientationB4XPage already exists.</i>
</li><li><b>GetPage</b> (PageID <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span>
<br/><i>Get SoftOrientationB4XPage with current Page identification (Id).<BR/>
PageID As String - Page identification.</i>
</li><li><b>GetPageAt</b> (Index <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span>
<br/><i>Get SoftOrientationB4XPage with current Page index.<BR/>
Index As Int - Current page Index.</i>
</li><li><b>IndexOfPage</b> (PageID <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Find index for SoftOrientationB4XPage.<BR/>
PageID As String - Page identification.</i>
</li><li><b>IndexOfPage2</b> (Page <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>
<br/><i>Find index for SoftOrientationB4XPage.</i>
</li><li><b>Initialize</b> (Activity <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>)
<br/><i>Initializes the object.<BR/>
Declare 'Public' variable in 'Sub Class_Globals' in B4XMainPage (Very important).<BR/>
Initialize the class instance form B4XMainPage, NOT from MainActivity (Very important).<BR/>
Activity As Object - The MainActivity for all B4XPages.<BR/>
Example:<BR/>
Sub Class_Globals<BR/>
Public SoftOrientationMain As SoftOrientationForB4XPages<BR/>
End Sub<BR/>
Private Sub B4XPage_Created (Root1 As B4XView)<BR/>
Root = Root1<BR/>
Root.LoadLayout("MyLayoutName")<BR/>
SoftOrientationMain.Initialize(B4XPages.GetNativeParent(Me))<BR/>
-----Rest of code----<BR/>
End Sub</i>
</li><li><b>OnConfigurationChanged</b> (NewConfig <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>, PageID <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>)
<br/><i>This Sub will be called when the onConfigurationChanged event is fired in the main Activity. It is not recommended that you call this Sub by yourself.<BR/>
NewConfig As Object - android.content.res.Configuration from Java code.<BR/>
PageID As String - Identification of the currently active B4X Page.</i>
</li><li><b>OnConfigurationChanged2</b> (NewConfig <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>, Page <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span>)
<br/><i>This Sub will be called when the onConfigurationChanged event is fired in the main Activity. It is not recommended that you call this Sub by yourself.<BR/>
NewConfig As Object - android.content.res.Configuration from Java code.<BR/>
Page As SoftOrientationB4XPage - Currently active B4X Page.</i>
</li><li><b>RemoveB4XPage</b> (PageID <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>)
<br/><i>If you programmatically remove a page from your B4XPages project, be sure to remove the SoftOrientationB4XPage associated with the specific removed page.<BR/>
This method removes the SoftOrientationB4XPage associated with the removed page ID.</i>
</li><li><b>RemoveB4XPage2</b> (Page <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span>)
<br/><i>If you programmatically remove a page from your B4XPages project, be sure to remove the SoftOrientationB4XPage associated with the specific removed page.<BR/>
This method removes the SoftOrientationB4XPage.</i>
</li><li><b>RemoveB4XPageAt</b> (Index <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>)
<br/><i>If you programmatically remove a page from your B4XPages project, be sure to remove the SoftOrientationB4XPage associated with the specific removed page.<BR/>
This method removes the SoftOrientationB4XPage associated with the removed page Index.</i>
</li><li><b>SetB4XPageAt</b> (Index <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>, Callback <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>, EventName <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>, PageID <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>, LayoutFile <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span>, DefaultOrientation <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>, Root <span style='color:blue'>As</span> <span style='color:#008B8B'>Object</span>) <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span>
<br/><i>Set and replace SoftOrientationB4XPage at current page index. Return result is initialized SoftOrientationB4XPage with the specified parameters.<BR/>
Index As Int - Current page Index.<BR/>
Callback As Object - Use 'Me'.<BR/>
EventName As String - Your event name.<BR/>
PageID As String - Identification of the selected page.<BR/>
LayoutFile As String - Layout file name for selected page from Designer.<BR/>
DefaultOrientation As Int - Declare default orientation for selected page. Choose one of the constants depending on your needs, for example: SCREEN_ORIENTATION_UNSPECIFIED, SCREEN_ORIENTATION_LANDSCAPE, SCREEN_ORIENTATION_PORTRAIT, SCREEN_ORIENTATION_USER, SCREEN_ORIENTATION_BEHIND, SCREEN_ORIENTATION_SENSOR, SCREEN_ORIENTATION_NOSENSOR, etc...<BR/>
Root As Object - The main Root as Object for selected page.</i>
</li><li><b>SetB4XPageAt2</b> (Index <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span>, SoftOrientationB4XPage1 <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span>)
<br/><i>Set and replace SoftOrientationB4XPage at current page index.<BR/>
Index As Int - Current page Index.</i>
</li></ul>
<h3>Properties:</h3>
<ul><li><b>ActivityActualConfiguration</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>AndroidContentResConfiguration</span> [read only]
<br/><i>Get actual android.content.res.Configuration (B4A class name AndroidContentResConfiguration) from MainActivity. You can also get or set all properties and methods from android.content.res.Configuration.</i>
</li><li><b>CurrentlyActiveB4XPage</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>SoftOrientationB4XPage</span> [read only]
<br/><i>Gets the Currently active B4X Page as SoftOrientationB4XPage.</i>
</li><li><b>NumberOfB4XPages</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>Retrieve the total number of added SoftOrientationB4XPages.</i>
</li><li><b>Orientation</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>Gets or sets the screen orientation.<BR/>
Choose one of the constants depending on your needs, for example: SCREEN_ORIENTATION_UNSPECIFIED, SCREEN_ORIENTATION_LANDSCAPE, SCREEN_ORIENTATION_PORTRAIT, SCREEN_ORIENTATION_USER, SCREEN_ORIENTATION_BEHIND, SCREEN_ORIENTATION_SENSOR, SCREEN_ORIENTATION_NOSENSOR, etc...</i>
</li><li><b>OrientationAsString</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>String</span> [read only]
<br/><i>Gets screen orientation value represented as String</i>
</li><li><b>RotationInDegrees</b> <span style='color:blue'>As</span> <span style='color:#008B8B'>Int</span> [read only]
<br/><i>Gets actual screen rotation in degrees (Values:0,90,180,270)</i>
</li></ul>
</li>
</ul>
<ul><li><h3>Author: Ivica Golubovic</h3></li></ul>
<ul><li><h3>Version: 1.2</h3></li></ul>
</body>
</html>