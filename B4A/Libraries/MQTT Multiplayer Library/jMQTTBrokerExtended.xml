<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.05</doclet-version-NOT-library-version>
    <class>
        <name>flm.b4j.mqttbroker.MQTTBrokerExtended</name>
        <shortname>MQTTBrokerExtended</shortname>
        <owner>process</owner>
        <event>Connect(ClientID As String, UserName As String, Password() As Byte, ProtocolName As String, ProtocolVersion As Byte, QOS As String, KeepAlive As Int, IsCleanSession As Boolean, IsDupFlag As Boolean, IsUserFlag As Boolean, IsPasswordFlag As Boolean, IsWillFlag As Boolean)</event>
        <event>Disconnect(ClientID As String)</event>
        <event>LastWill(ClientID As String, QOS As Byte, TopicName As String, Payload() As Byte, IsRetain As Boolean)</event>
        <event>Publish(ClientID As String, QOS As String, TopicName As String, Payload() As Byte, IsDup As Boolean, IsRetain As Boolean)</event>
        <event>Suscribe(ClientID As String, RequestedQOS As String, TopicFilter As String)</event>
        <event>Unsuscribe(ClientID As String, TopicFilter As String)</event>
        <method>
            <name>Start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Stop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>InternalPublish</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>TopicName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Payload</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>QOS</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>RetainFlag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Port</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>EventPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>DebugLog</name>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>AT_MOST_ONCE</name>
            <comment>QOS 0 : It guarantees a best effort delivery. A message won't be acknowledged by the receiver or stored and redelivered by the sender.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>AT_LEAST_ONCE</name>
            <comment>QOS 1 : It is guaranteed that a message will be delivered at least once to the receiver. But the message can also be delivered more than once.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EXACTLY_ONCE</name>
            <comment>QOS 2 : It guarantees that each message is received only once by the counterpart. It is the safest and also the slowest quality of service level.</comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <version>1.0</version>
    <dependsOn>Moquette8</dependsOn>
</root>
