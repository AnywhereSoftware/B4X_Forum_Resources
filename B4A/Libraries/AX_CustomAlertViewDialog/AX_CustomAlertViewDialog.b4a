Build1=Default,com.aghajari.ax_customalertviewdialog.sample
File1=a1.png
File2=myfont.ttf
File3=myfont_bold.ttf
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
Group=Default Group
Library1=core
Library2=ax_customalertviewdialog
Library3=javaobject
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="28"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~~\n~SetApplicationAttribute(android:theme, "@style/AppTheme")~\n~CreateResource(values, theme.xml,~\n~<resources>~\n~	<style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">~\n~	   <!-- Customize your theme here. -->~\n~	   <item name="colorPrimary">#3F51B5</item>~\n~	   <item name="colorPrimaryDark">#303F9F</item>~\n~	   <item name="colorAccent">#303F9F</item>~\n~	</style>~\n~~\n~	<style name="MyDialog" parent="Theme.AppCompat.Dialog">~\n~	   <item name="colorPrimary">#3F51B5</item>~\n~	   <item name="colorPrimaryDark">#151C51</item>~\n~	   <item name="colorAccent">#303F9F</item>~\n~	   ~\n~	   <item name="android:windowNoTitle">true</item>~\n~	   <item name="android:windowFullscreen">false</item>~\n~	   <item name="android:windowContentOverlay">@null</item>~\n~	   <item name="android:windowBackground">@android:color/transparent</item>~\n~	   <item name="android:backgroundDimEnabled">true</item>~\n~	   <item name="android:backgroundDimAmount">0.5</item>~\n~	   <item name="android:windowIsFloating">false</item>~\n~	   <item name="android:gravity">center</item>~\n~	   ~\n~	   <item name="android:textColorHint">#C8C8C8</item>~\n~	   <item name="colorControlNormal">#C8C8C8</item>~\n~	   <item name="colorControlHighlight">#C8C8C8</item>~\n~	   <item name="colorControlActivated">#303F9F</item>~\n~	</style>~\n~	~\n~	<style name="MyDialogDisableStatus" parent="MyDialog">~\n~		<item name="android:windowDrawsSystemBarBackgrounds">true</item>~\n~		<item name="android:statusBarColor">@android:color/transparent</item>~\n~		<item name="android:windowTranslucentStatus">false</item>~\n~		<item name="android:windowTranslucentNavigation">false</item>~\n~	</style>~\n~</resources>~\n~)~\n~~\n~
Module1=Starter
NumberOfFiles=3
NumberOfLibraries=3
NumberOfModules=1
Version=9.9
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: AX_CustomAlertViewDialog
	#VersionCode: 1
	#VersionName: 1.00
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
	#AdditionalRes: ..\resAX_CustomAlertViewDialog
#End Region

#Region  Activity Attributes
	#FullScreen: False
	#IncludeTitle: True
	#Extends : androidx.appcompat.app.AppCompatActivity
#End Region

Sub Process_Globals

End Sub

Sub Globals
	Private SelectedPosition As Int = -1 'SelectorDialog2 Selected position
	Private Font As Typeface = Typeface.LoadFromAssets("myfont.ttf")
	Private FontBold As Typeface = Typeface.LoadFromAssets("myfont_bold.ttf")
	
	Private Blur As CheckBox
End Sub

Sub Activity_Create(FirstTime As Boolean)
	
	Activity.SetBackgroundImage(LoadBitmapResize(File.DirAssets , "a1.png" , 100%x,100%y,True))
	Dim Dialogs() As String = Array As String _
		("SimpleDialog","TwoChoicesDialog","SelectorDialog","CustomSelectorDialog","SaveSelectorDialog","ActionsheetDialog","InputDialog")
		
	Dim ScrollView As ScrollView
	ScrollView.Initialize(100%y)
	Activity.AddView(ScrollView,0,0,-1,-1)
	
	Dim Top As Int = 16dip
	For i = 0 To Dialogs.Length - 1
		Dim Button1 As Button
		Button1.Initialize(Dialogs(i))
		ScrollView.Panel.AddView(Button1,16dip,Top,100%x-32dip,48dip)
		Button1.Text = "Show "&Dialogs(i)
		Top = Top + 64dip 
	Next
	
	Blur.Initialize("")
	Blur.Checked = False
	Blur.Text = "Blur Dialog Background"
	Blur.Typeface = Font
	ScrollView.Panel.AddView(Blur,16dip,Top,100%x-32dip,32dip)
	
	ScrollView.Panel.Height = Top + 48dip
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Private Sub CD As ColorDrawable
	Private mCD As ColorDrawable
	mCD.Initialize(Colors.RGB(240,240,240),0)
	Return mCD
End Sub

Private Sub SimpleDialog_Click
	Dim Alert As AX_CustomAlertDialog

	Alert.Initialize.Create _
			.SetDialogStyleName("MyDialogDisableStatus") _	'Manifest style name
			.SetStyle(Alert.STYLE_DIALOGUE) _
			.SetTitle("Custom Alert") _
			.SetMessage("This is a long description to test the dialog's text wrapping functionality") _
			.SetNegativeText("OK") _
			.SetNegativeColor(Colors.Red) _
			.SetNegativeTypeface(FontBold) _
			.SetTitleTypeface(Font) _
			.SetMessageTypeface(Font) _
			.SetOnNegativeClicked("Amir") _	'listeners
			.SetOnViewBinder("FontSizeBinder") 'listeners
	
	If Blur.Checked Then Alert.SetWindowDecorView Else Alert.SetDialogBackground(CD)
	Alert.Build.Show
End Sub

Private Sub TwoChoicesDialog_Click
	Dim Alert As AX_CustomAlertDialog

	Alert.Initialize.Create _
			.SetDialogStyleName("MyDialogDisableStatus") _	'Manifest style name
			.SetStyle(Alert.STYLE_DIALOGUE) _
			.SetCancelable(False) _
			.SetTitle("Delete Items") _
			.SetMessage("Delete all completed items?") _
			.SetPositiveText("Confirm") _
			.SetPositiveColor(Colors.Red) _
			.SetPositiveTypeface(FontBold) _
			.SetNegativeText("Cancel") _
			.SetNegativeColor(0xFF6084FF) _
			.SetNegativeTypeface(Font) _
			.SetTitleTypeface(Font) _
			.SetMessageTypeface(Font) _
			.SetOnPositiveClicked("Amir") _	'listeners
			.SetOnNegativeClicked("Amir")	'listeners
			
	If Blur.Checked Then Alert.SetWindowDecorView Else Alert.SetDialogBackground(CD)
	Alert.Build.Show
End Sub

Private Sub SelectorDialog_Click
	Dim Alert As AX_CustomAlertDialog
	
	Dim ListDestructive,ListItems As List
	ListDestructive.Initialize : ListItems.Initialize
	
	For j = 1 To 4
		ListDestructive.Add("Choice "&j)
	Next
	For i = j To 20
		ListItems.Add("Choice "&i)
	Next
	
	Alert.Initialize.Create _
			.SetDialogStyleName("MyDialog") _	'Manifest style name
			.SetStyle(Alert.STYLE_SELECTOR) _
			.SetDestructive(ListDestructive) _
			.SetOthers(ListItems) _
			.SetActionsheetTypeface(Font) _
			.SetOnItemClickListener("Amir") 	'listeners
		
	If Blur.Checked Then Alert.SetWindowDecorView Else Alert.SetDialogBackground(CD)
	Alert.Build.Show
End Sub

Private Sub CustomSelectorDialog_Click
	Dim Alert As AX_CustomAlertDialog
	
	Dim ListItems As List
	ListItems.Initialize
	For i = 1 To 20
		ListItems.Add("Choice "&i)
	Next
	
	Alert.Initialize.Create _
			.SetDialogStyleName("MyDialog") _	'Manifest style name
			.SetStyle(Alert.STYLE_SELECTOR) _
			.SetOthers(ListItems) _
			.SetActionsheetTypeface(Font) _
			.SetOnItemClickListener("Amir") _	'listeners
			.SetOnViewBinder("CustomSelector")	'listeners
			
	If Blur.Checked Then Alert.SetWindowDecorView Else Alert.SetDialogBackground(CD)
	Alert.Build.Show
End Sub

Private Sub SaveSelectorDialog_Click
	Dim Alert As AX_CustomAlertDialog
	
	Dim ListItems As List
	ListItems.Initialize
	For i = 1 To 20
		ListItems.Add("Choice "&i)
	Next
	
	Alert.Initialize.Create _
			.SetDialogStyleName("MyDialog") _	'Manifest style name
			.SetStyle(Alert.STYLE_SELECTOR) _
			.SetOthers(ListItems) _
			.SetActionsheetTypeface(Font) _
			.SetOnItemClickListener("SaveSelector") _	'listeners
			.SetOnViewBinder("SaveSelector")	'listeners
			
	If Blur.Checked Then Alert.SetWindowDecorView Else Alert.SetDialogBackground(CD)
	Alert.Build.Show
End Sub

Private Sub ActionsheetDialog_Click
	Dim Alert As AX_CustomAlertDialog
	
	Dim items As List
	items.Initialize
	items.Add("Copy")
	items.Add("Forward")
	
	Alert.Initialize.Create _
			.SetDialogStyleName("MyDialog") _	'Manifest style name
			.SetStyle(Alert.STYLE_ACTIONSHEET) _
			.SetTitle("Action Sheet") _
			.SetTitleColor(Colors.Black) _
			.SetCancelText("More...") _
			.SetNegativeTypeface(FontBold) _ 'Usable for Cancel Typeface
			.SetOthers(items) _
			.SetActionsheetTypeface(Font) _
			.SetTitleTypeface(Font) _
			.SetMessageTypeface(Font) _
			.SetOnCancelClicked("Amir") _	'listeners
			.SetOnItemClickListener("Amir") 	'listeners
			
	If Blur.Checked Then Alert.SetWindowDecorView Else Alert.SetDialogBackground(CD).SetCancelBackground(CD)
	Alert.Build.Show
End Sub

Private Sub InputDialog_Click
	Dim Alert As AX_CustomAlertDialog
	
	Dim LineHint As List : LineHint.Initialize
	LineHint.Add("Username")
	LineHint.Add("Email Address")
	LineHint.Add("Name")
	LineHint.Add("Zip Code")
	
	Dim LineText As List : LineText.Initialize
	LineText.Add("Sample Username")
	LineText.Add(Null)
	LineText.Add("Sample")
	
	Dim BoxHint As List : BoxHint.Initialize
	BoxHint.Add("Message")
	
	Dim BoxText As List : BoxText.Initialize
	BoxText.Add("BoxText")
	
	Alert.Initialize.Create _
			.SetDialogStyleName("MyDialogDisableStatus") _	'Manifest style name
			.SetStyle(Alert.STYLE_INPUT) _
			.SetTitle("Submit Feedback") _
			.SetMessage("We love to hear feedback! Please share your thoughts and comments:") _
			.SetLineInputHint(LineHint) _
			.SetLineInputText(LineText) _
			.SetBoxInputHint(BoxHint) _
			.SetBoxInputText(BoxText) _
			.SetPositiveText("Submit") _
			.SetPositiveTypeface(FontBold) _
			.SetNegativeText("Cancel") _
			.SetNegativeTypeface(Font) _
			.SetTitleTypeface(Font) _
			.SetMessageTypeface(Font) _
			.SetOnNegativeClicked("Amir") _	'listeners
			.SetOnInputClicked("Amir") _	'listeners
			.SetOnViewBinder("InputFontBinder") 'listeners
			
	If Blur.Checked Then Alert.SetWindowDecorView Else Alert.SetDialogBackground(CD)
	Alert.Build.Show
End Sub

'Listeners
Private Sub Amir_OnNegativeClicked (View As View, Dialog As Object)
	ToastMessageShow("Negative Button Clicked!",False)
	Dim Alert As AX_CustomAlertDialog
	Alert.Initialize.Dismiss(Dialog)
End Sub

Private Sub Amir_OnPositiveClicked (View As View, Dialog As Object)
	ToastMessageShow("Positive Button Clicked!",False)
	Dim Alert As AX_CustomAlertDialog
	Alert.Initialize.Dismiss(Dialog)
End Sub

'Actionsheet More Button
Private Sub Amir_OnCancelClicked (View As View, Dialog As Object)
	If View<>Null Then
		ToastMessageShow("More Button Clicked!",False)
		Dim Alert As AX_CustomAlertDialog
		Alert.Initialize.Dismiss(Dialog)
	End If
End Sub

'Input dialog Submit clicked
Private Sub Amir_OnInputClicked (View As View, Dialog As Object, InputSList As List)
	Dim Inputs As String = "Inputs : "&CRLF
	For i = 0 To InputSList.Size - 1
		Inputs = Inputs & InputSList.Get(i) & CRLF
	Next
	ToastMessageShow(Inputs.Trim,False)
	
	Dim Alert As AX_CustomAlertDialog
	Alert.Initialize.Dismiss(Dialog)
End Sub

Private Sub InputFontBinder_OnBindView (View As View, ViewType As Int)
	Dim Alert As AX_CustomAlertDialog
	Alert.Initialize
	If ViewType = Alert.VIEW_BOX_HINT Or _
		ViewType = Alert.VIEW_BOX_INPUT Or _
		ViewType = Alert.VIEW_LINE_HINT Or _
		ViewType = Alert.VIEW_LINE_INPUT Then
		Dim jo As JavaObject = View
		jo.RunMethod("setTypeface",Array(Font))
	End If
End Sub

'Item Click
Private Sub Amir_OnItemClick (View As View, Selection As String, Position As Int,Id As Long)
	ToastMessageShow(Selection&" Selected! (Position : "&Position&")",False)
	Dim Alert As AX_CustomAlertDialog
	Alert.Initialize.Dismiss2
End Sub



'Selectors
Private Sub CustomSelector_OnBindActionsheetView (View As View, Position As Int,IsNewItem As Boolean)
	If IsNewItem Then Return
	Dim Color As Int = Colors.RGB(Rnd(0,255),Rnd(0,255),Rnd(0,255))
	
	Dim Lbl As Label = View
	Lbl.TextColor = Color
	Lbl.TextSize = Rnd(14,33)
	
	Dim Parent As Panel = View.Parent
	Dim Divider As View = Parent.GetView(0)
	Divider.Color = Color
End Sub


Private Sub SaveSelector_OnItemClick (View As View, Selection As String, Position As Int,Id As Long)
	Amir_OnItemClick(View,Selection,Position,Id)
	SelectedPosition = Position
End Sub

Private Sub SaveSelector_OnBindActionsheetView (View As View, Position As Int,IsNewItem As Boolean)
	If IsNewItem Then Return
	Dim parent As View = View.Parent
	If Position = SelectedPosition Then
		If Blur.Checked Then
			parent.Color = Colors.ARGB(20,0,0,0)
		Else
			parent.Color = Colors.LightGray
		End If
	Else
		parent.Color = Colors.Transparent
	End If
End Sub

'set Simple dialog title font size
Private Sub FontSizeBinder_OnBindView (View As View, ViewType As Int)
	Dim Alert As AX_CustomAlertDialog
	Alert.Initialize
	If ViewType = Alert.VIEW_TITLE Then ' Title
		Dim lbl As Label = View
		lbl.TextSize = 40
		lbl.SetTextColorAnimated(2000,Colors.Magenta)
		
		
		Dim CS As CSBuilder
		CS.Initialize.Typeface(Font).Append(lbl.Text&" ").Pop
		CS.Typeface(Typeface.MATERIALICONS).Size(36).Color(Colors.Red).Append(Chr(0xE190))
		lbl.Text = CS.PopAll
	End If
End Sub