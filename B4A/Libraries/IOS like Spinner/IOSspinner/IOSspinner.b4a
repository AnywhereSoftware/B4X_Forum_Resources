Build1=Default,b4a.example
File1=iosspinner.bal
File2=Layout.bal
File3=SpinnerBackground.png
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
Group=Default Group
Library1=core
Library2=xui views
Library3=b4xcollections
Library4=xui
Library5=phone
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="28"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
Module1=IOSspinner
Module2=Starter
NumberOfFiles=3
NumberOfLibraries=5
NumberOfModules=2
Version=10.2
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4A Example
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.

	Private IOSspinner1 As IOSspinner
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("Layout")
	
	' set Spinner items
	' (ID, Text)
	IOSspinner1.SpinnerItems.Put("A","Text A")
	IOSspinner1.SpinnerItems.Put("B","Text B")
	IOSspinner1.SpinnerItems.Put("C","Text C")
	IOSspinner1.SpinnerItems.Put("D","Text D")
	IOSspinner1.SpinnerItems.Put("E","Text E")
	IOSspinner1.Spinner_build
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

' get spinner click result/s
' Map Key = ID, Value = checked
Sub IOSspinner_ItemClicked(ID As String, Result As Map)
	If Result.Size= 1 Then ' only one item selected
		Select Result.GetKeyAt(0)
			Case "A"
				Log ("A")
			Case "B"
				Log ("B")
			Case "C"
				Log ("C")
			Case "D"
				Log ("D")
			Case "E"
				Log ("E")
		End Select
	Else If Result.Size > 1 Then ' multiple items selected/checked
		For Each k As String In Result.Keys
			If Result.Get(k) = True Then
				Select k
					Case "A"
						Log ("A")
					Case "B"
						Log ("B")
					Case "C"
						Log ("C")
					Case "D"
						Log ("D")
					Case "E"
						Log ("E")
				End Select
			End If
		Next
	End If
End Sub

' open/close spinner
Sub Button2_Click
		IOSspinner1.mBase.Visible=Not(IOSspinner1.mBase.Visible)
	If IOSspinner1.mBase.Visible=False Then IOSspinner1.reset
End Sub