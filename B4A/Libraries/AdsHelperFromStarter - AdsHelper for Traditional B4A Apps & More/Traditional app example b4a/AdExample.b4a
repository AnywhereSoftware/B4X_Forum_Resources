Build1=default,b4a.example,default
Build2=test,mobi.mindware.adexample,test
File1=iconpro100.png
File2=Layout.bal
File3=MainPage.bal
File4=nativeunifiedad.bal
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
Group=Default Group
Library1=b4xbitmapeffects
Library10=xui
Library11=xui views
Library2=br_b4xfloattextfield
Library3=core
Library4=firebaseadmob2
Library5=javaobject
Library6=reflection
Library7=runtimepermissions
Library8=sql
Library9=stringutils
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="29"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~CreateResourceFromFile(Macro, FirebaseAnalytics.GooglePlayBase)~\n~CreateResourceFromFile (Macro, FirebaseAdMob.FirebaseAds)~\n~AddReplacement($ADMOB_APP_ID$, ca-app-pub-3940256099942544~3347511713)
Module1=|relative|..\AdsHelperFromStarter
Module2=mwNative
Module3=NativeActivity
Module4=Starter
Module5=TestActivity2
NumberOfFiles=4
NumberOfLibraries=11
NumberOfModules=5
Version=12.2
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Ad Example B4X
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region
'#AdditionalJar: com.android.support:support-v4
#AdditionalJar: com.google.android.ump:user-messaging-platform
#BridgeLogger: True
#MultiDex: True

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
	Private LastOpenAdShownAt As Long
	Private TimeBetweenOpenAds_Seconds As Int = 60
	Private ShowLandscapeOpenAdOnLoad As Boolean
	Private ShowRewardedInterstitialOnLoad As Boolean
	Private ShowRewardedVideoOnLoad As Boolean
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
'	Private Ads As AdsHelper
	Private MenuScrollView As ScrollView
	Private BannerAd As AdView
	Private BannerAdFixedSize As AdView
	Private iAd As InterstitialAd
	Private Ctxt As JavaObject

End Sub

Sub Activity_Create(FirstTime As Boolean)
	MenuScrollView.Initialize(600dip)
	Activity.Color=Colors.Black
	Dim ButtonPanel As Panel
	ButtonPanel.Initialize("")
	Activity.AddView(MenuScrollView, 0, 0, 100%x, 100%y)
	MenuScrollView.Panel.AddView(ButtonPanel, 0, 250dip, 100%x, 100%y)
	ButtonPanel.LoadLayout("MainPage")
	Ctxt.InitializeContext
	Starter.Ads.SetConsentContext(Ctxt)
	CheckConsentAndAddAds
End Sub

Sub Activity_Resume
	Starter.Ads.SetFullScreenAdDisplayContext(Ctxt)
	Starter.AdsSecondaryCallbackModule=Me
	If 100%x>100%y Then 
		ShowLandscapeOpenAdOnLoad=True
		Starter.Ads.LastOrientationPortrait=False
		Starter.LoadLandscapeOpenAd
	Else
		ShowLandscapeOpenAdOnLoad=False
		Starter.Ads.LastOrientationPortrait=True
		If DateTime.Now-LastOpenAdShownAt>TimeBetweenOpenAds_Seconds*1000 Then
			LastOpenAdShownAt=DateTime.Now
			Starter.Ads.ShowOpenAdIfAvailable(1)	
		End If
	End If
End Sub

Sub Activity_Pause (UserClosed As Boolean)
	If UserClosed Then Starter.Ads.Background
End Sub

Private Sub CheckConsentAndAddAds
	Dim m As MobileAds
	
	Wait For (m.Initialize) MobileAds_Ready
	LogColor("After MobileAds_Ready", Colors.Magenta)
'	m.SetConfigutation(m.CreateRequestConfigurationBuilder(Array("77A04EE40B2AFED2AFC67701365187EC"))) 'optional. Array with test device ids. See unfiltered logs to find correct id.
	
	'Ads.ResetConsentStatus
	'Ads.SetConsentDebugParameters("77A04EE40B2AFED2AFC67701365187EC", True) 'same id as above
	
	If Starter.Ads.GetConsentStatus = "UNKNOWN" Then
		Wait For (Starter.Ads.RequestConsentInformation(False)) Complete (Success As Boolean)
	End If
	If Starter.Ads.GetConsentStatus = "REQUIRED" And Starter.Ads.GetConsentFormAvailable Then
		Wait For (Starter.Ads.ShowConsentForm) Complete (Success As Boolean)
	End If
	Log("Consent: " & Starter.Ads.GetConsentStatus)
	LoadAds
End Sub

'Returns a Map with the following keys: height, width and native (native = AdSize).
Public Sub GetAdaptiveAdSize As Map
	Dim Ctxt As JavaObject
	Ctxt.InitializeContext
	Dim AdSize As JavaObject
	Dim width As Int = 100%x / GetDeviceLayoutValues.Scale
	Dim Native As JavaObject = AdSize.InitializeStatic("com.google.android.gms.ads.AdSize").RunMethod("getCurrentOrientationAnchoredAdaptiveBannerAdSize", Array(Ctxt, width))
	Return CreateMap("native": Native, "width": Native.RunMethod("getWidthInPixels", Array(Ctxt)), _
        "height": Native.RunMethod("getHeightInPixels", Array(Ctxt)))
End Sub

Sub LoadAds
	Dim AdaptiveSize As Map = GetAdaptiveAdSize
	'AdaptiveSize.Get("native")
	'load a fixed size banner ad
	BannerAdFixedSize.Initialize2("BannerAdFixedSize", "ca-app-pub-3940256099942544/6300978111", BannerAd.SIZE_IAB_MRECT)
	MenuScrollView.Panel.AddView(BannerAdFixedSize, (100%x-300dip)/2, 0, 300dip, 250dip)
	BannerAdFixedSize.LoadAd
	
	BannerAd.Initialize2("BannerAd", "ca-app-pub-3940256099942544/6300978111", AdaptiveSize.Get("native"))
	Activity.AddView(BannerAd, 0, 100%y-AdaptiveSize.Get("height"), AdaptiveSize.Get("width"), AdaptiveSize.Get("height"))
	BannerAd.LoadAd
	
	iAd.Initialize("iad", "ca-app-pub-3940256099942544/1033173712")
	iAd.LoadAd
	
End Sub



#Region Button Click Events
Private Sub ButtonShowInterstitial_Click
	If iAd.Ready Then
		iAd.Show
	Else
		Log("no Iad is available")
	End If
	iAd.LoadAd
End Sub

Private Sub ButtonShowRewardedInterstitial_Click
	If Starter.Ads.isAvailableRewardedInterstitialAd Then
		Starter.Ads.ShowRewardedInterstitialAd
	Else
		Log("wait... loading reward ad")
		Starter.Ads.FetchRewardedInterstitialAd("ca-app-pub-3940256099942544/5354046379", Starter, "RewardedInterstitialAd", True)
		ShowRewardedInterstitialOnLoad=True
	End If
End Sub


Private Sub Button_Native_Click
'	B4XPages.ShowPage("B4XNative2")
	StartActivity(NativeActivity)
End Sub

Private Sub Button_RewardedVideo_Click
	If Starter.Ads.isAvailableRewardedVideoAd Then
		Starter.Ads.ShowRewardedVideoAd
	Else
		Log("wait... loading reward ad")
		Starter.Ads.FetchRewardedVideoAd("ca-app-pub-3940256099942544/5224354917", Starter, "RewardAd", True)
		ShowRewardedVideoOnLoad=True
	End If
End Sub
#End Region

#Region Ad Events
Sub BannerAd_ReceiveAd
	Log("BannerAd_ReceiveAd")
End Sub

Sub BannerAd_FailedToReceiveAd (ErrorCode As String)
	Log("BannerAd_FailedToReceiveAd ErrorCode=" & ErrorCode)
End Sub

Sub BannerAd_AdClosed
	Log("BannerAd_AdClosed")
End Sub

Sub BannerAd_AdOpened
	Log("BannerAd_AdOpened")
End Sub

Sub BannerAdFixedSize_ReceiveAd
	Log("BannerAdFixedSize_ReceiveAd")
End Sub

Sub BannerAdFixedSize_FailedToReceiveAd (ErrorCode As String)
	Log("BannerAdFixedSize_FailedToReceiveAd ErrorCode=" & ErrorCode)
End Sub

Sub BannerAdFixedSize_AdClosed
	Log("BannerAdFixedSize_AdClosed")
End Sub

Sub BannerAdFixedSize_AdOpened
	Log("BannerAdFixedSize_AdOpened")
End Sub




Sub iAd_ReceiveAd
	Log("IAd received. Now wait for the right moment to show the ad.")
End Sub

Sub iAd_FailedToReceiveAd (ErrorCode As String)
	Log("Failed: " & ErrorCode)
End Sub

Sub iAd_AdClosed
	Log("iAd_AdClosed")
	'Load another
	iAd.LoadAd
End Sub

Sub iAd_AdOpened
	Log("iAd_AdOpened")
End Sub

'Open Ad Events
Sub OpenAd_ReceiveAd
	LogColor($"Main OpenAd_ReceiveAd"$, Colors.Green)
	If ShowLandscapeOpenAdOnLoad And DateTime.Now-LastOpenAdShownAt>TimeBetweenOpenAds_Seconds*1000 Then
		 LastOpenAdShownAt=DateTime.Now
		 Starter.Ads.ShowOpenAdIfAvailable(1)
	End If
End Sub

Sub OpenAd_FailedToReceiveAd (ErrorCode As String)
	LogColor($"Main OpenAd_FailedToReceiveAd ErrorCode=${ErrorCode}"$, Colors.Green)
End Sub

Sub OpenAd_Closed
	LogColor($"Main OpenAd_Closed"$, Colors.Green)
End Sub

'rewarded video ad events
Sub RewardAd_ReceiveAd
	LogColor($"Main RewardAd_ReceiveAd"$, Colors.Green)
	If ShowRewardedVideoOnLoad Then Starter.Ads.ShowRewardedVideoAd
End Sub

Sub RewardAd_FailedToReceiveAd (ErrorCode As String)
	LogColor($"Main RewardAd_FailedToReceiveAd ErrorCode=${ErrorCode}"$, Colors.Green)
End Sub

Sub RewardAd_Rewarded (Item As Object)
	LogColor("Main RewardAd_Rewarded",Colors.Green)
	Dim Reward As JavaObject = Item
	Dim Amount As Int = Reward.RunMethod("getAmount", Null)
	Dim RewardType As String = Reward.RunMethod("getType", Null)
	Log("Main Rewarded: " & Amount & " -> " & RewardType)
	ShowRewardedVideoOnLoad=False
End Sub

Sub RewardedAd_Dismissed(Rewarded As Boolean)
	LogColor($"Main Rewarded Video RewardedAd_Dismissed Rewarded=${Rewarded}"$, Colors.Green)
	ShowRewardedVideoOnLoad=False
End Sub

'rewarded interstitial events
Sub RewardedInterstitialAd_ReceiveAd
	LogColor($"Main RewardedInterstitialAd_ReceiveAd"$, Colors.Green)
	If ShowRewardedInterstitialOnLoad Then Starter.Ads.ShowRewardedInterstitialAd
End Sub

Sub RewardedInterstitialAd_FailedToReceiveAd (ErrorCode As String)
	LogColor($"Main RewardedInterstitialAd_FailedToReceiveAd ErrorCode=${ErrorCode}"$, Colors.Green)
End Sub

Sub RewardedInterstitialAd_Rewarded (Item As Object)
	LogColor("Main RewardedInterstitialAd_Rewarded",Colors.Green)
	Dim Reward As JavaObject = Item
	Dim Amount As Int = Reward.RunMethod("getAmount", Null)
	Dim RewardType As String = Reward.RunMethod("getType", Null)
	Log("Main Rewarded: " & Amount & " -> " & RewardType)
	ShowRewardedInterstitialOnLoad=False
End Sub

Sub RewardedInterstitialAd_Dismissed(Rewarded As Boolean)
	LogColor($"Main RewardedInterstitialAd_Dismissed Rewarded=${Rewarded}"$, Colors.Green)
	ShowRewardedInterstitialOnLoad=False
End Sub


#End Region




Private Sub ButtonActivity2_Click
	StartActivity(TestActivity2)
End Sub